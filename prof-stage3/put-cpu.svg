<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (8,354 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.04%)</title><rect x="10.3" y="803.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.3" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.04%)</title><rect x="10.3" y="787.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.3" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="10.7" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.7" y="814.0"></text>
</g>
<g>
<title>[not_walkable] (2 samples, 0.02%)</title><rect x="11.0" y="803.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="14.0" y="814.0"></text>
</g>
<g>
<title>[not_walkable_Java] (15 samples, 0.18%)</title><rect x="11.3" y="803.0" width="2.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="14.3" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (7 samples, 0.08%)</title><rect x="12.4" y="787.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.4" y="798.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.02%)</title><rect x="12.4" y="771.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.4" y="782.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.04%)</title><rect x="12.7" y="771.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="15.7" y="782.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.02%)</title><rect x="13.1" y="771.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="16.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="13.4" y="803.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="16.4" y="814.0"></text>
</g>
<g>
<title>[unknown_Java] (20 samples, 0.24%)</title><rect x="13.7" y="803.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="16.7" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (3 samples, 0.04%)</title><rect x="15.8" y="787.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="18.8" y="798.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.02%)</title><rect x="15.8" y="771.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="18.8" y="782.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.02%)</title><rect x="15.8" y="755.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="18.8" y="766.0"></text>
</g>
<g>
<title>__GI_munmap (3 samples, 0.04%)</title><rect x="16.5" y="803.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="19.5" y="814.0"></text>
</g>
<g>
<title>system_call_fastpath (3 samples, 0.04%)</title><rect x="16.5" y="787.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="19.5" y="798.0"></text>
</g>
<g>
<title>sys_munmap (3 samples, 0.04%)</title><rect x="16.5" y="771.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="19.5" y="782.0"></text>
</g>
<g>
<title>vm_munmap (3 samples, 0.04%)</title><rect x="16.5" y="755.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="19.5" y="766.0"></text>
</g>
<g>
<title>do_munmap (3 samples, 0.04%)</title><rect x="16.5" y="739.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="19.5" y="750.0"></text>
</g>
<g>
<title>unmap_region (3 samples, 0.04%)</title><rect x="16.5" y="723.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.5" y="734.0"></text>
</g>
<g>
<title>tlb_finish_mmu (3 samples, 0.04%)</title><rect x="16.5" y="707.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="19.5" y="718.0"></text>
</g>
<g>
<title>arch_tlb_finish_mmu (3 samples, 0.04%)</title><rect x="16.5" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="19.5" y="702.0"></text>
</g>
<g>
<title>tlb_flush_mmu_tlbonly (3 samples, 0.04%)</title><rect x="16.5" y="675.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="19.5" y="686.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (3 samples, 0.04%)</title><rect x="16.5" y="659.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.5" y="670.0"></text>
</g>
<g>
<title>native_flush_tlb_others (3 samples, 0.04%)</title><rect x="16.5" y="643.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="19.5" y="654.0"></text>
</g>
<g>
<title>smp_call_function_many (3 samples, 0.04%)</title><rect x="16.5" y="627.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="19.5" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.run (5,590 samples, 66.91%)</title><rect x="17.2" y="803.0" width="789.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.2" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,897 samples, 58.62%)</title><rect x="17.2" y="787.0" width="691.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="20.2" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,896 samples, 58.61%)</title><rect x="17.2" y="771.0" width="691.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.2" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2 samples, 0.02%)</title><rect x="22.4" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,357 samples, 16.24%)</title><rect x="22.7" y="755.0" width="191.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.7" y="766.0">java/util/concurrent/Thre..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (1,357 samples, 16.24%)</title><rect x="22.7" y="739.0" width="191.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.7" y="750.0">java/util/concurrent/Sync..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1,349 samples, 16.15%)</title><rect x="23.8" y="723.0" width="190.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.8" y="734.0">java/util/concurrent/Sync..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (34 samples, 0.41%)</title><rect x="24.0" y="707.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (34 samples, 0.41%)</title><rect x="24.0" y="691.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (1,314 samples, 15.73%)</title><rect x="28.8" y="707.0" width="185.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.8" y="718.0">java/util/concurrent/Syn..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (24 samples, 0.29%)</title><rect x="39.0" y="691.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="42.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.04%)</title><rect x="41.9" y="675.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="44.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,218 samples, 14.58%)</title><rect x="42.3" y="691.0" width="172.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="45.3" y="702.0">java/util/concurrent/l..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (678 samples, 8.12%)</title><rect x="118.6" y="675.0" width="95.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.6" y="686.0">jdk/interna..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.04%)</title><rect x="128.5" y="659.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="131.5" y="670.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.02%)</title><rect x="128.9" y="659.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="131.9" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.07%)</title><rect x="129.2" y="659.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="132.2" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (6 samples, 0.07%)</title><rect x="130.1" y="659.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="133.1" y="670.0"></text>
</g>
<g>
<title>Unsafe_Park (523 samples, 6.26%)</title><rect x="130.9" y="659.0" width="73.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="133.9" y="670.0">Unsafe_P..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (8 samples, 0.10%)</title><rect x="134.2" y="643.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="137.2" y="654.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (11 samples, 0.13%)</title><rect x="135.3" y="643.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="138.3" y="654.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.04%)</title><rect x="136.8" y="643.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="139.8" y="654.0"></text>
</g>
<g>
<title>Monitor::unlock() (6 samples, 0.07%)</title><rect x="137.3" y="643.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="140.3" y="654.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (126 samples, 1.51%)</title><rect x="138.1" y="643.0" width="17.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="141.1" y="654.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (42 samples, 0.50%)</title><rect x="143.8" y="627.0" width="5.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="146.8" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (3 samples, 0.04%)</title><rect x="145.9" y="611.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="148.9" y="622.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (9 samples, 0.11%)</title><rect x="146.3" y="611.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="149.3" y="622.0"></text>
</g>
<g>
<title>update_get_addr (15 samples, 0.18%)</title><rect x="147.6" y="611.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="150.6" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (25 samples, 0.30%)</title><rect x="149.8" y="627.0" width="3.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="152.8" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (2 samples, 0.02%)</title><rect x="153.4" y="627.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="156.4" y="638.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (5 samples, 0.06%)</title><rect x="153.7" y="627.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="156.7" y="638.0"></text>
</g>
<g>
<title>_init (6 samples, 0.07%)</title><rect x="154.4" y="627.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="157.4" y="638.0"></text>
</g>
<g>
<title>update_get_addr (5 samples, 0.06%)</title><rect x="155.2" y="627.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="158.2" y="638.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (3 samples, 0.04%)</title><rect x="155.9" y="643.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="158.9" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (24 samples, 0.29%)</title><rect x="156.3" y="643.0" width="3.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="159.3" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (10 samples, 0.12%)</title><rect x="159.7" y="643.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="162.7" y="654.0"></text>
</g>
<g>
<title>_L_unlock_738 (5 samples, 0.06%)</title><rect x="161.1" y="643.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="164.1" y="654.0"></text>
</g>
<g>
<title>__lll_unlock_wake (111 samples, 1.33%)</title><rect x="161.8" y="643.0" width="15.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="164.8" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.02%)</title><rect x="167.6" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="170.6" y="638.0"></text>
</g>
<g>
<title>auditsys (9 samples, 0.11%)</title><rect x="168.2" y="627.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="171.2" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_entry (8 samples, 0.10%)</title><rect x="168.3" y="611.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="171.3" y="622.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.05%)</title><rect x="169.5" y="627.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="172.5" y="638.0"></text>
</g>
<g>
<title>sysret_audit (14 samples, 0.17%)</title><rect x="170.0" y="627.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="173.0" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_exit (10 samples, 0.12%)</title><rect x="170.0" y="611.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="173.0" y="622.0"></text>
</g>
<g>
<title>dput (3 samples, 0.04%)</title><rect x="170.2" y="595.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="173.2" y="606.0"></text>
</g>
<g>
<title>mntput (2 samples, 0.02%)</title><rect x="170.6" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="173.6" y="606.0"></text>
</g>
<g>
<title>path_put (2 samples, 0.02%)</title><rect x="170.9" y="595.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="173.9" y="606.0"></text>
</g>
<g>
<title>unroll_tree_refs (2 samples, 0.02%)</title><rect x="171.2" y="595.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="174.2" y="606.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.02%)</title><rect x="171.4" y="611.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="174.4" y="622.0"></text>
</g>
<g>
<title>system_call_fastpath (38 samples, 0.45%)</title><rect x="172.2" y="627.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="175.2" y="638.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="172.3" y="611.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="175.3" y="622.0"></text>
</g>
<g>
<title>sys_futex (35 samples, 0.42%)</title><rect x="172.6" y="611.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="175.6" y="622.0"></text>
</g>
<g>
<title>do_futex (31 samples, 0.37%)</title><rect x="173.0" y="595.0" width="4.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="176.0" y="606.0"></text>
</g>
<g>
<title>_raw_qspin_lock (2 samples, 0.02%)</title><rect x="173.1" y="579.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="176.1" y="590.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.20%)</title><rect x="173.6" y="579.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="176.6" y="590.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.05%)</title><rect x="176.0" y="579.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="179.0" y="590.0"></text>
</g>
<g>
<title>hash_futex (6 samples, 0.07%)</title><rect x="176.5" y="579.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="179.5" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_wait (113 samples, 1.35%)</title><rect x="177.5" y="643.0" width="16.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="180.5" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_entry (4 samples, 0.05%)</title><rect x="179.5" y="627.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="182.5" y="638.0"></text>
</g>
<g>
<title>auditsys (15 samples, 0.18%)</title><rect x="180.1" y="627.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="183.1" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_entry (14 samples, 0.17%)</title><rect x="180.2" y="611.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="183.2" y="622.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.05%)</title><rect x="182.2" y="627.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="185.2" y="638.0"></text>
</g>
<g>
<title>system_call_fastpath (74 samples, 0.89%)</title><rect x="182.9" y="627.0" width="10.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="185.9" y="638.0"></text>
</g>
<g>
<title>sys_futex (74 samples, 0.89%)</title><rect x="182.9" y="611.0" width="10.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="185.9" y="622.0"></text>
</g>
<g>
<title>do_futex (69 samples, 0.83%)</title><rect x="183.6" y="595.0" width="9.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="186.6" y="606.0"></text>
</g>
<g>
<title>futex_wait (64 samples, 0.77%)</title><rect x="183.9" y="579.0" width="9.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="186.9" y="590.0"></text>
</g>
<g>
<title>futex_wait_queue_me (29 samples, 0.35%)</title><rect x="184.7" y="563.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="187.7" y="574.0"></text>
</g>
<g>
<title>__list_add (4 samples, 0.05%)</title><rect x="185.1" y="547.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="188.1" y="558.0"></text>
</g>
<g>
<title>schedule (22 samples, 0.26%)</title><rect x="185.7" y="547.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="188.7" y="558.0"></text>
</g>
<g>
<title>__schedule (17 samples, 0.20%)</title><rect x="186.4" y="531.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="189.4" y="542.0"></text>
</g>
<g>
<title>rcu_note_context_switch (5 samples, 0.06%)</title><rect x="188.1" y="515.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="191.1" y="526.0"></text>
</g>
<g>
<title>futex_wait_setup (26 samples, 0.31%)</title><rect x="188.8" y="563.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="191.8" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.06%)</title><rect x="191.4" y="547.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="194.4" y="558.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="192.1" y="547.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="195.1" y="558.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (3 samples, 0.04%)</title><rect x="192.1" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="195.1" y="542.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="192.5" y="563.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="195.5" y="574.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.04%)</title><rect x="192.9" y="579.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="195.9" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (5 samples, 0.06%)</title><rect x="193.5" y="643.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="196.5" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (10 samples, 0.12%)</title><rect x="194.3" y="643.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="197.3" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (11 samples, 0.13%)</title><rect x="195.9" y="643.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="198.9" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (48 samples, 0.57%)</title><rect x="197.4" y="643.0" width="6.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="200.4" y="654.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (4 samples, 0.05%)</title><rect x="204.2" y="643.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="207.2" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.08%)</title><rect x="204.8" y="659.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="207.8" y="670.0"></text>
</g>
<g>
<title>system_call_after_swapgs (6 samples, 0.07%)</title><rect x="204.9" y="643.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="207.9" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (9 samples, 0.11%)</title><rect x="205.8" y="659.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="208.8" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (16 samples, 0.19%)</title><rect x="207.0" y="659.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="210.0" y="670.0"></text>
</g>
<g>
<title>send (35 samples, 0.42%)</title><rect x="209.3" y="659.0" width="4.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="212.3" y="670.0"></text>
</g>
<g>
<title>system_call_after_swapgs (35 samples, 0.42%)</title><rect x="209.3" y="643.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="212.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$65/593464534.run (3,496 samples, 41.85%)</title><rect x="214.4" y="755.0" width="493.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="217.4" y="766.0">ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$65/593464534.run</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$asyncExecute$4 (3,481 samples, 41.67%)</title><rect x="216.5" y="739.0" width="491.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.5" y="750.0">ru/mail/polis/service/httprest/HttpRestDemon.lambda$asyncExecute$4</text>
</g>
<g>
<title>InlineCacheBuffer (2 samples, 0.02%)</title><rect x="216.8" y="723.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="219.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$61/923611897.submit (14 samples, 0.17%)</title><rect x="217.1" y="723.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="220.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$createResponse$0 (14 samples, 0.17%)</title><rect x="217.1" y="707.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="220.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.get (14 samples, 0.17%)</title><rect x="217.1" y="691.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="220.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (14 samples, 0.17%)</title><rect x="217.1" y="675.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="220.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/LSMDao.iterator (14 samples, 0.17%)</title><rect x="217.1" y="659.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (14 samples, 0.17%)</title><rect x="217.1" y="643.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.&lt;init&gt; (14 samples, 0.17%)</title><rect x="217.1" y="627.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="220.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.&lt;init&gt; (14 samples, 0.17%)</title><rect x="217.1" y="611.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="220.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$ResponseUtils.sendResponse (6 samples, 0.07%)</title><rect x="218.2" y="595.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="221.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$90/865761319.submit (494 samples, 5.91%)</title><rect x="219.0" y="723.0" width="69.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.0" y="734.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$createResponse$1 (480 samples, 5.75%)</title><rect x="221.0" y="707.0" width="67.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="224.0" y="718.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/Request.getBody (2 samples, 0.02%)</title><rect x="221.0" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.upset (478 samples, 5.72%)</title><rect x="221.3" y="691.0" width="67.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="224.3" y="702.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (38 samples, 0.45%)</title><rect x="221.5" y="675.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="224.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (37 samples, 0.44%)</title><rect x="221.6" y="659.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="224.6" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (37 samples, 0.44%)</title><rect x="221.6" y="643.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="224.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (37 samples, 0.44%)</title><rect x="221.6" y="627.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.6" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="226.3" y="611.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="226.3" y="595.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="229.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="226.3" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.3" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.04%)</title><rect x="226.3" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/LSMDao.upsert (439 samples, 5.25%)</title><rect x="226.8" y="675.0" width="62.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.8" y="686.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTablesPool.upsert (436 samples, 5.22%)</title><rect x="227.2" y="659.0" width="61.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.2" y="670.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (2 samples, 0.02%)</title><rect x="228.8" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="231.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (17 samples, 0.20%)</title><rect x="229.1" y="643.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (17 samples, 0.20%)</title><rect x="229.1" y="627.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="232.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (17 samples, 0.20%)</title><rect x="229.1" y="611.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.1" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (9 samples, 0.11%)</title><rect x="229.2" y="595.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="232.2" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (9 samples, 0.11%)</title><rect x="229.2" y="579.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.02%)</title><rect x="230.5" y="595.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="233.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.02%)</title><rect x="230.5" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="233.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (4 samples, 0.05%)</title><rect x="230.9" y="595.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (4 samples, 0.05%)</title><rect x="230.9" y="579.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (13 samples, 0.16%)</title><rect x="231.5" y="643.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (13 samples, 0.16%)</title><rect x="231.5" y="627.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (3 samples, 0.04%)</title><rect x="231.5" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (10 samples, 0.12%)</title><rect x="231.9" y="611.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.9" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (4 samples, 0.05%)</title><rect x="232.6" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTable.upsert (372 samples, 4.45%)</title><rect x="233.3" y="643.0" width="52.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.3" y="654.0">ru/ma..</text>
</g>
<g>
<title>java/nio/Buffer.remaining (4 samples, 0.05%)</title><rect x="233.7" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.04%)</title><rect x="233.9" y="611.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (313 samples, 3.75%)</title><rect x="234.3" y="627.0" width="44.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.3" y="638.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (312 samples, 3.73%)</title><rect x="234.4" y="611.0" width="44.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.4" y="622.0">java..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (166 samples, 1.99%)</title><rect x="240.1" y="595.0" width="23.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.1" y="606.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (4 samples, 0.05%)</title><rect x="260.7" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="263.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (16 samples, 0.19%)</title><rect x="261.3" y="579.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="264.3" y="590.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.02%)</title><rect x="263.1" y="563.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="266.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (11 samples, 0.13%)</title><rect x="263.5" y="595.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="266.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (5 samples, 0.06%)</title><rect x="265.1" y="595.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="268.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (25 samples, 0.30%)</title><rect x="265.8" y="595.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="268.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (4 samples, 0.05%)</title><rect x="267.1" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="270.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.02%)</title><rect x="267.4" y="563.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="270.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.02%)</title><rect x="267.4" y="547.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="270.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (12 samples, 0.14%)</title><rect x="267.6" y="579.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.6" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.11%)</title><rect x="268.1" y="563.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="271.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.08%)</title><rect x="268.3" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.3" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.04%)</title><rect x="268.8" y="531.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (65 samples, 0.78%)</title><rect x="269.3" y="595.0" width="9.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="272.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (65 samples, 0.78%)</title><rect x="269.3" y="579.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="272.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (63 samples, 0.75%)</title><rect x="269.6" y="563.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="272.6" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.04%)</title><rect x="275.0" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.0" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.02%)</title><rect x="275.4" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.4" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (8 samples, 0.10%)</title><rect x="275.7" y="547.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="278.7" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.05%)</title><rect x="276.3" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.3" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.04%)</title><rect x="276.4" y="515.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (12 samples, 0.14%)</title><rect x="276.8" y="547.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.8" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.05%)</title><rect x="277.4" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="280.4" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (4 samples, 0.05%)</title><rect x="278.0" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="281.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Value.getData (2 samples, 0.02%)</title><rect x="278.5" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.5" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.02%)</title><rect x="278.5" y="611.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Value.of (50 samples, 0.60%)</title><rect x="278.8" y="627.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="281.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (19 samples, 0.23%)</title><rect x="278.8" y="611.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.22%)</title><rect x="278.9" y="595.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.9" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (18 samples, 0.22%)</title><rect x="278.9" y="579.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.9" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="281.2" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="284.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Value.getTime (31 samples, 0.37%)</title><rect x="281.5" y="611.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="284.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (10 samples, 0.12%)</title><rect x="281.9" y="595.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.incrementAndGet (17 samples, 0.20%)</title><rect x="283.3" y="595.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.02%)</title><rect x="283.3" y="579.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="286.3" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.02%)</title><rect x="283.3" y="563.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="286.3" y="574.0"></text>
</g>
<g>
<title>[vdso] (9 samples, 0.11%)</title><rect x="283.6" y="579.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="286.6" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.07%)</title><rect x="284.9" y="579.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="287.9" y="590.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.07%)</title><rect x="284.9" y="563.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="287.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTablesPool.enqueueFlush (21 samples, 0.25%)</title><rect x="285.9" y="643.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/FlushTable.&lt;init&gt; (6 samples, 0.07%)</title><rect x="285.9" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/FlushTable.&lt;init&gt; (6 samples, 0.07%)</title><rect x="285.9" y="611.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.9" y="622.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (5 samples, 0.06%)</title><rect x="286.0" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTable.iterator (15 samples, 0.18%)</title><rect x="286.7" y="627.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="289.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="286.7" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.7" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (13 samples, 0.16%)</title><rect x="287.0" y="611.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.0" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (12 samples, 0.14%)</title><rect x="287.1" y="595.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.1" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (11 samples, 0.13%)</title><rect x="287.3" y="579.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="290.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$ResponseUtils.sendResponse (2,969 samples, 35.54%)</title><rect x="288.8" y="723.0" width="419.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="291.8" y="734.0">ru/mail/polis/service/httprest/HttpRestDemon$ResponseUtil..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,967 samples, 35.52%)</title><rect x="289.0" y="707.0" width="419.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="292.0" y="718.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (20 samples, 0.24%)</title><rect x="296.0" y="691.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (20 samples, 0.24%)</title><rect x="296.0" y="675.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="299.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (20 samples, 0.24%)</title><rect x="296.0" y="659.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="299.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.10%)</title><rect x="297.7" y="643.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,870 samples, 34.35%)</title><rect x="298.9" y="691.0" width="405.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="301.9" y="702.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (46 samples, 0.55%)</title><rect x="298.9" y="675.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.9" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (25 samples, 0.30%)</title><rect x="301.8" y="659.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.8" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (25 samples, 0.30%)</title><rect x="301.8" y="643.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (25 samples, 0.30%)</title><rect x="301.8" y="627.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.8" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="304.9" y="611.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="307.9" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,824 samples, 33.80%)</title><rect x="305.4" y="675.0" width="398.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.4" y="686.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (2,807 samples, 33.60%)</title><rect x="307.8" y="659.0" width="396.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="310.8" y="670.0">one/nio/net/Session.write</text>
</g>
<g>
<title>[vdso] (12 samples, 0.14%)</title><rect x="309.2" y="643.0" width="1.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="312.2" y="654.0"></text>
</g>
<g>
<title>_init (8 samples, 0.10%)</title><rect x="310.9" y="643.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="313.9" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2,768 samples, 33.13%)</title><rect x="312.0" y="643.0" width="391.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="315.0" y="654.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2,741 samples, 32.81%)</title><rect x="315.8" y="627.0" width="387.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="318.8" y="638.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (9 samples, 0.11%)</title><rect x="322.4" y="611.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="325.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (150 samples, 1.80%)</title><rect x="323.7" y="611.0" width="21.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="326.7" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (150 samples, 1.80%)</title><rect x="323.7" y="595.0" width="21.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="326.7" y="606.0">[..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (120 samples, 1.44%)</title><rect x="323.7" y="579.0" width="17.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="326.7" y="590.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (13 samples, 0.16%)</title><rect x="327.7" y="563.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="330.7" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (9 samples, 0.11%)</title><rect x="329.6" y="563.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="332.6" y="574.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (24 samples, 0.29%)</title><rect x="330.9" y="563.0" width="3.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="333.9" y="574.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="334.3" y="563.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="337.3" y="574.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.02%)</title><rect x="334.6" y="563.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="337.6" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (35 samples, 0.42%)</title><rect x="334.9" y="563.0" width="4.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="337.9" y="574.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (5 samples, 0.06%)</title><rect x="335.2" y="547.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="338.2" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (8 samples, 0.10%)</title><rect x="335.9" y="547.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="338.9" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (10 samples, 0.12%)</title><rect x="337.0" y="547.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="340.0" y="558.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (10 samples, 0.12%)</title><rect x="338.4" y="547.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="341.4" y="558.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (6 samples, 0.07%)</title><rect x="339.8" y="563.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="342.8" y="574.0"></text>
</g>
<g>
<title>_init (4 samples, 0.05%)</title><rect x="340.8" y="579.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="343.8" y="590.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.04%)</title><rect x="341.4" y="579.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="344.4" y="590.0"></text>
</g>
<g>
<title>send (22 samples, 0.26%)</title><rect x="341.8" y="579.0" width="3.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="344.8" y="590.0"></text>
</g>
<g>
<title>__lll_unlock_wake (44 samples, 0.53%)</title><rect x="344.9" y="611.0" width="6.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="347.9" y="622.0"></text>
</g>
<g>
<title>system_call_after_swapgs (44 samples, 0.53%)</title><rect x="344.9" y="595.0" width="6.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="347.9" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (14 samples, 0.17%)</title><rect x="351.1" y="611.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="354.1" y="622.0"></text>
</g>
<g>
<title>send (2,477 samples, 29.65%)</title><rect x="353.1" y="611.0" width="349.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="356.1" y="622.0">send</text>
</g>
<g>
<title>__audit_syscall_entry (5 samples, 0.06%)</title><rect x="358.5" y="595.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="361.5" y="606.0"></text>
</g>
<g>
<title>auditsys (13 samples, 0.16%)</title><rect x="359.2" y="595.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="362.2" y="606.0"></text>
</g>
<g>
<title>__audit_syscall_entry (13 samples, 0.16%)</title><rect x="359.2" y="579.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="362.2" y="590.0"></text>
</g>
<g>
<title>sys_sendto (4 samples, 0.05%)</title><rect x="361.0" y="595.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="364.0" y="606.0"></text>
</g>
<g>
<title>sysret_audit (9 samples, 0.11%)</title><rect x="361.6" y="595.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="364.6" y="606.0"></text>
</g>
<g>
<title>__audit_syscall_exit (7 samples, 0.08%)</title><rect x="361.7" y="579.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="364.7" y="590.0"></text>
</g>
<g>
<title>mntput (4 samples, 0.05%)</title><rect x="362.1" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="365.1" y="574.0"></text>
</g>
<g>
<title>sysret_signal (5 samples, 0.06%)</title><rect x="362.8" y="595.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="365.8" y="606.0"></text>
</g>
<g>
<title>system_call_after_swapgs (4 samples, 0.05%)</title><rect x="363.5" y="595.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="366.5" y="606.0"></text>
</g>
<g>
<title>system_call_fastpath (2,399 samples, 28.72%)</title><rect x="364.1" y="595.0" width="338.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="367.1" y="606.0">system_call_fastpath</text>
</g>
<g>
<title>SYSC_sendto (5 samples, 0.06%)</title><rect x="364.5" y="579.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="367.5" y="590.0"></text>
</g>
<g>
<title>sys_sendto (2,391 samples, 28.62%)</title><rect x="365.2" y="579.0" width="337.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="368.2" y="590.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (2,385 samples, 28.55%)</title><rect x="365.5" y="563.0" width="336.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="368.5" y="574.0">SYSC_sendto</text>
</g>
<g>
<title>fget_light (8 samples, 0.10%)</title><rect x="367.6" y="547.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="370.6" y="558.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="368.8" y="547.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="371.8" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (9 samples, 0.11%)</title><rect x="369.1" y="547.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="372.1" y="558.0"></text>
</g>
<g>
<title>sock_sendmsg (2,293 samples, 27.45%)</title><rect x="370.3" y="547.0" width="323.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="373.3" y="558.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (2,200 samples, 26.33%)</title><rect x="371.2" y="531.0" width="310.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="374.2" y="542.0">inet_sendmsg</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.02%)</title><rect x="371.3" y="515.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="374.3" y="526.0"></text>
</g>
<g>
<title>_copy_from_user (3 samples, 0.04%)</title><rect x="371.6" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="374.6" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (13 samples, 0.16%)</title><rect x="372.0" y="515.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="375.0" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg (2,174 samples, 26.02%)</title><rect x="374.0" y="515.0" width="307.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="377.0" y="526.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (15 samples, 0.18%)</title><rect x="376.3" y="499.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="379.3" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (11 samples, 0.13%)</title><rect x="376.8" y="483.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="379.8" y="494.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.04%)</title><rect x="378.4" y="499.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="381.4" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (8 samples, 0.10%)</title><rect x="378.9" y="499.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="381.9" y="510.0"></text>
</g>
<g>
<title>lock_sock_nested (8 samples, 0.10%)</title><rect x="380.2" y="499.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="383.2" y="510.0"></text>
</g>
<g>
<title>local_bh_enable (8 samples, 0.10%)</title><rect x="380.2" y="483.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="383.2" y="494.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (7 samples, 0.08%)</title><rect x="380.4" y="467.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="383.4" y="478.0"></text>
</g>
<g>
<title>release_sock (9 samples, 0.11%)</title><rect x="381.3" y="499.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="384.3" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.02%)</title><rect x="382.1" y="483.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="385.1" y="494.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="382.3" y="483.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="385.3" y="494.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (2 samples, 0.02%)</title><rect x="382.6" y="499.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="385.6" y="510.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (84 samples, 1.01%)</title><rect x="382.9" y="499.0" width="11.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="385.9" y="510.0"></text>
</g>
<g>
<title>__alloc_skb (73 samples, 0.87%)</title><rect x="383.6" y="483.0" width="10.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="386.6" y="494.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.32 (14 samples, 0.17%)</title><rect x="384.2" y="467.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="387.2" y="478.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (11 samples, 0.13%)</title><rect x="384.5" y="451.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="387.5" y="462.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.05%)</title><rect x="385.3" y="435.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="388.3" y="446.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (26 samples, 0.31%)</title><rect x="386.1" y="467.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="389.1" y="478.0"></text>
</g>
<g>
<title>ksize (29 samples, 0.35%)</title><rect x="389.8" y="467.0" width="4.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="392.8" y="478.0"></text>
</g>
<g>
<title>ksize (5 samples, 0.06%)</title><rect x="394.1" y="483.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="397.1" y="494.0"></text>
</g>
<g>
<title>skb_entail (5 samples, 0.06%)</title><rect x="394.8" y="499.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="397.8" y="510.0"></text>
</g>
<g>
<title>static_key_enabled (4 samples, 0.05%)</title><rect x="395.5" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="398.5" y="510.0"></text>
</g>
<g>
<title>tcp_push (1,961 samples, 23.47%)</title><rect x="396.0" y="499.0" width="277.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="399.0" y="510.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,959 samples, 23.45%)</title><rect x="396.2" y="483.0" width="276.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="399.2" y="494.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (1,952 samples, 23.37%)</title><rect x="397.2" y="467.0" width="275.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="400.2" y="478.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.02%)</title><rect x="399.4" y="451.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="402.4" y="462.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (16 samples, 0.19%)</title><rect x="400.0" y="451.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="403.0" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto (9 samples, 0.11%)</title><rect x="401.0" y="435.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="404.0" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.10%)</title><rect x="401.1" y="419.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="404.1" y="430.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.10%)</title><rect x="401.1" y="403.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="404.1" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.05%)</title><rect x="401.5" y="387.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="404.5" y="398.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.02%)</title><rect x="402.4" y="451.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="405.4" y="462.0"></text>
</g>
<g>
<title>tcp_transmit_skb (1,909 samples, 22.85%)</title><rect x="402.7" y="451.0" width="269.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="405.7" y="462.0">tcp_transmit_skb</text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.04%)</title><rect x="407.9" y="435.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="410.9" y="446.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.02%)</title><rect x="408.3" y="435.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="411.3" y="446.0"></text>
</g>
<g>
<title>ip_queue_xmit (1,850 samples, 22.15%)</title><rect x="408.6" y="435.0" width="261.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="411.6" y="446.0">ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.05%)</title><rect x="409.3" y="419.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="412.3" y="430.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.04%)</title><rect x="409.5" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="412.5" y="414.0"></text>
</g>
<g>
<title>ip_local_out_sk (1,836 samples, 21.98%)</title><rect x="409.9" y="419.0" width="259.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="412.9" y="430.0">ip_local_out_sk</text>
</g>
<g>
<title>__ip_local_out_sk (442 samples, 5.29%)</title><rect x="410.0" y="403.0" width="62.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="413.0" y="414.0">__ip_l..</text>
</g>
<g>
<title>nf_hook_slow (435 samples, 5.21%)</title><rect x="410.9" y="387.0" width="61.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="413.9" y="398.0">nf_hoo..</text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (9 samples, 0.11%)</title><rect x="410.9" y="371.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="413.9" y="382.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (8 samples, 0.10%)</title><rect x="412.1" y="371.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="415.1" y="382.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (5 samples, 0.06%)</title><rect x="413.3" y="371.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="416.3" y="382.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (14 samples, 0.17%)</title><rect x="414.0" y="371.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="417.0" y="382.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (8 samples, 0.10%)</title><rect x="416.0" y="371.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="419.0" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (3 samples, 0.04%)</title><rect x="417.1" y="371.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="420.1" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (8 samples, 0.10%)</title><rect x="417.5" y="371.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="420.5" y="382.0"></text>
</g>
<g>
<title>nf_iterate (372 samples, 4.45%)</title><rect x="418.6" y="371.0" width="52.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="421.6" y="382.0">nf_it..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.06%)</title><rect x="427.7" y="355.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="430.7" y="366.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (32 samples, 0.38%)</title><rect x="428.4" y="355.0" width="4.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="431.4" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (28 samples, 0.34%)</title><rect x="428.8" y="339.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="431.8" y="350.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (22 samples, 0.26%)</title><rect x="432.9" y="355.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="435.9" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (20 samples, 0.24%)</title><rect x="433.2" y="339.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="436.2" y="350.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (16 samples, 0.19%)</title><rect x="436.0" y="355.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="439.0" y="366.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (15 samples, 0.18%)</title><rect x="436.2" y="339.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="439.2" y="350.0"></text>
</g>
<g>
<title>nf_ct_nat_ext_add	[nf_nat] (4 samples, 0.05%)</title><rect x="436.4" y="323.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="439.4" y="334.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat_ipv4] (8 samples, 0.10%)</title><rect x="437.0" y="323.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="440.0" y="334.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (57 samples, 0.68%)</title><rect x="438.3" y="355.0" width="8.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="441.3" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (47 samples, 0.56%)</title><rect x="439.4" y="339.0" width="6.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="442.4" y="350.0"></text>
</g>
<g>
<title>local_bh_disable (2 samples, 0.02%)</title><rect x="446.0" y="339.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="449.0" y="350.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (17 samples, 0.20%)</title><rect x="446.3" y="355.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="449.3" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (17 samples, 0.20%)</title><rect x="446.3" y="339.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="449.3" y="350.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (146 samples, 1.75%)</title><rect x="448.9" y="355.0" width="20.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="451.9" y="366.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (5 samples, 0.06%)</title><rect x="448.9" y="339.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="451.9" y="350.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find	[nf_conntrack] (7 samples, 0.08%)</title><rect x="449.6" y="339.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="452.6" y="350.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (2 samples, 0.02%)</title><rect x="450.7" y="339.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="453.7" y="350.0"></text>
</g>
<g>
<title>ipv4_get_l4proto	[nf_conntrack_ipv4] (7 samples, 0.08%)</title><rect x="451.0" y="339.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="454.0" y="350.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (112 samples, 1.34%)</title><rect x="452.0" y="339.0" width="15.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="455.0" y="350.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (32 samples, 0.38%)</title><rect x="454.5" y="323.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="457.5" y="334.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (3 samples, 0.04%)</title><rect x="459.0" y="323.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="462.0" y="334.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="459.5" y="323.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="462.5" y="334.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (6 samples, 0.07%)</title><rect x="460.2" y="323.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="463.2" y="334.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple	[nf_conntrack] (3 samples, 0.04%)</title><rect x="460.6" y="307.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="463.6" y="318.0"></text>
</g>
<g>
<title>tcp_error	[nf_conntrack] (5 samples, 0.06%)</title><rect x="461.0" y="323.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="464.0" y="334.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (40 samples, 0.48%)</title><rect x="461.9" y="323.0" width="5.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="464.9" y="334.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (2 samples, 0.02%)</title><rect x="463.8" y="307.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="466.8" y="318.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (7 samples, 0.08%)</title><rect x="464.3" y="307.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="467.3" y="318.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (16 samples, 0.19%)</title><rect x="465.2" y="307.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="468.2" y="318.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple	[nf_conntrack] (2 samples, 0.02%)</title><rect x="467.5" y="323.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="470.5" y="334.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (3 samples, 0.04%)</title><rect x="467.8" y="339.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="470.8" y="350.0"></text>
</g>
<g>
<title>tcp_error	[nf_conntrack] (4 samples, 0.05%)</title><rect x="468.2" y="339.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="471.2" y="350.0"></text>
</g>
<g>
<title>tcp_get_timeouts	[nf_conntrack] (3 samples, 0.04%)</title><rect x="468.8" y="339.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="471.8" y="350.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (2 samples, 0.02%)</title><rect x="469.2" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="472.2" y="350.0"></text>
</g>
<g>
<title>netlbl_enabled (4 samples, 0.05%)</title><rect x="469.5" y="355.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="472.5" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (3 samples, 0.04%)</title><rect x="470.1" y="355.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="473.1" y="366.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (4 samples, 0.05%)</title><rect x="470.5" y="355.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="473.5" y="366.0"></text>
</g>
<g>
<title>selinux_ipv4_output (8 samples, 0.10%)</title><rect x="471.2" y="371.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="474.2" y="382.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.02%)</title><rect x="472.5" y="403.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="475.5" y="414.0"></text>
</g>
<g>
<title>ip_output (1,390 samples, 16.64%)</title><rect x="472.7" y="403.0" width="196.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="475.7" y="414.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (1,327 samples, 15.88%)</title><rect x="473.4" y="387.0" width="187.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="476.4" y="398.0">ip_finish_output</text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.02%)</title><rect x="477.4" y="371.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="480.4" y="382.0"></text>
</g>
<g>
<title>dev_queue_xmit (77 samples, 0.92%)</title><rect x="477.7" y="371.0" width="10.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="480.7" y="382.0"></text>
</g>
<g>
<title>__dev_queue_xmit (72 samples, 0.86%)</title><rect x="477.8" y="355.0" width="10.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="480.8" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (45 samples, 0.54%)</title><rect x="478.9" y="339.0" width="6.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="481.9" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (36 samples, 0.43%)</title><rect x="479.8" y="323.0" width="5.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="482.8" y="334.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.05%)</title><rect x="480.4" y="307.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="483.4" y="318.0"></text>
</g>
<g>
<title>netif_rx (25 samples, 0.30%)</title><rect x="480.9" y="307.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="483.9" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (24 samples, 0.29%)</title><rect x="481.1" y="291.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="484.1" y="302.0"></text>
</g>
<g>
<title>enqueue_to_backlog (10 samples, 0.12%)</title><rect x="481.1" y="275.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="484.1" y="286.0"></text>
</g>
<g>
<title>ktime_get_real (14 samples, 0.17%)</title><rect x="482.5" y="275.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="485.5" y="286.0"></text>
</g>
<g>
<title>__getnstimeofday64 (2 samples, 0.02%)</title><rect x="482.5" y="259.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="485.5" y="270.0"></text>
</g>
<g>
<title>getnstimeofday64 (12 samples, 0.14%)</title><rect x="482.8" y="259.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="485.8" y="270.0"></text>
</g>
<g>
<title>__getnstimeofday64 (6 samples, 0.07%)</title><rect x="482.8" y="243.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="485.8" y="254.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.07%)</title><rect x="483.6" y="243.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="486.6" y="254.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.04%)</title><rect x="484.5" y="307.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="487.5" y="318.0"></text>
</g>
<g>
<title>sock_wfree (2 samples, 0.02%)</title><rect x="484.6" y="291.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="487.6" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.04%)</title><rect x="484.9" y="323.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="487.9" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.12%)</title><rect x="485.3" y="339.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="488.3" y="350.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (3 samples, 0.04%)</title><rect x="486.7" y="339.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="489.7" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb.isra.109.part.110 (6 samples, 0.07%)</title><rect x="487.1" y="339.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="490.1" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.04%)</title><rect x="488.0" y="355.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="491.0" y="366.0"></text>
</g>
<g>
<title>local_bh_enable (1,219 samples, 14.59%)</title><rect x="488.7" y="371.0" width="172.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="491.7" y="382.0">local_bh_enable</text>
</g>
<g>
<title>__local_bh_enable_ip (1,218 samples, 14.58%)</title><rect x="488.7" y="355.0" width="172.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="491.7" y="366.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq (1,213 samples, 14.52%)</title><rect x="489.4" y="339.0" width="171.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="492.4" y="350.0">do_softirq</text>
</g>
<g>
<title>call_softirq (1,208 samples, 14.46%)</title><rect x="490.1" y="323.0" width="170.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="493.1" y="334.0">call_softirq</text>
</g>
<g>
<title>__do_softirq (1,206 samples, 14.44%)</title><rect x="490.1" y="307.0" width="170.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="493.1" y="318.0">__do_softirq</text>
</g>
<g>
<title>net_rx_action (1,177 samples, 14.09%)</title><rect x="493.6" y="291.0" width="166.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="496.6" y="302.0">net_rx_action</text>
</g>
<g>
<title>__list_del_entry (2 samples, 0.02%)</title><rect x="495.3" y="275.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="498.3" y="286.0"></text>
</g>
<g>
<title>process_backlog (1,163 samples, 13.92%)</title><rect x="495.6" y="275.0" width="164.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="498.6" y="286.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (1,153 samples, 13.80%)</title><rect x="497.0" y="259.0" width="162.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="500.0" y="270.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_core (1,150 samples, 13.77%)</title><rect x="497.2" y="243.0" width="162.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="500.2" y="254.0">__netif_receive_skb_c..</text>
</g>
<g>
<title>ip_rcv (1,135 samples, 13.59%)</title><rect x="498.9" y="227.0" width="160.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="501.9" y="238.0">ip_rcv</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.02%)</title><rect x="501.8" y="211.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="504.8" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.02%)</title><rect x="502.1" y="211.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="505.1" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (1,034 samples, 12.38%)</title><rect x="502.4" y="211.0" width="146.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="505.4" y="222.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (1,028 samples, 12.31%)</title><rect x="503.0" y="195.0" width="145.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="506.0" y="206.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (898 samples, 10.75%)</title><rect x="503.8" y="179.0" width="126.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="506.8" y="190.0">ip_local_deliver..</text>
</g>
<g>
<title>_raw_qspin_lock (3 samples, 0.04%)</title><rect x="504.7" y="163.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="507.7" y="174.0"></text>
</g>
<g>
<title>raw_local_deliver (6 samples, 0.07%)</title><rect x="505.1" y="163.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="508.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (882 samples, 10.56%)</title><rect x="506.1" y="163.0" width="124.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="509.1" y="174.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (37 samples, 0.44%)</title><rect x="506.9" y="147.0" width="5.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="509.9" y="158.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.02%)</title><rect x="511.9" y="131.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="514.9" y="142.0"></text>
</g>
<g>
<title>tcp_filter (9 samples, 0.11%)</title><rect x="512.1" y="147.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="515.1" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (9 samples, 0.11%)</title><rect x="512.1" y="131.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="515.1" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.05%)</title><rect x="512.4" y="115.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="515.4" y="126.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (4 samples, 0.05%)</title><rect x="512.4" y="99.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="515.4" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.04%)</title><rect x="513.0" y="115.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="516.0" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (829 samples, 9.92%)</title><rect x="513.6" y="147.0" width="117.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="516.6" y="158.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (822 samples, 9.84%)</title><rect x="514.4" y="131.0" width="116.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="517.4" y="142.0">tcp_rcv_establ..</text>
</g>
<g>
<title>__tcp_ack_snd_check (16 samples, 0.19%)</title><rect x="515.7" y="115.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="518.7" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (15 samples, 0.18%)</title><rect x="515.8" y="99.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="518.8" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (15 samples, 0.18%)</title><rect x="515.8" y="83.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="518.8" y="94.0"></text>
</g>
<g>
<title>mod_timer (14 samples, 0.17%)</title><rect x="516.0" y="67.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="519.0" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.13%)</title><rect x="516.2" y="51.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="519.2" y="62.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.02%)</title><rect x="518.2" y="115.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="521.2" y="126.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.02%)</title><rect x="518.5" y="115.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="521.5" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.06%)</title><rect x="518.8" y="115.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="521.8" y="126.0"></text>
</g>
<g>
<title>tcp_ack (106 samples, 1.27%)</title><rect x="519.5" y="115.0" width="15.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="522.5" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (49 samples, 0.59%)</title><rect x="524.4" y="99.0" width="7.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="527.4" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (12 samples, 0.14%)</title><rect x="524.4" y="83.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="527.4" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (10 samples, 0.12%)</title><rect x="524.7" y="67.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="527.7" y="78.0"></text>
</g>
<g>
<title>__slab_free (5 samples, 0.06%)</title><rect x="525.4" y="51.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="528.4" y="62.0"></text>
</g>
<g>
<title>skb_release_all (37 samples, 0.44%)</title><rect x="526.1" y="83.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="529.1" y="94.0"></text>
</g>
<g>
<title>skb_release_data (36 samples, 0.43%)</title><rect x="526.1" y="67.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="529.1" y="78.0"></text>
</g>
<g>
<title>kfree (21 samples, 0.25%)</title><rect x="528.2" y="51.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="531.2" y="62.0"></text>
</g>
<g>
<title>__slab_free (8 samples, 0.10%)</title><rect x="530.1" y="35.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="533.1" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (5 samples, 0.06%)</title><rect x="531.4" y="99.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="534.4" y="110.0"></text>
</g>
<g>
<title>local_clock (4 samples, 0.05%)</title><rect x="532.3" y="99.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="535.3" y="110.0"></text>
</g>
<g>
<title>sched_clock (3 samples, 0.04%)</title><rect x="532.3" y="83.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="535.3" y="94.0"></text>
</g>
<g>
<title>vmware_sched_clock (3 samples, 0.04%)</title><rect x="532.3" y="67.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="535.3" y="78.0"></text>
</g>
<g>
<title>tcp_rearm_rto (11 samples, 0.13%)</title><rect x="532.9" y="99.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="535.9" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="534.0" y="83.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="537.0" y="94.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="534.0" y="67.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="537.0" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (14 samples, 0.17%)</title><rect x="534.5" y="115.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="537.5" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (659 samples, 7.89%)</title><rect x="536.4" y="115.0" width="93.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="539.4" y="126.0">tcp_data_qu..</text>
</g>
<g>
<title>dst_release (4 samples, 0.05%)</title><rect x="539.1" y="99.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="542.1" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (626 samples, 7.49%)</title><rect x="539.7" y="99.0" width="88.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="542.7" y="110.0">sock_def_r..</text>
</g>
<g>
<title>__wake_up_sync_key (614 samples, 7.35%)</title><rect x="541.4" y="83.0" width="86.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="544.4" y="94.0">__wake_up_..</text>
</g>
<g>
<title>__wake_up_common_lock (614 samples, 7.35%)</title><rect x="541.4" y="67.0" width="86.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="544.4" y="78.0">__wake_up_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (614 samples, 7.35%)</title><rect x="541.4" y="51.0" width="86.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="544.4" y="62.0">_raw_spin_..</text>
</g>
<g>
<title>tcp_event_data_recv (8 samples, 0.10%)</title><rect x="628.1" y="99.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="631.1" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.02%)</title><rect x="629.2" y="99.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="632.2" y="110.0"></text>
</g>
<g>
<title>tcp_parse_aligned_timestamp.part.40 (5 samples, 0.06%)</title><rect x="629.5" y="115.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="632.5" y="126.0"></text>
</g>
<g>
<title>nf_hook_slow (118 samples, 1.41%)</title><rect x="630.7" y="179.0" width="16.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="633.7" y="190.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r9 (2 samples, 0.02%)</title><rect x="630.8" y="163.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="633.8" y="174.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn	[iptable_nat] (4 samples, 0.05%)</title><rect x="631.2" y="163.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="634.2" y="174.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (2 samples, 0.02%)</title><rect x="631.8" y="163.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="634.8" y="174.0"></text>
</g>
<g>
<title>ipv4_helper	[nf_conntrack_ipv4] (3 samples, 0.04%)</title><rect x="632.2" y="163.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="635.2" y="174.0"></text>
</g>
<g>
<title>nf_iterate (104 samples, 1.24%)</title><rect x="632.6" y="163.0" width="14.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="635.6" y="174.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (59 samples, 0.71%)</title><rect x="635.0" y="147.0" width="8.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="638.0" y="158.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (4 samples, 0.05%)</title><rect x="635.0" y="131.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="638.0" y="142.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (49 samples, 0.59%)</title><rect x="635.6" y="131.0" width="6.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="638.6" y="142.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (5 samples, 0.06%)</title><rect x="638.8" y="115.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="641.8" y="126.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (13 samples, 0.16%)</title><rect x="639.5" y="115.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="642.5" y="126.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (13 samples, 0.16%)</title><rect x="639.5" y="99.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="642.5" y="110.0"></text>
</g>
<g>
<title>local_bh_enable (3 samples, 0.04%)</title><rect x="641.4" y="115.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="644.4" y="126.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.04%)</title><rect x="641.4" y="99.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="644.4" y="110.0"></text>
</g>
<g>
<title>tcp_mt (5 samples, 0.06%)</title><rect x="641.8" y="115.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="644.8" y="126.0"></text>
</g>
<g>
<title>tcp_mt (6 samples, 0.07%)</title><rect x="642.5" y="131.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="645.5" y="142.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (7 samples, 0.08%)</title><rect x="643.4" y="147.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="646.4" y="158.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.07%)</title><rect x="643.5" y="131.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="646.5" y="142.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn	[iptable_nat] (3 samples, 0.04%)</title><rect x="644.4" y="147.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="647.4" y="158.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat_ipv4] (3 samples, 0.04%)</title><rect x="644.4" y="131.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="647.4" y="142.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (16 samples, 0.19%)</title><rect x="644.8" y="147.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="647.8" y="158.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (16 samples, 0.19%)</title><rect x="644.8" y="131.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="647.8" y="142.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack_ipv4] (2 samples, 0.02%)</title><rect x="647.0" y="147.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="650.0" y="158.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (2 samples, 0.02%)</title><rect x="647.0" y="131.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="650.0" y="142.0"></text>
</g>
<g>
<title>raw_local_deliver (4 samples, 0.05%)</title><rect x="647.3" y="179.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="650.3" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.02%)</title><rect x="647.9" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="650.9" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.02%)</title><rect x="648.2" y="195.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="651.2" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (76 samples, 0.91%)</title><rect x="648.4" y="211.0" width="10.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="651.4" y="222.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.02%)</title><rect x="648.4" y="195.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="651.4" y="206.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in	[iptable_nat] (2 samples, 0.02%)</title><rect x="648.7" y="195.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="651.7" y="206.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (3 samples, 0.04%)</title><rect x="649.2" y="195.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="652.2" y="206.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack_ipv4] (2 samples, 0.02%)</title><rect x="649.6" y="195.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="652.6" y="206.0"></text>
</g>
<g>
<title>nf_iterate (66 samples, 0.79%)</title><rect x="649.9" y="195.0" width="9.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="652.9" y="206.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (7 samples, 0.08%)</title><rect x="651.7" y="179.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="654.7" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.08%)</title><rect x="651.7" y="163.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="654.7" y="174.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in	[iptable_nat] (3 samples, 0.04%)</title><rect x="652.7" y="179.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="655.7" y="190.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat_ipv4] (2 samples, 0.02%)</title><rect x="652.8" y="163.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="655.8" y="174.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (39 samples, 0.47%)</title><rect x="653.1" y="179.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="656.1" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (39 samples, 0.47%)</title><rect x="653.1" y="163.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="656.1" y="174.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.02%)</title><rect x="658.6" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="661.6" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.04%)</title><rect x="659.2" y="227.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="662.2" y="238.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.02%)</title><rect x="659.6" y="243.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="662.6" y="254.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.04%)</title><rect x="659.9" y="291.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="662.9" y="302.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.02%)</title><rect x="660.9" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="663.9" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (55 samples, 0.66%)</title><rect x="661.3" y="387.0" width="7.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="664.3" y="398.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.04%)</title><rect x="661.3" y="371.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="664.3" y="382.0"></text>
</g>
<g>
<title>ipv4_helper	[nf_conntrack_ipv4] (6 samples, 0.07%)</title><rect x="661.9" y="371.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="664.9" y="382.0"></text>
</g>
<g>
<title>nf_iterate (42 samples, 0.50%)</title><rect x="662.7" y="371.0" width="5.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="665.7" y="382.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (12 samples, 0.14%)</title><rect x="664.8" y="355.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="667.8" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.12%)</title><rect x="665.1" y="339.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="668.1" y="350.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out	[iptable_nat] (2 samples, 0.02%)</title><rect x="666.5" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="669.5" y="366.0"></text>
</g>
<g>
<title>selinux_ip_postroute (5 samples, 0.06%)</title><rect x="667.1" y="355.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="670.1" y="366.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (6 samples, 0.07%)</title><rect x="667.8" y="355.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="670.8" y="366.0"></text>
</g>
<g>
<title>selinux_ip_postroute (6 samples, 0.07%)</title><rect x="667.8" y="339.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="670.8" y="350.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (3 samples, 0.04%)</title><rect x="668.6" y="371.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="671.6" y="382.0"></text>
</g>
<g>
<title>ip_output (4 samples, 0.05%)</title><rect x="669.2" y="419.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="672.2" y="430.0"></text>
</g>
<g>
<title>local_clock (7 samples, 0.08%)</title><rect x="669.9" y="435.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="672.9" y="446.0"></text>
</g>
<g>
<title>vmware_sched_clock (6 samples, 0.07%)</title><rect x="670.1" y="419.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="673.1" y="430.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.07%)</title><rect x="670.9" y="435.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="673.9" y="446.0"></text>
</g>
<g>
<title>__skb_clone (6 samples, 0.07%)</title><rect x="670.9" y="419.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="673.9" y="430.0"></text>
</g>
<g>
<title>__copy_skb_header (3 samples, 0.04%)</title><rect x="671.3" y="403.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="674.3" y="414.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.02%)</title><rect x="671.8" y="435.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="674.8" y="446.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (2 samples, 0.02%)</title><rect x="672.0" y="435.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="675.0" y="446.0"></text>
</g>
<g>
<title>tcp_v4_send_check (4 samples, 0.05%)</title><rect x="672.3" y="451.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="675.3" y="462.0"></text>
</g>
<g>
<title>tcp_send_mss (50 samples, 0.60%)</title><rect x="673.0" y="499.0" width="7.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="676.0" y="510.0"></text>
</g>
<g>
<title>ipv4_mtu (8 samples, 0.10%)</title><rect x="673.2" y="483.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="676.2" y="494.0"></text>
</g>
<g>
<title>tcp_current_mss (41 samples, 0.49%)</title><rect x="674.3" y="483.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="677.3" y="494.0"></text>
</g>
<g>
<title>tcp_established_options (10 samples, 0.12%)</title><rect x="678.1" y="467.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="681.1" y="478.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (3 samples, 0.04%)</title><rect x="679.0" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="682.0" y="462.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (4 samples, 0.05%)</title><rect x="679.5" y="467.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="682.5" y="478.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (7 samples, 0.08%)</title><rect x="680.1" y="499.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="683.1" y="510.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (6 samples, 0.07%)</title><rect x="681.1" y="515.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="684.1" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (76 samples, 0.91%)</title><rect x="681.9" y="531.0" width="10.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="684.9" y="542.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (70 samples, 0.84%)</title><rect x="682.6" y="515.0" width="9.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="685.6" y="526.0"></text>
</g>
<g>
<title>sock_has_perm (70 samples, 0.84%)</title><rect x="682.6" y="499.0" width="9.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="685.6" y="510.0"></text>
</g>
<g>
<title>avc_has_perm_flags (35 samples, 0.42%)</title><rect x="687.6" y="483.0" width="4.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="690.6" y="494.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (9 samples, 0.11%)</title><rect x="692.7" y="531.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="695.7" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.02%)</title><rect x="693.9" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="696.9" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (58 samples, 0.69%)</title><rect x="694.2" y="547.0" width="8.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="697.2" y="558.0"></text>
</g>
<g>
<title>fget_light (58 samples, 0.69%)</title><rect x="694.2" y="531.0" width="8.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="697.2" y="542.0"></text>
</g>
<g>
<title>fput (4 samples, 0.05%)</title><rect x="702.4" y="563.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="705.4" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (9 samples, 0.11%)</title><rect x="703.0" y="643.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="706.0" y="654.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.10%)</title><rect x="703.1" y="627.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="706.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (25 samples, 0.30%)</title><rect x="704.2" y="691.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="706.2" y="675.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.08%)</title><rect x="706.8" y="675.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.02%)</title><rect x="706.8" y="659.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="707.1" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.05%)</title><rect x="707.2" y="643.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.2" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.05%)</title><rect x="707.2" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.2" y="638.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.05%)</title><rect x="707.2" y="611.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.2" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (2 samples, 0.02%)</title><rect x="707.5" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$asyncExecute$4 (4 samples, 0.05%)</title><rect x="708.2" y="755.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/LSMDao$FlusherTask.run (693 samples, 8.30%)</title><rect x="708.9" y="787.0" width="97.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="711.9" y="798.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/LSMDao.flush (693 samples, 8.30%)</title><rect x="708.9" y="771.0" width="97.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.9" y="782.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/FileTable.writeTable (693 samples, 8.30%)</title><rect x="708.9" y="755.0" width="97.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.9" y="766.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (3 samples, 0.04%)</title><rect x="709.6" y="739.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.6" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (10 samples, 0.12%)</title><rect x="710.0" y="739.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.0" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (2 samples, 0.02%)</title><rect x="710.0" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.0" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (8 samples, 0.10%)</title><rect x="710.3" y="723.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.3" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (7 samples, 0.08%)</title><rect x="710.5" y="707.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.08%)</title><rect x="710.5" y="691.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="713.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.08%)</title><rect x="710.5" y="675.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="713.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (7 samples, 0.08%)</title><rect x="710.5" y="659.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (6 samples, 0.07%)</title><rect x="710.6" y="643.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="713.6" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (3 samples, 0.04%)</title><rect x="711.4" y="739.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="714.4" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.02%)</title><rect x="712.0" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="715.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/FileTable.fromInt (6 samples, 0.07%)</title><rect x="712.3" y="739.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="712.4" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="712.4" y="707.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="715.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.04%)</title><rect x="712.4" y="691.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="715.4" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="712.6" y="675.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="712.6" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="715.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/FileTable.fromLong (2 samples, 0.02%)</title><rect x="713.1" y="739.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="716.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Value.isRemoved (3 samples, 0.04%)</title><rect x="713.6" y="739.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (657 samples, 7.86%)</title><rect x="714.0" y="739.0" width="92.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="717.0" y="750.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (19 samples, 0.23%)</title><rect x="715.0" y="723.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.0" y="734.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (19 samples, 0.23%)</title><rect x="715.0" y="707.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="718.0" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.05%)</title><rect x="717.1" y="691.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="720.1" y="702.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.05%)</title><rect x="717.1" y="675.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.05%)</title><rect x="717.1" y="659.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.05%)</title><rect x="717.7" y="723.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.7" y="734.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.05%)</title><rect x="717.7" y="707.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="720.7" y="718.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="717.9" y="691.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.9" y="702.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.02%)</title><rect x="717.9" y="675.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="720.9" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.02%)</title><rect x="717.9" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (615 samples, 7.36%)</title><rect x="718.2" y="723.0" width="86.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.2" y="734.0">sun/nio/ch..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (11 samples, 0.13%)</title><rect x="719.2" y="707.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="722.2" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.02%)</title><rect x="719.5" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.5" y="702.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (6 samples, 0.07%)</title><rect x="719.9" y="691.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.9" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (6 samples, 0.07%)</title><rect x="719.9" y="675.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="722.9" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (4 samples, 0.05%)</title><rect x="720.2" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.2" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (4 samples, 0.05%)</title><rect x="720.2" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="723.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (526 samples, 6.30%)</title><rect x="720.9" y="707.0" width="74.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.9" y="718.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (514 samples, 6.15%)</title><rect x="722.6" y="691.0" width="72.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="725.6" y="702.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (513 samples, 6.14%)</title><rect x="722.7" y="675.0" width="72.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.7" y="686.0">sun/nio/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (6 samples, 0.07%)</title><rect x="727.0" y="659.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="730.0" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.06%)</title><rect x="727.8" y="659.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="730.8" y="670.0"></text>
</g>
<g>
<title>__write (461 samples, 5.52%)</title><rect x="728.7" y="659.0" width="65.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="731.7" y="670.0">__write</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (6 samples, 0.07%)</title><rect x="734.5" y="643.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="737.5" y="654.0"></text>
</g>
<g>
<title>auditsys (17 samples, 0.20%)</title><rect x="735.3" y="643.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="738.3" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_entry (17 samples, 0.20%)</title><rect x="735.3" y="627.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="738.3" y="638.0"></text>
</g>
<g>
<title>sys_write (6 samples, 0.07%)</title><rect x="737.7" y="643.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="740.7" y="654.0"></text>
</g>
<g>
<title>sysret_audit (7 samples, 0.08%)</title><rect x="738.6" y="643.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="741.6" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.04%)</title><rect x="738.6" y="627.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="741.6" y="638.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.04%)</title><rect x="739.0" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="742.0" y="638.0"></text>
</g>
<g>
<title>sysret_signal (2 samples, 0.02%)</title><rect x="739.6" y="643.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="742.6" y="654.0"></text>
</g>
<g>
<title>system_call_after_swapgs (59 samples, 0.71%)</title><rect x="739.8" y="643.0" width="8.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="742.8" y="654.0"></text>
</g>
<g>
<title>system_call_fastpath (323 samples, 3.87%)</title><rect x="748.2" y="643.0" width="45.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="751.2" y="654.0">syst..</text>
</g>
<g>
<title>sys_write (323 samples, 3.87%)</title><rect x="748.2" y="627.0" width="45.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="751.2" y="638.0">sys_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="749.0" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="752.0" y="622.0"></text>
</g>
<g>
<title>do_sync_write (3 samples, 0.04%)</title><rect x="749.4" y="611.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="752.4" y="622.0"></text>
</g>
<g>
<title>fget_light (24 samples, 0.29%)</title><rect x="749.9" y="611.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="752.9" y="622.0"></text>
</g>
<g>
<title>vfs_write (285 samples, 3.41%)</title><rect x="753.5" y="611.0" width="40.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="756.5" y="622.0">vfs..</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.02%)</title><rect x="754.5" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="757.5" y="606.0"></text>
</g>
<g>
<title>__sb_end_write (3 samples, 0.04%)</title><rect x="755.0" y="595.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="758.0" y="606.0"></text>
</g>
<g>
<title>__sb_start_write (18 samples, 0.22%)</title><rect x="755.4" y="595.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="758.4" y="606.0"></text>
</g>
<g>
<title>__percpu_counter_add (5 samples, 0.06%)</title><rect x="757.2" y="579.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="760.2" y="590.0"></text>
</g>
<g>
<title>do_sync_write (191 samples, 2.29%)</title><rect x="757.9" y="595.0" width="27.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="760.9" y="606.0">d..</text>
</g>
<g>
<title>xfs_file_aio_write	[xfs] (189 samples, 2.26%)</title><rect x="758.2" y="579.0" width="26.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="761.2" y="590.0">x..</text>
</g>
<g>
<title>generic_segment_checks (2 samples, 0.02%)</title><rect x="761.6" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="764.6" y="574.0"></text>
</g>
<g>
<title>xfs_file_buffered_aio_write	[xfs] (163 samples, 1.95%)</title><rect x="761.9" y="563.0" width="23.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="764.9" y="574.0">x..</text>
</g>
<g>
<title>iomap_file_buffered_write (134 samples, 1.60%)</title><rect x="762.4" y="547.0" width="19.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="765.4" y="558.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="762.6" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="765.6" y="542.0"></text>
</g>
<g>
<title>iomap_apply (123 samples, 1.47%)</title><rect x="763.0" y="531.0" width="17.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="766.0" y="542.0"></text>
</g>
<g>
<title>iomap_write_actor (97 samples, 1.16%)</title><rect x="763.4" y="515.0" width="13.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="766.4" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (7 samples, 0.08%)</title><rect x="763.6" y="499.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="766.6" y="510.0"></text>
</g>
<g>
<title>iomap_write_begin (41 samples, 0.49%)</title><rect x="764.6" y="499.0" width="5.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="767.6" y="510.0"></text>
</g>
<g>
<title>__block_write_begin_int (11 samples, 0.13%)</title><rect x="764.7" y="483.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="767.7" y="494.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (26 samples, 0.31%)</title><rect x="766.5" y="483.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="769.5" y="494.0"></text>
</g>
<g>
<title>__find_lock_page (19 samples, 0.23%)</title><rect x="767.4" y="467.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="770.4" y="478.0"></text>
</g>
<g>
<title>__find_get_page (18 samples, 0.22%)</title><rect x="767.5" y="451.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="770.5" y="462.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (14 samples, 0.17%)</title><rect x="768.1" y="435.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="771.1" y="446.0"></text>
</g>
<g>
<title>__radix_tree_lookup (9 samples, 0.11%)</title><rect x="768.1" y="419.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="771.1" y="430.0"></text>
</g>
<g>
<title>radix_tree_descend (2 samples, 0.02%)</title><rect x="769.1" y="403.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="772.1" y="414.0"></text>
</g>
<g>
<title>radix_tree_descend (5 samples, 0.06%)</title><rect x="769.4" y="419.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="772.4" y="430.0"></text>
</g>
<g>
<title>iomap_write_end (34 samples, 0.41%)</title><rect x="770.3" y="499.0" width="4.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="773.3" y="510.0"></text>
</g>
<g>
<title>generic_write_end (34 samples, 0.41%)</title><rect x="770.3" y="483.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="773.3" y="494.0"></text>
</g>
<g>
<title>__block_commit_write.isra.21 (2 samples, 0.02%)</title><rect x="770.3" y="467.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="773.3" y="478.0"></text>
</g>
<g>
<title>__generic_write_end (22 samples, 0.26%)</title><rect x="770.6" y="467.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="773.6" y="478.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.02%)</title><rect x="770.6" y="451.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="773.6" y="462.0"></text>
</g>
<g>
<title>page_waitqueue (3 samples, 0.04%)</title><rect x="771.1" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="774.1" y="462.0"></text>
</g>
<g>
<title>put_page (2 samples, 0.02%)</title><rect x="771.5" y="451.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="774.5" y="462.0"></text>
</g>
<g>
<title>unlock_page (14 samples, 0.17%)</title><rect x="771.8" y="451.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="774.8" y="462.0"></text>
</g>
<g>
<title>page_waitqueue (13 samples, 0.16%)</title><rect x="771.9" y="435.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="774.9" y="446.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.02%)</title><rect x="773.7" y="467.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="776.7" y="478.0"></text>
</g>
<g>
<title>block_write_end (7 samples, 0.08%)</title><rect x="774.0" y="467.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="777.0" y="478.0"></text>
</g>
<g>
<title>__block_commit_write.isra.21 (6 samples, 0.07%)</title><rect x="774.0" y="451.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="777.0" y="462.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (13 samples, 0.16%)</title><rect x="775.3" y="499.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="778.3" y="510.0"></text>
</g>
<g>
<title>xfs_bmbt_to_iomap	[xfs] (3 samples, 0.04%)</title><rect x="777.4" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="780.4" y="526.0"></text>
</g>
<g>
<title>xfs_file_iomap_begin	[xfs] (18 samples, 0.22%)</title><rect x="777.8" y="515.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="780.8" y="526.0"></text>
</g>
<g>
<title>xfs_find_bdev_for_inode	[xfs] (4 samples, 0.05%)</title><rect x="778.4" y="499.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="781.4" y="510.0"></text>
</g>
<g>
<title>xfs_iomap_write_delay	[xfs] (8 samples, 0.10%)</title><rect x="779.0" y="499.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="782.0" y="510.0"></text>
</g>
<g>
<title>xfs_iext_lookup_extent	[xfs] (2 samples, 0.02%)</title><rect x="779.8" y="483.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="782.8" y="494.0"></text>
</g>
<g>
<title>xfs_iunlock	[xfs] (2 samples, 0.02%)</title><rect x="780.1" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="783.1" y="510.0"></text>
</g>
<g>
<title>up_write (2 samples, 0.02%)</title><rect x="780.1" y="483.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="783.1" y="494.0"></text>
</g>
<g>
<title>xfs_file_iomap_begin	[xfs] (7 samples, 0.08%)</title><rect x="780.4" y="531.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="783.4" y="542.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.02%)</title><rect x="781.4" y="547.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="784.4" y="558.0"></text>
</g>
<g>
<title>xfs_file_aio_write_checks	[xfs] (20 samples, 0.24%)</title><rect x="781.8" y="547.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="784.8" y="558.0"></text>
</g>
<g>
<title>file_update_time (5 samples, 0.06%)</title><rect x="781.9" y="531.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="784.9" y="542.0"></text>
</g>
<g>
<title>update_time (2 samples, 0.02%)</title><rect x="782.4" y="515.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="785.4" y="526.0"></text>
</g>
<g>
<title>xfs_vn_update_time	[xfs] (2 samples, 0.02%)</title><rect x="782.4" y="499.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="785.4" y="510.0"></text>
</g>
<g>
<title>generic_write_checks (10 samples, 0.12%)</title><rect x="782.6" y="531.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="785.6" y="542.0"></text>
</g>
<g>
<title>xfs_break_layouts	[xfs] (4 samples, 0.05%)</title><rect x="784.0" y="531.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="787.0" y="542.0"></text>
</g>
<g>
<title>xfs_break_leased_layouts	[xfs] (2 samples, 0.02%)</title><rect x="784.3" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="787.3" y="526.0"></text>
</g>
<g>
<title>xfs_iunlock	[xfs] (2 samples, 0.02%)</title><rect x="784.6" y="547.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="787.6" y="558.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.05%)</title><rect x="784.9" y="595.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="787.9" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (53 samples, 0.63%)</title><rect x="785.5" y="595.0" width="7.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="788.5" y="606.0"></text>
</g>
<g>
<title>security_file_permission (42 samples, 0.50%)</title><rect x="786.7" y="579.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="789.7" y="590.0"></text>
</g>
<g>
<title>avc_policy_seqno (4 samples, 0.05%)</title><rect x="788.3" y="563.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="791.3" y="574.0"></text>
</g>
<g>
<title>selinux_file_permission (27 samples, 0.32%)</title><rect x="788.9" y="563.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="791.9" y="574.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.02%)</title><rect x="792.7" y="579.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="795.7" y="590.0"></text>
</g>
<g>
<title>xfs_file_aio_write	[xfs] (6 samples, 0.07%)</title><rect x="792.9" y="595.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="795.9" y="606.0"></text>
</g>
<g>
<title>convertReturnVal (5 samples, 0.06%)</title><rect x="793.8" y="659.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="796.8" y="670.0"></text>
</g>
<g>
<title>fdval (5 samples, 0.06%)</title><rect x="794.5" y="659.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="797.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.10%)</title><rect x="795.2" y="707.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="798.2" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="795.3" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="798.3" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.06%)</title><rect x="795.6" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.6" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (62 samples, 0.74%)</title><rect x="796.3" y="707.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="799.3" y="718.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (46 samples, 0.55%)</title><rect x="797.3" y="691.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="800.3" y="702.0"></text>
</g>
<g>
<title>InlineCacheBuffer (2 samples, 0.02%)</title><rect x="797.9" y="675.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="800.9" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (5 samples, 0.06%)</title><rect x="798.3" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.3" y="686.0"></text>
</g>
<g>
<title>vtable stub (34 samples, 0.41%)</title><rect x="799.0" y="675.0" width="4.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="802.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (8 samples, 0.10%)</title><rect x="803.8" y="691.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (12 samples, 0.14%)</title><rect x="805.1" y="723.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="808.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (11 samples, 0.13%)</title><rect x="805.2" y="707.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="808.2" y="718.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="805.5" y="691.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="808.5" y="702.0"></text>
</g>
<g>
<title>pthread_self (7 samples, 0.08%)</title><rect x="805.8" y="691.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="808.8" y="702.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,474 samples, 29.61%)</title><rect x="806.9" y="803.0" width="349.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="809.9" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>I2C/C2I adapters (4 samples, 0.05%)</title><rect x="810.6" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="811.2" y="787.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="814.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="811.2" y="771.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="814.2" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="811.2" y="755.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="814.2" y="766.0"></text>
</g>
<g>
<title>[vdso] (11 samples, 0.13%)</title><rect x="811.7" y="787.0" width="1.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="814.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.02%)</title><rect x="813.3" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.3" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (405 samples, 4.85%)</title><rect x="813.6" y="787.0" width="57.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="816.6" y="798.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (47 samples, 0.56%)</title><rect x="816.5" y="771.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="819.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (47 samples, 0.56%)</title><rect x="816.5" y="755.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.5" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (337 samples, 4.03%)</title><rect x="823.2" y="771.0" width="47.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="826.2" y="782.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (12 samples, 0.14%)</title><rect x="832.6" y="755.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="835.6" y="766.0"></text>
</g>
<g>
<title>[vdso] (10 samples, 0.12%)</title><rect x="834.3" y="755.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="837.3" y="766.0"></text>
</g>
<g>
<title>__GI_epoll_wait (161 samples, 1.93%)</title><rect x="835.7" y="755.0" width="22.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="838.7" y="766.0">_..</text>
</g>
<g>
<title>auditsys (9 samples, 0.11%)</title><rect x="840.1" y="739.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="843.1" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_entry (9 samples, 0.11%)</title><rect x="840.1" y="723.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="843.1" y="734.0"></text>
</g>
<g>
<title>sys_epoll_wait (3 samples, 0.04%)</title><rect x="841.4" y="739.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="844.4" y="750.0"></text>
</g>
<g>
<title>sysret_audit (4 samples, 0.05%)</title><rect x="841.8" y="739.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="844.8" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_exit (4 samples, 0.05%)</title><rect x="841.8" y="723.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="844.8" y="734.0"></text>
</g>
<g>
<title>system_call_after_swapgs (4 samples, 0.05%)</title><rect x="842.4" y="739.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="845.4" y="750.0"></text>
</g>
<g>
<title>system_call_fastpath (110 samples, 1.32%)</title><rect x="842.9" y="739.0" width="15.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="845.9" y="750.0"></text>
</g>
<g>
<title>fget_light (3 samples, 0.04%)</title><rect x="843.1" y="723.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="846.1" y="734.0"></text>
</g>
<g>
<title>sys_epoll_wait (106 samples, 1.27%)</title><rect x="843.5" y="723.0" width="15.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="846.5" y="734.0"></text>
</g>
<g>
<title>ep_poll (81 samples, 0.97%)</title><rect x="843.9" y="707.0" width="11.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="846.9" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.20%)</title><rect x="844.2" y="691.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="847.2" y="702.0"></text>
</g>
<g>
<title>ep_scan_ready_list.isra.7 (46 samples, 0.55%)</title><rect x="846.6" y="691.0" width="6.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="849.6" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.08%)</title><rect x="846.8" y="675.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="849.8" y="686.0"></text>
</g>
<g>
<title>ep_send_events_proc (34 samples, 0.41%)</title><rect x="847.8" y="675.0" width="4.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="850.8" y="686.0"></text>
</g>
<g>
<title>sock_poll (28 samples, 0.34%)</title><rect x="848.5" y="659.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="851.5" y="670.0"></text>
</g>
<g>
<title>tcp_poll (15 samples, 0.18%)</title><rect x="849.9" y="643.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="852.9" y="654.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.02%)</title><rect x="851.7" y="627.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="854.7" y="638.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.04%)</title><rect x="852.0" y="643.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="855.0" y="654.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.04%)</title><rect x="852.6" y="675.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="855.6" y="686.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.04%)</title><rect x="853.1" y="691.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="856.1" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 0.14%)</title><rect x="853.7" y="691.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="856.7" y="702.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="853.7" y="675.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="856.7" y="686.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (10 samples, 0.12%)</title><rect x="854.0" y="675.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="857.0" y="686.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.11%)</title><rect x="854.1" y="659.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="857.1" y="670.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.11%)</title><rect x="854.1" y="643.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="857.1" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.02%)</title><rect x="855.0" y="627.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="858.0" y="638.0"></text>
</g>
<g>
<title>fget_light (22 samples, 0.26%)</title><rect x="855.4" y="707.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="858.4" y="718.0"></text>
</g>
<g>
<title>__clock_gettime (46 samples, 0.55%)</title><rect x="858.5" y="755.0" width="6.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="861.5" y="766.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.10%)</title><rect x="863.9" y="739.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="866.9" y="750.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.07%)</title><rect x="865.0" y="755.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="868.0" y="766.0"></text>
</g>
<g>
<title>__libc_recv (2 samples, 0.02%)</title><rect x="866.0" y="755.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="869.0" y="766.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.02%)</title><rect x="866.0" y="739.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="869.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (28 samples, 0.34%)</title><rect x="866.3" y="755.0" width="3.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="869.3" y="766.0"></text>
</g>
<g>
<title>system_call_after_swapgs (28 samples, 0.34%)</title><rect x="866.3" y="739.0" width="3.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="869.3" y="750.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="870.2" y="755.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="873.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,021 samples, 24.19%)</title><rect x="870.8" y="787.0" width="285.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.8" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>[vdso] (6 samples, 0.07%)</title><rect x="872.2" y="771.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="875.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,004 samples, 23.99%)</title><rect x="873.0" y="771.0" width="283.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="876.0" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1,277 samples, 15.29%)</title><rect x="874.2" y="755.0" width="180.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="877.2" y="766.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>I2C/C2I adapters (5 samples, 0.06%)</title><rect x="885.5" y="739.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="888.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,038 samples, 12.43%)</title><rect x="886.3" y="739.0" width="146.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="889.3" y="750.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,032 samples, 12.35%)</title><rect x="887.2" y="723.0" width="145.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="890.2" y="734.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (1,013 samples, 12.13%)</title><rect x="887.2" y="707.0" width="143.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.2" y="718.0">RequestHandler2_en..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (31 samples, 0.37%)</title><rect x="887.2" y="691.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (10 samples, 0.12%)</title><rect x="887.2" y="675.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (10 samples, 0.12%)</title><rect x="887.2" y="659.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.2" y="670.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.07%)</title><rect x="887.7" y="643.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (13 samples, 0.16%)</title><rect x="888.6" y="675.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="891.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.length (13 samples, 0.16%)</title><rect x="888.6" y="659.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="891.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.coder (4 samples, 0.05%)</title><rect x="889.8" y="643.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="892.8" y="654.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (7 samples, 0.08%)</title><rect x="890.6" y="675.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="893.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="891.1" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="894.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="891.1" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="891.1" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="894.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.entity (982 samples, 11.75%)</title><rect x="891.5" y="691.0" width="138.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.5" y="702.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/String.getBytes (42 samples, 0.50%)</title><rect x="891.5" y="675.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (35 samples, 0.42%)</title><rect x="892.4" y="659.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (31 samples, 0.37%)</title><rect x="893.0" y="643.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.0" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (24 samples, 0.29%)</title><rect x="893.2" y="627.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.08%)</title><rect x="895.6" y="611.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (5 samples, 0.06%)</title><rect x="896.6" y="627.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (6 samples, 0.07%)</title><rect x="897.5" y="675.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="900.5" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.17%)</title><rect x="898.3" y="675.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="901.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (14 samples, 0.17%)</title><rect x="898.3" y="659.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="901.3" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.17%)</title><rect x="898.3" y="643.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.3" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (14 samples, 0.17%)</title><rect x="898.3" y="627.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.3" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (14 samples, 0.17%)</title><rect x="898.3" y="611.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="901.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.10%)</title><rect x="898.3" y="595.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (8 samples, 0.10%)</title><rect x="898.3" y="579.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.3" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (5 samples, 0.06%)</title><rect x="898.7" y="563.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.7" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.07%)</title><rect x="899.4" y="595.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.createResponse (920 samples, 11.01%)</title><rect x="900.3" y="675.0" width="129.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="903.3" y="686.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.asyncExecute (919 samples, 11.00%)</title><rect x="900.4" y="659.0" width="129.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="903.4" y="670.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (919 samples, 11.00%)</title><rect x="900.4" y="643.0" width="129.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="903.4" y="654.0">one/nio/server/S..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (919 samples, 11.00%)</title><rect x="900.4" y="627.0" width="129.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="903.4" y="638.0">java/util/concur..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (919 samples, 11.00%)</title><rect x="900.4" y="611.0" width="129.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="903.4" y="622.0">one/nio/server/W..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (919 samples, 11.00%)</title><rect x="900.4" y="595.0" width="129.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="903.4" y="606.0">one/nio/server/W..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (919 samples, 11.00%)</title><rect x="900.4" y="579.0" width="129.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.4" y="590.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (918 samples, 10.99%)</title><rect x="900.6" y="563.0" width="129.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="903.6" y="574.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (896 samples, 10.73%)</title><rect x="900.6" y="547.0" width="126.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.6" y="558.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (896 samples, 10.73%)</title><rect x="900.6" y="531.0" width="126.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="903.6" y="542.0">java/util/concur..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (867 samples, 10.38%)</title><rect x="904.7" y="515.0" width="122.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="907.7" y="526.0">jdk/internal/mi..</text>
</g>
<g>
<title>Parker::unpark() (5 samples, 0.06%)</title><rect x="906.7" y="499.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="909.7" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (4 samples, 0.05%)</title><rect x="907.6" y="499.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="910.6" y="510.0"></text>
</g>
<g>
<title>Unsafe_Unpark (135 samples, 1.62%)</title><rect x="908.2" y="499.0" width="19.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="911.2" y="510.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (8 samples, 0.10%)</title><rect x="910.5" y="483.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="913.5" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (6 samples, 0.07%)</title><rect x="911.6" y="483.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="914.6" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.06%)</title><rect x="912.4" y="483.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="915.4" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (23 samples, 0.28%)</title><rect x="913.2" y="483.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="916.2" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.02%)</title><rect x="916.4" y="483.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="919.4" y="494.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (8 samples, 0.10%)</title><rect x="916.7" y="483.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="919.7" y="494.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (8 samples, 0.10%)</title><rect x="918.0" y="483.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="921.0" y="494.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="919.1" y="483.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="922.1" y="494.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (16 samples, 0.19%)</title><rect x="919.5" y="483.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="922.5" y="494.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (8 samples, 0.10%)</title><rect x="921.8" y="483.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="924.8" y="494.0"></text>
</g>
<g>
<title>pthread_mutex_lock (15 samples, 0.18%)</title><rect x="922.9" y="483.0" width="2.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="925.9" y="494.0"></text>
</g>
<g>
<title>update_get_addr (16 samples, 0.19%)</title><rect x="925.0" y="483.0" width="2.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="928.0" y="494.0"></text>
</g>
<g>
<title>__libc_recv (37 samples, 0.44%)</title><rect x="927.3" y="499.0" width="5.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="930.3" y="510.0"></text>
</g>
<g>
<title>system_call_after_swapgs (37 samples, 0.44%)</title><rect x="927.3" y="483.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="930.3" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_signal (660 samples, 7.90%)</title><rect x="932.5" y="499.0" width="93.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="935.5" y="510.0">__pthread_c..</text>
</g>
<g>
<title>__audit_syscall_entry (5 samples, 0.06%)</title><rect x="937.0" y="483.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="940.0" y="494.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.02%)</title><rect x="937.7" y="483.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="940.7" y="494.0"></text>
</g>
<g>
<title>auditsys (17 samples, 0.20%)</title><rect x="938.0" y="483.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="941.0" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_entry (16 samples, 0.19%)</title><rect x="938.2" y="467.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="941.2" y="478.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.02%)</title><rect x="940.6" y="483.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="943.6" y="494.0"></text>
</g>
<g>
<title>sysret_audit (14 samples, 0.17%)</title><rect x="940.8" y="483.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="943.8" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_exit (9 samples, 0.11%)</title><rect x="940.8" y="467.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="943.8" y="478.0"></text>
</g>
<g>
<title>mntput (2 samples, 0.02%)</title><rect x="941.8" y="451.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="944.8" y="462.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.04%)</title><rect x="942.1" y="467.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="945.1" y="478.0"></text>
</g>
<g>
<title>path_put (2 samples, 0.02%)</title><rect x="942.5" y="467.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="945.5" y="478.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.04%)</title><rect x="943.1" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="946.1" y="494.0"></text>
</g>
<g>
<title>system_call_fastpath (582 samples, 6.97%)</title><rect x="943.5" y="483.0" width="82.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="946.5" y="494.0">system_ca..</text>
</g>
<g>
<title>sys_futex (580 samples, 6.94%)</title><rect x="943.8" y="467.0" width="81.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="946.8" y="478.0">sys_futex</text>
</g>
<g>
<title>do_futex (571 samples, 6.84%)</title><rect x="944.8" y="451.0" width="80.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="947.8" y="462.0">do_futex</text>
</g>
<g>
<title>_raw_qspin_lock (28 samples, 0.34%)</title><rect x="946.2" y="435.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="949.2" y="446.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.13 (2 samples, 0.02%)</title><rect x="950.2" y="435.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="953.2" y="446.0"></text>
</g>
<g>
<title>futex_wake_op (521 samples, 6.24%)</title><rect x="950.4" y="435.0" width="73.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="953.4" y="446.0">futex_wa..</text>
</g>
<g>
<title>get_futex_key (7 samples, 0.08%)</title><rect x="955.0" y="419.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="958.0" y="430.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (2 samples, 0.02%)</title><rect x="955.7" y="403.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="958.7" y="414.0"></text>
</g>
<g>
<title>mark_wake_futex (36 samples, 0.43%)</title><rect x="956.1" y="419.0" width="5.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="959.1" y="430.0"></text>
</g>
<g>
<title>__unqueue_futex (9 samples, 0.11%)</title><rect x="959.3" y="403.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="962.3" y="414.0"></text>
</g>
<g>
<title>wake_q_add (3 samples, 0.04%)</title><rect x="960.8" y="403.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="963.8" y="414.0"></text>
</g>
<g>
<title>wake_up_q (445 samples, 5.33%)</title><rect x="961.2" y="419.0" width="62.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="964.2" y="430.0">wake_u..</text>
</g>
<g>
<title>try_to_wake_up (444 samples, 5.31%)</title><rect x="961.3" y="403.0" width="62.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="964.3" y="414.0">try_to..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (444 samples, 5.31%)</title><rect x="961.3" y="387.0" width="62.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="964.3" y="398.0">_raw_s..</text>
</g>
<g>
<title>hash_futex (8 samples, 0.10%)</title><rect x="1024.2" y="435.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1027.2" y="446.0"></text>
</g>
<g>
<title>futex_wake_op (2 samples, 0.02%)</title><rect x="1025.4" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1028.4" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.10%)</title><rect x="1025.7" y="499.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1028.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (22 samples, 0.26%)</title><rect x="1027.1" y="547.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1030.1" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (9 samples, 0.11%)</title><rect x="1030.2" y="707.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1033.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.07%)</title><rect x="1031.5" y="707.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1034.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.07%)</title><rect x="1031.5" y="691.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1034.5" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.04%)</title><rect x="1031.5" y="675.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1034.5" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="1031.9" y="675.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1034.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.04%)</title><rect x="1031.9" y="659.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1034.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.05%)</title><rect x="1032.4" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1035.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="1032.4" y="691.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1035.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="1032.4" y="675.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1035.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1032.4" y="659.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1035.4" y="670.0"></text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (4 samples, 0.05%)</title><rect x="1032.4" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1035.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (82 samples, 0.98%)</title><rect x="1032.9" y="739.0" width="11.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1035.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (35 samples, 0.42%)</title><rect x="1033.4" y="723.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1036.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.08%)</title><rect x="1036.9" y="707.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1039.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (7 samples, 0.08%)</title><rect x="1036.9" y="691.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1039.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.07%)</title><rect x="1037.0" y="675.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1040.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.04%)</title><rect x="1037.9" y="707.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1040.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.26%)</title><rect x="1038.3" y="723.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1041.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (20 samples, 0.24%)</title><rect x="1038.6" y="707.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1041.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.12%)</title><rect x="1040.0" y="691.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1043.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.12%)</title><rect x="1040.0" y="675.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1043.0" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.08%)</title><rect x="1040.4" y="659.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1043.4" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (22 samples, 0.26%)</title><rect x="1041.4" y="723.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1044.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (11 samples, 0.13%)</title><rect x="1044.5" y="739.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (8 samples, 0.10%)</title><rect x="1044.8" y="723.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.8" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (7 samples, 0.08%)</title><rect x="1044.9" y="707.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1047.9" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.digit (4 samples, 0.05%)</title><rect x="1045.4" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1048.4" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.digit (4 samples, 0.05%)</title><rect x="1045.4" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.4" y="686.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (3 samples, 0.04%)</title><rect x="1045.5" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.02%)</title><rect x="1046.1" y="739.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1049.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getBody (2 samples, 0.02%)</title><rect x="1046.3" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1049.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (36 samples, 0.43%)</title><rect x="1046.6" y="739.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (17 samples, 0.20%)</title><rect x="1047.1" y="723.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1050.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.17%)</title><rect x="1047.5" y="707.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1050.5" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (8 samples, 0.10%)</title><rect x="1047.8" y="691.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1050.8" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (8 samples, 0.10%)</title><rect x="1047.8" y="675.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.8" y="686.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (7 samples, 0.08%)</title><rect x="1047.9" y="659.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1050.9" y="670.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (3 samples, 0.04%)</title><rect x="1048.5" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1051.5" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.02%)</title><rect x="1048.9" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1051.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.02%)</title><rect x="1048.9" y="675.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1051.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (16 samples, 0.19%)</title><rect x="1049.5" y="723.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1052.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.16%)</title><rect x="1049.9" y="707.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1052.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (11 samples, 0.13%)</title><rect x="1049.9" y="691.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1052.9" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="1051.4" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1054.4" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19 samples, 0.23%)</title><rect x="1051.9" y="739.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1054.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.22%)</title><rect x="1052.0" y="723.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1055.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.14%)</title><rect x="1052.8" y="707.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1055.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1052.8" y="691.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1055.8" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1053.0" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1056.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (9 samples, 0.11%)</title><rect x="1053.3" y="691.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1056.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (9 samples, 0.11%)</title><rect x="1053.3" y="675.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1056.3" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (8 samples, 0.10%)</title><rect x="1053.4" y="659.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1056.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (719 samples, 8.61%)</title><rect x="1054.5" y="755.0" width="101.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1057.5" y="766.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (708 samples, 8.47%)</title><rect x="1055.5" y="739.0" width="100.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1058.5" y="750.0">one/nio/net/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.06%)</title><rect x="1059.8" y="723.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1062.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.35%)</title><rect x="1060.5" y="723.0" width="15.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1063.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (113 samples, 1.35%)</title><rect x="1060.5" y="707.0" width="15.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1063.5" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (86 samples, 1.03%)</title><rect x="1060.5" y="691.0" width="12.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1063.5" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (8 samples, 0.10%)</title><rect x="1061.7" y="675.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1064.7" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (16 samples, 0.19%)</title><rect x="1062.9" y="675.0" width="2.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1065.9" y="686.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="1065.1" y="675.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1068.1" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.02%)</title><rect x="1065.6" y="675.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1068.6" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (44 samples, 0.53%)</title><rect x="1065.8" y="675.0" width="6.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1068.8" y="686.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.02%)</title><rect x="1068.0" y="659.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1071.0" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (10 samples, 0.12%)</title><rect x="1068.2" y="659.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1071.2" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (17 samples, 0.20%)</title><rect x="1069.7" y="659.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1072.7" y="670.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (14 samples, 0.17%)</title><rect x="1070.1" y="643.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1073.1" y="654.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (3 samples, 0.04%)</title><rect x="1072.1" y="675.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1075.1" y="686.0"></text>
</g>
<g>
<title>__libc_recv (16 samples, 0.19%)</title><rect x="1072.6" y="691.0" width="2.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1075.6" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 0.13%)</title><rect x="1074.9" y="691.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1077.9" y="702.0"></text>
</g>
<g>
<title>__GI_epoll_wait (87 samples, 1.04%)</title><rect x="1076.4" y="723.0" width="12.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1079.4" y="734.0"></text>
</g>
<g>
<title>system_call_after_swapgs (87 samples, 1.04%)</title><rect x="1076.4" y="707.0" width="12.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1079.4" y="718.0"></text>
</g>
<g>
<title>__libc_recv (466 samples, 5.58%)</title><rect x="1088.7" y="723.0" width="65.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1091.7" y="734.0">__libc_..</text>
</g>
<g>
<title>__audit_syscall_entry (5 samples, 0.06%)</title><rect x="1092.0" y="707.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1095.0" y="718.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="1092.7" y="707.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1095.7" y="718.0"></text>
</g>
<g>
<title>auditsys (53 samples, 0.63%)</title><rect x="1093.1" y="707.0" width="7.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1096.1" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_entry (53 samples, 0.63%)</title><rect x="1093.1" y="691.0" width="7.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1096.1" y="702.0"></text>
</g>
<g>
<title>current_kernel_time (2 samples, 0.02%)</title><rect x="1100.3" y="675.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1103.3" y="686.0"></text>
</g>
<g>
<title>sys_recvfrom (12 samples, 0.14%)</title><rect x="1100.6" y="707.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1103.6" y="718.0"></text>
</g>
<g>
<title>sysret_audit (12 samples, 0.14%)</title><rect x="1102.3" y="707.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1105.3" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_exit (10 samples, 0.12%)</title><rect x="1102.6" y="691.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1105.6" y="702.0"></text>
</g>
<g>
<title>dput (4 samples, 0.05%)</title><rect x="1103.0" y="675.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1106.0" y="686.0"></text>
</g>
<g>
<title>sysret_signal (2 samples, 0.02%)</title><rect x="1104.0" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1107.0" y="718.0"></text>
</g>
<g>
<title>system_call_after_swapgs (15 samples, 0.18%)</title><rect x="1104.3" y="707.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1107.3" y="718.0"></text>
</g>
<g>
<title>system_call_fastpath (339 samples, 4.06%)</title><rect x="1106.4" y="707.0" width="47.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1109.4" y="718.0">syst..</text>
</g>
<g>
<title>SYSC_recvfrom (6 samples, 0.07%)</title><rect x="1106.8" y="691.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1109.8" y="702.0"></text>
</g>
<g>
<title>sys_recvfrom (330 samples, 3.95%)</title><rect x="1107.7" y="691.0" width="46.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1110.7" y="702.0">sys_..</text>
</g>
<g>
<title>SYSC_recvfrom (328 samples, 3.93%)</title><rect x="1107.7" y="675.0" width="46.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1110.7" y="686.0">SYSC..</text>
</g>
<g>
<title>fget_light (8 samples, 0.10%)</title><rect x="1109.3" y="659.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1112.3" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (7 samples, 0.08%)</title><rect x="1110.6" y="659.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1113.6" y="670.0"></text>
</g>
<g>
<title>sock_recvmsg (207 samples, 2.48%)</title><rect x="1111.6" y="659.0" width="29.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1114.6" y="670.0">so..</text>
</g>
<g>
<title>inet_recvmsg (127 samples, 1.52%)</title><rect x="1112.5" y="643.0" width="17.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1115.5" y="654.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.04%)</title><rect x="1112.6" y="627.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1115.6" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (123 samples, 1.47%)</title><rect x="1113.0" y="627.0" width="17.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1116.0" y="638.0"></text>
</g>
<g>
<title>__kfree_skb (25 samples, 0.30%)</title><rect x="1116.1" y="611.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1119.1" y="622.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.08%)</title><rect x="1116.1" y="595.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1119.1" y="606.0"></text>
</g>
<g>
<title>skb_release_all (18 samples, 0.22%)</title><rect x="1117.1" y="595.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1120.1" y="606.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.06%)</title><rect x="1117.1" y="579.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1120.1" y="590.0"></text>
</g>
<g>
<title>skb_release_head_state (12 samples, 0.14%)</title><rect x="1117.8" y="579.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1120.8" y="590.0"></text>
</g>
<g>
<title>sock_rfree (12 samples, 0.14%)</title><rect x="1117.8" y="563.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1120.8" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (7 samples, 0.08%)</title><rect x="1119.9" y="611.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1122.9" y="622.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.02%)</title><rect x="1120.9" y="611.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1123.9" y="622.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.06%)</title><rect x="1121.2" y="611.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1124.2" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.04%)</title><rect x="1121.2" y="595.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1124.2" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="1121.4" y="579.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1124.4" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.02%)</title><rect x="1121.6" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1124.6" y="606.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (58 samples, 0.69%)</title><rect x="1121.9" y="611.0" width="8.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1124.9" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (17 samples, 0.20%)</title><rect x="1122.1" y="595.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1125.1" y="606.0"></text>
</g>
<g>
<title>memcpy_toiovec (40 samples, 0.48%)</title><rect x="1124.5" y="595.0" width="5.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1127.5" y="606.0"></text>
</g>
<g>
<title>__check_object_size (39 samples, 0.47%)</title><rect x="1124.6" y="579.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1127.6" y="590.0"></text>
</g>
<g>
<title>__check_heap_object (10 samples, 0.12%)</title><rect x="1127.0" y="563.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1130.0" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (12 samples, 0.14%)</title><rect x="1128.4" y="563.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1131.4" y="574.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.02%)</title><rect x="1130.1" y="611.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1133.1" y="622.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.02%)</title><rect x="1130.1" y="595.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1133.1" y="606.0"></text>
</g>
<g>
<title>security_socket_recvmsg (62 samples, 0.74%)</title><rect x="1130.4" y="643.0" width="8.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1133.4" y="654.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (52 samples, 0.62%)</title><rect x="1131.7" y="627.0" width="7.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1134.7" y="638.0"></text>
</g>
<g>
<title>sock_has_perm (52 samples, 0.62%)</title><rect x="1131.7" y="611.0" width="7.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1134.7" y="622.0"></text>
</g>
<g>
<title>avc_has_perm_flags (30 samples, 0.36%)</title><rect x="1134.8" y="595.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1137.8" y="606.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (11 samples, 0.13%)</title><rect x="1139.2" y="643.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1142.2" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (93 samples, 1.11%)</title><rect x="1140.8" y="659.0" width="13.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1143.8" y="670.0"></text>
</g>
<g>
<title>fget_light (92 samples, 1.10%)</title><rect x="1140.8" y="643.0" width="13.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1143.8" y="654.0"></text>
</g>
<g>
<title>tracesys (2 samples, 0.02%)</title><rect x="1154.3" y="707.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1157.3" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (7 samples, 0.08%)</title><rect x="1154.5" y="723.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1157.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (4 samples, 0.05%)</title><rect x="1155.5" y="739.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1158.5" y="750.0"></text>
</g>
<g>
<title>start_thread (238 samples, 2.85%)</title><rect x="1156.4" y="803.0" width="33.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1159.4" y="814.0">st..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (238 samples, 2.85%)</title><rect x="1156.4" y="787.0" width="33.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1159.4" y="798.0">th..</text>
</g>
<g>
<title>Thread::call_run() (238 samples, 2.85%)</title><rect x="1156.4" y="771.0" width="33.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.4" y="782.0">Th..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.02%)</title><rect x="1156.4" y="755.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1159.4" y="766.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.02%)</title><rect x="1156.4" y="739.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1159.4" y="750.0"></text>
</g>
<g>
<title>GangWorker::loop() (63 samples, 0.75%)</title><rect x="1156.7" y="755.0" width="8.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1159.7" y="766.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (62 samples, 0.74%)</title><rect x="1156.7" y="739.0" width="8.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.7" y="750.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (57 samples, 0.68%)</title><rect x="1156.7" y="723.0" width="8.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.7" y="734.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (52 samples, 0.62%)</title><rect x="1157.1" y="707.0" width="7.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1160.1" y="718.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (30 samples, 0.36%)</title><rect x="1159.9" y="691.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.9" y="702.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.02%)</title><rect x="1162.6" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1165.6" y="686.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.02%)</title><rect x="1162.6" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1165.6" y="670.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.02%)</title><rect x="1162.6" y="643.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1165.6" y="654.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.02%)</title><rect x="1162.6" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1165.6" y="638.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.02%)</title><rect x="1162.6" y="611.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1165.6" y="622.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (9 samples, 0.11%)</title><rect x="1162.9" y="675.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.9" y="686.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.02%)</title><rect x="1164.4" y="707.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1167.4" y="718.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.02%)</title><rect x="1164.7" y="723.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1167.7" y="734.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.02%)</title><rect x="1164.7" y="707.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.7" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.02%)</title><rect x="1164.7" y="691.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1167.7" y="702.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.02%)</title><rect x="1164.7" y="675.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.7" y="686.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.02%)</title><rect x="1164.7" y="659.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1167.7" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.02%)</title><rect x="1164.7" y="643.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1167.7" y="654.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.04%)</title><rect x="1165.0" y="723.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.0" y="734.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.02%)</title><rect x="1165.0" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.0" y="718.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.02%)</title><rect x="1165.0" y="691.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1168.0" y="702.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.02%)</title><rect x="1165.0" y="675.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1168.0" y="686.0"></text>
</g>
<g>
<title>JavaThread::run() (168 samples, 2.01%)</title><rect x="1165.6" y="755.0" width="23.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.6" y="766.0">J..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (168 samples, 2.01%)</title><rect x="1165.6" y="739.0" width="23.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.6" y="750.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (165 samples, 1.98%)</title><rect x="1165.6" y="723.0" width="23.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.6" y="734.0">C..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (165 samples, 1.98%)</title><rect x="1165.6" y="707.0" width="23.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.6" y="718.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (150 samples, 1.80%)</title><rect x="1165.6" y="691.0" width="21.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.6" y="702.0">C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (150 samples, 1.80%)</title><rect x="1165.6" y="675.0" width="21.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.6" y="686.0">C..</text>
</g>
<g>
<title>Compile::Code_Gen() (71 samples, 0.85%)</title><rect x="1165.7" y="659.0" width="10.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.7" y="670.0"></text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.02%)</title><rect x="1165.7" y="643.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.7" y="654.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (2 samples, 0.02%)</title><rect x="1165.7" y="627.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.7" y="638.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (2 samples, 0.02%)</title><rect x="1166.0" y="643.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.0" y="654.0"></text>
</g>
<g>
<title>Matcher::match() (6 samples, 0.07%)</title><rect x="1166.3" y="643.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.3" y="654.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (5 samples, 0.06%)</title><rect x="1166.4" y="627.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.4" y="638.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.02%)</title><rect x="1166.7" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.7" y="622.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.02%)</title><rect x="1166.7" y="595.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.7" y="606.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.02%)</title><rect x="1166.7" y="579.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.7" y="590.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (11 samples, 0.13%)</title><rect x="1167.1" y="643.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.1" y="654.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (11 samples, 0.13%)</title><rect x="1167.1" y="627.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.1" y="638.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (4 samples, 0.05%)</title><rect x="1167.1" y="611.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1170.1" y="622.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (3 samples, 0.04%)</title><rect x="1167.7" y="611.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1170.7" y="622.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (2 samples, 0.02%)</title><rect x="1167.8" y="595.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1170.8" y="606.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.02%)</title><rect x="1168.2" y="611.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.2" y="622.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (50 samples, 0.60%)</title><rect x="1168.7" y="643.0" width="7.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1171.7" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (5 samples, 0.06%)</title><rect x="1168.8" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.8" y="638.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (7 samples, 0.08%)</title><rect x="1169.5" y="627.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1172.5" y="638.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (8 samples, 0.10%)</title><rect x="1170.5" y="627.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.5" y="638.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (7 samples, 0.08%)</title><rect x="1171.8" y="627.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.8" y="638.0"></text>
</g>
<g>
<title>PhiNode::out_RegMask() const (2 samples, 0.02%)</title><rect x="1172.1" y="611.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.1" y="622.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.02%)</title><rect x="1172.3" y="611.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.3" y="622.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (2 samples, 0.02%)</title><rect x="1172.8" y="627.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.8" y="638.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (6 samples, 0.07%)</title><rect x="1173.2" y="627.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.2" y="638.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (3 samples, 0.04%)</title><rect x="1173.6" y="611.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.6" y="622.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (2 samples, 0.02%)</title><rect x="1174.2" y="627.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.2" y="638.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (2 samples, 0.02%)</title><rect x="1174.6" y="627.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.6" y="638.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.02%)</title><rect x="1174.6" y="611.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1177.6" y="622.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.02%)</title><rect x="1174.9" y="627.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.9" y="638.0"></text>
</g>
<g>
<title>__memset_sse2 (2 samples, 0.02%)</title><rect x="1175.5" y="627.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1178.5" y="638.0"></text>
</g>
<g>
<title>Compile::Optimize() (59 samples, 0.71%)</title><rect x="1175.7" y="659.0" width="8.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.7" y="670.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (3 samples, 0.04%)</title><rect x="1175.9" y="643.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.9" y="654.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (3 samples, 0.04%)</title><rect x="1175.9" y="627.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1178.9" y="638.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (3 samples, 0.04%)</title><rect x="1175.9" y="611.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.9" y="622.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.04%)</title><rect x="1175.9" y="595.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.9" y="606.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.02%)</title><rect x="1175.9" y="579.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.9" y="590.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.02%)</title><rect x="1175.9" y="563.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.9" y="574.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (39 samples, 0.47%)</title><rect x="1176.6" y="643.0" width="5.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.6" y="654.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.04%)</title><rect x="1177.3" y="627.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.3" y="638.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (27 samples, 0.32%)</title><rect x="1177.7" y="627.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.7" y="638.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (24 samples, 0.29%)</title><rect x="1178.1" y="611.0" width="3.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.1" y="622.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (23 samples, 0.28%)</title><rect x="1178.1" y="595.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.1" y="606.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (21 samples, 0.25%)</title><rect x="1178.4" y="579.0" width="3.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.4" y="590.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.02%)</title><rect x="1181.8" y="627.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.8" y="638.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (11 samples, 0.13%)</title><rect x="1182.1" y="643.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.1" y="654.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (10 samples, 0.12%)</title><rect x="1182.2" y="627.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.2" y="638.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (3 samples, 0.04%)</title><rect x="1182.9" y="611.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.9" y="622.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.02%)</title><rect x="1183.8" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.8" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (17 samples, 0.20%)</title><rect x="1184.2" y="659.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.2" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (17 samples, 0.20%)</title><rect x="1184.2" y="643.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (17 samples, 0.20%)</title><rect x="1184.2" y="627.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.2" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (17 samples, 0.20%)</title><rect x="1184.2" y="611.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.2" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (17 samples, 0.20%)</title><rect x="1184.2" y="595.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (17 samples, 0.20%)</title><rect x="1184.2" y="579.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.2" y="590.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.02%)</title><rect x="1184.2" y="563.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.2" y="574.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.02%)</title><rect x="1184.2" y="547.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.2" y="558.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.02%)</title><rect x="1184.2" y="531.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.2" y="542.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.02%)</title><rect x="1184.2" y="515.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.2" y="526.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.02%)</title><rect x="1184.2" y="499.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.2" y="510.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.02%)</title><rect x="1184.2" y="483.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.2" y="494.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.02%)</title><rect x="1184.2" y="467.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.2" y="478.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.02%)</title><rect x="1184.2" y="451.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.2" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.12%)</title><rect x="1184.6" y="563.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.6" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.12%)</title><rect x="1184.6" y="547.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.6" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.12%)</title><rect x="1184.6" y="531.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.6" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.12%)</title><rect x="1184.6" y="515.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.6" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.12%)</title><rect x="1184.6" y="499.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.6" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.12%)</title><rect x="1184.6" y="483.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.6" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.08%)</title><rect x="1184.6" y="467.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.6" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.08%)</title><rect x="1184.6" y="451.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.6" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.08%)</title><rect x="1184.6" y="435.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.6" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.08%)</title><rect x="1184.6" y="419.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.6" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.08%)</title><rect x="1184.6" y="403.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.6" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.07%)</title><rect x="1184.6" y="387.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.6" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1184.6" y="371.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.6" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.05%)</title><rect x="1184.6" y="355.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.6" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.05%)</title><rect x="1184.6" y="339.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.6" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.05%)</title><rect x="1184.6" y="323.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.6" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.05%)</title><rect x="1184.6" y="307.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.6" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1184.6" y="291.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.6" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1184.6" y="275.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.6" y="286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1184.6" y="259.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.6" y="270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1184.6" y="243.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.6" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1184.6" y="227.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.6" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1184.6" y="211.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.6" y="222.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1184.6" y="195.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.6" y="206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1184.8" y="179.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.8" y="190.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1184.8" y="163.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.8" y="174.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1184.8" y="147.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.8" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1184.8" y="131.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.8" y="142.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1184.8" y="115.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.8" y="126.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1185.2" y="371.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.2" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1185.2" y="355.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.2" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1185.2" y="339.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.2" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1185.2" y="323.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.2" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1185.2" y="307.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.2" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1185.2" y="291.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.2" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1185.2" y="275.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.2" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1185.2" y="259.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.2" y="270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1185.2" y="243.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.2" y="254.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1185.2" y="227.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.2" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1185.2" y="211.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.2" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1185.2" y="195.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.2" y="206.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1185.2" y="179.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.2" y="190.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1185.6" y="467.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.6" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1185.6" y="451.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.6" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1185.6" y="435.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.6" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1185.6" y="419.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.6" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1185.6" y="403.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.6" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1185.8" y="387.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.8" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1185.8" y="371.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.8" y="382.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1186.0" y="563.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.0" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1186.0" y="547.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.0" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1186.0" y="531.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.0" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1186.0" y="515.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.0" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1186.0" y="499.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.0" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1186.0" y="483.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.0" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1186.0" y="467.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.0" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1186.2" y="451.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.2" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1186.2" y="435.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.2" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1186.2" y="419.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.2" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1186.2" y="403.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.2" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1186.2" y="387.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.2" y="398.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (14 samples, 0.17%)</title><rect x="1186.8" y="691.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.8" y="702.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (14 samples, 0.17%)</title><rect x="1186.8" y="675.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.8" y="686.0"></text>
</g>
<g>
<title>Compilation::compile_method() (14 samples, 0.17%)</title><rect x="1186.8" y="659.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.8" y="670.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (13 samples, 0.16%)</title><rect x="1186.8" y="643.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.8" y="654.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (4 samples, 0.05%)</title><rect x="1186.8" y="627.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.8" y="638.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (3 samples, 0.04%)</title><rect x="1186.8" y="611.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.8" y="622.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (3 samples, 0.04%)</title><rect x="1186.8" y="595.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.8" y="606.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (3 samples, 0.04%)</title><rect x="1186.8" y="579.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.8" y="590.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.02%)</title><rect x="1186.9" y="563.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.9" y="574.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.02%)</title><rect x="1186.9" y="547.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.9" y="558.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (2 samples, 0.02%)</title><rect x="1186.9" y="531.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.9" y="542.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (8 samples, 0.10%)</title><rect x="1187.5" y="627.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.5" y="638.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (3 samples, 0.04%)</title><rect x="1187.5" y="611.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.5" y="622.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (2 samples, 0.02%)</title><rect x="1187.6" y="595.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.6" y="606.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (5 samples, 0.06%)</title><rect x="1187.9" y="611.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.9" y="622.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (2 samples, 0.02%)</title><rect x="1188.0" y="595.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.0" y="606.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (2 samples, 0.02%)</title><rect x="1188.3" y="595.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.3" y="606.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (3 samples, 0.04%)</title><rect x="1188.9" y="723.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.9" y="734.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (3 samples, 0.04%)</title><rect x="1188.9" y="707.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.9" y="718.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (3 samples, 0.04%)</title><rect x="1188.9" y="691.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.9" y="702.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.02%)</title><rect x="1189.3" y="755.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.3" y="766.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.02%)</title><rect x="1189.3" y="739.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.3" y="750.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.04%)</title><rect x="1189.6" y="755.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.6" y="766.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.02%)</title><rect x="1189.7" y="739.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.7" y="750.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.02%)</title><rect x="1189.7" y="723.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.7" y="734.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.02%)</title><rect x="1189.7" y="707.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.7" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.02%)</title><rect x="1189.7" y="691.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1192.7" y="702.0"></text>
</g>
</g>
</svg>
