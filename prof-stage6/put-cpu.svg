<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1173"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1173"> </text>
<g id="frames">
<g>
<title>all (8,240 samples, 100.00%)</title><rect x="10.0" y="1139.0" width="1180.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="13.0" y="1150.0">all</text>
</g>
<g>
<title>Klass::class_loader() const (3 samples, 0.04%)</title><rect x="10.1" y="1123.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.1" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::multianewarray2_C(Klass*, int, int, JavaThread*) (33 samples, 0.40%)</title><rect x="10.7" y="1123.0" width="4.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.7" y="1134.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (3 samples, 0.04%)</title><rect x="11.0" y="1107.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.0" y="1118.0"></text>
</g>
<g>
<title>Klass::class_loader() const (2 samples, 0.02%)</title><rect x="11.4" y="1107.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.4" y="1118.0"></text>
</g>
<g>
<title>ObjArrayKlass::multi_allocate(int, int*, Thread*) (26 samples, 0.32%)</title><rect x="11.7" y="1107.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.7" y="1118.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (2 samples, 0.02%)</title><rect x="12.0" y="1091.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="15.0" y="1102.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (9 samples, 0.11%)</title><rect x="12.4" y="1091.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.4" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.07%)</title><rect x="12.7" y="1075.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="15.7" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.06%)</title><rect x="12.7" y="1059.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.7" y="1070.0"></text>
</g>
<g>
<title>__memset_sse2 (3 samples, 0.04%)</title><rect x="13.0" y="1043.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="16.0" y="1054.0"></text>
</g>
<g>
<title>ObjArrayKlass::multi_allocate(int, int*, Thread*) (12 samples, 0.15%)</title><rect x="13.7" y="1091.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.7" y="1102.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (9 samples, 0.11%)</title><rect x="14.2" y="1075.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="17.2" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.05%)</title><rect x="14.9" y="1059.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="17.9" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="15.2" y="1043.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="18.2" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.06%)</title><rect x="15.4" y="1123.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="18.4" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (3 samples, 0.04%)</title><rect x="15.4" y="1107.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="18.4" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.04%)</title><rect x="15.4" y="1091.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="18.4" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="15.4" y="1075.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="18.4" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.02%)</title><rect x="15.4" y="1059.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="18.4" y="1070.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.02%)</title><rect x="15.9" y="1107.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="18.9" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.02%)</title><rect x="15.9" y="1091.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="18.9" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.02%)</title><rect x="15.9" y="1075.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="18.9" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="16.2" y="1123.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="19.2" y="1134.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.05%)</title><rect x="16.2" y="1107.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="19.2" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.04%)</title><rect x="16.3" y="1091.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="19.3" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (25 samples, 0.30%)</title><rect x="16.7" y="1123.0" width="3.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="19.7" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (21 samples, 0.25%)</title><rect x="17.2" y="1107.0" width="3.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="20.2" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (20 samples, 0.24%)</title><rect x="17.3" y="1091.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.3" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (18 samples, 0.22%)</title><rect x="17.3" y="1075.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="20.3" y="1086.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (3 samples, 0.04%)</title><rect x="17.7" y="1059.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.7" y="1070.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (2 samples, 0.02%)</title><rect x="18.2" y="1059.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.2" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (8 samples, 0.10%)</title><rect x="18.4" y="1059.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="21.4" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.02%)</title><rect x="18.6" y="1043.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.6" y="1054.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.02%)</title><rect x="18.9" y="1043.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="21.9" y="1054.0"></text>
</g>
<g>
<title>__memset_sse2 (2 samples, 0.02%)</title><rect x="19.3" y="1043.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="22.3" y="1054.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="19.9" y="1075.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="22.9" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (74 samples, 0.90%)</title><rect x="20.5" y="1123.0" width="10.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="23.5" y="1134.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (72 samples, 0.87%)</title><rect x="20.7" y="1107.0" width="10.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="23.7" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.02%)</title><rect x="21.6" y="1091.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="24.6" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.10%)</title><rect x="21.9" y="1091.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="24.9" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (5 samples, 0.06%)</title><rect x="22.2" y="1075.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="25.2" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (53 samples, 0.64%)</title><rect x="23.0" y="1091.0" width="7.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="26.0" y="1102.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.02%)</title><rect x="24.2" y="1075.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="27.2" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (35 samples, 0.42%)</title><rect x="24.5" y="1075.0" width="5.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="27.5" y="1086.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.06%)</title><rect x="25.3" y="1059.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="28.3" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (13 samples, 0.16%)</title><rect x="26.0" y="1059.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="29.0" y="1070.0"></text>
</g>
<g>
<title>system_call_fastpath (9 samples, 0.11%)</title><rect x="26.6" y="1043.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="29.6" y="1054.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.11%)</title><rect x="26.6" y="1027.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="29.6" y="1038.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.10%)</title><rect x="26.8" y="1011.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="29.8" y="1022.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.08%)</title><rect x="26.8" y="995.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="29.8" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.05%)</title><rect x="26.8" y="979.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="29.8" y="990.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.02%)</title><rect x="27.0" y="963.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="30.0" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.02%)</title><rect x="27.0" y="947.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="30.0" y="958.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (5 samples, 0.06%)</title><rect x="28.3" y="1059.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="31.3" y="1070.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.04%)</title><rect x="28.6" y="1043.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="31.6" y="1054.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.04%)</title><rect x="29.0" y="1059.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="32.0" y="1070.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="29.5" y="1075.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="32.5" y="1086.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.05%)</title><rect x="30.0" y="1075.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="33.0" y="1086.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.04%)</title><rect x="30.6" y="1091.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="33.6" y="1102.0"></text>
</g>
<g>
<title>[not_walkable] (2 samples, 0.02%)</title><rect x="31.1" y="1123.0" width="0.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="34.1" y="1134.0"></text>
</g>
<g>
<title>[not_walkable_Java] (8 samples, 0.10%)</title><rect x="31.3" y="1123.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="34.3" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (3 samples, 0.04%)</title><rect x="31.9" y="1107.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="34.9" y="1118.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.02%)</title><rect x="31.9" y="1091.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="34.9" y="1102.0"></text>
</g>
<g>
<title>[unknown_Java] (135 samples, 1.64%)</title><rect x="32.6" y="1123.0" width="19.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="35.6" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (2 samples, 0.02%)</title><rect x="51.1" y="1107.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="54.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="51.4" y="1107.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="54.4" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.02%)</title><rect x="51.7" y="1091.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="54.7" y="1102.0"></text>
</g>
<g>
<title>__GI_munmap (3 samples, 0.04%)</title><rect x="52.0" y="1123.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="55.0" y="1134.0"></text>
</g>
<g>
<title>system_call_fastpath (3 samples, 0.04%)</title><rect x="52.0" y="1107.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="55.0" y="1118.0"></text>
</g>
<g>
<title>sys_munmap (3 samples, 0.04%)</title><rect x="52.0" y="1091.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="55.0" y="1102.0"></text>
</g>
<g>
<title>vm_munmap (3 samples, 0.04%)</title><rect x="52.0" y="1075.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="55.0" y="1086.0"></text>
</g>
<g>
<title>do_munmap (3 samples, 0.04%)</title><rect x="52.0" y="1059.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="55.0" y="1070.0"></text>
</g>
<g>
<title>unmap_region (3 samples, 0.04%)</title><rect x="52.0" y="1043.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="55.0" y="1054.0"></text>
</g>
<g>
<title>tlb_finish_mmu (3 samples, 0.04%)</title><rect x="52.0" y="1027.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="55.0" y="1038.0"></text>
</g>
<g>
<title>arch_tlb_finish_mmu (3 samples, 0.04%)</title><rect x="52.0" y="1011.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="55.0" y="1022.0"></text>
</g>
<g>
<title>tlb_flush_mmu_tlbonly (3 samples, 0.04%)</title><rect x="52.0" y="995.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="55.0" y="1006.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (3 samples, 0.04%)</title><rect x="52.0" y="979.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="55.0" y="990.0"></text>
</g>
<g>
<title>native_flush_tlb_others (3 samples, 0.04%)</title><rect x="52.0" y="963.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="55.0" y="974.0"></text>
</g>
<g>
<title>smp_call_function_many (3 samples, 0.04%)</title><rect x="52.0" y="947.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="55.0" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.02%)</title><rect x="52.7" y="1123.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="55.7" y="1134.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.02%)</title><rect x="52.7" y="1107.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="55.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,906 samples, 59.54%)</title><rect x="53.1" y="1123.0" width="702.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.1" y="1134.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,906 samples, 59.54%)</title><rect x="53.1" y="1107.0" width="702.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.1" y="1118.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,906 samples, 59.54%)</title><rect x="53.1" y="1091.0" width="702.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.1" y="1102.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="54.2" y="1075.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="57.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (810 samples, 9.83%)</title><rect x="54.8" y="1075.0" width="116.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.8" y="1086.0">java/util/conc..</text>
</g>
<g>
<title>itable stub (5 samples, 0.06%)</title><rect x="54.8" y="1059.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="57.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (803 samples, 9.75%)</title><rect x="55.5" y="1059.0" width="115.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.5" y="1070.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (803 samples, 9.75%)</title><rect x="55.5" y="1043.0" width="115.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.5" y="1054.0">java/util/conc..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$153/1249503175.apply (801 samples, 9.72%)</title><rect x="55.8" y="1027.0" width="114.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.8" y="1038.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (800 samples, 9.71%)</title><rect x="56.0" y="1011.0" width="114.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="59.0" y="1022.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (797 samples, 9.67%)</title><rect x="56.4" y="995.0" width="114.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.4" y="1006.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.02%)</title><rect x="56.8" y="979.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.02%)</title><rect x="56.8" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (589 samples, 7.15%)</title><rect x="57.1" y="979.0" width="84.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.1" y="990.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (589 samples, 7.15%)</title><rect x="57.1" y="963.0" width="84.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.1" y="974.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (589 samples, 7.15%)</title><rect x="57.1" y="947.0" width="84.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.1" y="958.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.08%)</title><rect x="57.3" y="931.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.3" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.08%)</title><rect x="57.3" y="915.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/1850087782.get$Lambda (3 samples, 0.04%)</title><rect x="57.3" y="899.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$170/678742413.get$Lambda (2 samples, 0.02%)</title><rect x="57.7" y="899.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$245/351709695.get$Lambda (2 samples, 0.02%)</title><rect x="58.0" y="899.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (320 samples, 3.88%)</title><rect x="58.3" y="931.0" width="45.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.3" y="942.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (320 samples, 3.88%)</title><rect x="58.3" y="915.0" width="45.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.3" y="926.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (319 samples, 3.87%)</title><rect x="58.3" y="899.0" width="45.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.3" y="910.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.05%)</title><rect x="58.4" y="883.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.05%)</title><rect x="58.4" y="867.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="61.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (4 samples, 0.05%)</title><rect x="58.4" y="851.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (4 samples, 0.05%)</title><rect x="58.4" y="835.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="61.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.05%)</title><rect x="58.4" y="819.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="61.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.05%)</title><rect x="58.4" y="803.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="61.4" y="814.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="58.7" y="787.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="61.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$245/351709695.apply (314 samples, 3.81%)</title><rect x="59.0" y="883.0" width="44.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.0" y="894.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (313 samples, 3.80%)</title><rect x="59.1" y="867.0" width="44.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.1" y="878.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (313 samples, 3.80%)</title><rect x="59.1" y="851.0" width="44.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.1" y="862.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$170/678742413.apply (313 samples, 3.80%)</title><rect x="59.1" y="835.0" width="44.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.1" y="846.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (313 samples, 3.80%)</title><rect x="59.1" y="819.0" width="44.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.1" y="830.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (312 samples, 3.79%)</title><rect x="59.3" y="803.0" width="44.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.3" y="814.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.02%)</title><rect x="60.3" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.02%)</title><rect x="60.3" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (275 samples, 3.34%)</title><rect x="60.6" y="787.0" width="39.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.6" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (274 samples, 3.33%)</title><rect x="60.7" y="771.0" width="39.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.7" y="782.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$281/1002612192.apply (268 samples, 3.25%)</title><rect x="61.3" y="755.0" width="38.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.3" y="766.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (264 samples, 3.20%)</title><rect x="61.8" y="739.0" width="37.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.8" y="750.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.08%)</title><rect x="62.3" y="723.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.08%)</title><rect x="62.3" y="707.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$303/245067707.get$Lambda (7 samples, 0.08%)</title><rect x="62.3" y="691.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$303/245067707.&lt;init&gt; (4 samples, 0.05%)</title><rect x="62.7" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (117 samples, 1.42%)</title><rect x="63.6" y="723.0" width="16.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (116 samples, 1.41%)</title><rect x="63.7" y="707.0" width="16.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (13 samples, 0.16%)</title><rect x="63.7" y="691.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (13 samples, 0.16%)</title><rect x="63.7" y="675.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (13 samples, 0.16%)</title><rect x="63.7" y="659.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (9 samples, 0.11%)</title><rect x="64.1" y="643.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (9 samples, 0.11%)</title><rect x="64.1" y="627.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="64.7" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="67.7" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.02%)</title><rect x="64.8" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.8" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.02%)</title><rect x="64.8" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.8" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.02%)</title><rect x="64.8" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="67.8" y="574.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="64.8" y="547.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="67.8" y="558.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.02%)</title><rect x="64.8" y="531.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="67.8" y="542.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.02%)</title><rect x="64.8" y="515.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="67.8" y="526.0"></text>
</g>
<g>
<title>system_call_fastpath (2 samples, 0.02%)</title><rect x="64.8" y="499.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="67.8" y="510.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.02%)</title><rect x="64.8" y="483.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="67.8" y="494.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="64.8" y="467.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="67.8" y="478.0"></text>
</g>
<g>
<title>futex_wake_op (2 samples, 0.02%)</title><rect x="64.8" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="67.8" y="462.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.02%)</title><rect x="64.8" y="435.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="67.8" y="446.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.02%)</title><rect x="64.8" y="419.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="67.8" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.02%)</title><rect x="64.8" y="403.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="67.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.02%)</title><rect x="65.1" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.02%)</title><rect x="65.1" y="595.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (103 samples, 1.25%)</title><rect x="65.6" y="691.0" width="14.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (103 samples, 1.25%)</title><rect x="65.6" y="675.0" width="14.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.6" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.15%)</title><rect x="65.7" y="659.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="68.7" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (11 samples, 0.13%)</title><rect x="65.8" y="643.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="68.8" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.11%)</title><rect x="66.0" y="627.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="69.0" y="638.0"></text>
</g>
<g>
<title>system_call_fastpath (9 samples, 0.11%)</title><rect x="66.0" y="611.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="69.0" y="622.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.11%)</title><rect x="66.0" y="595.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="69.0" y="606.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.11%)</title><rect x="66.0" y="579.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="69.0" y="590.0"></text>
</g>
<g>
<title>futex_wake_op (7 samples, 0.08%)</title><rect x="66.1" y="563.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="69.1" y="574.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.08%)</title><rect x="66.1" y="547.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="69.1" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.08%)</title><rect x="66.1" y="531.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="69.1" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.08%)</title><rect x="66.1" y="515.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="69.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (82 samples, 1.00%)</title><rect x="67.4" y="659.0" width="11.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (80 samples, 0.97%)</title><rect x="67.4" y="643.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="70.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (79 samples, 0.96%)</title><rect x="67.6" y="627.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.6" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (76 samples, 0.92%)</title><rect x="68.0" y="611.0" width="10.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (76 samples, 0.92%)</title><rect x="68.0" y="595.0" width="10.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.0" y="606.0"></text>
</g>
<g>
<title>__write (69 samples, 0.84%)</title><rect x="68.9" y="579.0" width="9.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="71.9" y="590.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.02%)</title><rect x="69.9" y="563.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="72.9" y="574.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.02%)</title><rect x="69.9" y="547.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="72.9" y="558.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.04%)</title><rect x="70.3" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="73.3" y="574.0"></text>
</g>
<g>
<title>system_call_fastpath (56 samples, 0.68%)</title><rect x="70.7" y="563.0" width="8.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="73.7" y="574.0"></text>
</g>
<g>
<title>sys_write (56 samples, 0.68%)</title><rect x="70.7" y="547.0" width="8.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="73.7" y="558.0"></text>
</g>
<g>
<title>fget_light (2 samples, 0.02%)</title><rect x="70.7" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="73.7" y="542.0"></text>
</g>
<g>
<title>vfs_write (54 samples, 0.66%)</title><rect x="71.0" y="531.0" width="7.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="74.0" y="542.0"></text>
</g>
<g>
<title>do_sync_write (42 samples, 0.51%)</title><rect x="71.1" y="515.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="74.1" y="526.0"></text>
</g>
<g>
<title>pipe_write (42 samples, 0.51%)</title><rect x="71.1" y="499.0" width="6.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="74.1" y="510.0"></text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.02%)</title><rect x="71.1" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="74.1" y="494.0"></text>
</g>
<g>
<title>__wake_up_sync_key (36 samples, 0.44%)</title><rect x="71.4" y="483.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="74.4" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (36 samples, 0.44%)</title><rect x="71.4" y="467.0" width="5.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="74.4" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 0.44%)</title><rect x="71.4" y="451.0" width="5.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="74.4" y="462.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.02%)</title><rect x="76.7" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="79.7" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (7 samples, 0.08%)</title><rect x="77.4" y="515.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="80.4" y="526.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.08%)</title><rect x="77.4" y="499.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="80.4" y="510.0"></text>
</g>
<g>
<title>selinux_file_permission (6 samples, 0.07%)</title><rect x="77.6" y="483.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="80.6" y="494.0"></text>
</g>
<g>
<title>file_has_perm (2 samples, 0.02%)</title><rect x="78.2" y="467.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="81.2" y="478.0"></text>
</g>
<g>
<title>inode_has_perm.isra.34.constprop.71 (2 samples, 0.02%)</title><rect x="78.2" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="81.2" y="462.0"></text>
</g>
<g>
<title>avc_has_perm_flags (2 samples, 0.02%)</title><rect x="78.2" y="435.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="81.2" y="446.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.02%)</title><rect x="78.5" y="515.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="81.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (2 samples, 0.02%)</title><rect x="78.9" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (2 samples, 0.02%)</title><rect x="78.9" y="627.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (5 samples, 0.06%)</title><rect x="79.2" y="659.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (3 samples, 0.04%)</title><rect x="79.9" y="659.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (135 samples, 1.64%)</title><rect x="80.3" y="723.0" width="19.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.06%)</title><rect x="80.9" y="707.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.9" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.05%)</title><rect x="81.0" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.0" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.02%)</title><rect x="81.3" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (84 samples, 1.02%)</title><rect x="81.7" y="707.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (2 samples, 0.02%)</title><rect x="81.9" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.9" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.02%)</title><rect x="81.9" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.9" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.02%)</title><rect x="81.9" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.02%)</title><rect x="81.9" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="84.9" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.02%)</title><rect x="81.9" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="84.9" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.02%)</title><rect x="81.9" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (29 samples, 0.35%)</title><rect x="82.2" y="691.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.02%)</title><rect x="83.6" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.6" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.02%)</title><rect x="83.6" y="659.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="86.6" y="670.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.02%)</title><rect x="83.6" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="86.6" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.02%)</title><rect x="83.6" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.6" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="83.6" y="611.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="86.6" y="622.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$307/2143406581.test (13 samples, 0.16%)</title><rect x="84.0" y="675.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.0" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.02%)</title><rect x="84.3" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.3" y="670.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (9 samples, 0.11%)</title><rect x="84.6" y="659.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/2089016471.test (9 samples, 0.11%)</title><rect x="84.6" y="643.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (9 samples, 0.11%)</title><rect x="84.6" y="627.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.6" y="638.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$67/2082351774.test (9 samples, 0.11%)</title><rect x="84.6" y="611.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.6" y="622.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (9 samples, 0.11%)</title><rect x="84.6" y="595.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/961160488.test (9 samples, 0.11%)</title><rect x="84.6" y="579.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (9 samples, 0.11%)</title><rect x="84.6" y="563.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (8 samples, 0.10%)</title><rect x="84.6" y="547.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="87.6" y="558.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.10%)</title><rect x="84.6" y="531.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.6" y="542.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.02%)</title><rect x="84.6" y="515.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.6" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.07%)</title><rect x="84.9" y="515.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="87.9" y="526.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.02%)</title><rect x="85.3" y="499.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.3" y="510.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="86.0" y="675.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="89.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (6 samples, 0.07%)</title><rect x="86.3" y="691.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (6 samples, 0.07%)</title><rect x="86.3" y="675.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.07%)</title><rect x="86.3" y="659.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.07%)</title><rect x="86.3" y="643.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.3" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.07%)</title><rect x="86.3" y="627.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.3" y="638.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.04%)</title><rect x="86.5" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.5" y="622.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.04%)</title><rect x="86.5" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.5" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.04%)</title><rect x="86.5" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (46 samples, 0.56%)</title><rect x="87.2" y="691.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.2" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (46 samples, 0.56%)</title><rect x="87.2" y="675.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.2" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (46 samples, 0.56%)</title><rect x="87.2" y="659.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.2" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (41 samples, 0.50%)</title><rect x="87.9" y="643.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.9" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (37 samples, 0.45%)</title><rect x="88.2" y="627.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.2" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (37 samples, 0.45%)</title><rect x="88.2" y="611.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.2" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (20 samples, 0.24%)</title><rect x="89.0" y="595.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="92.0" y="606.0"></text>
</g>
<g>
<title>itable stub (9 samples, 0.11%)</title><rect x="89.3" y="579.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="92.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (7 samples, 0.08%)</title><rect x="90.6" y="579.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (7 samples, 0.08%)</title><rect x="90.6" y="563.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/396883763.test (2 samples, 0.02%)</title><rect x="91.6" y="579.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.6" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.12%)</title><rect x="91.9" y="595.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="92.5" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="92.5" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="95.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="92.5" y="547.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="95.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.04%)</title><rect x="92.9" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.9" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.02%)</title><rect x="93.5" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.5" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (2 samples, 0.02%)</title><rect x="93.5" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (2 samples, 0.02%)</title><rect x="93.8" y="707.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (10 samples, 0.12%)</title><rect x="94.1" y="707.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (10 samples, 0.12%)</title><rect x="94.1" y="691.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.10%)</title><rect x="94.1" y="675.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="97.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (8 samples, 0.10%)</title><rect x="94.1" y="659.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1667148529.invoke (8 samples, 0.10%)</title><rect x="94.1" y="643.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.08%)</title><rect x="94.1" y="627.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.02%)</title><rect x="94.1" y="611.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (5 samples, 0.06%)</title><rect x="94.3" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.3" y="622.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.06%)</title><rect x="94.3" y="595.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="97.3" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="94.8" y="579.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="97.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (2 samples, 0.02%)</title><rect x="95.2" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="95.2" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="98.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (29 samples, 0.35%)</title><rect x="95.5" y="707.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="98.5" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.04%)</title><rect x="95.6" y="691.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.6" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.11%)</title><rect x="96.1" y="691.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.1" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.06%)</title><rect x="96.1" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.1" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="96.9" y="675.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="99.9" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (15 samples, 0.18%)</title><rect x="97.4" y="691.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.05%)</title><rect x="98.6" y="675.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.05%)</title><rect x="98.6" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.6" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.05%)</title><rect x="98.6" y="643.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.02%)</title><rect x="99.2" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="99.6" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.02%)</title><rect x="99.6" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (28 samples, 0.34%)</title><rect x="99.9" y="787.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (18 samples, 0.22%)</title><rect x="100.4" y="771.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.22%)</title><rect x="100.4" y="755.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="103.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.22%)</title><rect x="100.4" y="739.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="103.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (16 samples, 0.19%)</title><rect x="100.6" y="723.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="103.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (15 samples, 0.18%)</title><rect x="100.8" y="707.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (12 samples, 0.15%)</title><rect x="100.8" y="691.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$236/621309814.run (11 samples, 0.13%)</title><rect x="100.9" y="675.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (11 samples, 0.13%)</title><rect x="100.9" y="659.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (8 samples, 0.10%)</title><rect x="100.9" y="643.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="103.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (3 samples, 0.04%)</title><rect x="101.1" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.04%)</title><rect x="101.1" y="611.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (4 samples, 0.05%)</title><rect x="101.5" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.02%)</title><rect x="101.8" y="611.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (3 samples, 0.04%)</title><rect x="102.1" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2 samples, 0.02%)</title><rect x="102.1" y="627.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (3 samples, 0.04%)</title><rect x="102.5" y="691.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="105.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (6 samples, 0.07%)</title><rect x="102.9" y="771.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.9" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (2 samples, 0.02%)</title><rect x="103.5" y="755.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.5" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractMap.&lt;init&gt; (2 samples, 0.02%)</title><rect x="103.5" y="739.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.02%)</title><rect x="103.5" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.07%)</title><rect x="104.1" y="931.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.05%)</title><rect x="104.2" y="915.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="107.2" y="926.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$34/1702660825.apply (3 samples, 0.04%)</title><rect x="104.4" y="899.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (255 samples, 3.09%)</title><rect x="104.9" y="931.0" width="36.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.9" y="942.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.06%)</title><rect x="105.1" y="915.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.06%)</title><rect x="105.1" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$243/1828731342.apply (5 samples, 0.06%)</title><rect x="105.1" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="108.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (3 samples, 0.04%)</title><rect x="105.4" y="867.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="105.8" y="915.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.04%)</title><rect x="105.8" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.8" y="910.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="105.8" y="883.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="108.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (246 samples, 2.99%)</title><rect x="106.2" y="915.0" width="35.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.2" y="926.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (219 samples, 2.66%)</title><rect x="106.2" y="899.0" width="31.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="109.2" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (219 samples, 2.66%)</title><rect x="106.2" y="883.0" width="31.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.2" y="894.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (219 samples, 2.66%)</title><rect x="106.2" y="867.0" width="31.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.2" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.04%)</title><rect x="106.5" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="109.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.04%)</title><rect x="106.5" y="835.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="109.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3 samples, 0.04%)</title><rect x="106.5" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="109.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3 samples, 0.04%)</title><rect x="106.5" y="803.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3 samples, 0.04%)</title><rect x="106.5" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.04%)</title><rect x="106.5" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="109.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$176/978711598.apply (2 samples, 0.02%)</title><rect x="106.7" y="755.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$176/978711598.apply (214 samples, 2.60%)</title><rect x="106.9" y="851.0" width="30.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="109.9" y="862.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (213 samples, 2.58%)</title><rect x="107.1" y="835.0" width="30.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.1" y="846.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (213 samples, 2.58%)</title><rect x="107.1" y="819.0" width="30.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.1" y="830.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (86 samples, 1.04%)</title><rect x="107.4" y="803.0" width="12.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (86 samples, 1.04%)</title><rect x="107.4" y="787.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (86 samples, 1.04%)</title><rect x="107.4" y="771.0" width="12.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$239/1587750339.apply (85 samples, 1.03%)</title><rect x="107.4" y="755.0" width="12.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (85 samples, 1.03%)</title><rect x="107.4" y="739.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (85 samples, 1.03%)</title><rect x="107.4" y="723.0" width="12.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="110.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (85 samples, 1.03%)</title><rect x="107.4" y="707.0" width="12.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (68 samples, 0.83%)</title><rect x="107.4" y="691.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.4" y="702.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (7 samples, 0.08%)</title><rect x="107.4" y="675.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.4" y="686.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (6 samples, 0.07%)</title><rect x="107.5" y="659.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.5" y="670.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (6 samples, 0.07%)</title><rect x="107.5" y="643.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.5" y="654.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeBlock (4 samples, 0.05%)</title><rect x="107.8" y="627.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (59 samples, 0.72%)</title><rect x="108.4" y="675.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (59 samples, 0.72%)</title><rect x="108.4" y="659.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (59 samples, 0.72%)</title><rect x="108.4" y="643.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.4" y="654.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (58 samples, 0.70%)</title><rect x="108.5" y="627.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.5" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.02%)</title><rect x="108.5" y="611.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="111.5" y="622.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (43 samples, 0.52%)</title><rect x="108.8" y="611.0" width="6.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="111.8" y="622.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.06%)</title><rect x="109.2" y="595.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="112.2" y="606.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.04%)</title><rect x="110.0" y="595.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="113.0" y="606.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (8 samples, 0.10%)</title><rect x="111.1" y="595.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="114.1" y="606.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (7 samples, 0.08%)</title><rect x="111.2" y="579.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="114.2" y="590.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.06%)</title><rect x="111.4" y="563.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="114.4" y="574.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.04%)</title><rect x="111.7" y="547.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="114.7" y="558.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (19 samples, 0.23%)</title><rect x="112.2" y="595.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="115.2" y="606.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.04%)</title><rect x="113.0" y="579.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="116.0" y="590.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.02%)</title><rect x="113.1" y="563.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="116.1" y="574.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (4 samples, 0.05%)</title><rect x="113.4" y="579.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="116.4" y="590.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (7 samples, 0.08%)</title><rect x="114.0" y="579.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="117.0" y="590.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (7 samples, 0.08%)</title><rect x="114.0" y="563.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="117.0" y="574.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.06%)</title><rect x="114.3" y="547.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="117.3" y="558.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (5 samples, 0.06%)</title><rect x="114.3" y="531.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="117.3" y="542.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.04%)</title><rect x="115.0" y="611.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="118.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/1778629809.run (10 samples, 0.12%)</title><rect x="115.4" y="611.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (8 samples, 0.10%)</title><rect x="115.7" y="595.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="118.7" y="606.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (8 samples, 0.10%)</title><rect x="115.7" y="579.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.7" y="590.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (3 samples, 0.04%)</title><rect x="115.7" y="563.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.7" y="574.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.04%)</title><rect x="115.7" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.7" y="558.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.04%)</title><rect x="115.7" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.04%)</title><rect x="115.7" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.02%)</title><rect x="115.8" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.8" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.02%)</title><rect x="115.8" y="483.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.8" y="494.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.06%)</title><rect x="116.1" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.06%)</title><rect x="116.1" y="547.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.02%)</title><rect x="116.5" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="119.5" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.02%)</title><rect x="116.5" y="515.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (2 samples, 0.02%)</title><rect x="116.8" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="119.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (17 samples, 0.21%)</title><rect x="117.1" y="691.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.1" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.06%)</title><rect x="117.1" y="675.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.1" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.05%)</title><rect x="117.3" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="117.3" y="643.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.3" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="117.3" y="627.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.3" y="638.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (2 samples, 0.02%)</title><rect x="117.5" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.5" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (12 samples, 0.15%)</title><rect x="117.8" y="675.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.07%)</title><rect x="118.3" y="659.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.07%)</title><rect x="118.3" y="643.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.3" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.07%)</title><rect x="118.3" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.3" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.04%)</title><rect x="119.1" y="659.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (125 samples, 1.52%)</title><rect x="119.7" y="803.0" width="17.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="122.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (124 samples, 1.50%)</title><rect x="119.8" y="787.0" width="17.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="120.8" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="120.8" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="123.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$178/315249821.get$Lambda (3 samples, 0.04%)</title><rect x="120.8" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$178/315249821.&lt;init&gt; (2 samples, 0.02%)</title><rect x="120.8" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="123.8" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.02%)</title><rect x="121.3" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.3" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.02%)</title><rect x="121.3" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (3 samples, 0.04%)</title><rect x="121.6" y="771.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (5 samples, 0.06%)</title><rect x="122.1" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2 samples, 0.02%)</title><rect x="122.3" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2 samples, 0.02%)</title><rect x="122.3" y="739.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.&lt;init&gt; (2 samples, 0.02%)</title><rect x="122.3" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.02%)</title><rect x="122.3" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.02%)</title><rect x="122.6" y="755.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.02%)</title><rect x="122.6" y="739.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.02%)</title><rect x="122.6" y="723.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.02%)</title><rect x="122.6" y="707.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (6 samples, 0.07%)</title><rect x="122.8" y="771.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (2 samples, 0.02%)</title><rect x="123.4" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (6 samples, 0.07%)</title><rect x="123.7" y="771.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (6 samples, 0.07%)</title><rect x="123.7" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (6 samples, 0.07%)</title><rect x="123.7" y="739.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="126.7" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.06%)</title><rect x="123.8" y="723.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="126.8" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.06%)</title><rect x="123.8" y="707.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (4 samples, 0.05%)</title><rect x="124.0" y="691.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="127.0" y="702.0"></text>
</g>
<g>
<title>java/util/Objects.equals (4 samples, 0.05%)</title><rect x="124.0" y="675.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.0" y="686.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (4 samples, 0.05%)</title><rect x="124.0" y="659.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.0" y="670.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (3 samples, 0.04%)</title><rect x="124.1" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.1" y="654.0"></text>
</g>
<g>
<title>java/net/Inet4Address.equals (2 samples, 0.02%)</title><rect x="124.3" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="127.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (89 samples, 1.08%)</title><rect x="124.6" y="771.0" width="12.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.6" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (89 samples, 1.08%)</title><rect x="124.6" y="755.0" width="12.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="127.6" y="766.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (60 samples, 0.73%)</title><rect x="124.7" y="739.0" width="8.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="127.7" y="750.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.02%)</title><rect x="125.9" y="723.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="128.9" y="734.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (11 samples, 0.13%)</title><rect x="126.4" y="723.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="129.4" y="734.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (2 samples, 0.02%)</title><rect x="126.6" y="707.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="129.6" y="718.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.06%)</title><rect x="127.0" y="707.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="130.0" y="718.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (4 samples, 0.05%)</title><rect x="127.1" y="691.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="130.1" y="702.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.04%)</title><rect x="128.3" y="723.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="131.3" y="734.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.02%)</title><rect x="128.7" y="723.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="131.7" y="734.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (2 samples, 0.02%)</title><rect x="129.0" y="723.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="132.0" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (2 samples, 0.02%)</title><rect x="129.3" y="723.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="132.3" y="734.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (16 samples, 0.19%)</title><rect x="129.6" y="723.0" width="2.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="132.6" y="734.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (13 samples, 0.16%)</title><rect x="129.7" y="707.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="132.7" y="718.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (8 samples, 0.10%)</title><rect x="129.7" y="691.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="132.7" y="702.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.04%)</title><rect x="130.4" y="675.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="133.4" y="686.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.05%)</title><rect x="130.9" y="691.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="133.9" y="702.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.02%)</title><rect x="131.6" y="707.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="134.6" y="718.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (10 samples, 0.12%)</title><rect x="131.9" y="723.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="134.9" y="734.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (7 samples, 0.08%)</title><rect x="132.0" y="707.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="135.0" y="718.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (5 samples, 0.06%)</title><rect x="132.3" y="691.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="135.3" y="702.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.02%)</title><rect x="133.0" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="136.0" y="718.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.02%)</title><rect x="133.0" y="691.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="136.0" y="702.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.02%)</title><rect x="133.0" y="675.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="136.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$184/548214908.run (25 samples, 0.30%)</title><rect x="133.7" y="739.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (24 samples, 0.29%)</title><rect x="133.9" y="723.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.9" y="734.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (24 samples, 0.29%)</title><rect x="133.9" y="707.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.9" y="718.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (23 samples, 0.28%)</title><rect x="133.9" y="691.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.9" y="702.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (23 samples, 0.28%)</title><rect x="133.9" y="675.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="136.9" y="686.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (18 samples, 0.22%)</title><rect x="134.6" y="659.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="137.6" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.02%)</title><rect x="134.6" y="643.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.6" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.02%)</title><rect x="134.6" y="627.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="137.6" y="638.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (2 samples, 0.02%)</title><rect x="134.6" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="137.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="134.9" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="137.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.02%)</title><rect x="134.9" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="137.9" y="638.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (14 samples, 0.17%)</title><rect x="135.2" y="643.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="138.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (13 samples, 0.16%)</title><rect x="135.3" y="627.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.3" y="638.0"></text>
</g>
<g>
<title>__clock_gettime (6 samples, 0.07%)</title><rect x="135.3" y="611.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="138.3" y="622.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="135.9" y="595.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="138.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (3 samples, 0.04%)</title><rect x="136.2" y="611.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="139.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (2 samples, 0.02%)</title><rect x="136.3" y="595.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="139.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.&lt;init&gt; (2 samples, 0.02%)</title><rect x="136.3" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.3" y="590.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (4 samples, 0.05%)</title><rect x="136.6" y="611.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="139.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.02%)</title><rect x="137.3" y="771.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="140.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.02%)</title><rect x="137.3" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.02%)</title><rect x="137.3" y="739.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.02%)</title><rect x="137.3" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.08%)</title><rect x="137.6" y="899.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.08%)</title><rect x="137.6" y="883.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.6" y="894.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.07%)</title><rect x="137.6" y="867.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="140.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (19 samples, 0.23%)</title><rect x="138.7" y="899.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="141.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.07%)</title><rect x="139.0" y="883.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (7 samples, 0.08%)</title><rect x="139.9" y="883.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.08%)</title><rect x="139.9" y="867.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.02%)</title><rect x="139.9" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="140.2" y="851.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="143.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="140.6" y="835.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="143.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.02%)</title><rect x="140.6" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.proxy (4 samples, 0.05%)</title><rect x="140.9" y="883.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="143.9" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="141.2" y="867.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="144.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (148 samples, 1.80%)</title><rect x="141.5" y="979.0" width="21.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.5" y="990.0">j..</text>
</g>
<g>
<title>java/util/TreeSet.add (21 samples, 0.25%)</title><rect x="141.7" y="963.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="144.7" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (7 samples, 0.08%)</title><rect x="141.7" y="947.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="144.7" y="958.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (7 samples, 0.08%)</title><rect x="141.7" y="931.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="144.7" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.07%)</title><rect x="141.9" y="915.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="144.9" y="926.0"></text>
</g>
<g>
<title>system_call_fastpath (6 samples, 0.07%)</title><rect x="141.9" y="899.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="144.9" y="910.0"></text>
</g>
<g>
<title>sys_futex (6 samples, 0.07%)</title><rect x="141.9" y="883.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="144.9" y="894.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.07%)</title><rect x="141.9" y="867.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="144.9" y="878.0"></text>
</g>
<g>
<title>futex_wake_op (6 samples, 0.07%)</title><rect x="141.9" y="851.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="144.9" y="862.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.06%)</title><rect x="142.0" y="835.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="145.0" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.06%)</title><rect x="142.0" y="819.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="145.0" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.06%)</title><rect x="142.0" y="803.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="145.0" y="814.0"></text>
</g>
<g>
<title>__write (3 samples, 0.04%)</title><rect x="142.8" y="947.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="145.8" y="958.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.04%)</title><rect x="142.8" y="931.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="145.8" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.13%)</title><rect x="143.2" y="947.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="143.5" y="931.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="146.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="143.5" y="915.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="143.5" y="899.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.5" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.02%)</title><rect x="143.9" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (3 samples, 0.04%)</title><rect x="144.3" y="931.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (125 samples, 1.52%)</title><rect x="144.8" y="963.0" width="17.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.8" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (125 samples, 1.52%)</title><rect x="144.8" y="947.0" width="17.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.8" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (120 samples, 1.46%)</title><rect x="145.5" y="931.0" width="17.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.5" y="942.0"></text>
</g>
<g>
<title>__lll_unlock_wake (9 samples, 0.11%)</title><rect x="145.9" y="915.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="148.9" y="926.0"></text>
</g>
<g>
<title>system_call_after_swapgs (9 samples, 0.11%)</title><rect x="145.9" y="899.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="148.9" y="910.0"></text>
</g>
<g>
<title>__write (107 samples, 1.30%)</title><rect x="147.3" y="915.0" width="15.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="150.3" y="926.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.02%)</title><rect x="148.3" y="899.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="151.3" y="910.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.02%)</title><rect x="148.3" y="883.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="151.3" y="894.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.02%)</title><rect x="148.6" y="899.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="151.6" y="910.0"></text>
</g>
<g>
<title>system_call_fastpath (95 samples, 1.15%)</title><rect x="149.1" y="899.0" width="13.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="152.1" y="910.0"></text>
</g>
<g>
<title>sys_write (95 samples, 1.15%)</title><rect x="149.1" y="883.0" width="13.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="152.1" y="894.0"></text>
</g>
<g>
<title>fget_light (4 samples, 0.05%)</title><rect x="149.2" y="867.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="152.2" y="878.0"></text>
</g>
<g>
<title>vfs_write (89 samples, 1.08%)</title><rect x="149.9" y="867.0" width="12.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="152.9" y="878.0"></text>
</g>
<g>
<title>do_sync_write (77 samples, 0.93%)</title><rect x="150.2" y="851.0" width="11.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="153.2" y="862.0"></text>
</g>
<g>
<title>pipe_write (75 samples, 0.91%)</title><rect x="150.5" y="835.0" width="10.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="153.5" y="846.0"></text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.02%)</title><rect x="151.1" y="819.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="154.1" y="830.0"></text>
</g>
<g>
<title>__wake_up_sync_key (63 samples, 0.76%)</title><rect x="151.3" y="819.0" width="9.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="154.3" y="830.0"></text>
</g>
<g>
<title>__wake_up_common_lock (62 samples, 0.75%)</title><rect x="151.3" y="803.0" width="8.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="154.3" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (61 samples, 0.74%)</title><rect x="151.5" y="787.0" width="8.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="154.5" y="798.0"></text>
</g>
<g>
<title>pipe_iov_copy_from_user.constprop.9 (4 samples, 0.05%)</title><rect x="160.7" y="819.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="163.7" y="830.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.05%)</title><rect x="160.7" y="803.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="163.7" y="814.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="160.8" y="787.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="163.8" y="798.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.10%)</title><rect x="161.4" y="851.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="164.4" y="862.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.08%)</title><rect x="161.5" y="835.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="164.5" y="846.0"></text>
</g>
<g>
<title>selinux_file_permission (7 samples, 0.08%)</title><rect x="161.5" y="819.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="164.5" y="830.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.02%)</title><rect x="161.9" y="803.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="164.9" y="814.0"></text>
</g>
<g>
<title>file_has_perm (2 samples, 0.02%)</title><rect x="162.2" y="803.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="165.2" y="814.0"></text>
</g>
<g>
<title>inode_has_perm.isra.34.constprop.71 (2 samples, 0.02%)</title><rect x="162.2" y="787.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="165.2" y="798.0"></text>
</g>
<g>
<title>avc_has_perm_flags (2 samples, 0.02%)</title><rect x="162.2" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="165.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (2 samples, 0.02%)</title><rect x="162.7" y="979.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.7" y="990.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.02%)</title><rect x="162.7" y="963.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (32 samples, 0.39%)</title><rect x="162.9" y="979.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.9" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (5 samples, 0.06%)</title><rect x="163.2" y="963.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.2" y="974.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (5 samples, 0.06%)</title><rect x="163.2" y="947.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.2" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (5 samples, 0.06%)</title><rect x="163.2" y="931.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.2" y="942.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (5 samples, 0.06%)</title><rect x="163.2" y="915.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.2" y="926.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (5 samples, 0.06%)</title><rect x="163.2" y="899.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (23 samples, 0.28%)</title><rect x="164.1" y="963.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="167.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (20 samples, 0.24%)</title><rect x="164.5" y="947.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.5" y="958.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (19 samples, 0.23%)</title><rect x="164.7" y="931.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="167.7" y="942.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (3 samples, 0.04%)</title><rect x="164.8" y="915.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.8" y="926.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (3 samples, 0.04%)</title><rect x="164.8" y="899.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.8" y="910.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (15 samples, 0.18%)</title><rect x="165.2" y="915.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.2" y="926.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (11 samples, 0.13%)</title><rect x="165.8" y="899.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="168.8" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.04%)</title><rect x="165.9" y="883.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="168.9" y="894.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.06%)</title><rect x="166.5" y="883.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="169.5" y="894.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.02%)</title><rect x="166.7" y="867.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="169.7" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (2 samples, 0.02%)</title><rect x="167.0" y="867.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="170.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (21 samples, 0.25%)</title><rect x="167.5" y="979.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (21 samples, 0.25%)</title><rect x="167.5" y="963.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (2 samples, 0.02%)</title><rect x="168.1" y="947.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (6 samples, 0.07%)</title><rect x="168.4" y="947.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="171.4" y="958.0"></text>
</g>
<g>
<title>java/util/Optional.of (6 samples, 0.07%)</title><rect x="168.4" y="931.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.4" y="942.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (6 samples, 0.07%)</title><rect x="168.4" y="915.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="171.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (9 samples, 0.11%)</title><rect x="169.2" y="947.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="172.2" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.now (8 samples, 0.10%)</title><rect x="169.2" y="931.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.2" y="942.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (8 samples, 0.10%)</title><rect x="169.2" y="915.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="172.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (7 samples, 0.08%)</title><rect x="169.4" y="899.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.4" y="910.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (7 samples, 0.08%)</title><rect x="169.4" y="883.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="172.4" y="894.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="169.7" y="867.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="172.7" y="878.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.04%)</title><rect x="170.0" y="867.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="173.0" y="878.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="170.0" y="851.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="173.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$160/1045166596.get (2 samples, 0.02%)</title><rect x="170.5" y="1059.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (3 samples, 0.04%)</title><rect x="170.8" y="1075.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.04%)</title><rect x="170.8" y="1059.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (3 samples, 0.04%)</title><rect x="170.8" y="1043.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="173.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.04%)</title><rect x="170.8" y="1027.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.04%)</title><rect x="170.8" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="170.8" y="995.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="173.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.02%)</title><rect x="171.2" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.02%)</title><rect x="171.2" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="174.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,063 samples, 12.90%)</title><rect x="171.5" y="1075.0" width="152.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.5" y="1086.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (716 samples, 8.69%)</title><rect x="173.3" y="1059.0" width="102.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="176.3" y="1070.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (715 samples, 8.68%)</title><rect x="173.3" y="1043.0" width="102.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="176.3" y="1054.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (676 samples, 8.20%)</title><rect x="177.3" y="1027.0" width="96.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="180.3" y="1038.0">java/util/c..</text>
</g>
<g>
<title>[vdso] (6 samples, 0.07%)</title><rect x="182.1" y="1011.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="185.1" y="1022.0"></text>
</g>
<g>
<title>__clock_gettime (78 samples, 0.95%)</title><rect x="183.0" y="1011.0" width="11.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="186.0" y="1022.0"></text>
</g>
<g>
<title>[vdso] (66 samples, 0.80%)</title><rect x="184.7" y="995.0" width="9.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="187.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.02%)</title><rect x="194.2" y="1011.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.shouldSpin (17 samples, 0.21%)</title><rect x="194.4" y="1011.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="197.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (528 samples, 6.41%)</title><rect x="196.9" y="1011.0" width="75.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.9" y="1022.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (9 samples, 0.11%)</title><rect x="196.9" y="995.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (519 samples, 6.30%)</title><rect x="198.2" y="995.0" width="74.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="201.2" y="1006.0">jdk/inte..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.02%)</title><rect x="201.0" y="979.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="204.0" y="990.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.05%)</title><rect x="201.3" y="979.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="204.3" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (2 samples, 0.02%)</title><rect x="202.0" y="979.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="205.0" y="990.0"></text>
</g>
<g>
<title>Unsafe_Park (430 samples, 5.22%)</title><rect x="202.3" y="979.0" width="61.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="205.3" y="990.0">Unsafe..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (6 samples, 0.07%)</title><rect x="205.3" y="963.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="208.3" y="974.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (7 samples, 0.08%)</title><rect x="206.2" y="963.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="209.2" y="974.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.04%)</title><rect x="207.2" y="963.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="210.2" y="974.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (131 samples, 1.59%)</title><rect x="207.6" y="963.0" width="18.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="210.6" y="974.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (24 samples, 0.29%)</title><rect x="214.2" y="947.0" width="3.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="217.2" y="958.0"></text>
</g>
<g>
<title>Monitor::unlock() (8 samples, 0.10%)</title><rect x="217.6" y="947.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="220.6" y="958.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.02%)</title><rect x="218.8" y="947.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="221.8" y="958.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="218.8" y="931.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="221.8" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (43 samples, 0.52%)</title><rect x="219.1" y="947.0" width="6.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="222.1" y="958.0"></text>
</g>
<g>
<title>_init (4 samples, 0.05%)</title><rect x="225.2" y="947.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="228.2" y="958.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (4 samples, 0.05%)</title><rect x="225.8" y="947.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="228.8" y="958.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="226.4" y="963.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="229.4" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (5 samples, 0.06%)</title><rect x="226.8" y="963.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="229.8" y="974.0"></text>
</g>
<g>
<title>_L_unlock_738 (6 samples, 0.07%)</title><rect x="227.5" y="963.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="230.5" y="974.0"></text>
</g>
<g>
<title>__lll_unlock_wake (89 samples, 1.08%)</title><rect x="228.4" y="963.0" width="12.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="231.4" y="974.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (5 samples, 0.06%)</title><rect x="232.0" y="947.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="235.0" y="958.0"></text>
</g>
<g>
<title>auditsys (7 samples, 0.08%)</title><rect x="232.7" y="947.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="235.7" y="958.0"></text>
</g>
<g>
<title>__audit_syscall_entry (7 samples, 0.08%)</title><rect x="232.7" y="931.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="235.7" y="942.0"></text>
</g>
<g>
<title>sysret_audit (9 samples, 0.11%)</title><rect x="233.7" y="947.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="236.7" y="958.0"></text>
</g>
<g>
<title>__audit_syscall_exit (8 samples, 0.10%)</title><rect x="233.7" y="931.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="236.7" y="942.0"></text>
</g>
<g>
<title>system_call_fastpath (40 samples, 0.49%)</title><rect x="235.1" y="947.0" width="5.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="238.1" y="958.0"></text>
</g>
<g>
<title>sys_futex (37 samples, 0.45%)</title><rect x="235.5" y="931.0" width="5.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="238.5" y="942.0"></text>
</g>
<g>
<title>do_futex (31 samples, 0.38%)</title><rect x="235.8" y="915.0" width="4.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="238.8" y="926.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.13 (2 samples, 0.02%)</title><rect x="236.4" y="899.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="239.4" y="910.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 0.22%)</title><rect x="236.7" y="899.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="239.7" y="910.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="238.8" y="883.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="241.8" y="894.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (2 samples, 0.02%)</title><rect x="239.0" y="867.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="242.0" y="878.0"></text>
</g>
<g>
<title>hash_futex (7 samples, 0.08%)</title><rect x="239.3" y="899.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="242.3" y="910.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.05%)</title><rect x="240.3" y="915.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="243.3" y="926.0"></text>
</g>
<g>
<title>tracesys (2 samples, 0.02%)</title><rect x="240.8" y="947.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="243.8" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (108 samples, 1.31%)</title><rect x="241.1" y="963.0" width="15.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="244.1" y="974.0"></text>
</g>
<g>
<title>auditsys (6 samples, 0.07%)</title><rect x="242.4" y="947.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="245.4" y="958.0"></text>
</g>
<g>
<title>__audit_syscall_entry (6 samples, 0.07%)</title><rect x="242.4" y="931.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="245.4" y="942.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.02%)</title><rect x="243.3" y="947.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="246.3" y="958.0"></text>
</g>
<g>
<title>system_call_fastpath (89 samples, 1.08%)</title><rect x="243.7" y="947.0" width="12.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="246.7" y="958.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.02%)</title><rect x="244.0" y="931.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="247.0" y="942.0"></text>
</g>
<g>
<title>sys_futex (85 samples, 1.03%)</title><rect x="244.3" y="931.0" width="12.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="247.3" y="942.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.08%)</title><rect x="244.6" y="915.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="247.6" y="926.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.05%)</title><rect x="245.0" y="899.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="248.0" y="910.0"></text>
</g>
<g>
<title>do_futex (75 samples, 0.91%)</title><rect x="245.6" y="915.0" width="10.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="248.6" y="926.0"></text>
</g>
<g>
<title>futex_wait (71 samples, 0.86%)</title><rect x="245.6" y="899.0" width="10.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="248.6" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (53 samples, 0.64%)</title><rect x="245.9" y="883.0" width="7.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="248.9" y="894.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (41 samples, 0.50%)</title><rect x="246.1" y="867.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="249.1" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (40 samples, 0.49%)</title><rect x="246.3" y="851.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="249.3" y="862.0"></text>
</g>
<g>
<title>plist_add (3 samples, 0.04%)</title><rect x="252.0" y="867.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="255.0" y="878.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.08%)</title><rect x="252.4" y="867.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="255.4" y="878.0"></text>
</g>
<g>
<title>__schedule (7 samples, 0.08%)</title><rect x="252.4" y="851.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="255.4" y="862.0"></text>
</g>
<g>
<title>futex_wait_setup (9 samples, 0.11%)</title><rect x="253.4" y="883.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="256.4" y="894.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.04%)</title><rect x="254.7" y="883.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="257.7" y="894.0"></text>
</g>
<g>
<title>hrtimer_init (3 samples, 0.04%)</title><rect x="255.2" y="883.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="258.2" y="894.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.02%)</title><rect x="256.7" y="963.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="259.7" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (4 samples, 0.05%)</title><rect x="257.0" y="963.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="260.0" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.04%)</title><rect x="257.6" y="963.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="260.6" y="974.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.10%)</title><rect x="258.2" y="963.0" width="1.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="261.2" y="974.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.04%)</title><rect x="259.5" y="963.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="262.5" y="974.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (21 samples, 0.25%)</title><rect x="259.9" y="963.0" width="3.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="262.9" y="974.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (7 samples, 0.08%)</title><rect x="262.9" y="963.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="265.9" y="974.0"></text>
</g>
<g>
<title>__lll_unlock_wake (9 samples, 0.11%)</title><rect x="263.9" y="979.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="266.9" y="990.0"></text>
</g>
<g>
<title>system_call_after_swapgs (9 samples, 0.11%)</title><rect x="263.9" y="963.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="266.9" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.08%)</title><rect x="265.2" y="979.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="268.2" y="990.0"></text>
</g>
<g>
<title>system_call_after_swapgs (7 samples, 0.08%)</title><rect x="265.2" y="963.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="268.2" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (15 samples, 0.18%)</title><rect x="266.2" y="979.0" width="2.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="269.2" y="990.0"></text>
</g>
<g>
<title>system_call_after_swapgs (15 samples, 0.18%)</title><rect x="266.2" y="963.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="269.2" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (8 samples, 0.10%)</title><rect x="268.3" y="979.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="271.3" y="990.0"></text>
</g>
<g>
<title>__write (9 samples, 0.11%)</title><rect x="269.5" y="979.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="272.5" y="990.0"></text>
</g>
<g>
<title>system_call_after_swapgs (9 samples, 0.11%)</title><rect x="269.5" y="963.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="272.5" y="974.0"></text>
</g>
<g>
<title>__writev (5 samples, 0.06%)</title><rect x="270.8" y="979.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="273.8" y="990.0"></text>
</g>
<g>
<title>system_call_after_swapgs (5 samples, 0.06%)</title><rect x="270.8" y="963.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="273.8" y="974.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (7 samples, 0.08%)</title><rect x="271.5" y="979.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="274.5" y="990.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (11 samples, 0.13%)</title><rect x="272.5" y="1011.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="275.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (4 samples, 0.05%)</title><rect x="274.1" y="1027.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="277.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (7 samples, 0.08%)</title><rect x="274.6" y="1027.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="277.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (3 samples, 0.04%)</title><rect x="275.2" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="278.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (334 samples, 4.05%)</title><rect x="275.8" y="1059.0" width="47.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.8" y="1070.0">java..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.04%)</title><rect x="275.8" y="1043.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="278.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (331 samples, 4.02%)</title><rect x="276.2" y="1043.0" width="47.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="279.2" y="1054.0">java..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (321 samples, 3.90%)</title><rect x="276.8" y="1027.0" width="46.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="279.8" y="1038.0">java..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (6 samples, 0.07%)</title><rect x="285.2" y="1011.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.shouldSpin (89 samples, 1.08%)</title><rect x="286.1" y="1011.0" width="12.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (167 samples, 2.03%)</title><rect x="298.8" y="1011.0" width="24.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="301.8" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (2 samples, 0.02%)</title><rect x="298.8" y="995.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="301.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (165 samples, 2.00%)</title><rect x="299.1" y="995.0" width="23.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.1" y="1006.0">j..</text>
</g>
<g>
<title>Unsafe_Park (147 samples, 1.78%)</title><rect x="300.0" y="979.0" width="21.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="303.0" y="990.0">U..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (4 samples, 0.05%)</title><rect x="300.4" y="963.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="303.4" y="974.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.02%)</title><rect x="301.1" y="963.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="304.1" y="974.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (51 samples, 0.62%)</title><rect x="301.4" y="963.0" width="7.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="304.4" y="974.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (16 samples, 0.19%)</title><rect x="304.1" y="947.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="307.1" y="958.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (7 samples, 0.08%)</title><rect x="305.0" y="931.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="308.0" y="942.0"></text>
</g>
<g>
<title>update_get_addr (3 samples, 0.04%)</title><rect x="306.0" y="931.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="309.0" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.10%)</title><rect x="306.4" y="947.0" width="1.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="309.4" y="958.0"></text>
</g>
<g>
<title>update_get_addr (5 samples, 0.06%)</title><rect x="308.0" y="947.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="311.0" y="958.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.07%)</title><rect x="308.7" y="963.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="311.7" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (4 samples, 0.05%)</title><rect x="309.6" y="963.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="312.6" y="974.0"></text>
</g>
<g>
<title>_L_unlock_738 (2 samples, 0.02%)</title><rect x="310.2" y="963.0" width="0.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="313.2" y="974.0"></text>
</g>
<g>
<title>__lll_unlock_wake (29 samples, 0.35%)</title><rect x="310.4" y="963.0" width="4.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="313.4" y="974.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.02%)</title><rect x="312.2" y="947.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="315.2" y="958.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.02%)</title><rect x="312.4" y="947.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="315.4" y="958.0"></text>
</g>
<g>
<title>sysret_audit (2 samples, 0.02%)</title><rect x="312.9" y="947.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="315.9" y="958.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.02%)</title><rect x="312.9" y="931.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="315.9" y="942.0"></text>
</g>
<g>
<title>system_call_fastpath (10 samples, 0.12%)</title><rect x="313.2" y="947.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="316.2" y="958.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.11%)</title><rect x="313.3" y="931.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="316.3" y="942.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.11%)</title><rect x="313.3" y="915.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="316.3" y="926.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.07%)</title><rect x="313.4" y="899.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="316.4" y="910.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="313.9" y="883.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="316.9" y="894.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="314.3" y="899.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="317.3" y="910.0"></text>
</g>
<g>
<title>__pthread_cond_wait (24 samples, 0.29%)</title><rect x="314.6" y="963.0" width="3.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="317.6" y="974.0"></text>
</g>
<g>
<title>auditsys (4 samples, 0.05%)</title><rect x="314.9" y="947.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="317.9" y="958.0"></text>
</g>
<g>
<title>__audit_syscall_entry (4 samples, 0.05%)</title><rect x="314.9" y="931.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="317.9" y="942.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.02%)</title><rect x="315.5" y="947.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="318.5" y="958.0"></text>
</g>
<g>
<title>system_call_fastpath (15 samples, 0.18%)</title><rect x="315.9" y="947.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="318.9" y="958.0"></text>
</g>
<g>
<title>sys_futex (14 samples, 0.17%)</title><rect x="316.0" y="931.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="319.0" y="942.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.16%)</title><rect x="316.0" y="915.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="319.0" y="926.0"></text>
</g>
<g>
<title>futex_wait (12 samples, 0.15%)</title><rect x="316.2" y="899.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="319.2" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.04%)</title><rect x="316.6" y="883.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="319.6" y="894.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="316.7" y="867.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="319.7" y="878.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.02%)</title><rect x="316.7" y="851.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="319.7" y="862.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.05%)</title><rect x="317.0" y="883.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="320.0" y="894.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="317.6" y="883.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="320.6" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.07%)</title><rect x="318.5" y="963.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="321.5" y="974.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (11 samples, 0.13%)</title><rect x="319.5" y="963.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="322.5" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.02%)</title><rect x="321.0" y="979.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="324.0" y="990.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.02%)</title><rect x="321.0" y="963.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="324.0" y="974.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.04%)</title><rect x="321.3" y="979.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="324.3" y="990.0"></text>
</g>
<g>
<title>send (7 samples, 0.08%)</title><rect x="321.8" y="979.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="324.8" y="990.0"></text>
</g>
<g>
<title>system_call_after_swapgs (7 samples, 0.08%)</title><rect x="321.8" y="963.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="324.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (5 samples, 0.06%)</title><rect x="322.9" y="1027.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (3 samples, 0.04%)</title><rect x="323.2" y="1011.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="326.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$309/1651102379.run (867 samples, 10.52%)</title><rect x="323.9" y="1075.0" width="124.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="326.9" y="1086.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (867 samples, 10.52%)</title><rect x="323.9" y="1059.0" width="124.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="326.9" y="1070.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (864 samples, 10.49%)</title><rect x="324.3" y="1043.0" width="123.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="327.3" y="1054.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (855 samples, 10.38%)</title><rect x="325.3" y="1027.0" width="122.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="328.3" y="1038.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (854 samples, 10.36%)</title><rect x="325.5" y="1011.0" width="122.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.5" y="1022.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (854 samples, 10.36%)</title><rect x="325.5" y="995.0" width="122.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.5" y="1006.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (849 samples, 10.30%)</title><rect x="325.8" y="979.0" width="121.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.8" y="990.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (849 samples, 10.30%)</title><rect x="325.8" y="963.0" width="121.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.8" y="974.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (849 samples, 10.30%)</title><rect x="325.8" y="947.0" width="121.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.8" y="958.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (849 samples, 10.30%)</title><rect x="325.8" y="931.0" width="121.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.8" y="942.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (848 samples, 10.29%)</title><rect x="325.9" y="915.0" width="121.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="328.9" y="926.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (145 samples, 1.76%)</title><rect x="326.3" y="899.0" width="20.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.3" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.13%)</title><rect x="327.1" y="883.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.1" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.13%)</title><rect x="327.1" y="867.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$321/369272078.get$Lambda (3 samples, 0.04%)</title><rect x="327.2" y="851.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$321/369272078.&lt;init&gt; (2 samples, 0.02%)</title><rect x="327.3" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$409/168925968.get$Lambda (7 samples, 0.08%)</title><rect x="327.6" y="851.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (4 samples, 0.05%)</title><rect x="328.1" y="835.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (120 samples, 1.46%)</title><rect x="328.6" y="883.0" width="17.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.02%)</title><rect x="328.8" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.8" y="878.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (2 samples, 0.02%)</title><rect x="328.8" y="851.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.8" y="862.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (2 samples, 0.02%)</title><rect x="328.8" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="331.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (2 samples, 0.02%)</title><rect x="328.8" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="331.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (117 samples, 1.42%)</title><rect x="329.1" y="867.0" width="16.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="332.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (117 samples, 1.42%)</title><rect x="329.1" y="851.0" width="16.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="332.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (116 samples, 1.41%)</title><rect x="329.2" y="835.0" width="16.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.2" y="846.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.10%)</title><rect x="330.2" y="819.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="333.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (16 samples, 0.19%)</title><rect x="331.3" y="819.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$313/446652366.apply (8 samples, 0.10%)</title><rect x="332.5" y="803.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (7 samples, 0.08%)</title><rect x="332.5" y="787.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="335.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (5 samples, 0.06%)</title><rect x="332.8" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (5 samples, 0.06%)</title><rect x="332.8" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (4 samples, 0.05%)</title><rect x="332.9" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="335.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.05%)</title><rect x="332.9" y="723.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.05%)</title><rect x="332.9" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (76 samples, 0.92%)</title><rect x="333.6" y="819.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="336.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (76 samples, 0.92%)</title><rect x="333.6" y="803.0" width="10.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="336.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.10%)</title><rect x="333.9" y="787.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="336.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.10%)</title><rect x="333.9" y="771.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="336.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (8 samples, 0.10%)</title><rect x="333.9" y="755.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="336.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (8 samples, 0.10%)</title><rect x="333.9" y="739.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="336.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (8 samples, 0.10%)</title><rect x="333.9" y="723.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="336.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.10%)</title><rect x="333.9" y="707.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.9" y="718.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.06%)</title><rect x="333.9" y="691.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="336.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$288/1871228320.apply (3 samples, 0.04%)</title><rect x="334.6" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="337.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$288/1871228320.apply (66 samples, 0.80%)</title><rect x="335.1" y="787.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (65 samples, 0.79%)</title><rect x="335.2" y="771.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (65 samples, 0.79%)</title><rect x="335.2" y="755.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="338.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/1850087782.apply (64 samples, 0.78%)</title><rect x="335.2" y="739.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (64 samples, 0.78%)</title><rect x="335.2" y="723.0" width="9.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.06%)</title><rect x="335.2" y="707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.06%)</title><rect x="335.2" y="691.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (3 samples, 0.04%)</title><rect x="335.5" y="675.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (3 samples, 0.04%)</title><rect x="335.5" y="659.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (58 samples, 0.70%)</title><rect x="336.1" y="707.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="339.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (23 samples, 0.28%)</title><rect x="336.4" y="691.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="339.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (23 samples, 0.28%)</title><rect x="336.4" y="675.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="339.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (23 samples, 0.28%)</title><rect x="336.4" y="659.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$405/121739781.accept (20 samples, 0.24%)</title><rect x="336.8" y="643.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (20 samples, 0.24%)</title><rect x="336.8" y="627.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (20 samples, 0.24%)</title><rect x="336.8" y="611.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="339.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (20 samples, 0.24%)</title><rect x="336.8" y="595.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="339.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (19 samples, 0.23%)</title><rect x="336.9" y="579.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.23%)</title><rect x="336.9" y="563.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="339.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.23%)</title><rect x="336.9" y="547.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (19 samples, 0.23%)</title><rect x="336.9" y="531.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="339.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (19 samples, 0.23%)</title><rect x="336.9" y="515.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="339.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (18 samples, 0.22%)</title><rect x="336.9" y="499.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="339.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (3 samples, 0.04%)</title><rect x="337.5" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.02%)</title><rect x="337.7" y="467.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.02%)</title><rect x="337.7" y="451.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.02%)</title><rect x="337.7" y="435.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.02%)</title><rect x="337.7" y="419.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="340.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (6 samples, 0.07%)</title><rect x="337.9" y="483.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="340.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (6 samples, 0.07%)</title><rect x="337.9" y="467.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.04%)</title><rect x="338.1" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="341.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.02%)</title><rect x="338.2" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="341.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (2 samples, 0.02%)</title><rect x="338.5" y="451.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="341.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (5 samples, 0.06%)</title><rect x="338.8" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="341.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (4 samples, 0.05%)</title><rect x="338.9" y="467.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (7 samples, 0.08%)</title><rect x="339.7" y="691.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (25 samples, 0.30%)</title><rect x="340.8" y="691.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="343.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (3 samples, 0.04%)</title><rect x="340.8" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="343.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (3 samples, 0.04%)</title><rect x="340.8" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="343.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (22 samples, 0.27%)</title><rect x="341.2" y="675.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="344.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.&lt;init&gt; (3 samples, 0.04%)</title><rect x="341.5" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.&lt;init&gt; (3 samples, 0.04%)</title><rect x="341.5" y="643.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="344.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (7 samples, 0.08%)</title><rect x="341.9" y="659.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (10 samples, 0.12%)</title><rect x="342.9" y="659.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.9" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.05%)</title><rect x="343.2" y="643.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="346.2" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="343.5" y="627.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="346.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="344.0" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="347.0" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="344.0" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="347.0" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="344.0" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="347.0" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="344.0" y="595.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.0" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.02%)</title><rect x="344.0" y="579.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="347.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$311/10799099.get (2 samples, 0.02%)</title><rect x="344.5" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$321/369272078.get (2 samples, 0.02%)</title><rect x="344.8" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="347.8" y="830.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.06%)</title><rect x="345.1" y="819.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="348.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (6 samples, 0.07%)</title><rect x="345.8" y="883.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="348.8" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.02%)</title><rect x="345.8" y="867.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.8" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.02%)</title><rect x="345.8" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="348.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (4 samples, 0.05%)</title><rect x="346.1" y="867.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (3 samples, 0.04%)</title><rect x="346.2" y="851.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="349.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (2 samples, 0.02%)</title><rect x="346.2" y="835.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="349.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.04%)</title><rect x="346.7" y="883.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="349.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.02%)</title><rect x="346.8" y="867.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (3 samples, 0.04%)</title><rect x="347.1" y="899.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="350.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.04%)</title><rect x="347.1" y="883.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.04%)</title><rect x="347.1" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="350.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (697 samples, 8.46%)</title><rect x="347.5" y="899.0" width="99.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="350.5" y="910.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (697 samples, 8.46%)</title><rect x="347.5" y="883.0" width="99.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="350.5" y="894.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (697 samples, 8.46%)</title><rect x="347.5" y="867.0" width="99.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="350.5" y="878.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (695 samples, 8.43%)</title><rect x="347.8" y="851.0" width="99.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.8" y="862.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$318/1255253350.run (8 samples, 0.10%)</title><rect x="348.0" y="835.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="351.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (8 samples, 0.10%)</title><rect x="348.0" y="819.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="351.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (8 samples, 0.10%)</title><rect x="348.0" y="803.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="351.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (5 samples, 0.06%)</title><rect x="348.4" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (672 samples, 8.16%)</title><rect x="349.1" y="835.0" width="96.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.1" y="846.0">jdk/interna..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (670 samples, 8.13%)</title><rect x="349.1" y="819.0" width="96.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.1" y="830.0">java/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (670 samples, 8.13%)</title><rect x="349.1" y="803.0" width="96.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.1" y="814.0">sun/nio/ch/..</text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (2 samples, 0.02%)</title><rect x="349.1" y="787.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="352.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (668 samples, 8.11%)</title><rect x="349.4" y="787.0" width="95.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="352.4" y="798.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (668 samples, 8.11%)</title><rect x="349.4" y="771.0" width="95.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.4" y="782.0">sun/nio/ch/..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (16 samples, 0.19%)</title><rect x="349.8" y="755.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.8" y="766.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (16 samples, 0.19%)</title><rect x="349.8" y="739.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (6 samples, 0.07%)</title><rect x="349.8" y="723.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (9 samples, 0.11%)</title><rect x="350.8" y="723.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="353.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (8 samples, 0.10%)</title><rect x="351.0" y="707.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="354.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (4 samples, 0.05%)</title><rect x="351.5" y="691.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="354.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (3 samples, 0.04%)</title><rect x="351.5" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="354.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (3 samples, 0.04%)</title><rect x="351.5" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="354.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (4 samples, 0.05%)</title><rect x="352.1" y="755.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.1" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="352.3" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="355.3" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.04%)</title><rect x="352.3" y="723.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="355.3" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (8 samples, 0.10%)</title><rect x="352.7" y="755.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="355.7" y="766.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="353.3" y="739.0" width="0.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="356.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.02%)</title><rect x="353.5" y="739.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="356.5" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (630 samples, 7.65%)</title><rect x="353.8" y="755.0" width="90.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="356.8" y="766.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (630 samples, 7.65%)</title><rect x="353.8" y="739.0" width="90.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.8" y="750.0">sun/nio/ch..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (2 samples, 0.02%)</title><rect x="356.8" y="723.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="359.8" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.04%)</title><rect x="357.4" y="723.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="360.4" y="734.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.04%)</title><rect x="357.4" y="707.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="360.4" y="718.0"></text>
</g>
<g>
<title>__write (2 samples, 0.02%)</title><rect x="358.0" y="723.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="361.0" y="734.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.02%)</title><rect x="358.0" y="707.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="361.0" y="718.0"></text>
</g>
<g>
<title>__writev (595 samples, 7.22%)</title><rect x="358.3" y="723.0" width="85.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="361.3" y="734.0">__writev</text>
</g>
<g>
<title>auditsys (3 samples, 0.04%)</title><rect x="360.8" y="707.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="363.8" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.04%)</title><rect x="360.8" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="363.8" y="702.0"></text>
</g>
<g>
<title>sys_writev (2 samples, 0.02%)</title><rect x="361.3" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="364.3" y="718.0"></text>
</g>
<g>
<title>sysret_audit (7 samples, 0.08%)</title><rect x="361.6" y="707.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="364.6" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_exit (6 samples, 0.07%)</title><rect x="361.6" y="691.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="364.6" y="702.0"></text>
</g>
<g>
<title>system_call_after_swapgs (4 samples, 0.05%)</title><rect x="362.7" y="707.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="365.7" y="718.0"></text>
</g>
<g>
<title>system_call_fastpath (560 samples, 6.80%)</title><rect x="363.3" y="707.0" width="80.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="366.3" y="718.0">system_ca..</text>
</g>
<g>
<title>sys_writev (559 samples, 6.78%)</title><rect x="363.4" y="691.0" width="80.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="366.4" y="702.0">sys_writev</text>
</g>
<g>
<title>fget_light (5 samples, 0.06%)</title><rect x="363.7" y="675.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="366.7" y="686.0"></text>
</g>
<g>
<title>vfs_writev (552 samples, 6.70%)</title><rect x="364.4" y="675.0" width="79.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="367.4" y="686.0">vfs_writev</text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.02%)</title><rect x="364.6" y="659.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="367.6" y="670.0"></text>
</g>
<g>
<title>do_readv_writev (548 samples, 6.65%)</title><rect x="364.9" y="659.0" width="78.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="367.9" y="670.0">do_readv_..</text>
</g>
<g>
<title>__x86_indirect_thunk_r9 (2 samples, 0.02%)</title><rect x="365.1" y="643.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="368.1" y="654.0"></text>
</g>
<g>
<title>do_sync_readv_writev (522 samples, 6.33%)</title><rect x="365.4" y="643.0" width="74.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="368.4" y="654.0">do_sync_..</text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.02%)</title><rect x="365.6" y="627.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="368.6" y="638.0"></text>
</g>
<g>
<title>sock_aio_write (519 samples, 6.30%)</title><rect x="365.9" y="627.0" width="74.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="368.9" y="638.0">sock_aio..</text>
</g>
<g>
<title>inet_sendmsg (511 samples, 6.20%)</title><rect x="366.1" y="611.0" width="73.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="369.1" y="622.0">inet_sen..</text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.05%)</title><rect x="366.1" y="595.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="369.1" y="606.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.02%)</title><rect x="366.7" y="595.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="369.7" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (503 samples, 6.10%)</title><rect x="367.0" y="595.0" width="72.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="370.0" y="606.0">tcp_send..</text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.02%)</title><rect x="368.3" y="579.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="371.3" y="590.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.06%)</title><rect x="368.6" y="579.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="371.6" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.05%)</title><rect x="368.7" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="371.7" y="574.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.02%)</title><rect x="369.3" y="579.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="372.3" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.02%)</title><rect x="369.7" y="579.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="372.7" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.02%)</title><rect x="369.7" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="372.7" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (15 samples, 0.18%)</title><rect x="370.2" y="579.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="373.2" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (13 samples, 0.16%)</title><rect x="370.3" y="563.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="373.3" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.32 (3 samples, 0.04%)</title><rect x="370.9" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="373.9" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.04%)</title><rect x="370.9" y="531.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="373.9" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.07%)</title><rect x="371.3" y="547.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="374.3" y="558.0"></text>
</g>
<g>
<title>tcp_push (452 samples, 5.49%)</title><rect x="372.3" y="579.0" width="64.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="375.3" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (451 samples, 5.47%)</title><rect x="372.3" y="563.0" width="64.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="375.3" y="574.0">__tcp_p..</text>
</g>
<g>
<title>tcp_write_xmit (449 samples, 5.45%)</title><rect x="372.6" y="547.0" width="64.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="375.6" y="558.0">tcp_wri..</text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.06%)</title><rect x="374.3" y="531.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="377.3" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.05%)</title><rect x="374.5" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="377.5" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="374.5" y="499.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="377.5" y="510.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.05%)</title><rect x="374.5" y="483.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="377.5" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="374.6" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="377.6" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.05%)</title><rect x="375.3" y="531.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="378.3" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.05%)</title><rect x="375.3" y="515.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="378.3" y="526.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="375.5" y="499.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="378.5" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.02%)</title><rect x="375.6" y="483.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="378.6" y="494.0"></text>
</g>
<g>
<title>tcp_transmit_skb (423 samples, 5.13%)</title><rect x="376.0" y="531.0" width="60.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="379.0" y="542.0">tcp_tr..</text>
</g>
<g>
<title>ip_queue_xmit (404 samples, 4.90%)</title><rect x="377.5" y="515.0" width="57.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="380.5" y="526.0">ip_que..</text>
</g>
<g>
<title>ip_local_out_sk (401 samples, 4.87%)</title><rect x="377.7" y="499.0" width="57.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="380.7" y="510.0">ip_loc..</text>
</g>
<g>
<title>__ip_local_out_sk (104 samples, 1.26%)</title><rect x="378.0" y="483.0" width="14.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="381.0" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (103 samples, 1.25%)</title><rect x="378.2" y="467.0" width="14.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="381.2" y="478.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (4 samples, 0.05%)</title><rect x="378.3" y="451.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="381.3" y="462.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (3 samples, 0.04%)</title><rect x="379.0" y="451.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="382.0" y="462.0"></text>
</g>
<g>
<title>nf_iterate (92 samples, 1.12%)</title><rect x="379.6" y="451.0" width="13.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="382.6" y="462.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (6 samples, 0.07%)</title><rect x="381.3" y="435.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="384.3" y="446.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.06%)</title><rect x="381.5" y="419.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="384.5" y="430.0"></text>
</g>
<g>
<title>local_bh_enable (2 samples, 0.02%)</title><rect x="381.9" y="403.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="384.9" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.05%)</title><rect x="382.2" y="435.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="385.2" y="446.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.05%)</title><rect x="382.2" y="419.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="385.2" y="430.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (5 samples, 0.06%)</title><rect x="382.8" y="435.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="385.8" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (4 samples, 0.05%)</title><rect x="382.9" y="419.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="385.9" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat_ipv4] (2 samples, 0.02%)</title><rect x="383.2" y="403.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="386.2" y="414.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (21 samples, 0.25%)</title><rect x="383.5" y="435.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="386.5" y="446.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (19 samples, 0.23%)</title><rect x="383.5" y="419.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="386.5" y="430.0"></text>
</g>
<g>
<title>local_bh_disable (2 samples, 0.02%)</title><rect x="386.2" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="389.2" y="430.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (7 samples, 0.08%)</title><rect x="386.5" y="435.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="389.5" y="446.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.08%)</title><rect x="386.5" y="419.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="389.5" y="430.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (34 samples, 0.41%)</title><rect x="387.5" y="435.0" width="4.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="390.5" y="446.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find	[nf_conntrack] (3 samples, 0.04%)</title><rect x="387.6" y="419.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="390.6" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (27 samples, 0.33%)</title><rect x="388.1" y="419.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="391.1" y="430.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (3 samples, 0.04%)</title><rect x="389.1" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="392.1" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (3 samples, 0.04%)</title><rect x="389.6" y="403.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="392.6" y="414.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (10 samples, 0.12%)</title><rect x="390.5" y="403.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="393.5" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.02%)</title><rect x="391.1" y="387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="394.1" y="398.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (3 samples, 0.04%)</title><rect x="391.5" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="394.5" y="398.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (2 samples, 0.02%)</title><rect x="392.4" y="435.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="395.4" y="446.0"></text>
</g>
<g>
<title>ip_output (295 samples, 3.58%)</title><rect x="392.9" y="483.0" width="42.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="395.9" y="494.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (278 samples, 3.37%)</title><rect x="393.4" y="467.0" width="39.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="396.4" y="478.0">ip_..</text>
</g>
<g>
<title>dev_queue_xmit (18 samples, 0.22%)</title><rect x="395.5" y="451.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="398.5" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (16 samples, 0.19%)</title><rect x="395.5" y="435.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="398.5" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.08%)</title><rect x="396.1" y="419.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="399.1" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.05%)</title><rect x="396.5" y="403.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="399.5" y="414.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.04%)</title><rect x="396.7" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="399.7" y="398.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.04%)</title><rect x="396.7" y="371.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="399.7" y="382.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.02%)</title><rect x="396.7" y="355.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="399.7" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb.isra.109.part.110 (4 samples, 0.05%)</title><rect x="397.2" y="419.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="400.2" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.02%)</title><rect x="397.8" y="435.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="400.8" y="446.0"></text>
</g>
<g>
<title>local_bh_enable (244 samples, 2.96%)</title><rect x="398.2" y="451.0" width="35.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="401.2" y="462.0">lo..</text>
</g>
<g>
<title>__local_bh_enable_ip (244 samples, 2.96%)</title><rect x="398.2" y="435.0" width="35.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="401.2" y="446.0">__..</text>
</g>
<g>
<title>do_softirq (242 samples, 2.94%)</title><rect x="398.5" y="419.0" width="34.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="401.5" y="430.0">do..</text>
</g>
<g>
<title>call_softirq (238 samples, 2.89%)</title><rect x="399.1" y="403.0" width="34.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="402.1" y="414.0">ca..</text>
</g>
<g>
<title>__do_softirq (236 samples, 2.86%)</title><rect x="399.1" y="387.0" width="33.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="402.1" y="398.0">__..</text>
</g>
<g>
<title>net_rx_action (229 samples, 2.78%)</title><rect x="399.8" y="371.0" width="32.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="402.8" y="382.0">ne..</text>
</g>
<g>
<title>process_backlog (225 samples, 2.73%)</title><rect x="400.4" y="355.0" width="32.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="403.4" y="366.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (223 samples, 2.71%)</title><rect x="400.7" y="339.0" width="31.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="403.7" y="350.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (222 samples, 2.69%)</title><rect x="400.8" y="323.0" width="31.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="403.8" y="334.0">__..</text>
</g>
<g>
<title>ip_rcv (216 samples, 2.62%)</title><rect x="401.7" y="307.0" width="30.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="404.7" y="318.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (179 samples, 2.17%)</title><rect x="402.1" y="291.0" width="25.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="405.1" y="302.0">i..</text>
</g>
<g>
<title>ip_local_deliver (178 samples, 2.16%)</title><rect x="402.1" y="275.0" width="25.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="405.1" y="286.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (155 samples, 1.88%)</title><rect x="402.4" y="259.0" width="22.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="405.4" y="270.0">i..</text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.04%)</title><rect x="402.8" y="243.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="405.8" y="254.0"></text>
</g>
<g>
<title>tcp_v4_rcv (149 samples, 1.81%)</title><rect x="403.2" y="243.0" width="21.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="406.2" y="254.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (8 samples, 0.10%)</title><rect x="403.5" y="227.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="406.5" y="238.0"></text>
</g>
<g>
<title>tcp_filter (4 samples, 0.05%)</title><rect x="404.7" y="227.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="407.7" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.04%)</title><rect x="404.8" y="211.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="407.8" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (135 samples, 1.64%)</title><rect x="405.2" y="227.0" width="19.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="408.2" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (134 samples, 1.63%)</title><rect x="405.4" y="211.0" width="19.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="408.4" y="222.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (7 samples, 0.08%)</title><rect x="405.7" y="195.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="408.7" y="206.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (7 samples, 0.08%)</title><rect x="405.7" y="179.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="408.7" y="190.0"></text>
</g>
<g>
<title>sk_reset_timer (7 samples, 0.08%)</title><rect x="405.7" y="163.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="408.7" y="174.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.07%)</title><rect x="405.8" y="147.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="408.8" y="158.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.06%)</title><rect x="406.0" y="131.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="409.0" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (97 samples, 1.18%)</title><rect x="406.8" y="195.0" width="13.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="409.8" y="206.0"></text>
</g>
<g>
<title>__wake_up_sync_key (96 samples, 1.17%)</title><rect x="407.0" y="179.0" width="13.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="410.0" y="190.0"></text>
</g>
<g>
<title>__wake_up_common_lock (96 samples, 1.17%)</title><rect x="407.0" y="163.0" width="13.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="410.0" y="174.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (96 samples, 1.17%)</title><rect x="407.0" y="147.0" width="13.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="410.0" y="158.0"></text>
</g>
<g>
<title>tcp_ack (22 samples, 0.27%)</title><rect x="420.7" y="195.0" width="3.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="423.7" y="206.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.12%)</title><rect x="422.0" y="179.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="425.0" y="190.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.06%)</title><rect x="422.0" y="163.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="425.0" y="174.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.05%)</title><rect x="422.1" y="147.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="425.1" y="158.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.06%)</title><rect x="422.7" y="163.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="425.7" y="174.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.06%)</title><rect x="422.7" y="147.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="425.7" y="158.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.06%)</title><rect x="422.7" y="131.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="425.7" y="142.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.02%)</title><rect x="423.1" y="115.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="426.1" y="126.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.05%)</title><rect x="424.0" y="195.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="427.0" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (20 samples, 0.24%)</title><rect x="424.6" y="259.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="427.6" y="270.0"></text>
</g>
<g>
<title>nf_iterate (18 samples, 0.22%)</title><rect x="424.9" y="243.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="427.9" y="254.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (11 samples, 0.13%)</title><rect x="425.1" y="227.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="428.1" y="238.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (11 samples, 0.13%)</title><rect x="425.1" y="211.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="428.1" y="222.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (3 samples, 0.04%)</title><rect x="425.4" y="195.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="428.4" y="206.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (3 samples, 0.04%)</title><rect x="425.4" y="179.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="428.4" y="190.0"></text>
</g>
<g>
<title>tcp_mt (5 samples, 0.06%)</title><rect x="426.0" y="195.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="429.0" y="206.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (4 samples, 0.05%)</title><rect x="426.9" y="227.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="429.9" y="238.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.05%)</title><rect x="426.9" y="211.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="429.9" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (34 samples, 0.41%)</title><rect x="427.7" y="291.0" width="4.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="430.7" y="302.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.02%)</title><rect x="427.9" y="275.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="430.9" y="286.0"></text>
</g>
<g>
<title>nf_iterate (29 samples, 0.35%)</title><rect x="428.4" y="275.0" width="4.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="431.4" y="286.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.04%)</title><rect x="429.3" y="259.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="432.3" y="270.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.04%)</title><rect x="429.3" y="243.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="432.3" y="254.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (17 samples, 0.21%)</title><rect x="429.9" y="259.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="432.9" y="270.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (16 samples, 0.19%)</title><rect x="429.9" y="243.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="432.9" y="254.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.02%)</title><rect x="432.6" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="435.6" y="382.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.02%)</title><rect x="432.9" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="435.9" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.17%)</title><rect x="433.2" y="467.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="436.2" y="478.0"></text>
</g>
<g>
<title>nf_iterate (12 samples, 0.15%)</title><rect x="433.5" y="451.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="436.5" y="462.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (5 samples, 0.06%)</title><rect x="433.9" y="435.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="436.9" y="446.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.06%)</title><rect x="433.9" y="419.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="436.9" y="430.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out	[iptable_nat] (4 samples, 0.05%)</title><rect x="434.6" y="435.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="437.6" y="446.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat_ipv4] (3 samples, 0.04%)</title><rect x="434.7" y="419.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="437.7" y="430.0"></text>
</g>
<g>
<title>local_clock (3 samples, 0.04%)</title><rect x="435.3" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="438.3" y="526.0"></text>
</g>
<g>
<title>sched_clock (3 samples, 0.04%)</title><rect x="435.3" y="499.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="438.3" y="510.0"></text>
</g>
<g>
<title>vmware_sched_clock (3 samples, 0.04%)</title><rect x="435.3" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="438.3" y="494.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.06%)</title><rect x="435.7" y="515.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="438.7" y="526.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.05%)</title><rect x="435.9" y="499.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="438.9" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.02%)</title><rect x="436.2" y="483.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="439.2" y="494.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.02%)</title><rect x="436.6" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="439.6" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (13 samples, 0.16%)</title><rect x="437.0" y="579.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="440.0" y="590.0"></text>
</g>
<g>
<title>tcp_current_mss (10 samples, 0.12%)</title><rect x="437.5" y="563.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="440.5" y="574.0"></text>
</g>
<g>
<title>tcp_established_options (4 samples, 0.05%)</title><rect x="438.0" y="547.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="441.0" y="558.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (2 samples, 0.02%)</title><rect x="438.3" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="441.3" y="542.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (2 samples, 0.02%)</title><rect x="438.6" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="441.6" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.02%)</title><rect x="439.0" y="595.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="442.0" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.04%)</title><rect x="439.3" y="611.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="442.3" y="622.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (3 samples, 0.04%)</title><rect x="439.3" y="595.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="442.3" y="606.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.04%)</title><rect x="439.3" y="579.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="442.3" y="590.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (2 samples, 0.02%)</title><rect x="439.8" y="611.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="442.8" y="622.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="440.2" y="643.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="443.2" y="654.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (3 samples, 0.04%)</title><rect x="440.5" y="643.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="443.5" y="654.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="440.5" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="443.5" y="638.0"></text>
</g>
<g>
<title>rw_verify_area (17 samples, 0.21%)</title><rect x="440.9" y="643.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="443.9" y="654.0"></text>
</g>
<g>
<title>security_file_permission (13 samples, 0.16%)</title><rect x="441.2" y="627.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="444.2" y="638.0"></text>
</g>
<g>
<title>selinux_file_permission (12 samples, 0.15%)</title><rect x="441.3" y="611.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="444.3" y="622.0"></text>
</g>
<g>
<title>file_has_perm (3 samples, 0.04%)</title><rect x="442.6" y="595.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="445.6" y="606.0"></text>
</g>
<g>
<title>inode_has_perm.isra.34.constprop.71 (2 samples, 0.02%)</title><rect x="442.8" y="579.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="445.8" y="590.0"></text>
</g>
<g>
<title>avc_has_perm_flags (2 samples, 0.02%)</title><rect x="442.8" y="563.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="445.8" y="574.0"></text>
</g>
<g>
<title>selinux_file_permission (2 samples, 0.02%)</title><rect x="443.0" y="627.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="446.0" y="638.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.04%)</title><rect x="443.5" y="723.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="446.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.08%)</title><rect x="444.1" y="755.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.1" y="766.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.04%)</title><rect x="444.2" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="447.2" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="444.3" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="447.3" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.02%)</title><rect x="444.3" y="707.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="447.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.04%)</title><rect x="444.6" y="739.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="447.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (14 samples, 0.17%)</title><rect x="445.3" y="835.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="448.3" y="846.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (3 samples, 0.04%)</title><rect x="446.6" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="449.6" y="830.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (2 samples, 0.02%)</title><rect x="446.6" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.02%)</title><rect x="447.1" y="819.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.04%)</title><rect x="447.3" y="979.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="450.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.02%)</title><rect x="447.5" y="963.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="450.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (874 samples, 10.61%)</title><rect x="448.1" y="1075.0" width="125.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="451.1" y="1086.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (874 samples, 10.61%)</title><rect x="448.1" y="1059.0" width="125.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.1" y="1070.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (443 samples, 5.38%)</title><rect x="448.1" y="1043.0" width="63.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.1" y="1054.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$236/621309814.run (443 samples, 5.38%)</title><rect x="448.1" y="1027.0" width="63.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="451.1" y="1038.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (443 samples, 5.38%)</title><rect x="448.1" y="1011.0" width="63.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.1" y="1022.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (2 samples, 0.02%)</title><rect x="448.5" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="451.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (2 samples, 0.02%)</title><rect x="448.5" y="979.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (109 samples, 1.32%)</title><rect x="448.8" y="995.0" width="15.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (109 samples, 1.32%)</title><rect x="448.8" y="979.0" width="15.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (109 samples, 1.32%)</title><rect x="448.8" y="963.0" width="15.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (109 samples, 1.32%)</title><rect x="448.8" y="947.0" width="15.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="451.8" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/20094719.linkToTargetMethod (3 samples, 0.04%)</title><rect x="449.2" y="931.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.2" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/324457684.invoke (3 samples, 0.04%)</title><rect x="449.2" y="915.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.2" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="449.2" y="899.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.2" y="910.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.04%)</title><rect x="449.2" y="883.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.2" y="894.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.02%)</title><rect x="449.2" y="867.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="452.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (101 samples, 1.23%)</title><rect x="449.6" y="931.0" width="14.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.6" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="449.9" y="915.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.9" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="449.9" y="899.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310/1092212478.get$Lambda (3 samples, 0.04%)</title><rect x="449.9" y="883.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="452.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (96 samples, 1.17%)</title><rect x="450.4" y="915.0" width="13.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (96 samples, 1.17%)</title><rect x="450.4" y="899.0" width="13.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (96 samples, 1.17%)</title><rect x="450.4" y="883.0" width="13.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (94 samples, 1.14%)</title><rect x="450.6" y="867.0" width="13.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.6" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.21%)</title><rect x="451.2" y="851.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="454.2" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.21%)</title><rect x="451.2" y="835.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.2" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.21%)</title><rect x="451.2" y="819.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.2" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (17 samples, 0.21%)</title><rect x="451.2" y="803.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="454.2" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (11 samples, 0.13%)</title><rect x="452.1" y="787.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="455.1" y="798.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (11 samples, 0.13%)</title><rect x="452.1" y="771.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="455.1" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.83] (2 samples, 0.02%)</title><rect x="452.1" y="755.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="455.1" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.11%)</title><rect x="452.4" y="755.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="455.4" y="766.0"></text>
</g>
<g>
<title>system_call_fastpath (7 samples, 0.08%)</title><rect x="452.6" y="739.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="455.6" y="750.0"></text>
</g>
<g>
<title>sys_futex (7 samples, 0.08%)</title><rect x="452.6" y="723.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="455.6" y="734.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.08%)</title><rect x="452.6" y="707.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="455.6" y="718.0"></text>
</g>
<g>
<title>futex_wake_op (5 samples, 0.06%)</title><rect x="452.8" y="691.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="455.8" y="702.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.06%)</title><rect x="452.8" y="675.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="455.8" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.06%)</title><rect x="452.8" y="659.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="455.8" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.06%)</title><rect x="452.8" y="643.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="455.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (73 samples, 0.89%)</title><rect x="453.6" y="851.0" width="10.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="456.6" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (73 samples, 0.89%)</title><rect x="453.6" y="835.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="456.6" y="846.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (2 samples, 0.02%)</title><rect x="453.8" y="819.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="456.8" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (9 samples, 0.11%)</title><rect x="454.1" y="819.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="457.1" y="830.0"></text>
</g>
<g>
<title>system_call_after_swapgs (9 samples, 0.11%)</title><rect x="454.1" y="803.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="457.1" y="814.0"></text>
</g>
<g>
<title>__write (60 samples, 0.73%)</title><rect x="455.5" y="819.0" width="8.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="458.5" y="830.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.02%)</title><rect x="456.7" y="803.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="459.7" y="814.0"></text>
</g>
<g>
<title>system_call_fastpath (50 samples, 0.61%)</title><rect x="456.9" y="803.0" width="7.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="459.9" y="814.0"></text>
</g>
<g>
<title>sys_write (48 samples, 0.58%)</title><rect x="457.2" y="787.0" width="6.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="460.2" y="798.0"></text>
</g>
<g>
<title>fget_light (2 samples, 0.02%)</title><rect x="457.2" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="460.2" y="782.0"></text>
</g>
<g>
<title>vfs_write (46 samples, 0.56%)</title><rect x="457.5" y="771.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="460.5" y="782.0"></text>
</g>
<g>
<title>do_sync_write (36 samples, 0.44%)</title><rect x="457.7" y="755.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="460.7" y="766.0"></text>
</g>
<g>
<title>pipe_write (36 samples, 0.44%)</title><rect x="457.7" y="739.0" width="5.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="460.7" y="750.0"></text>
</g>
<g>
<title>__wake_up_sync_key (32 samples, 0.39%)</title><rect x="457.8" y="723.0" width="4.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="460.8" y="734.0"></text>
</g>
<g>
<title>__wake_up_common_lock (32 samples, 0.39%)</title><rect x="457.8" y="707.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="460.8" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (32 samples, 0.39%)</title><rect x="457.8" y="691.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="460.8" y="702.0"></text>
</g>
<g>
<title>pipe_iov_copy_from_user.constprop.9 (2 samples, 0.02%)</title><rect x="462.5" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="465.5" y="734.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.02%)</title><rect x="462.5" y="707.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="465.5" y="718.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.10%)</title><rect x="463.0" y="755.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="466.0" y="766.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.07%)</title><rect x="463.2" y="739.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="466.2" y="750.0"></text>
</g>
<g>
<title>selinux_file_permission (5 samples, 0.06%)</title><rect x="463.4" y="723.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="466.4" y="734.0"></text>
</g>
<g>
<title>file_has_perm (3 samples, 0.04%)</title><rect x="463.5" y="707.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="466.5" y="718.0"></text>
</g>
<g>
<title>inode_has_perm.isra.34.constprop.71 (2 samples, 0.02%)</title><rect x="463.7" y="691.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="466.7" y="702.0"></text>
</g>
<g>
<title>avc_has_perm_flags (2 samples, 0.02%)</title><rect x="463.7" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="466.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (2 samples, 0.02%)</title><rect x="464.1" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (2 samples, 0.02%)</title><rect x="464.1" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.weakCompareAndSetVolatile (2 samples, 0.02%)</title><rect x="464.1" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (4 samples, 0.05%)</title><rect x="464.4" y="995.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (324 samples, 3.93%)</title><rect x="465.1" y="995.0" width="46.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.1" y="1006.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (315 samples, 3.82%)</title><rect x="465.5" y="979.0" width="45.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.5" y="990.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (315 samples, 3.82%)</title><rect x="465.5" y="963.0" width="45.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.5" y="974.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (314 samples, 3.81%)</title><rect x="465.7" y="947.0" width="44.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.7" y="958.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (175 samples, 2.12%)</title><rect x="465.8" y="931.0" width="25.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.8" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (175 samples, 2.12%)</title><rect x="465.8" y="915.0" width="25.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="468.8" y="926.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.02%)</title><rect x="465.8" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="468.8" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.02%)</title><rect x="465.8" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (173 samples, 2.10%)</title><rect x="466.1" y="899.0" width="24.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.1" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (173 samples, 2.10%)</title><rect x="466.1" y="883.0" width="24.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.1" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (6 samples, 0.07%)</title><rect x="466.1" y="867.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="469.1" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.02%)</title><rect x="466.7" y="851.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="469.7" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (2 samples, 0.02%)</title><rect x="466.7" y="835.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (167 samples, 2.03%)</title><rect x="467.0" y="867.0" width="23.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.0" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (166 samples, 2.01%)</title><rect x="467.1" y="851.0" width="23.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.1" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (166 samples, 2.01%)</title><rect x="467.1" y="835.0" width="23.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="470.1" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (158 samples, 1.92%)</title><rect x="467.1" y="819.0" width="22.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.1" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (158 samples, 1.92%)</title><rect x="467.1" y="803.0" width="22.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="470.1" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (137 samples, 1.66%)</title><rect x="467.7" y="787.0" width="19.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (3 samples, 0.04%)</title><rect x="468.0" y="771.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (3 samples, 0.04%)</title><rect x="468.0" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="471.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (3 samples, 0.04%)</title><rect x="468.0" y="739.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="471.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$315/1008916601.apply (2 samples, 0.02%)</title><rect x="468.4" y="771.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (2 samples, 0.02%)</title><rect x="468.4" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (2 samples, 0.02%)</title><rect x="468.4" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="471.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.02%)</title><rect x="468.4" y="723.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.02%)</title><rect x="468.4" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.02%)</title><rect x="468.4" y="691.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.02%)</title><rect x="468.4" y="675.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.02%)</title><rect x="468.4" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1961341944.apply (103 samples, 1.25%)</title><rect x="468.7" y="771.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="471.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (103 samples, 1.25%)</title><rect x="468.7" y="755.0" width="14.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (103 samples, 1.25%)</title><rect x="468.7" y="739.0" width="14.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (103 samples, 1.25%)</title><rect x="468.7" y="723.0" width="14.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.7" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$142/34186423.apply (8 samples, 0.10%)</title><rect x="468.8" y="707.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="471.8" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (8 samples, 0.10%)</title><rect x="468.8" y="691.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.8" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (8 samples, 0.10%)</title><rect x="468.8" y="675.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (7 samples, 0.08%)</title><rect x="469.0" y="659.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.first (2 samples, 0.02%)</title><rect x="469.7" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="472.7" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$394/205305231.apply (35 samples, 0.42%)</title><rect x="470.0" y="707.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="473.0" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofString$13 (35 samples, 0.42%)</title><rect x="470.0" y="691.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="473.0" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofString (2 samples, 0.02%)</title><rect x="470.0" y="675.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.0" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.02%)</title><rect x="470.0" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="473.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="470.0" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="473.0" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers$$Lambda$415/1378676458.get$Lambda (2 samples, 0.02%)</title><rect x="470.0" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="473.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.charsetFrom (33 samples, 0.40%)</title><rect x="470.3" y="675.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.06%)</title><rect x="470.7" y="659.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="473.7" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.06%)</title><rect x="470.7" y="643.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.06%)</title><rect x="470.7" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="473.7" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (8 samples, 0.10%)</title><rect x="471.4" y="659.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.4" y="670.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.05%)</title><rect x="471.5" y="643.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.04%)</title><rect x="471.7" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="474.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (3 samples, 0.04%)</title><rect x="471.7" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.7" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (3 samples, 0.04%)</title><rect x="471.7" y="595.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="474.7" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (3 samples, 0.04%)</title><rect x="471.7" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.04%)</title><rect x="472.1" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.1" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.04%)</title><rect x="472.1" y="627.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.04%)</title><rect x="472.1" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.1" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.02%)</title><rect x="472.3" y="595.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="475.3" y="606.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.forName (4 samples, 0.05%)</title><rect x="472.5" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.5" y="670.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.lookup (4 samples, 0.05%)</title><rect x="472.5" y="643.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.5" y="654.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.02%)</title><rect x="472.8" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.8" y="638.0"></text>
</g>
<g>
<title>sun/net/www/HeaderParser.&lt;init&gt; (7 samples, 0.08%)</title><rect x="473.3" y="659.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.3" y="670.0"></text>
</g>
<g>
<title>sun/net/www/HeaderParser.parse (6 samples, 0.07%)</title><rect x="473.4" y="643.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.04%)</title><rect x="473.8" y="627.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.04%)</title><rect x="473.8" y="611.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.8" y="622.0"></text>
</g>
<g>
<title>sun/net/www/HeaderParser.findValue (5 samples, 0.06%)</title><rect x="474.3" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.3" y="670.0"></text>
</g>
<g>
<title>sun/net/www/HeaderParser.findValue (5 samples, 0.06%)</title><rect x="474.3" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.05%)</title><rect x="474.4" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.02%)</title><rect x="474.4" y="611.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.02%)</title><rect x="474.4" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.4" y="606.0"></text>
</g>
<g>
<title>java/util/Locale.getDefault (2 samples, 0.02%)</title><rect x="474.7" y="611.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.7" y="622.0"></text>
</g>
<g>
<title>sun/net/www/HeaderParser.parse (2 samples, 0.02%)</title><rect x="474.7" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (59 samples, 0.72%)</title><rect x="475.0" y="707.0" width="8.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.0" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (25 samples, 0.30%)</title><rect x="475.0" y="691.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="478.0" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.04%)</title><rect x="475.0" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="478.0" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.04%)</title><rect x="475.0" y="659.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="478.0" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.04%)</title><rect x="475.0" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.0" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.04%)</title><rect x="475.0" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.0" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.04%)</title><rect x="475.0" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.0" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (5 samples, 0.06%)</title><rect x="475.4" y="675.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="478.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.05%)</title><rect x="475.6" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.02%)</title><rect x="475.8" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="478.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.02%)</title><rect x="475.8" y="627.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.02%)</title><rect x="475.8" y="611.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (16 samples, 0.19%)</title><rect x="476.1" y="675.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.1" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (16 samples, 0.19%)</title><rect x="476.1" y="659.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (14 samples, 0.17%)</title><rect x="476.4" y="643.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.06%)</title><rect x="476.8" y="627.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="479.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.05%)</title><rect x="476.8" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="479.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.05%)</title><rect x="476.8" y="595.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (3 samples, 0.04%)</title><rect x="477.0" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.0" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (3 samples, 0.04%)</title><rect x="477.0" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (3 samples, 0.04%)</title><rect x="477.0" y="547.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.0" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$342/453415994.applyAsLong (3 samples, 0.04%)</title><rect x="477.0" y="531.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="480.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (4 samples, 0.05%)</title><rect x="477.6" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (3 samples, 0.04%)</title><rect x="477.6" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="480.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.04%)</title><rect x="477.6" y="595.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.02%)</title><rect x="478.6" y="691.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="481.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.02%)</title><rect x="478.6" y="675.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="481.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.02%)</title><rect x="478.6" y="659.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="481.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (2 samples, 0.02%)</title><rect x="478.8" y="691.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.02%)</title><rect x="478.8" y="675.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="481.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="478.8" y="659.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.02%)</title><rect x="478.8" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.8" y="654.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (2 samples, 0.02%)</title><rect x="478.8" y="627.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (30 samples, 0.36%)</title><rect x="479.1" y="691.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="482.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.02%)</title><rect x="479.1" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$349/798535403.run (28 samples, 0.34%)</title><rect x="479.4" y="675.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (28 samples, 0.34%)</title><rect x="479.4" y="659.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (2 samples, 0.02%)</title><rect x="479.7" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (2 samples, 0.02%)</title><rect x="479.7" y="627.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (2 samples, 0.02%)</title><rect x="479.7" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.7" y="622.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.02%)</title><rect x="479.7" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="482.7" y="606.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (2 samples, 0.02%)</title><rect x="479.7" y="579.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="482.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (12 samples, 0.15%)</title><rect x="480.0" y="643.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="483.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (12 samples, 0.15%)</title><rect x="480.0" y="627.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="483.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="480.1" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="480.1" y="595.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$357/1715244547.get$Lambda (3 samples, 0.04%)</title><rect x="480.1" y="579.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$357/1715244547.&lt;init&gt; (3 samples, 0.04%)</title><rect x="480.1" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.1" y="574.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (7 samples, 0.08%)</title><rect x="480.6" y="611.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="483.6" y="622.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (7 samples, 0.08%)</title><rect x="480.6" y="595.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.6" y="606.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (7 samples, 0.08%)</title><rect x="480.6" y="579.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.6" y="590.0"></text>
</g>
<g>
<title>JVM_IHashCode (4 samples, 0.05%)</title><rect x="480.9" y="563.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="483.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (9 samples, 0.11%)</title><rect x="481.7" y="643.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (9 samples, 0.11%)</title><rect x="481.7" y="627.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="484.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.11%)</title><rect x="481.7" y="611.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/652583257.invoke (9 samples, 0.11%)</title><rect x="481.7" y="595.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.7" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1760163960.invoke (9 samples, 0.11%)</title><rect x="481.7" y="579.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="484.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="482.0" y="563.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="485.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixCoder (3 samples, 0.04%)</title><rect x="482.0" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/473581465.invoke (2 samples, 0.02%)</title><rect x="482.7" y="563.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.02%)</title><rect x="482.7" y="547.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="485.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.02%)</title><rect x="482.7" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (3 samples, 0.04%)</title><rect x="483.0" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (3 samples, 0.04%)</title><rect x="483.0" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.02%)</title><rect x="483.1" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.02%)</title><rect x="483.1" y="595.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.02%)</title><rect x="483.1" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.02%)</title><rect x="483.1" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$289/1016523658.apply (27 samples, 0.33%)</title><rect x="483.4" y="771.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (27 samples, 0.33%)</title><rect x="483.4" y="755.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (27 samples, 0.33%)</title><rect x="483.4" y="739.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (25 samples, 0.30%)</title><rect x="483.6" y="723.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (23 samples, 0.28%)</title><rect x="483.9" y="707.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.9" y="718.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (19 samples, 0.23%)</title><rect x="484.4" y="691.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="487.4" y="702.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (4 samples, 0.05%)</title><rect x="484.6" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.6" y="686.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (4 samples, 0.05%)</title><rect x="484.6" y="659.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.6" y="670.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (2 samples, 0.02%)</title><rect x="484.9" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.9" y="654.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (2 samples, 0.02%)</title><rect x="484.9" y="627.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.02%)</title><rect x="484.9" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="487.9" y="622.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (14 samples, 0.17%)</title><rect x="485.2" y="675.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.2" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (11 samples, 0.13%)</title><rect x="485.6" y="659.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.6" y="670.0"></text>
</g>
<g>
<title>JVM_IHashCode (8 samples, 0.10%)</title><rect x="485.9" y="643.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="488.9" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (4 samples, 0.05%)</title><rect x="486.4" y="627.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="489.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (16 samples, 0.19%)</title><rect x="487.3" y="787.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (14 samples, 0.17%)</title><rect x="487.6" y="771.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="490.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.02%)</title><rect x="488.0" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.02%)</title><rect x="488.0" y="739.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.02%)</title><rect x="488.0" y="723.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="491.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.02%)</title><rect x="488.0" y="707.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.02%)</title><rect x="488.0" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.02%)</title><rect x="488.0" y="675.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$290/877098177.apply (9 samples, 0.11%)</title><rect x="488.3" y="755.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (9 samples, 0.11%)</title><rect x="488.3" y="739.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (9 samples, 0.11%)</title><rect x="488.3" y="723.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (9 samples, 0.11%)</title><rect x="488.3" y="707.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (8 samples, 0.10%)</title><rect x="488.4" y="691.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="491.4" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (6 samples, 0.07%)</title><rect x="488.7" y="675.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.05%)</title><rect x="489.0" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="492.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (3 samples, 0.04%)</title><rect x="489.2" y="643.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$324/669883057.apply (8 samples, 0.10%)</title><rect x="489.7" y="819.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="492.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (8 samples, 0.10%)</title><rect x="489.7" y="803.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="492.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (3 samples, 0.04%)</title><rect x="489.7" y="787.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (5 samples, 0.06%)</title><rect x="490.2" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="493.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.06%)</title><rect x="490.2" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="493.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.02%)</title><rect x="490.6" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (132 samples, 1.60%)</title><rect x="491.0" y="931.0" width="18.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (16 samples, 0.19%)</title><rect x="491.5" y="915.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="494.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.12%)</title><rect x="492.3" y="899.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="495.3" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.12%)</title><rect x="492.3" y="883.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="495.3" y="894.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (7 samples, 0.08%)</title><rect x="492.6" y="867.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="495.6" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.04%)</title><rect x="493.2" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (8 samples, 0.10%)</title><rect x="493.7" y="915.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.7" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.07%)</title><rect x="494.0" y="899.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.0" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.07%)</title><rect x="494.0" y="883.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.0" y="894.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.06%)</title><rect x="494.2" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.2" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.05%)</title><rect x="494.3" y="851.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="497.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (6 samples, 0.07%)</title><rect x="494.9" y="915.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="497.9" y="926.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.07%)</title><rect x="494.9" y="899.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.9" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.05%)</title><rect x="495.2" y="883.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="498.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="495.2" y="867.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (36 samples, 0.44%)</title><rect x="495.7" y="915.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.7" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (29 samples, 0.35%)</title><rect x="496.6" y="899.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.6" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (29 samples, 0.35%)</title><rect x="496.6" y="883.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="499.6" y="894.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.07%)</title><rect x="496.9" y="867.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="499.9" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (21 samples, 0.25%)</title><rect x="497.8" y="867.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.8" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (16 samples, 0.19%)</title><rect x="498.5" y="851.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.5" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (14 samples, 0.17%)</title><rect x="498.8" y="835.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.8" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (7 samples, 0.08%)</title><rect x="499.0" y="819.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="502.0" y="830.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="499.2" y="803.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="502.2" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (2 samples, 0.02%)</title><rect x="499.8" y="803.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.8" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.02%)</title><rect x="499.8" y="787.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.8" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.06%)</title><rect x="500.0" y="819.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="503.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.06%)</title><rect x="500.0" y="803.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.06%)</title><rect x="500.0" y="787.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="503.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.06%)</title><rect x="500.0" y="771.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="503.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrLF (3 samples, 0.04%)</title><rect x="500.9" y="915.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="503.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (3 samples, 0.04%)</title><rect x="500.9" y="899.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="503.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (60 samples, 0.73%)</title><rect x="501.3" y="915.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="504.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.06%)</title><rect x="502.2" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.2" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.06%)</title><rect x="502.2" y="883.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="505.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.06%)</title><rect x="502.2" y="867.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="505.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (47 samples, 0.57%)</title><rect x="503.2" y="899.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="503.2" y="883.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="506.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="503.2" y="867.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="506.2" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="503.2" y="851.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="506.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="503.6" y="883.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.13%)</title><rect x="504.2" y="883.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="507.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (6 samples, 0.07%)</title><rect x="504.2" y="867.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.2" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3 samples, 0.04%)</title><rect x="504.2" y="851.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="507.2" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.04%)</title><rect x="504.6" y="851.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="507.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.06%)</title><rect x="505.1" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="505.2" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.2" y="862.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (5 samples, 0.06%)</title><rect x="505.8" y="883.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (5 samples, 0.06%)</title><rect x="505.8" y="867.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.trim (11 samples, 0.13%)</title><rect x="506.5" y="883.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="509.5" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (9 samples, 0.11%)</title><rect x="506.8" y="867.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="509.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.02%)</title><rect x="507.5" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.5" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.02%)</title><rect x="508.1" y="883.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="511.1" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.02%)</title><rect x="508.1" y="867.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.1" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.02%)</title><rect x="508.1" y="851.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.1" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.02%)</title><rect x="508.1" y="835.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="511.1" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (11 samples, 0.13%)</title><rect x="508.3" y="883.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="511.3" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.05%)</title><rect x="508.5" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="511.5" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.02%)</title><rect x="509.1" y="867.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="512.1" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.04%)</title><rect x="509.4" y="867.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$253/110061556.accept (4 samples, 0.05%)</title><rect x="510.1" y="931.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="513.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (4 samples, 0.05%)</title><rect x="510.1" y="915.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="513.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (6 samples, 0.07%)</title><rect x="510.6" y="979.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (6 samples, 0.07%)</title><rect x="510.6" y="963.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="513.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.compareAndSet (2 samples, 0.02%)</title><rect x="511.2" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="514.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (431 samples, 5.23%)</title><rect x="511.5" y="1043.0" width="61.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.5" y="1054.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (428 samples, 5.19%)</title><rect x="511.9" y="1027.0" width="61.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.9" y="1038.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (428 samples, 5.19%)</title><rect x="511.9" y="1011.0" width="61.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.9" y="1022.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$236/621309814.run (427 samples, 5.18%)</title><rect x="512.1" y="995.0" width="61.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="515.1" y="1006.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (427 samples, 5.18%)</title><rect x="512.1" y="979.0" width="61.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="515.1" y="990.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (421 samples, 5.11%)</title><rect x="512.2" y="963.0" width="60.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="515.2" y="974.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (411 samples, 4.99%)</title><rect x="512.2" y="947.0" width="58.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.2" y="958.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (411 samples, 4.99%)</title><rect x="512.2" y="931.0" width="58.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.2" y="942.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$351/569771841.run (208 samples, 2.52%)</title><rect x="512.4" y="915.0" width="29.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="515.4" y="926.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (208 samples, 2.52%)</title><rect x="512.4" y="899.0" width="29.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.4" y="910.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.clear (2 samples, 0.02%)</title><rect x="512.4" y="883.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="515.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (206 samples, 2.50%)</title><rect x="512.6" y="883.0" width="29.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.6" y="894.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.04%)</title><rect x="512.8" y="867.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.8" y="878.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.02%)</title><rect x="512.9" y="851.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.9" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.02%)</title><rect x="512.9" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.9" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.02%)</title><rect x="512.9" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.9" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.02%)</title><rect x="512.9" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="515.9" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.02%)</title><rect x="512.9" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="515.9" y="798.0"></text>
</g>
<g>
<title>java/util/Optional.map (6 samples, 0.07%)</title><rect x="513.2" y="867.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.2" y="878.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (6 samples, 0.07%)</title><rect x="513.2" y="851.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.2" y="862.0"></text>
</g>
<g>
<title>java/util/Optional.of (6 samples, 0.07%)</title><rect x="513.2" y="835.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.2" y="846.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (4 samples, 0.05%)</title><rect x="513.5" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (2 samples, 0.02%)</title><rect x="513.8" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (196 samples, 2.38%)</title><rect x="514.1" y="867.0" width="28.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="517.1" y="878.0">jd..</text>
</g>
<g>
<title>java/time/Instant.now (7 samples, 0.08%)</title><rect x="514.1" y="851.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.1" y="862.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (7 samples, 0.08%)</title><rect x="514.1" y="835.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (7 samples, 0.08%)</title><rect x="514.1" y="819.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="517.1" y="830.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.05%)</title><rect x="514.4" y="803.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="517.4" y="814.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="514.5" y="787.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="517.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (189 samples, 2.29%)</title><rect x="515.1" y="851.0" width="27.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.1" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (12 samples, 0.15%)</title><rect x="515.1" y="835.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.1" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.plus (5 samples, 0.06%)</title><rect x="515.5" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.5" y="830.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (4 samples, 0.05%)</title><rect x="515.7" y="803.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.7" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.05%)</title><rect x="515.7" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.7" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.04%)</title><rect x="516.2" y="819.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.2" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.04%)</title><rect x="516.2" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.2" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (3 samples, 0.04%)</title><rect x="516.2" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="519.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (10 samples, 0.12%)</title><rect x="516.8" y="835.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="519.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.10%)</title><rect x="516.8" y="819.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.8" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.10%)</title><rect x="516.8" y="803.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (8 samples, 0.10%)</title><rect x="516.8" y="787.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="519.8" y="798.0"></text>
</g>
<g>
<title>java/util/Objects.hash (7 samples, 0.08%)</title><rect x="516.9" y="771.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.9" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (7 samples, 0.08%)</title><rect x="516.9" y="755.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="519.9" y="766.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (3 samples, 0.04%)</title><rect x="517.5" y="739.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.5" y="750.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.hashCode (2 samples, 0.02%)</title><rect x="517.7" y="723.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (167 samples, 2.03%)</title><rect x="518.2" y="835.0" width="23.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.2" y="846.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (167 samples, 2.03%)</title><rect x="518.2" y="819.0" width="23.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.2" y="830.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (16 samples, 0.19%)</title><rect x="518.2" y="803.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (16 samples, 0.19%)</title><rect x="518.2" y="787.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="521.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (16 samples, 0.19%)</title><rect x="518.2" y="771.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (8 samples, 0.10%)</title><rect x="518.7" y="755.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (8 samples, 0.10%)</title><rect x="518.7" y="739.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="518.8" y="723.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.8" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.02%)</title><rect x="518.9" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.9" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.02%)</title><rect x="518.9" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.9" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.02%)</title><rect x="518.9" y="675.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.9" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="518.9" y="659.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="521.9" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.02%)</title><rect x="518.9" y="643.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="521.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.05%)</title><rect x="519.2" y="723.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.2" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.04%)</title><rect x="519.4" y="707.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.4" y="718.0"></text>
</g>
<g>
<title>__write (2 samples, 0.02%)</title><rect x="519.5" y="691.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="522.5" y="702.0"></text>
</g>
<g>
<title>system_call_fastpath (2 samples, 0.02%)</title><rect x="519.5" y="675.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="522.5" y="686.0"></text>
</g>
<g>
<title>sys_write (2 samples, 0.02%)</title><rect x="519.5" y="659.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="522.5" y="670.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.02%)</title><rect x="519.5" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="522.5" y="654.0"></text>
</g>
<g>
<title>do_sync_write (2 samples, 0.02%)</title><rect x="519.5" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="522.5" y="638.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.02%)</title><rect x="519.5" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="522.5" y="622.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.02%)</title><rect x="519.5" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="522.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (4 samples, 0.05%)</title><rect x="519.8" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (151 samples, 1.83%)</title><rect x="520.5" y="803.0" width="21.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="523.5" y="814.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (151 samples, 1.83%)</title><rect x="520.5" y="787.0" width="21.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="523.5" y="798.0">j..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.06%)</title><rect x="520.8" y="771.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="523.8" y="782.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (5 samples, 0.06%)</title><rect x="520.8" y="755.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="523.8" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.04%)</title><rect x="521.1" y="739.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="524.1" y="750.0"></text>
</g>
<g>
<title>system_call_fastpath (2 samples, 0.02%)</title><rect x="521.2" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="524.2" y="734.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.02%)</title><rect x="521.2" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="524.2" y="718.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="521.2" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="524.2" y="702.0"></text>
</g>
<g>
<title>futex_wake_op (2 samples, 0.02%)</title><rect x="521.2" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="524.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (136 samples, 1.65%)</title><rect x="521.5" y="771.0" width="19.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="524.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (134 samples, 1.63%)</title><rect x="521.5" y="755.0" width="19.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (134 samples, 1.63%)</title><rect x="521.5" y="739.0" width="19.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="524.5" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.02%)</title><rect x="522.7" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="525.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (124 samples, 1.50%)</title><rect x="523.0" y="723.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (123 samples, 1.49%)</title><rect x="523.1" y="707.0" width="17.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="526.1" y="718.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (3 samples, 0.04%)</title><rect x="523.5" y="691.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="526.5" y="702.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.05%)</title><rect x="524.0" y="691.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="527.0" y="702.0"></text>
</g>
<g>
<title>system_call_after_swapgs (4 samples, 0.05%)</title><rect x="524.0" y="675.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="527.0" y="686.0"></text>
</g>
<g>
<title>__write (111 samples, 1.35%)</title><rect x="524.8" y="691.0" width="15.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="527.8" y="702.0"></text>
</g>
<g>
<title>auditsys (4 samples, 0.05%)</title><rect x="526.1" y="675.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="529.1" y="686.0"></text>
</g>
<g>
<title>__audit_syscall_entry (4 samples, 0.05%)</title><rect x="526.1" y="659.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="529.1" y="670.0"></text>
</g>
<g>
<title>system_call_fastpath (96 samples, 1.17%)</title><rect x="526.8" y="675.0" width="13.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="529.8" y="686.0"></text>
</g>
<g>
<title>fput (2 samples, 0.02%)</title><rect x="526.8" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="529.8" y="670.0"></text>
</g>
<g>
<title>sys_write (94 samples, 1.14%)</title><rect x="527.1" y="659.0" width="13.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="530.1" y="670.0"></text>
</g>
<g>
<title>fget_light (4 samples, 0.05%)</title><rect x="527.3" y="643.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="530.3" y="654.0"></text>
</g>
<g>
<title>vfs_write (89 samples, 1.08%)</title><rect x="527.8" y="643.0" width="12.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="530.8" y="654.0"></text>
</g>
<g>
<title>do_sync_write (79 samples, 0.96%)</title><rect x="527.8" y="627.0" width="11.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="530.8" y="638.0"></text>
</g>
<g>
<title>pipe_write (76 samples, 0.92%)</title><rect x="528.3" y="611.0" width="10.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="531.3" y="622.0"></text>
</g>
<g>
<title>__wake_up_sync_key (63 samples, 0.76%)</title><rect x="528.4" y="595.0" width="9.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="531.4" y="606.0"></text>
</g>
<g>
<title>__wake_up_common_lock (63 samples, 0.76%)</title><rect x="528.4" y="579.0" width="9.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="531.4" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (63 samples, 0.76%)</title><rect x="528.4" y="563.0" width="9.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="531.4" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.02%)</title><rect x="537.6" y="595.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="540.6" y="606.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.04%)</title><rect x="537.8" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="540.8" y="606.0"></text>
</g>
<g>
<title>pipe_iov_copy_from_user.constprop.9 (4 samples, 0.05%)</title><rect x="538.6" y="595.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="541.6" y="606.0"></text>
</g>
<g>
<title>static_key_enabled (2 samples, 0.02%)</title><rect x="538.9" y="579.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="541.9" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (9 samples, 0.11%)</title><rect x="539.3" y="627.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="542.3" y="638.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.08%)</title><rect x="539.6" y="611.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="542.6" y="622.0"></text>
</g>
<g>
<title>selinux_file_permission (7 samples, 0.08%)</title><rect x="539.6" y="595.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="542.6" y="606.0"></text>
</g>
<g>
<title>file_has_perm (3 samples, 0.04%)</title><rect x="540.1" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="543.1" y="590.0"></text>
</g>
<g>
<title>inode_has_perm.isra.34.constprop.71 (3 samples, 0.04%)</title><rect x="540.1" y="563.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="543.1" y="574.0"></text>
</g>
<g>
<title>avc_has_perm_flags (3 samples, 0.04%)</title><rect x="540.1" y="547.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="543.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (2 samples, 0.02%)</title><rect x="540.7" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (6 samples, 0.07%)</title><rect x="541.0" y="771.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="544.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$352/1607757290.accept (12 samples, 0.15%)</title><rect x="542.1" y="915.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (12 samples, 0.15%)</title><rect x="542.1" y="899.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="545.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (12 samples, 0.15%)</title><rect x="542.1" y="883.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10 samples, 0.12%)</title><rect x="542.1" y="867.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="545.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.12%)</title><rect x="542.1" y="851.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (10 samples, 0.12%)</title><rect x="542.1" y="835.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.12%)</title><rect x="542.1" y="819.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (2 samples, 0.02%)</title><rect x="542.4" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="545.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.02%)</title><rect x="542.4" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="545.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.02%)</title><rect x="542.4" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$356/1122728445.accept (2 samples, 0.02%)</title><rect x="542.7" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="545.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (2 samples, 0.02%)</title><rect x="542.7" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$357/1715244547.accept (4 samples, 0.05%)</title><rect x="543.0" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (4 samples, 0.05%)</title><rect x="543.0" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (4 samples, 0.05%)</title><rect x="543.0" y="771.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="546.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/1261770073.accept (2 samples, 0.02%)</title><rect x="543.6" y="867.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (2 samples, 0.02%)</title><rect x="543.6" y="851.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (187 samples, 2.27%)</title><rect x="543.9" y="915.0" width="26.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="546.9" y="926.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (187 samples, 2.27%)</title><rect x="543.9" y="899.0" width="26.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.9" y="910.0">j..</text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="543.9" y="883.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="546.9" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers$$Lambda$415/1378676458.apply (2 samples, 0.02%)</title><rect x="544.3" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (182 samples, 2.21%)</title><rect x="544.6" y="883.0" width="26.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="547.6" y="894.0">j..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers$$Lambda$415/1378676458.apply (4 samples, 0.05%)</title><rect x="544.6" y="867.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="547.6" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.lambda$ofString$2 (4 samples, 0.05%)</title><rect x="544.6" y="851.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="544.6" y="835.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="547.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="544.6" y="819.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="547.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (3 samples, 0.04%)</title><rect x="544.7" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="547.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (178 samples, 2.16%)</title><rect x="545.2" y="867.0" width="25.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="548.2" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (178 samples, 2.16%)</title><rect x="545.2" y="851.0" width="25.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.2" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (177 samples, 2.15%)</title><rect x="545.3" y="835.0" width="25.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.3" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (176 samples, 2.14%)</title><rect x="545.4" y="819.0" width="25.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.4" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (10 samples, 0.12%)</title><rect x="545.4" y="803.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (10 samples, 0.12%)</title><rect x="545.4" y="787.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (10 samples, 0.12%)</title><rect x="545.4" y="771.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="548.4" y="782.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="545.6" y="755.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="548.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$361/609138659.accept (5 samples, 0.06%)</title><rect x="546.2" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$361/609138659.accept (166 samples, 2.01%)</title><rect x="546.9" y="803.0" width="23.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.9" y="814.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (166 samples, 2.01%)</title><rect x="546.9" y="787.0" width="23.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.9" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (166 samples, 2.01%)</title><rect x="546.9" y="771.0" width="23.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="549.9" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (165 samples, 2.00%)</title><rect x="547.0" y="755.0" width="23.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.0" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.05%)</title><rect x="548.3" y="739.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="551.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$369/256809203.apply (4 samples, 0.05%)</title><rect x="548.3" y="723.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="551.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (3 samples, 0.04%)</title><rect x="548.4" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="551.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (2 samples, 0.02%)</title><rect x="548.6" y="691.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (151 samples, 1.83%)</title><rect x="548.9" y="739.0" width="21.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="551.9" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (148 samples, 1.80%)</title><rect x="549.3" y="723.0" width="21.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.3" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (138 samples, 1.67%)</title><rect x="549.7" y="707.0" width="19.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (135 samples, 1.64%)</title><rect x="549.9" y="691.0" width="19.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (135 samples, 1.64%)</title><rect x="549.9" y="675.0" width="19.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (133 samples, 1.61%)</title><rect x="550.2" y="659.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (131 samples, 1.59%)</title><rect x="550.5" y="643.0" width="18.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (130 samples, 1.58%)</title><rect x="550.6" y="627.0" width="18.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (130 samples, 1.58%)</title><rect x="550.6" y="611.0" width="18.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.6" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (28 samples, 0.34%)</title><rect x="551.0" y="595.0" width="4.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="554.0" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (5 samples, 0.06%)</title><rect x="552.5" y="579.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="555.5" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.04%)</title><rect x="553.2" y="579.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="556.2" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.07%)</title><rect x="553.6" y="579.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="556.6" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.04%)</title><rect x="554.5" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="557.5" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (90 samples, 1.09%)</title><rect x="555.2" y="595.0" width="12.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="558.2" y="606.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.02%)</title><rect x="555.8" y="579.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="558.8" y="590.0"></text>
</g>
<g>
<title>system_call_fastpath (84 samples, 1.02%)</title><rect x="556.0" y="579.0" width="12.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="559.0" y="590.0"></text>
</g>
<g>
<title>sys_futex (83 samples, 1.01%)</title><rect x="556.2" y="563.0" width="11.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="559.2" y="574.0"></text>
</g>
<g>
<title>do_futex (82 samples, 1.00%)</title><rect x="556.3" y="547.0" width="11.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="559.3" y="558.0"></text>
</g>
<g>
<title>futex_wake_op (79 samples, 0.96%)</title><rect x="556.6" y="531.0" width="11.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="559.6" y="542.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.02%)</title><rect x="556.9" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="559.9" y="526.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.04%)</title><rect x="557.2" y="515.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="560.2" y="526.0"></text>
</g>
<g>
<title>wake_up_q (72 samples, 0.87%)</title><rect x="557.6" y="515.0" width="10.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="560.6" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (72 samples, 0.87%)</title><rect x="557.6" y="499.0" width="10.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="560.6" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (72 samples, 0.87%)</title><rect x="557.6" y="483.0" width="10.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="560.6" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="568.1" y="595.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="571.1" y="606.0"></text>
</g>
<g>
<title>__write (4 samples, 0.05%)</title><rect x="568.4" y="595.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="571.4" y="606.0"></text>
</g>
<g>
<title>system_call_after_swapgs (4 samples, 0.05%)</title><rect x="568.4" y="579.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="571.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.02%)</title><rect x="569.2" y="691.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.02%)</title><rect x="569.2" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (2 samples, 0.02%)</title><rect x="569.2" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (4 samples, 0.05%)</title><rect x="569.5" y="707.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.05%)</title><rect x="569.5" y="691.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.05%)</title><rect x="569.5" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$366/707873305.accept (2 samples, 0.02%)</title><rect x="570.1" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (2 samples, 0.02%)</title><rect x="570.1" y="691.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="573.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (3 samples, 0.04%)</title><rect x="570.6" y="915.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (3 samples, 0.04%)</title><rect x="570.6" y="899.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (3 samples, 0.04%)</title><rect x="570.6" y="883.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (8 samples, 0.10%)</title><rect x="571.1" y="947.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (2 samples, 0.02%)</title><rect x="572.2" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (5 samples, 0.06%)</title><rect x="572.5" y="963.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="575.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (5 samples, 0.06%)</title><rect x="572.5" y="947.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5 samples, 0.06%)</title><rect x="572.5" y="931.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5 samples, 0.06%)</title><rect x="572.5" y="915.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="575.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.05%)</title><rect x="572.6" y="899.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.05%)</title><rect x="572.6" y="883.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.6" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.05%)</title><rect x="572.6" y="867.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.6" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$113/1746272309.run (1,274 samples, 15.46%)</title><rect x="573.2" y="1075.0" width="182.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="576.2" y="1086.0">ru/mail/polis/service/ht..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$asyncExecute$4 (1,270 samples, 15.41%)</title><rect x="573.8" y="1059.0" width="181.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="576.8" y="1070.0">ru/mail/polis/service/h..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$391/1150276494.submit (731 samples, 8.87%)</title><rect x="573.9" y="1043.0" width="104.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.9" y="1054.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$entity$1 (731 samples, 8.87%)</title><rect x="573.9" y="1027.0" width="104.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.9" y="1038.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpController.upset (730 samples, 8.86%)</title><rect x="574.1" y="1011.0" width="104.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.1" y="1022.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.19%)</title><rect x="574.5" y="995.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="577.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (16 samples, 0.19%)</title><rect x="574.5" y="979.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.5" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/197892659.invoke (16 samples, 0.19%)</title><rect x="574.5" y="963.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.5" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.10%)</title><rect x="574.8" y="947.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.8" y="958.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (4 samples, 0.05%)</title><rect x="574.8" y="931.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="577.8" y="942.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.05%)</title><rect x="574.8" y="915.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="577.8" y="926.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.02%)</title><rect x="575.4" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="578.4" y="942.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.02%)</title><rect x="575.4" y="915.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.02%)</title><rect x="575.4" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.4" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.02%)</title><rect x="575.7" y="931.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.7" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/473581465.invoke (6 samples, 0.07%)</title><rect x="575.9" y="947.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.9" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.07%)</title><rect x="575.9" y="931.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="578.9" y="942.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (5 samples, 0.06%)</title><rect x="576.1" y="915.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="579.1" y="926.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="576.5" y="899.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="579.5" y="910.0"></text>
</g>
<g>
<title>java/net/URI.create (39 samples, 0.47%)</title><rect x="576.8" y="995.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="579.8" y="1006.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (39 samples, 0.47%)</title><rect x="576.8" y="979.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.8" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (39 samples, 0.47%)</title><rect x="576.8" y="963.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.8" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (2 samples, 0.02%)</title><rect x="576.8" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="579.8" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (3 samples, 0.04%)</title><rect x="577.1" y="947.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.1" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.04%)</title><rect x="577.1" y="931.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="580.1" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.04%)</title><rect x="577.1" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.1" y="926.0"></text>
</g>
<g>
<title>java/net/URI.match (2 samples, 0.02%)</title><rect x="577.2" y="899.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.2" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (29 samples, 0.35%)</title><rect x="577.5" y="947.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="580.5" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (4 samples, 0.05%)</title><rect x="577.7" y="931.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="580.7" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.05%)</title><rect x="577.7" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.7" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (16 samples, 0.19%)</title><rect x="578.2" y="931.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="581.2" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (6 samples, 0.07%)</title><rect x="578.5" y="915.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="581.5" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2 samples, 0.02%)</title><rect x="578.7" y="899.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.7" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.02%)</title><rect x="578.7" y="883.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="581.7" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.04%)</title><rect x="578.9" y="899.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="581.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="579.1" y="883.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.1" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="579.1" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.02%)</title><rect x="579.1" y="851.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.1" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (8 samples, 0.10%)</title><rect x="579.4" y="915.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="582.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="579.8" y="899.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.04%)</title><rect x="579.8" y="883.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="582.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="580.2" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="583.2" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (8 samples, 0.10%)</title><rect x="580.5" y="931.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="583.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.charAt (6 samples, 0.07%)</title><rect x="580.7" y="915.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.7" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (5 samples, 0.06%)</title><rect x="580.8" y="899.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.8" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.06%)</title><rect x="581.7" y="947.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="584.7" y="958.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="581.7" y="931.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.7" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="582.1" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.1" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.02%)</title><rect x="582.1" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.1" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.07%)</title><rect x="582.4" y="995.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.4" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.07%)</title><rect x="582.4" y="979.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.4" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.07%)</title><rect x="582.4" y="963.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.4" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.07%)</title><rect x="582.4" y="947.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.4" y="958.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.07%)</title><rect x="582.4" y="931.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="585.4" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.06%)</title><rect x="582.5" y="915.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.5" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (5 samples, 0.06%)</title><rect x="582.5" y="899.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="585.5" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.06%)</title><rect x="582.5" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (4 samples, 0.05%)</title><rect x="582.7" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="585.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (95 samples, 1.15%)</title><rect x="583.2" y="995.0" width="13.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (95 samples, 1.15%)</title><rect x="583.2" y="979.0" width="13.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (93 samples, 1.13%)</title><rect x="583.5" y="963.0" width="13.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="586.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (93 samples, 1.13%)</title><rect x="583.5" y="947.0" width="13.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="586.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.isReleasable (3 samples, 0.04%)</title><rect x="583.5" y="931.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (90 samples, 1.09%)</title><rect x="584.0" y="931.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (90 samples, 1.09%)</title><rect x="584.0" y="915.0" width="12.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.0" y="926.0"></text>
</g>
<g>
<title>Unsafe_Park (76 samples, 0.92%)</title><rect x="584.5" y="899.0" width="10.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="587.5" y="910.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (31 samples, 0.38%)</title><rect x="585.1" y="883.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="588.1" y="894.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (15 samples, 0.18%)</title><rect x="587.0" y="867.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="590.0" y="878.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (2 samples, 0.02%)</title><rect x="588.1" y="851.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="591.1" y="862.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.02%)</title><rect x="588.4" y="851.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="591.4" y="862.0"></text>
</g>
<g>
<title>update_get_addr (3 samples, 0.04%)</title><rect x="588.7" y="851.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="591.7" y="862.0"></text>
</g>
<g>
<title>update_get_addr (2 samples, 0.02%)</title><rect x="589.3" y="867.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="592.3" y="878.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="589.5" y="883.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="592.5" y="894.0"></text>
</g>
<g>
<title>__lll_unlock_wake (19 samples, 0.23%)</title><rect x="590.4" y="883.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="593.4" y="894.0"></text>
</g>
<g>
<title>system_call_fastpath (3 samples, 0.04%)</title><rect x="592.7" y="867.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="595.7" y="878.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="592.7" y="851.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="595.7" y="862.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="592.7" y="835.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="595.7" y="846.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="592.8" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="595.8" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 0.11%)</title><rect x="593.1" y="883.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="596.1" y="894.0"></text>
</g>
<g>
<title>system_call_fastpath (3 samples, 0.04%)</title><rect x="594.0" y="867.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="597.0" y="878.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="594.0" y="851.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="597.0" y="862.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="594.0" y="835.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="597.0" y="846.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.04%)</title><rect x="594.0" y="819.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="597.0" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.02%)</title><rect x="594.0" y="803.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="597.0" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.02%)</title><rect x="594.4" y="883.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="597.4" y="894.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.04%)</title><rect x="594.8" y="883.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="597.8" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.05%)</title><rect x="595.4" y="899.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="598.4" y="910.0"></text>
</g>
<g>
<title>system_call_after_swapgs (4 samples, 0.05%)</title><rect x="595.4" y="883.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="598.4" y="894.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.04%)</title><rect x="596.0" y="899.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="599.0" y="910.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.04%)</title><rect x="596.4" y="899.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="599.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.incrementAndGet (2 samples, 0.02%)</title><rect x="597.0" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (319 samples, 3.87%)</title><rect x="597.3" y="995.0" width="45.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.3" y="1006.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (319 samples, 3.87%)</title><rect x="597.3" y="979.0" width="45.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.3" y="990.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (319 samples, 3.87%)</title><rect x="597.3" y="963.0" width="45.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.3" y="974.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (317 samples, 3.85%)</title><rect x="597.6" y="947.0" width="45.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.6" y="958.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.08%)</title><rect x="597.9" y="931.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.9" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.08%)</title><rect x="597.9" y="915.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="600.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$162/1256959182.get$Lambda (7 samples, 0.08%)</title><rect x="597.9" y="899.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$162/1256959182.&lt;init&gt; (4 samples, 0.05%)</title><rect x="598.3" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="601.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.02%)</title><rect x="598.9" y="931.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="599.1" y="931.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.04%)</title><rect x="599.1" y="915.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.04%)</title><rect x="599.1" y="899.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.reference (2 samples, 0.02%)</title><rect x="599.6" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="602.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (132 samples, 1.60%)</title><rect x="599.9" y="931.0" width="18.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="602.9" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (7 samples, 0.08%)</title><rect x="600.0" y="915.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.0" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.02%)</title><rect x="600.1" y="899.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.1" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.02%)</title><rect x="600.1" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="603.1" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.02%)</title><rect x="600.1" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.1" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.02%)</title><rect x="600.1" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.1" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.02%)</title><rect x="600.1" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.1" y="846.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.04%)</title><rect x="600.4" y="899.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.4" y="910.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.04%)</title><rect x="600.4" y="883.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.4" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.02%)</title><rect x="600.4" y="867.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.4" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.02%)</title><rect x="600.4" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="603.4" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.02%)</title><rect x="600.4" y="835.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="603.4" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12 samples, 0.15%)</title><rect x="601.0" y="915.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.0" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (12 samples, 0.15%)</title><rect x="601.0" y="899.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="604.0" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (11 samples, 0.13%)</title><rect x="601.1" y="883.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.1" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (9 samples, 0.11%)</title><rect x="601.4" y="867.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.4" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (9 samples, 0.11%)</title><rect x="601.4" y="851.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.4" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (9 samples, 0.11%)</title><rect x="601.4" y="835.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8 samples, 0.10%)</title><rect x="601.4" y="819.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="604.4" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (7 samples, 0.08%)</title><rect x="601.6" y="803.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="604.6" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.05%)</title><rect x="602.0" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="605.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.02%)</title><rect x="602.0" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.02%)</title><rect x="602.0" y="755.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="605.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/1995250556.test (2 samples, 0.02%)</title><rect x="602.3" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="605.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (2 samples, 0.02%)</title><rect x="602.3" y="755.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (2 samples, 0.02%)</title><rect x="602.3" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="602.3" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.02%)</title><rect x="602.7" y="915.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="605.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.02%)</title><rect x="602.7" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.02%)</title><rect x="602.7" y="883.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (106 samples, 1.29%)</title><rect x="603.0" y="915.0" width="15.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.0" y="926.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (106 samples, 1.29%)</title><rect x="603.0" y="899.0" width="15.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.04%)</title><rect x="603.0" y="883.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="606.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.02%)</title><rect x="603.0" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.02%)</title><rect x="603.0" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="606.0" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (102 samples, 1.24%)</title><rect x="603.4" y="883.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="606.4" y="894.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (66 samples, 0.80%)</title><rect x="604.4" y="867.0" width="9.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="607.4" y="878.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.02%)</title><rect x="605.6" y="851.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="608.6" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.04%)</title><rect x="605.9" y="851.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="608.9" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (3 samples, 0.04%)</title><rect x="605.9" y="835.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="608.9" y="846.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (12 samples, 0.15%)</title><rect x="606.3" y="851.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="609.3" y="862.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (2 samples, 0.02%)</title><rect x="606.9" y="835.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="609.9" y="846.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.02%)</title><rect x="607.2" y="835.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="610.2" y="846.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.02%)</title><rect x="607.4" y="835.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="610.4" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (17 samples, 0.21%)</title><rect x="608.6" y="851.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="611.6" y="862.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (3 samples, 0.04%)</title><rect x="608.9" y="835.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="611.9" y="846.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (10 samples, 0.12%)</title><rect x="609.3" y="835.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="612.3" y="846.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (8 samples, 0.10%)</title><rect x="609.3" y="819.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="612.3" y="830.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.04%)</title><rect x="610.0" y="803.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="613.0" y="814.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.02%)</title><rect x="610.5" y="819.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="613.5" y="830.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.02%)</title><rect x="610.7" y="835.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="613.7" y="846.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (20 samples, 0.24%)</title><rect x="611.0" y="851.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="614.0" y="862.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (8 samples, 0.10%)</title><rect x="611.9" y="835.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="614.9" y="846.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (8 samples, 0.10%)</title><rect x="611.9" y="819.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="614.9" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (6 samples, 0.07%)</title><rect x="613.0" y="835.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="616.0" y="846.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (2 samples, 0.02%)</title><rect x="613.0" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="616.0" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (4 samples, 0.05%)</title><rect x="613.3" y="819.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="616.3" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.02%)</title><rect x="613.3" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="616.3" y="814.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.02%)</title><rect x="613.3" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="616.3" y="798.0"></text>
</g>
<g>
<title>call_stub (5 samples, 0.06%)</title><rect x="614.0" y="867.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="617.0" y="878.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (23 samples, 0.28%)</title><rect x="614.7" y="867.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="617.7" y="878.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (22 samples, 0.27%)</title><rect x="614.9" y="851.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (10 samples, 0.12%)</title><rect x="614.9" y="835.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.12%)</title><rect x="614.9" y="819.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.07%)</title><rect x="615.5" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.5" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.05%)</title><rect x="615.8" y="787.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.8" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (4 samples, 0.05%)</title><rect x="615.8" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.8" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (4 samples, 0.05%)</title><rect x="615.8" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.02%)</title><rect x="616.3" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="619.3" y="846.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (9 samples, 0.11%)</title><rect x="616.8" y="835.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="619.8" y="846.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (9 samples, 0.11%)</title><rect x="616.8" y="819.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (9 samples, 0.11%)</title><rect x="616.8" y="803.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.02%)</title><rect x="617.5" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (3 samples, 0.04%)</title><rect x="618.3" y="915.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="621.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (27 samples, 0.33%)</title><rect x="618.8" y="931.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (6 samples, 0.07%)</title><rect x="619.5" y="915.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="622.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.06%)</title><rect x="619.6" y="899.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.06%)</title><rect x="619.6" y="883.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="622.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (5 samples, 0.06%)</title><rect x="619.6" y="867.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (5 samples, 0.06%)</title><rect x="619.6" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.6" y="862.0"></text>
</g>
<g>
<title>java/lang/System$Logger$Level.getSeverity (3 samples, 0.04%)</title><rect x="619.6" y="835.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="622.6" y="846.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (2 samples, 0.02%)</title><rect x="620.0" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.0" y="846.0"></text>
</g>
<g>
<title>java/util/logging/Logger.isLoggable (2 samples, 0.02%)</title><rect x="620.0" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (16 samples, 0.19%)</title><rect x="620.3" y="915.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (16 samples, 0.19%)</title><rect x="620.3" y="899.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.3" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (3 samples, 0.04%)</title><rect x="620.5" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="623.5" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (3 samples, 0.04%)</title><rect x="620.5" y="867.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.5" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (3 samples, 0.04%)</title><rect x="620.5" y="851.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="623.5" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (5 samples, 0.06%)</title><rect x="620.9" y="883.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.9" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (5 samples, 0.06%)</title><rect x="620.9" y="867.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.9" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (5 samples, 0.06%)</title><rect x="620.9" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.9" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (4 samples, 0.05%)</title><rect x="621.1" y="835.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.1" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (5 samples, 0.06%)</title><rect x="621.9" y="883.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.9" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (5 samples, 0.06%)</title><rect x="621.9" y="867.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.9" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList$Node.&lt;init&gt; (4 samples, 0.05%)</title><rect x="622.1" y="851.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="625.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (142 samples, 1.72%)</title><rect x="622.6" y="931.0" width="20.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (141 samples, 1.71%)</title><rect x="622.6" y="915.0" width="20.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (141 samples, 1.71%)</title><rect x="622.6" y="899.0" width="20.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="625.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (140 samples, 1.70%)</title><rect x="622.8" y="883.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="625.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (140 samples, 1.70%)</title><rect x="622.8" y="867.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="625.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (130 samples, 1.58%)</title><rect x="623.5" y="851.0" width="18.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="626.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (130 samples, 1.58%)</title><rect x="623.5" y="835.0" width="18.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="626.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (130 samples, 1.58%)</title><rect x="623.5" y="819.0" width="18.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.5" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (20 samples, 0.24%)</title><rect x="624.2" y="803.0" width="2.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="627.2" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="625.5" y="787.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="628.5" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.05%)</title><rect x="625.9" y="787.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="628.9" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.02%)</title><rect x="626.6" y="787.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="629.6" y="798.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.02%)</title><rect x="627.1" y="803.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="630.1" y="814.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.02%)</title><rect x="627.1" y="787.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="630.1" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (102 samples, 1.24%)</title><rect x="627.4" y="803.0" width="14.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="630.4" y="814.0"></text>
</g>
<g>
<title>auditsys (4 samples, 0.05%)</title><rect x="628.6" y="787.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="631.6" y="798.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.04%)</title><rect x="628.8" y="771.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="631.8" y="782.0"></text>
</g>
<g>
<title>system_call_fastpath (87 samples, 1.06%)</title><rect x="629.5" y="787.0" width="12.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="632.5" y="798.0"></text>
</g>
<g>
<title>sys_futex (87 samples, 1.06%)</title><rect x="629.5" y="771.0" width="12.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="632.5" y="782.0"></text>
</g>
<g>
<title>do_futex (87 samples, 1.06%)</title><rect x="629.5" y="755.0" width="12.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="632.5" y="766.0"></text>
</g>
<g>
<title>futex_wake_op (85 samples, 1.03%)</title><rect x="629.6" y="739.0" width="12.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="632.6" y="750.0"></text>
</g>
<g>
<title>wake_up_q (81 samples, 0.98%)</title><rect x="630.2" y="723.0" width="11.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="633.2" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (81 samples, 0.98%)</title><rect x="630.2" y="707.0" width="11.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="633.2" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (81 samples, 0.98%)</title><rect x="630.2" y="691.0" width="11.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="633.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (3 samples, 0.04%)</title><rect x="642.1" y="851.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2 samples, 0.02%)</title><rect x="642.5" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (2 samples, 0.02%)</title><rect x="642.5" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (28 samples, 0.34%)</title><rect x="643.0" y="995.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (28 samples, 0.34%)</title><rect x="643.0" y="979.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="646.0" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (28 samples, 0.34%)</title><rect x="643.0" y="963.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.0" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (28 samples, 0.34%)</title><rect x="643.0" y="947.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="646.0" y="958.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="644.2" y="931.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="647.2" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (15 samples, 0.18%)</title><rect x="644.8" y="931.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="647.8" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (10 samples, 0.12%)</title><rect x="645.5" y="915.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.5" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10 samples, 0.12%)</title><rect x="645.5" y="899.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.5" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (10 samples, 0.12%)</title><rect x="645.5" y="883.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.5" y="894.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="645.8" y="867.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="648.8" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (4 samples, 0.05%)</title><rect x="646.3" y="867.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.3" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.05%)</title><rect x="646.3" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="649.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$64/1750498848.test (2 samples, 0.02%)</title><rect x="646.5" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.02%)</title><rect x="646.5" y="819.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.5" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.02%)</title><rect x="646.5" y="803.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="649.5" y="814.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.02%)</title><rect x="646.5" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="649.5" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.02%)</title><rect x="646.5" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="649.5" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.02%)</title><rect x="646.5" y="755.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="649.5" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.02%)</title><rect x="646.5" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="649.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.02%)</title><rect x="646.5" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="649.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.02%)</title><rect x="646.5" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="649.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.02%)</title><rect x="646.5" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (17 samples, 0.21%)</title><rect x="647.0" y="995.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="650.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (17 samples, 0.21%)</title><rect x="647.0" y="979.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (12 samples, 0.15%)</title><rect x="647.0" y="963.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="650.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$64/1750498848.test (7 samples, 0.08%)</title><rect x="647.1" y="947.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (7 samples, 0.08%)</title><rect x="647.1" y="931.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="650.1" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (7 samples, 0.08%)</title><rect x="647.1" y="915.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.1" y="926.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (6 samples, 0.07%)</title><rect x="647.3" y="899.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.3" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (6 samples, 0.07%)</title><rect x="647.3" y="883.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="650.3" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.07%)</title><rect x="647.3" y="867.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.3" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.07%)</title><rect x="647.3" y="851.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="650.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.05%)</title><rect x="647.5" y="835.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="650.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.05%)</title><rect x="647.5" y="819.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (4 samples, 0.05%)</title><rect x="647.5" y="803.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (3 samples, 0.04%)</title><rect x="648.1" y="947.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="651.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5 samples, 0.06%)</title><rect x="648.7" y="963.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.7" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.05%)</title><rect x="648.8" y="947.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="651.8" y="958.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="649.0" y="931.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="649.0" y="915.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.0" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="649.0" y="899.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="652.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.02%)</title><rect x="649.4" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="652.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.02%)</title><rect x="649.4" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.02%)</title><rect x="649.4" y="963.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.02%)</title><rect x="649.4" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.4" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.02%)</title><rect x="649.4" y="931.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.4" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.10%)</title><rect x="649.7" y="995.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="652.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="650.1" y="979.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="650.1" y="963.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.1" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.05%)</title><rect x="650.8" y="995.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="653.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/LSMDao.upsert (176 samples, 2.14%)</title><rect x="651.4" y="995.0" width="25.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.4" y="1006.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTablesPool.upsert (175 samples, 2.12%)</title><rect x="651.6" y="979.0" width="25.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.6" y="990.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (16 samples, 0.19%)</title><rect x="651.8" y="963.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="654.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (13 samples, 0.16%)</title><rect x="652.0" y="947.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="655.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (10 samples, 0.12%)</title><rect x="652.4" y="931.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="655.4" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="653.8" y="947.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="656.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (10 samples, 0.12%)</title><rect x="654.1" y="963.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (10 samples, 0.12%)</title><rect x="654.1" y="947.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="657.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (3 samples, 0.04%)</title><rect x="654.1" y="931.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (7 samples, 0.08%)</title><rect x="654.6" y="931.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.6" y="942.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="654.6" y="915.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="657.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.02%)</title><rect x="655.0" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.0" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.02%)</title><rect x="655.0" y="899.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="658.0" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.02%)</title><rect x="655.0" y="883.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.incrementAndGet (2 samples, 0.02%)</title><rect x="655.0" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.0" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.02%)</title><rect x="655.3" y="915.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="658.3" y="926.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="655.3" y="899.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="658.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTable.upsert (147 samples, 1.78%)</title><rect x="655.6" y="963.0" width="21.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.6" y="974.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (132 samples, 1.60%)</title><rect x="655.7" y="947.0" width="18.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="658.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (132 samples, 1.60%)</title><rect x="655.7" y="931.0" width="18.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.7" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (28 samples, 0.34%)</title><rect x="656.6" y="915.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.6" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (25 samples, 0.30%)</title><rect x="657.0" y="899.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="660.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (4 samples, 0.05%)</title><rect x="660.6" y="915.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (21 samples, 0.25%)</title><rect x="661.1" y="915.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (4 samples, 0.05%)</title><rect x="662.3" y="899.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.02%)</title><rect x="662.6" y="883.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="665.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.02%)</title><rect x="662.6" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="665.6" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="662.6" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.6" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.02%)</title><rect x="662.6" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="665.6" y="846.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.02%)</title><rect x="662.6" y="819.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (9 samples, 0.11%)</title><rect x="662.9" y="899.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.9" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.11%)</title><rect x="662.9" y="883.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="665.9" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.08%)</title><rect x="663.2" y="867.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="666.2" y="878.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.07%)</title><rect x="663.3" y="851.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="666.3" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.07%)</title><rect x="663.3" y="835.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (73 samples, 0.89%)</title><rect x="664.2" y="915.0" width="10.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="667.2" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (63 samples, 0.76%)</title><rect x="665.6" y="899.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="668.6" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (60 samples, 0.73%)</title><rect x="666.0" y="883.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.0" y="894.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.16%)</title><rect x="666.3" y="867.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.3" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.05%)</title><rect x="667.6" y="851.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="670.6" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.04%)</title><rect x="667.7" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compare (2 samples, 0.02%)</title><rect x="668.2" y="867.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.2" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (43 samples, 0.52%)</title><rect x="668.5" y="867.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="671.5" y="878.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.04%)</title><rect x="674.6" y="947.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="677.6" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Value.of (11 samples, 0.13%)</title><rect x="675.0" y="947.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.0" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (8 samples, 0.10%)</title><rect x="675.2" y="931.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.2" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.07%)</title><rect x="675.3" y="915.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="678.3" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.07%)</title><rect x="675.3" y="899.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="678.3" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.07%)</title><rect x="675.3" y="883.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.3" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="675.3" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.3" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="675.3" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.3" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.05%)</title><rect x="675.6" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.6" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.05%)</title><rect x="675.6" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="678.6" y="862.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.04%)</title><rect x="675.6" y="835.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/Balancer.poolsNodes (14 samples, 0.17%)</title><rect x="676.6" y="995.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="679.6" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/Balancer.hashCreate (14 samples, 0.17%)</title><rect x="676.6" y="979.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="679.6" y="990.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (14 samples, 0.17%)</title><rect x="676.6" y="963.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.6" y="974.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (5 samples, 0.06%)</title><rect x="676.8" y="947.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.8" y="958.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (5 samples, 0.06%)</title><rect x="676.8" y="931.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.8" y="942.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (2 samples, 0.02%)</title><rect x="676.8" y="915.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.8" y="926.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (2 samples, 0.02%)</title><rect x="676.8" y="899.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.8" y="910.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.&lt;init&gt; (2 samples, 0.02%)</title><rect x="676.8" y="883.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="679.8" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.02%)</title><rect x="676.8" y="867.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="679.8" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="676.8" y="851.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.8" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="676.8" y="835.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.8" y="846.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="676.8" y="819.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.02%)</title><rect x="676.8" y="803.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="679.8" y="814.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.clone (3 samples, 0.04%)</title><rect x="677.0" y="915.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.0" y="926.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.clone (2 samples, 0.02%)</title><rect x="677.2" y="899.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.2" y="910.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.clone (2 samples, 0.02%)</title><rect x="677.2" y="883.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.2" y="894.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (8 samples, 0.10%)</title><rect x="677.5" y="947.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.5" y="958.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (7 samples, 0.08%)</title><rect x="677.5" y="931.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.5" y="942.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (7 samples, 0.08%)</title><rect x="677.5" y="915.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="680.5" y="926.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (7 samples, 0.08%)</title><rect x="677.5" y="899.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.5" y="910.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (7 samples, 0.08%)</title><rect x="677.5" y="883.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.5" y="894.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implDigest (7 samples, 0.08%)</title><rect x="677.5" y="867.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.5" y="878.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (7 samples, 0.08%)</title><rect x="677.5" y="851.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.5" y="862.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress0 (6 samples, 0.07%)</title><rect x="677.5" y="835.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.5" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$ResponseUtils.sendResponse (538 samples, 6.53%)</title><rect x="678.6" y="1043.0" width="77.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="681.6" y="1054.0">ru/mail/p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (537 samples, 6.52%)</title><rect x="678.6" y="1027.0" width="76.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.6" y="1038.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="678.9" y="1011.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="681.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="678.9" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="678.9" y="979.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.9" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (526 samples, 6.38%)</title><rect x="679.5" y="1011.0" width="75.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="682.5" y="1022.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (15 samples, 0.18%)</title><rect x="679.5" y="995.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="682.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.07%)</title><rect x="680.8" y="979.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="683.8" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.04%)</title><rect x="680.8" y="963.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="683.8" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="681.2" y="963.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.2" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="681.2" y="947.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.02%)</title><rect x="681.2" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.2" y="942.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.02%)</title><rect x="681.2" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.2" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (511 samples, 6.20%)</title><rect x="681.6" y="995.0" width="73.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.6" y="1006.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (511 samples, 6.20%)</title><rect x="681.6" y="979.0" width="73.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="684.6" y="990.0">one/nio/..</text>
</g>
<g>
<title>[vdso] (8 samples, 0.10%)</title><rect x="681.9" y="963.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="684.9" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (497 samples, 6.03%)</title><rect x="683.2" y="963.0" width="71.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.2" y="974.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (493 samples, 5.98%)</title><rect x="683.8" y="947.0" width="70.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.8" y="958.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.04%)</title><rect x="684.8" y="931.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="687.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.39%)</title><rect x="685.2" y="931.0" width="4.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="688.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.39%)</title><rect x="685.2" y="915.0" width="4.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="688.2" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (24 samples, 0.29%)</title><rect x="685.2" y="899.0" width="3.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="688.2" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.04%)</title><rect x="685.6" y="883.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="688.6" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.02%)</title><rect x="686.2" y="883.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="689.2" y="894.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (6 samples, 0.07%)</title><rect x="686.5" y="883.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="689.5" y="894.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.11%)</title><rect x="687.4" y="883.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="690.4" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (3 samples, 0.04%)</title><rect x="687.9" y="867.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="690.9" y="878.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.02%)</title><rect x="688.4" y="867.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="691.4" y="878.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="688.8" y="899.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="691.8" y="910.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.02%)</title><rect x="689.1" y="899.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="692.1" y="910.0"></text>
</g>
<g>
<title>send (3 samples, 0.04%)</title><rect x="689.4" y="899.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="692.4" y="910.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.10%)</title><rect x="689.8" y="931.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="692.8" y="942.0"></text>
</g>
<g>
<title>system_call_after_swapgs (8 samples, 0.10%)</title><rect x="689.8" y="915.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="692.8" y="926.0"></text>
</g>
<g>
<title>send (442 samples, 5.36%)</title><rect x="691.1" y="931.0" width="63.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="694.1" y="942.0">send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.02%)</title><rect x="692.1" y="915.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="695.1" y="926.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.02%)</title><rect x="692.4" y="915.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="695.4" y="926.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.02%)</title><rect x="692.4" y="899.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="695.4" y="910.0"></text>
</g>
<g>
<title>system_call_fastpath (429 samples, 5.21%)</title><rect x="692.9" y="915.0" width="61.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="695.9" y="926.0">system..</text>
</g>
<g>
<title>sys_sendto (428 samples, 5.19%)</title><rect x="693.1" y="899.0" width="61.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="696.1" y="910.0">sys_se..</text>
</g>
<g>
<title>SYSC_sendto (428 samples, 5.19%)</title><rect x="693.1" y="883.0" width="61.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="696.1" y="894.0">SYSC_s..</text>
</g>
<g>
<title>sock_sendmsg (418 samples, 5.07%)</title><rect x="693.5" y="867.0" width="59.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="696.5" y="878.0">sock_s..</text>
</g>
<g>
<title>inet_sendmsg (404 samples, 4.90%)</title><rect x="693.8" y="851.0" width="57.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="696.8" y="862.0">inet_s..</text>
</g>
<g>
<title>tcp_sendmsg (400 samples, 4.85%)</title><rect x="694.4" y="835.0" width="57.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="697.4" y="846.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="695.8" y="819.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="698.8" y="830.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="695.8" y="803.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="698.8" y="814.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="696.4" y="819.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="699.4" y="830.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (14 samples, 0.17%)</title><rect x="696.7" y="819.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="699.7" y="830.0"></text>
</g>
<g>
<title>__alloc_skb (11 samples, 0.13%)</title><rect x="696.7" y="803.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="699.7" y="814.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.32 (3 samples, 0.04%)</title><rect x="696.9" y="787.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="699.9" y="798.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.04%)</title><rect x="696.9" y="771.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="699.9" y="782.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.05%)</title><rect x="697.4" y="787.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="700.4" y="798.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.02%)</title><rect x="698.0" y="787.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="701.0" y="798.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.02%)</title><rect x="698.2" y="803.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="701.2" y="814.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.02%)</title><rect x="698.7" y="819.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="701.7" y="830.0"></text>
</g>
<g>
<title>tcp_push (352 samples, 4.27%)</title><rect x="699.1" y="819.0" width="50.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="702.1" y="830.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (351 samples, 4.26%)</title><rect x="699.1" y="803.0" width="50.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="702.1" y="814.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (349 samples, 4.24%)</title><rect x="699.4" y="787.0" width="50.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="702.4" y="798.0">tcp_w..</text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.04%)</title><rect x="700.5" y="771.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="703.5" y="782.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.02%)</title><rect x="701.2" y="771.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="704.2" y="782.0"></text>
</g>
<g>
<title>tcp_set_skb_tso_segs (2 samples, 0.02%)</title><rect x="701.5" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="704.5" y="782.0"></text>
</g>
<g>
<title>tcp_transmit_skb (331 samples, 4.02%)</title><rect x="701.8" y="771.0" width="47.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="704.8" y="782.0">tcp_..</text>
</g>
<g>
<title>ip_queue_xmit (321 samples, 3.90%)</title><rect x="702.5" y="755.0" width="46.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="705.5" y="766.0">ip_q..</text>
</g>
<g>
<title>ip_local_out_sk (317 samples, 3.85%)</title><rect x="703.0" y="739.0" width="45.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="706.0" y="750.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out_sk (97 samples, 1.18%)</title><rect x="703.1" y="723.0" width="13.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="706.1" y="734.0"></text>
</g>
<g>
<title>nf_hook_slow (96 samples, 1.17%)</title><rect x="703.3" y="707.0" width="13.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="706.3" y="718.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.02%)</title><rect x="703.3" y="691.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="706.3" y="702.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.02%)</title><rect x="703.7" y="691.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="706.7" y="702.0"></text>
</g>
<g>
<title>nf_iterate (87 samples, 1.06%)</title><rect x="704.4" y="691.0" width="12.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="707.4" y="702.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.04%)</title><rect x="705.5" y="675.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="708.5" y="686.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (4 samples, 0.05%)</title><rect x="706.0" y="675.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="709.0" y="686.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.05%)</title><rect x="706.0" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="709.0" y="670.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (6 samples, 0.07%)</title><rect x="706.5" y="675.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="709.5" y="686.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.07%)</title><rect x="706.5" y="659.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="709.5" y="670.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (5 samples, 0.06%)</title><rect x="707.4" y="675.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="710.4" y="686.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (5 samples, 0.06%)</title><rect x="707.4" y="659.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="710.4" y="670.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat_ipv4] (2 samples, 0.02%)</title><rect x="707.5" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="710.5" y="654.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (2 samples, 0.02%)</title><rect x="707.8" y="643.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="710.8" y="654.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (14 samples, 0.17%)</title><rect x="708.1" y="675.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="711.1" y="686.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.16%)</title><rect x="708.3" y="659.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="711.3" y="670.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (8 samples, 0.10%)</title><rect x="710.1" y="675.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="713.1" y="686.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.10%)</title><rect x="710.1" y="659.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="713.1" y="670.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (35 samples, 0.42%)</title><rect x="711.3" y="675.0" width="5.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="714.3" y="686.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find	[nf_conntrack] (5 samples, 0.06%)</title><rect x="711.4" y="659.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="714.4" y="670.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (25 samples, 0.30%)</title><rect x="712.3" y="659.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="715.3" y="670.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (3 samples, 0.04%)</title><rect x="712.4" y="643.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="715.4" y="654.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (3 samples, 0.04%)</title><rect x="712.8" y="643.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="715.8" y="654.0"></text>
</g>
<g>
<title>tcp_error	[nf_conntrack] (2 samples, 0.02%)</title><rect x="713.3" y="643.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="716.3" y="654.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (15 samples, 0.18%)</title><rect x="713.6" y="643.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="716.6" y="654.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (3 samples, 0.04%)</title><rect x="714.1" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="717.1" y="638.0"></text>
</g>
<g>
<title>mod_timer_pending (2 samples, 0.02%)</title><rect x="714.3" y="611.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="717.3" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.02%)</title><rect x="714.3" y="595.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="717.3" y="606.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (5 samples, 0.06%)</title><rect x="715.0" y="627.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="718.0" y="638.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (2 samples, 0.02%)</title><rect x="716.6" y="675.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="719.6" y="686.0"></text>
</g>
<g>
<title>ip_output (216 samples, 2.62%)</title><rect x="717.1" y="723.0" width="31.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="720.1" y="734.0">ip..</text>
</g>
<g>
<title>ip_finish_output (200 samples, 2.43%)</title><rect x="717.3" y="707.0" width="28.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="720.3" y="718.0">ip..</text>
</g>
<g>
<title>dev_queue_xmit (16 samples, 0.19%)</title><rect x="718.0" y="691.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="721.0" y="702.0"></text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.18%)</title><rect x="718.0" y="675.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="721.0" y="686.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.12%)</title><rect x="718.3" y="659.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="721.3" y="670.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.10%)</title><rect x="718.4" y="643.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="721.4" y="654.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.06%)</title><rect x="718.7" y="627.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="721.7" y="638.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.06%)</title><rect x="718.7" y="611.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="721.7" y="622.0"></text>
</g>
<g>
<title>ktime_get_real (5 samples, 0.06%)</title><rect x="718.7" y="595.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="721.7" y="606.0"></text>
</g>
<g>
<title>getnstimeofday64 (5 samples, 0.06%)</title><rect x="718.7" y="579.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="721.7" y="590.0"></text>
</g>
<g>
<title>__getnstimeofday64 (5 samples, 0.06%)</title><rect x="718.7" y="563.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="721.7" y="574.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="719.1" y="547.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="722.1" y="558.0"></text>
</g>
<g>
<title>validate_xmit_skb.isra.109.part.110 (2 samples, 0.02%)</title><rect x="719.9" y="659.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="722.9" y="670.0"></text>
</g>
<g>
<title>local_bh_enable (179 samples, 2.17%)</title><rect x="720.3" y="691.0" width="25.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="723.3" y="702.0">l..</text>
</g>
<g>
<title>__local_bh_enable_ip (179 samples, 2.17%)</title><rect x="720.3" y="675.0" width="25.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="723.3" y="686.0">_..</text>
</g>
<g>
<title>do_softirq (179 samples, 2.17%)</title><rect x="720.3" y="659.0" width="25.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="723.3" y="670.0">d..</text>
</g>
<g>
<title>call_softirq (178 samples, 2.16%)</title><rect x="720.4" y="643.0" width="25.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="723.4" y="654.0">c..</text>
</g>
<g>
<title>__do_softirq (178 samples, 2.16%)</title><rect x="720.4" y="627.0" width="25.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="723.4" y="638.0">_..</text>
</g>
<g>
<title>net_rx_action (172 samples, 2.09%)</title><rect x="720.9" y="611.0" width="24.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="723.9" y="622.0">n..</text>
</g>
<g>
<title>process_backlog (170 samples, 2.06%)</title><rect x="721.2" y="595.0" width="24.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="724.2" y="606.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (169 samples, 2.05%)</title><rect x="721.3" y="579.0" width="24.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="724.3" y="590.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (168 samples, 2.04%)</title><rect x="721.3" y="563.0" width="24.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="724.3" y="574.0">_..</text>
</g>
<g>
<title>ip_rcv (163 samples, 1.98%)</title><rect x="722.0" y="547.0" width="23.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="725.0" y="558.0">i..</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.02%)</title><rect x="722.4" y="531.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="725.4" y="542.0"></text>
</g>
<g>
<title>ip_rcv_finish (138 samples, 1.67%)</title><rect x="722.7" y="531.0" width="19.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="725.7" y="542.0"></text>
</g>
<g>
<title>ip_local_deliver (138 samples, 1.67%)</title><rect x="722.7" y="515.0" width="19.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="725.7" y="526.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (116 samples, 1.41%)</title><rect x="722.7" y="499.0" width="16.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="725.7" y="510.0"></text>
</g>
<g>
<title>tcp_v4_rcv (113 samples, 1.37%)</title><rect x="723.2" y="483.0" width="16.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="726.2" y="494.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.04%)</title><rect x="723.4" y="467.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="726.4" y="478.0"></text>
</g>
<g>
<title>tcp_filter (8 samples, 0.10%)</title><rect x="723.9" y="467.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="726.9" y="478.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.08%)</title><rect x="724.0" y="451.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="727.0" y="462.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.04%)</title><rect x="724.6" y="435.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="727.6" y="446.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (3 samples, 0.04%)</title><rect x="724.6" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="727.6" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.02%)</title><rect x="725.2" y="467.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="728.2" y="478.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (97 samples, 1.18%)</title><rect x="725.4" y="467.0" width="13.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="728.4" y="478.0"></text>
</g>
<g>
<title>tcp_rcv_established (95 samples, 1.15%)</title><rect x="725.7" y="451.0" width="13.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="728.7" y="462.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.07%)</title><rect x="726.0" y="435.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="729.0" y="446.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.07%)</title><rect x="726.0" y="419.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="729.0" y="430.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.07%)</title><rect x="726.0" y="403.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="729.0" y="414.0"></text>
</g>
<g>
<title>mod_timer (6 samples, 0.07%)</title><rect x="726.0" y="387.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="729.0" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.06%)</title><rect x="726.2" y="371.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="729.2" y="382.0"></text>
</g>
<g>
<title>sock_def_readable (67 samples, 0.81%)</title><rect x="726.9" y="435.0" width="9.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="729.9" y="446.0"></text>
</g>
<g>
<title>__wake_up_sync_key (63 samples, 0.76%)</title><rect x="727.5" y="419.0" width="9.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="730.5" y="430.0"></text>
</g>
<g>
<title>__wake_up_common_lock (63 samples, 0.76%)</title><rect x="727.5" y="403.0" width="9.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="730.5" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (63 samples, 0.76%)</title><rect x="727.5" y="387.0" width="9.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="730.5" y="398.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.07%)</title><rect x="736.5" y="435.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="739.5" y="446.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.02%)</title><rect x="737.0" y="419.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="740.0" y="430.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.02%)</title><rect x="737.0" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="740.0" y="414.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.02%)</title><rect x="737.0" y="387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="740.0" y="398.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.02%)</title><rect x="737.0" y="371.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="740.0" y="382.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.02%)</title><rect x="737.3" y="435.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="740.3" y="446.0"></text>
</g>
<g>
<title>tcp_data_queue (9 samples, 0.11%)</title><rect x="737.6" y="435.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="740.6" y="446.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 0.07%)</title><rect x="737.8" y="419.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="740.8" y="430.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.07%)</title><rect x="737.8" y="403.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="740.8" y="414.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.07%)</title><rect x="737.8" y="387.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="740.8" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.07%)</title><rect x="737.8" y="371.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="740.8" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (21 samples, 0.25%)</title><rect x="739.3" y="499.0" width="3.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="742.3" y="510.0"></text>
</g>
<g>
<title>ipv4_helper	[nf_conntrack_ipv4] (2 samples, 0.02%)</title><rect x="739.3" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="742.3" y="494.0"></text>
</g>
<g>
<title>nf_iterate (19 samples, 0.23%)</title><rect x="739.6" y="483.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="742.6" y="494.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (10 samples, 0.12%)</title><rect x="740.3" y="467.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="743.3" y="478.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.11%)</title><rect x="740.5" y="451.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="743.5" y="462.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (2 samples, 0.02%)</title><rect x="741.5" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="744.5" y="446.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (2 samples, 0.02%)</title><rect x="741.5" y="419.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="744.5" y="430.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.02%)</title><rect x="741.8" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="744.8" y="478.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.02%)</title><rect x="741.8" y="451.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="744.8" y="462.0"></text>
</g>
<g>
<title>nf_hook_slow (20 samples, 0.24%)</title><rect x="742.5" y="531.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="745.5" y="542.0"></text>
</g>
<g>
<title>nf_iterate (18 samples, 0.22%)</title><rect x="742.8" y="515.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="745.8" y="526.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.02%)</title><rect x="743.6" y="499.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="746.6" y="510.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.02%)</title><rect x="743.6" y="483.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="746.6" y="494.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in	[iptable_nat] (2 samples, 0.02%)</title><rect x="743.9" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="746.9" y="510.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (6 samples, 0.07%)</title><rect x="744.2" y="499.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="747.2" y="510.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.07%)</title><rect x="744.2" y="483.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="747.2" y="494.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.17%)</title><rect x="746.1" y="707.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="749.1" y="718.0"></text>
</g>
<g>
<title>nf_iterate (11 samples, 0.13%)</title><rect x="746.5" y="691.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="749.5" y="702.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.02%)</title><rect x="746.9" y="675.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="749.9" y="686.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.02%)</title><rect x="746.9" y="659.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="749.9" y="670.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out	[iptable_nat] (3 samples, 0.04%)</title><rect x="747.2" y="675.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="750.2" y="686.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat_ipv4] (2 samples, 0.02%)</title><rect x="747.4" y="659.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="750.4" y="670.0"></text>
</g>
<g>
<title>nf_hook_slow (2 samples, 0.02%)</title><rect x="748.1" y="723.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="751.1" y="734.0"></text>
</g>
<g>
<title>local_clock (2 samples, 0.02%)</title><rect x="748.5" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="751.5" y="766.0"></text>
</g>
<g>
<title>vmware_sched_clock (2 samples, 0.02%)</title><rect x="748.5" y="739.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="751.5" y="750.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.02%)</title><rect x="748.8" y="755.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="751.8" y="766.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.02%)</title><rect x="748.8" y="739.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="751.8" y="750.0"></text>
</g>
<g>
<title>tcp_send_mss (14 samples, 0.17%)</title><rect x="749.6" y="819.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="752.6" y="830.0"></text>
</g>
<g>
<title>tcp_current_mss (12 samples, 0.15%)</title><rect x="749.9" y="803.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="752.9" y="814.0"></text>
</g>
<g>
<title>tcp_established_options (7 samples, 0.08%)</title><rect x="750.5" y="787.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="753.5" y="798.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (2 samples, 0.02%)</title><rect x="751.2" y="771.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="754.2" y="782.0"></text>
</g>
<g>
<title>security_socket_sendmsg (10 samples, 0.12%)</title><rect x="751.7" y="851.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="754.7" y="862.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (10 samples, 0.12%)</title><rect x="751.7" y="835.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="754.7" y="846.0"></text>
</g>
<g>
<title>sock_has_perm (10 samples, 0.12%)</title><rect x="751.7" y="819.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="754.7" y="830.0"></text>
</g>
<g>
<title>avc_has_perm_flags (3 samples, 0.04%)</title><rect x="752.7" y="803.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="755.7" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.08%)</title><rect x="753.4" y="867.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="756.4" y="878.0"></text>
</g>
<g>
<title>fget_light (7 samples, 0.08%)</title><rect x="753.4" y="851.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="756.4" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="754.4" y="963.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="757.4" y="974.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="754.4" y="947.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="757.4" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.05%)</title><rect x="754.8" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="757.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (270 samples, 3.28%)</title><rect x="755.7" y="1123.0" width="38.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="758.7" y="1134.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (270 samples, 3.28%)</title><rect x="755.7" y="1107.0" width="38.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="758.7" y="1118.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (147 samples, 1.78%)</title><rect x="757.5" y="1091.0" width="21.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="760.5" y="1102.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LILL_Z (4 samples, 0.05%)</title><rect x="758.4" y="1075.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.compareAndSet (4 samples, 0.05%)</title><rect x="758.4" y="1059.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (2 samples, 0.02%)</title><rect x="759.0" y="1075.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAcquire (2 samples, 0.02%)</title><rect x="759.0" y="1059.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (135 samples, 1.64%)</title><rect x="759.2" y="1075.0" width="19.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="762.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (132 samples, 1.60%)</title><rect x="759.7" y="1059.0" width="18.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="762.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (130 samples, 1.58%)</title><rect x="760.0" y="1043.0" width="18.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="763.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (130 samples, 1.58%)</title><rect x="760.0" y="1027.0" width="18.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (122 samples, 1.48%)</title><rect x="760.2" y="1011.0" width="17.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="763.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (122 samples, 1.48%)</title><rect x="760.2" y="995.0" width="17.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="763.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (109 samples, 1.32%)</title><rect x="761.5" y="979.0" width="15.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (108 samples, 1.31%)</title><rect x="761.7" y="963.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="764.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (108 samples, 1.31%)</title><rect x="761.7" y="947.0" width="15.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.7" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.18%)</title><rect x="761.7" y="931.0" width="2.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="764.7" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.02%)</title><rect x="762.2" y="915.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="765.2" y="926.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (3 samples, 0.04%)</title><rect x="762.5" y="915.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="765.5" y="926.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.02%)</title><rect x="763.1" y="915.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="766.1" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.04%)</title><rect x="763.4" y="915.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="766.4" y="926.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.08%)</title><rect x="763.8" y="931.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="766.8" y="942.0"></text>
</g>
<g>
<title>system_call_after_swapgs (7 samples, 0.08%)</title><rect x="763.8" y="915.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="766.8" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (85 samples, 1.03%)</title><rect x="764.8" y="931.0" width="12.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="767.8" y="942.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.02%)</title><rect x="766.1" y="915.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="769.1" y="926.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.02%)</title><rect x="766.1" y="899.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="769.1" y="910.0"></text>
</g>
<g>
<title>system_call_fastpath (73 samples, 0.89%)</title><rect x="766.5" y="915.0" width="10.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="769.5" y="926.0"></text>
</g>
<g>
<title>sys_futex (73 samples, 0.89%)</title><rect x="766.5" y="899.0" width="10.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="769.5" y="910.0"></text>
</g>
<g>
<title>do_futex (73 samples, 0.89%)</title><rect x="766.5" y="883.0" width="10.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="769.5" y="894.0"></text>
</g>
<g>
<title>futex_wake_op (72 samples, 0.87%)</title><rect x="766.7" y="867.0" width="10.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="769.7" y="878.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="767.0" y="851.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="770.0" y="862.0"></text>
</g>
<g>
<title>wake_up_q (68 samples, 0.83%)</title><rect x="767.3" y="851.0" width="9.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="770.3" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (68 samples, 0.83%)</title><rect x="767.3" y="835.0" width="9.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="770.3" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (67 samples, 0.81%)</title><rect x="767.4" y="819.0" width="9.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="770.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.04%)</title><rect x="777.1" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.1" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpController$$Lambda$396/1703933904.apply (3 samples, 0.04%)</title><rect x="777.1" y="963.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.1" y="974.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (3 samples, 0.04%)</title><rect x="777.1" y="947.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.07%)</title><rect x="777.7" y="1011.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.internalComplete (5 samples, 0.06%)</title><rect x="777.9" y="995.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.06%)</title><rect x="777.9" y="979.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="780.9" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.06%)</title><rect x="777.9" y="963.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="780.9" y="974.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="778.1" y="947.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="781.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (23 samples, 0.28%)</title><rect x="778.6" y="1091.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (23 samples, 0.28%)</title><rect x="778.6" y="1075.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.6" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Park (16 samples, 0.19%)</title><rect x="778.7" y="1059.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="781.7" y="1070.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.07%)</title><rect x="778.9" y="1043.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="781.9" y="1054.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.04%)</title><rect x="779.0" y="1027.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="782.0" y="1038.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.06%)</title><rect x="779.9" y="1043.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="782.9" y="1054.0"></text>
</g>
<g>
<title>system_call_fastpath (3 samples, 0.04%)</title><rect x="780.2" y="1027.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="783.2" y="1038.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="780.2" y="1011.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="783.2" y="1022.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="780.2" y="995.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="783.2" y="1006.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.02%)</title><rect x="780.2" y="979.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="783.2" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.02%)</title><rect x="780.7" y="1043.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="783.7" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.02%)</title><rect x="781.2" y="1059.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="784.2" y="1070.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.02%)</title><rect x="781.2" y="1043.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="784.2" y="1054.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.02%)</title><rect x="781.6" y="1059.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="784.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (87 samples, 1.06%)</title><rect x="781.9" y="1091.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="784.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (87 samples, 1.06%)</title><rect x="781.9" y="1075.0" width="12.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="784.9" y="1086.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.04%)</title><rect x="782.4" y="1059.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="785.4" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Park (72 samples, 0.87%)</title><rect x="783.0" y="1059.0" width="10.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="786.0" y="1070.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.02%)</title><rect x="783.2" y="1043.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="786.2" y="1054.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (23 samples, 0.28%)</title><rect x="783.6" y="1043.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="786.6" y="1054.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (7 samples, 0.08%)</title><rect x="785.0" y="1027.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="788.0" y="1038.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.06%)</title><rect x="786.0" y="1027.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="789.0" y="1038.0"></text>
</g>
<g>
<title>__lll_unlock_wake (22 samples, 0.27%)</title><rect x="787.0" y="1043.0" width="3.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="790.0" y="1054.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.02%)</title><rect x="788.3" y="1027.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="791.3" y="1038.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.02%)</title><rect x="788.7" y="1027.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="791.7" y="1038.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.02%)</title><rect x="788.7" y="1011.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="791.7" y="1022.0"></text>
</g>
<g>
<title>sysret_audit (2 samples, 0.02%)</title><rect x="789.2" y="1027.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="792.2" y="1038.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.02%)</title><rect x="789.2" y="1011.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="792.2" y="1022.0"></text>
</g>
<g>
<title>system_call_fastpath (5 samples, 0.06%)</title><rect x="789.5" y="1027.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="792.5" y="1038.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.06%)</title><rect x="789.5" y="1011.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="792.5" y="1022.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.05%)</title><rect x="789.5" y="995.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="792.5" y="1006.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.04%)</title><rect x="789.5" y="979.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="792.5" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (16 samples, 0.19%)</title><rect x="790.2" y="1043.0" width="2.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="793.2" y="1054.0"></text>
</g>
<g>
<title>system_call_fastpath (11 samples, 0.13%)</title><rect x="790.9" y="1027.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="793.9" y="1038.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.11%)</title><rect x="791.2" y="1011.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="794.2" y="1022.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.08%)</title><rect x="791.3" y="995.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="794.3" y="1006.0"></text>
</g>
<g>
<title>futex_wait (6 samples, 0.07%)</title><rect x="791.5" y="979.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="794.5" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.05%)</title><rect x="791.5" y="963.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="794.5" y="974.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.04%)</title><rect x="791.5" y="947.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="794.5" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="791.5" y="931.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="794.5" y="942.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.02%)</title><rect x="792.0" y="963.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="795.0" y="974.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.02%)</title><rect x="792.8" y="1043.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="795.8" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.04%)</title><rect x="793.3" y="1059.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="796.3" y="1070.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.04%)</title><rect x="793.3" y="1043.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="796.3" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.04%)</title><rect x="793.8" y="1059.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="796.8" y="1070.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.04%)</title><rect x="793.8" y="1043.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="796.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,506 samples, 18.28%)</title><rect x="794.3" y="1123.0" width="215.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.3" y="1134.0">jdk/internal/net/http/HttpCl..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.02%)</title><rect x="797.0" y="1107.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="800.0" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.02%)</title><rect x="797.0" y="1091.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="800.0" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/SelectionKey.attachment (3 samples, 0.04%)</title><rect x="797.6" y="1107.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="800.6" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (9 samples, 0.11%)</title><rect x="798.1" y="1107.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="801.1" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (9 samples, 0.11%)</title><rect x="798.1" y="1091.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="801.1" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (3 samples, 0.04%)</title><rect x="799.3" y="1107.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="802.3" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.13%)</title><rect x="799.8" y="1107.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.8" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.13%)</title><rect x="799.8" y="1091.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="802.8" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="800.8" y="1075.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="803.8" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.05%)</title><rect x="800.8" y="1059.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="803.8" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.02%)</title><rect x="800.9" y="1043.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.9" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (8 samples, 0.10%)</title><rect x="801.3" y="1107.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="804.3" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.getOpFlags (2 samples, 0.02%)</title><rect x="802.2" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="805.2" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (304 samples, 3.69%)</title><rect x="802.5" y="1107.0" width="43.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.5" y="1118.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$298/737367661.accept (293 samples, 3.56%)</title><rect x="802.8" y="1091.0" width="41.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.8" y="1102.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (292 samples, 3.54%)</title><rect x="802.9" y="1075.0" width="41.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.9" y="1086.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (292 samples, 3.54%)</title><rect x="802.9" y="1059.0" width="41.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.9" y="1070.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (291 samples, 3.53%)</title><rect x="803.1" y="1043.0" width="41.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.1" y="1054.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (291 samples, 3.53%)</title><rect x="803.1" y="1027.0" width="41.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="806.1" y="1038.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.05%)</title><rect x="803.6" y="1011.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.05%)</title><rect x="803.6" y="995.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.04%)</title><rect x="803.8" y="979.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="806.8" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.02%)</title><rect x="803.9" y="963.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="806.9" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.02%)</title><rect x="803.9" y="947.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.9" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.02%)</title><rect x="803.9" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (283 samples, 3.43%)</title><rect x="804.2" y="1011.0" width="40.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.2" y="1022.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (283 samples, 3.43%)</title><rect x="804.2" y="995.0" width="40.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.2" y="1006.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (283 samples, 3.43%)</title><rect x="804.2" y="979.0" width="40.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="807.2" y="990.0">jdk..</text>
</g>
<g>
<title>itable stub (2 samples, 0.02%)</title><rect x="804.4" y="963.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="807.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (2 samples, 0.02%)</title><rect x="804.6" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (278 samples, 3.37%)</title><rect x="804.9" y="963.0" width="39.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.9" y="974.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (278 samples, 3.37%)</title><rect x="804.9" y="947.0" width="39.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="807.9" y="958.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200/49147543.run (276 samples, 3.35%)</title><rect x="805.1" y="931.0" width="39.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.1" y="942.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (276 samples, 3.35%)</title><rect x="805.1" y="915.0" width="39.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.1" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (155 samples, 1.88%)</title><rect x="805.1" y="899.0" width="22.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="808.1" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (155 samples, 1.88%)</title><rect x="805.1" y="883.0" width="22.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.1" y="894.0">j..</text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (2 samples, 0.02%)</title><rect x="805.2" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (151 samples, 1.83%)</title><rect x="805.6" y="867.0" width="21.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.6" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (151 samples, 1.83%)</title><rect x="805.6" y="851.0" width="21.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.6" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (151 samples, 1.83%)</title><rect x="805.6" y="835.0" width="21.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="808.6" y="846.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (151 samples, 1.83%)</title><rect x="805.6" y="819.0" width="21.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.6" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (151 samples, 1.83%)</title><rect x="805.6" y="803.0" width="21.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.6" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (149 samples, 1.81%)</title><rect x="805.8" y="787.0" width="21.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="808.8" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (149 samples, 1.81%)</title><rect x="805.8" y="771.0" width="21.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="808.8" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (143 samples, 1.74%)</title><rect x="806.2" y="755.0" width="20.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (143 samples, 1.74%)</title><rect x="806.2" y="739.0" width="20.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="809.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (143 samples, 1.74%)</title><rect x="806.2" y="723.0" width="20.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.2" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (21 samples, 0.25%)</title><rect x="806.5" y="707.0" width="3.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="809.5" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="807.4" y="691.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="810.4" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.04%)</title><rect x="807.8" y="691.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="810.8" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.02%)</title><rect x="808.8" y="691.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="811.8" y="702.0"></text>
</g>
<g>
<title>update_get_addr (3 samples, 0.04%)</title><rect x="809.1" y="691.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="812.1" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (105 samples, 1.27%)</title><rect x="809.5" y="707.0" width="15.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="812.5" y="718.0"></text>
</g>
<g>
<title>sysret_audit (3 samples, 0.04%)</title><rect x="810.2" y="691.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="813.2" y="702.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.04%)</title><rect x="810.2" y="675.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="813.2" y="686.0"></text>
</g>
<g>
<title>system_call_fastpath (95 samples, 1.15%)</title><rect x="810.8" y="691.0" width="13.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="813.8" y="702.0"></text>
</g>
<g>
<title>sys_futex (94 samples, 1.14%)</title><rect x="810.9" y="675.0" width="13.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="813.9" y="686.0"></text>
</g>
<g>
<title>do_futex (94 samples, 1.14%)</title><rect x="810.9" y="659.0" width="13.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="813.9" y="670.0"></text>
</g>
<g>
<title>_raw_qspin_lock (2 samples, 0.02%)</title><rect x="811.1" y="643.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="814.1" y="654.0"></text>
</g>
<g>
<title>futex_wake_op (91 samples, 1.10%)</title><rect x="811.4" y="643.0" width="13.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="814.4" y="654.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.05%)</title><rect x="811.8" y="627.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="814.8" y="638.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.02%)</title><rect x="812.1" y="611.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="815.1" y="622.0"></text>
</g>
<g>
<title>wake_up_q (84 samples, 1.02%)</title><rect x="812.4" y="627.0" width="12.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="815.4" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (84 samples, 1.02%)</title><rect x="812.4" y="611.0" width="12.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="815.4" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (84 samples, 1.02%)</title><rect x="812.4" y="595.0" width="12.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="815.4" y="606.0"></text>
</g>
<g>
<title>__read (10 samples, 0.12%)</title><rect x="824.5" y="707.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="827.5" y="718.0"></text>
</g>
<g>
<title>system_call_after_swapgs (10 samples, 0.12%)</title><rect x="824.5" y="691.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="827.5" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.06%)</title><rect x="826.0" y="707.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="829.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (7 samples, 0.08%)</title><rect x="827.3" y="899.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4 samples, 0.05%)</title><rect x="827.7" y="883.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.05%)</title><rect x="827.7" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.05%)</title><rect x="827.7" y="851.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="830.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.04%)</title><rect x="827.8" y="835.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="830.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.04%)</title><rect x="827.8" y="819.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.8" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.04%)</title><rect x="827.8" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="830.8" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.04%)</title><rect x="827.8" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="830.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (112 samples, 1.36%)</title><rect x="828.3" y="899.0" width="16.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="831.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.04%)</title><rect x="828.6" y="883.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="831.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (3 samples, 0.04%)</title><rect x="829.0" y="883.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="832.0" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="829.0" y="867.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="832.0" y="878.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.04%)</title><rect x="829.0" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="832.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (2 samples, 0.02%)</title><rect x="829.1" y="835.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (2 samples, 0.02%)</title><rect x="829.4" y="883.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="832.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (102 samples, 1.24%)</title><rect x="829.7" y="883.0" width="14.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="832.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.08%)</title><rect x="830.1" y="867.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="833.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.08%)</title><rect x="830.1" y="851.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (7 samples, 0.08%)</title><rect x="830.1" y="835.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (6 samples, 0.07%)</title><rect x="830.3" y="819.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="833.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (4 samples, 0.05%)</title><rect x="830.3" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="833.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.02%)</title><rect x="830.8" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="833.8" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.02%)</title><rect x="830.8" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="833.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (90 samples, 1.09%)</title><rect x="831.1" y="867.0" width="12.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.1" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (90 samples, 1.09%)</title><rect x="831.1" y="851.0" width="12.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="834.1" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (80 samples, 0.97%)</title><rect x="831.7" y="835.0" width="11.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="834.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (77 samples, 0.93%)</title><rect x="832.1" y="819.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (77 samples, 0.93%)</title><rect x="832.1" y="803.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.1" y="814.0"></text>
</g>
<g>
<title>__GI_epoll_wait (3 samples, 0.04%)</title><rect x="833.1" y="787.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="836.1" y="798.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.04%)</title><rect x="833.1" y="771.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="836.1" y="782.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.02%)</title><rect x="833.7" y="787.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="836.7" y="798.0"></text>
</g>
<g>
<title>__read (60 samples, 0.73%)</title><rect x="834.1" y="787.0" width="8.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="837.1" y="798.0"></text>
</g>
<g>
<title>auditsys (4 samples, 0.05%)</title><rect x="835.7" y="771.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="838.7" y="782.0"></text>
</g>
<g>
<title>__audit_syscall_entry (4 samples, 0.05%)</title><rect x="835.7" y="755.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="838.7" y="766.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.02%)</title><rect x="836.3" y="771.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="839.3" y="782.0"></text>
</g>
<g>
<title>system_call_fastpath (43 samples, 0.52%)</title><rect x="836.6" y="771.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="839.6" y="782.0"></text>
</g>
<g>
<title>sys_read (43 samples, 0.52%)</title><rect x="836.6" y="755.0" width="6.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="839.6" y="766.0"></text>
</g>
<g>
<title>fget_light (2 samples, 0.02%)</title><rect x="836.7" y="739.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="839.7" y="750.0"></text>
</g>
<g>
<title>vfs_read (40 samples, 0.49%)</title><rect x="837.0" y="739.0" width="5.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="840.0" y="750.0"></text>
</g>
<g>
<title>do_sync_read (29 samples, 0.35%)</title><rect x="837.0" y="723.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="840.0" y="734.0"></text>
</g>
<g>
<title>sock_aio_read (29 samples, 0.35%)</title><rect x="837.0" y="707.0" width="4.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="840.0" y="718.0"></text>
</g>
<g>
<title>sock_aio_read.part.9 (29 samples, 0.35%)</title><rect x="837.0" y="691.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="840.0" y="702.0"></text>
</g>
<g>
<title>inet_recvmsg (24 samples, 0.29%)</title><rect x="837.0" y="675.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="840.0" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (22 samples, 0.27%)</title><rect x="837.3" y="659.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="840.3" y="670.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.04%)</title><rect x="838.1" y="643.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="841.1" y="654.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.04%)</title><rect x="838.1" y="627.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="841.1" y="638.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.02%)</title><rect x="838.3" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="841.3" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.04%)</title><rect x="838.6" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="841.6" y="654.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.02%)</title><rect x="839.2" y="643.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="842.2" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (7 samples, 0.08%)</title><rect x="839.4" y="643.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="842.4" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.02%)</title><rect x="839.4" y="627.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="842.4" y="638.0"></text>
</g>
<g>
<title>memcpy_toiovec (5 samples, 0.06%)</title><rect x="839.7" y="627.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="842.7" y="638.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.02%)</title><rect x="839.7" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="842.7" y="622.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="840.0" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="843.0" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.05%)</title><rect x="840.4" y="675.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="843.4" y="686.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (4 samples, 0.05%)</title><rect x="840.4" y="659.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="843.4" y="670.0"></text>
</g>
<g>
<title>sock_has_perm (4 samples, 0.05%)</title><rect x="840.4" y="643.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="843.4" y="654.0"></text>
</g>
<g>
<title>rw_verify_area (10 samples, 0.12%)</title><rect x="841.2" y="723.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="844.2" y="734.0"></text>
</g>
<g>
<title>security_file_permission (9 samples, 0.11%)</title><rect x="841.3" y="707.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="844.3" y="718.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.04%)</title><rect x="841.6" y="691.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="844.6" y="702.0"></text>
</g>
<g>
<title>selinux_file_permission (4 samples, 0.05%)</title><rect x="842.0" y="691.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="845.0" y="702.0"></text>
</g>
<g>
<title>file_has_perm (2 samples, 0.02%)</title><rect x="842.3" y="675.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="845.3" y="686.0"></text>
</g>
<g>
<title>inode_has_perm.isra.34.constprop.71 (2 samples, 0.02%)</title><rect x="842.3" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="845.3" y="670.0"></text>
</g>
<g>
<title>avc_has_perm_flags (2 samples, 0.02%)</title><rect x="842.3" y="643.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="845.3" y="654.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.02%)</title><rect x="842.9" y="787.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="845.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.07%)</title><rect x="843.2" y="835.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="846.2" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.02%)</title><rect x="843.2" y="819.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="846.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.05%)</title><rect x="843.4" y="819.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="846.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (2 samples, 0.02%)</title><rect x="844.0" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="847.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$305/1347119101.accept (7 samples, 0.08%)</title><rect x="844.7" y="1091.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="847.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (7 samples, 0.08%)</title><rect x="844.7" y="1075.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="847.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$297/469379447.run (7 samples, 0.08%)</title><rect x="844.7" y="1059.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="847.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (7 samples, 0.08%)</title><rect x="844.7" y="1043.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (7 samples, 0.08%)</title><rect x="844.7" y="1027.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="847.7" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.02%)</title><rect x="845.0" y="1011.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.0" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.02%)</title><rect x="845.0" y="995.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.02%)</title><rect x="845.3" y="1011.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="848.3" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2 samples, 0.02%)</title><rect x="845.3" y="995.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="848.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.02%)</title><rect x="845.7" y="1091.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="848.7" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (3 samples, 0.04%)</title><rect x="846.0" y="1107.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="849.0" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (3 samples, 0.04%)</title><rect x="846.0" y="1091.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="849.0" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (23 samples, 0.28%)</title><rect x="846.6" y="1107.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="849.6" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (23 samples, 0.28%)</title><rect x="846.6" y="1091.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.6" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (23 samples, 0.28%)</title><rect x="846.6" y="1075.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="849.6" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (23 samples, 0.28%)</title><rect x="846.6" y="1059.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="849.6" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (23 samples, 0.28%)</title><rect x="846.6" y="1043.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.6" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (17 samples, 0.21%)</title><rect x="846.7" y="1027.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.7" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (15 samples, 0.18%)</title><rect x="846.9" y="1011.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="849.9" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (14 samples, 0.17%)</title><rect x="847.0" y="995.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.0" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (8 samples, 0.10%)</title><rect x="847.0" y="979.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.interestOps (3 samples, 0.04%)</title><rect x="847.5" y="963.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.5" y="974.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.02%)</title><rect x="847.9" y="963.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="850.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$294/1857314804.test (6 samples, 0.07%)</title><rect x="848.2" y="979.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.lambda$events$0 (6 samples, 0.07%)</title><rect x="848.2" y="963.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.2" y="974.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="848.3" y="947.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="851.3" y="958.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (2 samples, 0.02%)</title><rect x="848.7" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.7" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.02%)</title><rect x="849.2" y="1027.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="852.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$296/1256460069.accept (3 samples, 0.04%)</title><rect x="849.5" y="1027.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="852.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (332 samples, 4.03%)</title><rect x="849.9" y="1107.0" width="47.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.9" y="1118.0">jdk/..</text>
</g>
<g>
<title>itable stub (10 samples, 0.12%)</title><rect x="851.0" y="1091.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="854.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$210/1218021122.run (147 samples, 1.78%)</title><rect x="852.5" y="1091.0" width="21.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="855.5" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (147 samples, 1.78%)</title><rect x="852.5" y="1075.0" width="21.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="855.5" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (144 samples, 1.75%)</title><rect x="852.9" y="1059.0" width="20.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (144 samples, 1.75%)</title><rect x="852.9" y="1043.0" width="20.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="855.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (144 samples, 1.75%)</title><rect x="852.9" y="1027.0" width="20.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="855.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (144 samples, 1.75%)</title><rect x="852.9" y="1011.0" width="20.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200/49147543.run (142 samples, 1.72%)</title><rect x="853.2" y="995.0" width="20.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="856.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (142 samples, 1.72%)</title><rect x="853.2" y="979.0" width="20.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (138 samples, 1.67%)</title><rect x="853.5" y="963.0" width="19.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (123 samples, 1.49%)</title><rect x="855.6" y="947.0" width="17.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="858.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (18 samples, 0.22%)</title><rect x="856.0" y="931.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (17 samples, 0.21%)</title><rect x="856.2" y="915.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="859.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (17 samples, 0.21%)</title><rect x="856.2" y="899.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="859.2" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/20094719.linkToTargetMethod (5 samples, 0.06%)</title><rect x="856.2" y="883.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="859.2" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/324457684.invoke (5 samples, 0.06%)</title><rect x="856.2" y="867.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="859.2" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.06%)</title><rect x="856.2" y="851.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="859.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (5 samples, 0.06%)</title><rect x="856.2" y="835.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="859.2" y="846.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.02%)</title><rect x="856.2" y="819.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="859.2" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="856.5" y="819.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="859.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (12 samples, 0.15%)</title><rect x="856.9" y="883.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (7 samples, 0.08%)</title><rect x="857.6" y="867.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (6 samples, 0.07%)</title><rect x="857.6" y="851.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="860.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (6 samples, 0.07%)</title><rect x="857.6" y="835.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="860.6" y="846.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (3 samples, 0.04%)</title><rect x="857.8" y="819.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="860.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (102 samples, 1.24%)</title><rect x="858.6" y="931.0" width="14.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (97 samples, 1.18%)</title><rect x="859.3" y="915.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="862.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (96 samples, 1.17%)</title><rect x="859.5" y="899.0" width="13.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="862.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (96 samples, 1.17%)</title><rect x="859.5" y="883.0" width="13.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="862.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (96 samples, 1.17%)</title><rect x="859.5" y="867.0" width="13.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="862.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (96 samples, 1.17%)</title><rect x="859.5" y="851.0" width="13.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="862.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (96 samples, 1.17%)</title><rect x="859.5" y="835.0" width="13.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="862.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (91 samples, 1.10%)</title><rect x="859.5" y="819.0" width="13.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="862.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (91 samples, 1.10%)</title><rect x="859.5" y="803.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (91 samples, 1.10%)</title><rect x="859.5" y="787.0" width="13.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="862.5" y="798.0"></text>
</g>
<g>
<title>Unsafe_Unpark (22 samples, 0.27%)</title><rect x="859.8" y="771.0" width="3.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="862.8" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (3 samples, 0.04%)</title><rect x="860.5" y="755.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="863.5" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.05%)</title><rect x="860.9" y="755.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="863.9" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.02%)</title><rect x="861.5" y="755.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="864.5" y="766.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.02%)</title><rect x="862.1" y="755.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="865.1" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.05%)</title><rect x="862.3" y="755.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="865.3" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_signal (61 samples, 0.74%)</title><rect x="862.9" y="771.0" width="8.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="865.9" y="782.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.02%)</title><rect x="863.4" y="755.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="866.4" y="766.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.02%)</title><rect x="863.4" y="739.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="866.4" y="750.0"></text>
</g>
<g>
<title>system_call_fastpath (54 samples, 0.66%)</title><rect x="863.9" y="755.0" width="7.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="866.9" y="766.0"></text>
</g>
<g>
<title>sys_futex (52 samples, 0.63%)</title><rect x="864.2" y="739.0" width="7.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="867.2" y="750.0"></text>
</g>
<g>
<title>do_futex (52 samples, 0.63%)</title><rect x="864.2" y="723.0" width="7.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="867.2" y="734.0"></text>
</g>
<g>
<title>_raw_qspin_lock (3 samples, 0.04%)</title><rect x="864.4" y="707.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="867.4" y="718.0"></text>
</g>
<g>
<title>futex_wake_op (48 samples, 0.58%)</title><rect x="864.8" y="707.0" width="6.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="867.8" y="718.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.02%)</title><rect x="865.4" y="691.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="868.4" y="702.0"></text>
</g>
<g>
<title>wake_up_q (42 samples, 0.51%)</title><rect x="865.6" y="691.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="868.6" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (41 samples, 0.50%)</title><rect x="865.8" y="675.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="868.8" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (41 samples, 0.50%)</title><rect x="865.8" y="659.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="868.8" y="670.0"></text>
</g>
<g>
<title>__read (3 samples, 0.04%)</title><rect x="871.7" y="771.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="874.7" y="782.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.04%)</title><rect x="871.7" y="755.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="874.7" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.02%)</title><rect x="872.1" y="771.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="875.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (3 samples, 0.04%)</title><rect x="872.5" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="875.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (2 samples, 0.02%)</title><rect x="873.2" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="876.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (2 samples, 0.02%)</title><rect x="873.2" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$222/223200854.run (167 samples, 2.03%)</title><rect x="873.5" y="1091.0" width="23.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="876.5" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (167 samples, 2.03%)</title><rect x="873.5" y="1075.0" width="23.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="876.5" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (167 samples, 2.03%)</title><rect x="873.5" y="1059.0" width="23.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="876.5" y="1070.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (167 samples, 2.03%)</title><rect x="873.5" y="1043.0" width="23.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="876.5" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (164 samples, 1.99%)</title><rect x="873.8" y="1027.0" width="23.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="876.8" y="1038.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (164 samples, 1.99%)</title><rect x="873.8" y="1011.0" width="23.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="876.8" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (153 samples, 1.86%)</title><rect x="874.1" y="995.0" width="21.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="877.1" y="1006.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (153 samples, 1.86%)</title><rect x="874.1" y="979.0" width="21.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="877.1" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (153 samples, 1.86%)</title><rect x="874.1" y="963.0" width="21.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="877.1" y="974.0">j..</text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.02%)</title><rect x="874.7" y="947.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="877.7" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (30 samples, 0.36%)</title><rect x="875.4" y="947.0" width="4.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="878.4" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.06%)</title><rect x="876.5" y="931.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="879.5" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.04%)</title><rect x="877.2" y="931.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="880.2" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.02%)</title><rect x="878.2" y="931.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="881.2" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.05%)</title><rect x="878.7" y="931.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="881.7" y="942.0"></text>
</g>
<g>
<title>update_get_addr (3 samples, 0.04%)</title><rect x="879.2" y="931.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="882.2" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (108 samples, 1.31%)</title><rect x="879.8" y="947.0" width="15.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="882.8" y="958.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.02%)</title><rect x="881.1" y="931.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="884.1" y="942.0"></text>
</g>
<g>
<title>system_call_after_swapgs (5 samples, 0.06%)</title><rect x="881.5" y="931.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="884.5" y="942.0"></text>
</g>
<g>
<title>system_call_fastpath (91 samples, 1.10%)</title><rect x="882.3" y="931.0" width="13.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="885.3" y="942.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="882.3" y="915.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="885.3" y="926.0"></text>
</g>
<g>
<title>sys_futex (89 samples, 1.08%)</title><rect x="882.5" y="915.0" width="12.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="885.5" y="926.0"></text>
</g>
<g>
<title>do_futex (86 samples, 1.04%)</title><rect x="882.8" y="899.0" width="12.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="885.8" y="910.0"></text>
</g>
<g>
<title>_raw_qspin_lock (4 samples, 0.05%)</title><rect x="883.0" y="883.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="886.0" y="894.0"></text>
</g>
<g>
<title>futex_wake_op (81 samples, 0.98%)</title><rect x="883.5" y="883.0" width="11.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="886.5" y="894.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.04%)</title><rect x="884.5" y="867.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="887.5" y="878.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.02%)</title><rect x="884.7" y="851.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="887.7" y="862.0"></text>
</g>
<g>
<title>wake_up_q (71 samples, 0.86%)</title><rect x="885.0" y="867.0" width="10.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="888.0" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (71 samples, 0.86%)</title><rect x="885.0" y="851.0" width="10.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="888.0" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (71 samples, 0.86%)</title><rect x="885.0" y="835.0" width="10.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="888.0" y="846.0"></text>
</g>
<g>
<title>__read (2 samples, 0.02%)</title><rect x="895.3" y="947.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="898.3" y="958.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.02%)</title><rect x="895.3" y="931.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="898.3" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="895.6" y="947.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="898.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (6 samples, 0.07%)</title><rect x="896.0" y="995.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="899.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (3 samples, 0.04%)</title><rect x="896.9" y="995.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="899.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (3 samples, 0.04%)</title><rect x="896.9" y="979.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="899.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (27 samples, 0.33%)</title><rect x="897.4" y="1107.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="900.4" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.now (11 samples, 0.13%)</title><rect x="897.6" y="1091.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="900.6" y="1102.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (11 samples, 0.13%)</title><rect x="897.6" y="1075.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="900.6" y="1086.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (3 samples, 0.04%)</title><rect x="897.6" y="1059.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.6" y="1070.0"></text>
</g>
<g>
<title>java/time/Instant.create (3 samples, 0.04%)</title><rect x="897.6" y="1043.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (8 samples, 0.10%)</title><rect x="898.0" y="1059.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="901.0" y="1070.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (8 samples, 0.10%)</title><rect x="898.0" y="1043.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="901.0" y="1054.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="898.2" y="1027.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="901.2" y="1038.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.04%)</title><rect x="898.7" y="1027.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="901.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (15 samples, 0.18%)</title><rect x="899.2" y="1091.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="902.2" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.06%)</title><rect x="900.0" y="1075.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="903.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (4 samples, 0.05%)</title><rect x="900.7" y="1075.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="903.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (17 samples, 0.21%)</title><rect x="901.3" y="1107.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.3" y="1118.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.07%)</title><rect x="901.3" y="1091.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.3" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.07%)</title><rect x="901.3" y="1075.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="904.3" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (6 samples, 0.07%)</title><rect x="901.3" y="1059.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.3" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (6 samples, 0.07%)</title><rect x="901.3" y="1043.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.3" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (4 samples, 0.05%)</title><rect x="901.6" y="1027.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="904.6" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (11 samples, 0.13%)</title><rect x="902.2" y="1091.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (11 samples, 0.13%)</title><rect x="902.2" y="1075.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.2" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (10 samples, 0.12%)</title><rect x="902.3" y="1059.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.3" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (10 samples, 0.12%)</title><rect x="902.3" y="1043.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.3" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (10 samples, 0.12%)</title><rect x="902.3" y="1027.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (4 samples, 0.05%)</title><rect x="903.7" y="1107.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.04%)</title><rect x="903.9" y="1091.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.9" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.04%)</title><rect x="903.9" y="1075.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.9" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.04%)</title><rect x="903.9" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (4 samples, 0.05%)</title><rect x="904.3" y="1107.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (4 samples, 0.05%)</title><rect x="904.3" y="1091.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="907.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (2 samples, 0.02%)</title><rect x="904.6" y="1075.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="907.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (76 samples, 0.92%)</title><rect x="904.9" y="1107.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="907.9" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.now (49 samples, 0.59%)</title><rect x="906.7" y="1091.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="909.7" y="1102.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (49 samples, 0.59%)</title><rect x="906.7" y="1075.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="909.7" y="1086.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (7 samples, 0.08%)</title><rect x="907.3" y="1059.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="910.3" y="1070.0"></text>
</g>
<g>
<title>java/time/Instant.create (7 samples, 0.08%)</title><rect x="907.3" y="1043.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="910.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (38 samples, 0.46%)</title><rect x="908.3" y="1059.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="911.3" y="1070.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (31 samples, 0.38%)</title><rect x="909.3" y="1043.0" width="4.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="912.3" y="1054.0"></text>
</g>
<g>
<title>[vdso] (10 samples, 0.12%)</title><rect x="910.8" y="1027.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="913.8" y="1038.0"></text>
</g>
<g>
<title>_init (6 samples, 0.07%)</title><rect x="912.2" y="1027.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="915.2" y="1038.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (5 samples, 0.06%)</title><rect x="913.0" y="1027.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="916.0" y="1038.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.06%)</title><rect x="913.0" y="1011.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="916.0" y="1022.0"></text>
</g>
<g>
<title>java/time/Instant.until (6 samples, 0.07%)</title><rect x="913.8" y="1091.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.8" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (3 samples, 0.04%)</title><rect x="914.6" y="1091.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="917.6" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (3 samples, 0.04%)</title><rect x="914.6" y="1075.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="917.6" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (5 samples, 0.06%)</title><rect x="915.0" y="1091.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.0" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (5 samples, 0.06%)</title><rect x="915.0" y="1075.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="918.0" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (5 samples, 0.06%)</title><rect x="915.0" y="1059.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.0" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (5 samples, 0.06%)</title><rect x="915.0" y="1043.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.0" y="1054.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.04%)</title><rect x="915.3" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.3" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (582 samples, 7.06%)</title><rect x="915.8" y="1107.0" width="83.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="918.8" y="1118.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (579 samples, 7.03%)</title><rect x="916.2" y="1091.0" width="82.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.2" y="1102.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (569 samples, 6.91%)</title><rect x="917.1" y="1075.0" width="81.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="920.1" y="1086.0">sun/nio/c..</text>
</g>
<g>
<title>__clock_gettime (8 samples, 0.10%)</title><rect x="918.3" y="1059.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="921.3" y="1070.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="919.1" y="1043.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="922.1" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.02%)</title><rect x="919.5" y="1059.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="922.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (187 samples, 2.27%)</title><rect x="919.8" y="1059.0" width="26.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="922.8" y="1070.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (3 samples, 0.04%)</title><rect x="923.6" y="1043.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="926.6" y="1054.0"></text>
</g>
<g>
<title>__GI_epoll_wait (128 samples, 1.55%)</title><rect x="924.1" y="1043.0" width="18.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="927.1" y="1054.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.04%)</title><rect x="927.4" y="1027.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="930.4" y="1038.0"></text>
</g>
<g>
<title>auditsys (6 samples, 0.07%)</title><rect x="927.8" y="1027.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="930.8" y="1038.0"></text>
</g>
<g>
<title>__audit_syscall_entry (6 samples, 0.07%)</title><rect x="927.8" y="1011.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="930.8" y="1022.0"></text>
</g>
<g>
<title>system_call_fastpath (93 samples, 1.13%)</title><rect x="928.9" y="1027.0" width="13.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="931.9" y="1038.0"></text>
</g>
<g>
<title>sys_epoll_wait (93 samples, 1.13%)</title><rect x="928.9" y="1011.0" width="13.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="931.9" y="1022.0"></text>
</g>
<g>
<title>ep_poll (75 samples, 0.91%)</title><rect x="929.5" y="995.0" width="10.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="932.5" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="929.8" y="979.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="932.8" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list.isra.7 (22 samples, 0.27%)</title><rect x="930.2" y="979.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="933.2" y="990.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.06%)</title><rect x="930.4" y="963.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="933.4" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (12 samples, 0.15%)</title><rect x="931.1" y="963.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="934.1" y="974.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.06%)</title><rect x="932.1" y="947.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="935.1" y="958.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.02%)</title><rect x="932.8" y="963.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="935.8" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.04%)</title><rect x="933.4" y="979.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="936.4" y="990.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.02%)</title><rect x="933.8" y="979.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="936.8" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (31 samples, 0.38%)</title><rect x="934.1" y="979.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="937.1" y="990.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.02%)</title><rect x="934.1" y="963.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="937.1" y="974.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (29 samples, 0.35%)</title><rect x="934.4" y="963.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="937.4" y="974.0"></text>
</g>
<g>
<title>hrtimer_init (2 samples, 0.02%)</title><rect x="934.4" y="947.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="937.4" y="958.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (25 samples, 0.30%)</title><rect x="934.7" y="947.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="937.7" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (25 samples, 0.30%)</title><rect x="934.7" y="931.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="937.7" y="942.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.02%)</title><rect x="938.2" y="947.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="941.2" y="958.0"></text>
</g>
<g>
<title>select_estimate_accuracy (11 samples, 0.13%)</title><rect x="938.5" y="979.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="941.5" y="990.0"></text>
</g>
<g>
<title>ktime_get_ts64 (3 samples, 0.04%)</title><rect x="939.4" y="963.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="942.4" y="974.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.02%)</title><rect x="939.5" y="947.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="942.5" y="958.0"></text>
</g>
<g>
<title>fget_light (12 samples, 0.15%)</title><rect x="940.3" y="995.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="943.3" y="1006.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.06%)</title><rect x="942.4" y="1043.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="945.4" y="1054.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.04%)</title><rect x="943.1" y="1043.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="946.1" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.12%)</title><rect x="943.7" y="1043.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="946.7" y="1054.0"></text>
</g>
<g>
<title>system_call_after_swapgs (10 samples, 0.12%)</title><rect x="943.7" y="1027.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="946.7" y="1038.0"></text>
</g>
<g>
<title>__read (7 samples, 0.08%)</title><rect x="945.1" y="1043.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="948.1" y="1054.0"></text>
</g>
<g>
<title>system_call_after_swapgs (7 samples, 0.08%)</title><rect x="945.1" y="1027.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="948.1" y="1038.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="946.1" y="1043.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="949.1" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (274 samples, 3.33%)</title><rect x="946.6" y="1059.0" width="39.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.6" y="1070.0">sun..</text>
</g>
<g>
<title>java/util/HashMap.get (15 samples, 0.18%)</title><rect x="946.6" y="1043.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="949.6" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (15 samples, 0.18%)</title><rect x="946.6" y="1027.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="949.6" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (227 samples, 2.75%)</title><rect x="948.7" y="1043.0" width="32.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="951.7" y="1054.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (219 samples, 2.66%)</title><rect x="949.8" y="1027.0" width="31.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="952.8" y="1038.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (4 samples, 0.05%)</title><rect x="951.1" y="1011.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="954.1" y="1022.0"></text>
</g>
<g>
<title>__GI_epoll_wait (27 samples, 0.33%)</title><rect x="951.7" y="1011.0" width="3.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="954.7" y="1022.0"></text>
</g>
<g>
<title>system_call_after_swapgs (27 samples, 0.33%)</title><rect x="951.7" y="995.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="954.7" y="1006.0"></text>
</g>
<g>
<title>__read (177 samples, 2.15%)</title><rect x="955.7" y="1011.0" width="25.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="958.7" y="1022.0">_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.02%)</title><rect x="958.3" y="995.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="961.3" y="1006.0"></text>
</g>
<g>
<title>auditsys (13 samples, 0.16%)</title><rect x="958.6" y="995.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="961.6" y="1006.0"></text>
</g>
<g>
<title>__audit_syscall_entry (11 samples, 0.13%)</title><rect x="958.9" y="979.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="961.9" y="990.0"></text>
</g>
<g>
<title>sys_read (5 samples, 0.06%)</title><rect x="960.4" y="995.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="963.4" y="1006.0"></text>
</g>
<g>
<title>sysret_audit (2 samples, 0.02%)</title><rect x="961.2" y="995.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="964.2" y="1006.0"></text>
</g>
<g>
<title>system_call_fastpath (135 samples, 1.64%)</title><rect x="961.4" y="995.0" width="19.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="964.4" y="1006.0"></text>
</g>
<g>
<title>sys_read (132 samples, 1.60%)</title><rect x="961.9" y="979.0" width="18.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="964.9" y="990.0"></text>
</g>
<g>
<title>do_sync_read (2 samples, 0.02%)</title><rect x="962.4" y="963.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="965.4" y="974.0"></text>
</g>
<g>
<title>fget_light (18 samples, 0.22%)</title><rect x="962.7" y="963.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="965.7" y="974.0"></text>
</g>
<g>
<title>vfs_read (108 samples, 1.31%)</title><rect x="965.3" y="963.0" width="15.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="968.3" y="974.0"></text>
</g>
<g>
<title>do_sync_read (59 samples, 0.72%)</title><rect x="965.6" y="947.0" width="8.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="968.6" y="958.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.02%)</title><rect x="965.9" y="931.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="968.9" y="942.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.02%)</title><rect x="966.2" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="969.2" y="942.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.05%)</title><rect x="966.5" y="931.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="969.5" y="942.0"></text>
</g>
<g>
<title>generic_pipe_buf_confirm (2 samples, 0.02%)</title><rect x="967.0" y="931.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="970.0" y="942.0"></text>
</g>
<g>
<title>generic_pipe_buf_map (2 samples, 0.02%)</title><rect x="967.3" y="931.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="970.3" y="942.0"></text>
</g>
<g>
<title>pipe_read (43 samples, 0.52%)</title><rect x="967.7" y="931.0" width="6.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="970.7" y="942.0"></text>
</g>
<g>
<title>__check_object_size (10 samples, 0.12%)</title><rect x="968.6" y="915.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="971.6" y="926.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.07%)</title><rect x="969.2" y="899.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="972.2" y="910.0"></text>
</g>
<g>
<title>__wake_up_sync_key (9 samples, 0.11%)</title><rect x="970.2" y="915.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="973.2" y="926.0"></text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 0.11%)</title><rect x="970.2" y="899.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="973.2" y="910.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.02%)</title><rect x="970.2" y="883.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="973.2" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.08%)</title><rect x="970.5" y="883.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="973.5" y="894.0"></text>
</g>
<g>
<title>mutex_lock (7 samples, 0.08%)</title><rect x="971.6" y="915.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="974.6" y="926.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.02%)</title><rect x="972.6" y="915.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="975.6" y="926.0"></text>
</g>
<g>
<title>static_key_enabled (3 samples, 0.04%)</title><rect x="972.9" y="915.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="975.9" y="926.0"></text>
</g>
<g>
<title>touch_atime (4 samples, 0.05%)</title><rect x="973.3" y="915.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="976.3" y="926.0"></text>
</g>
<g>
<title>rw_verify_area (45 samples, 0.55%)</title><rect x="974.2" y="947.0" width="6.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="977.2" y="958.0"></text>
</g>
<g>
<title>security_file_permission (36 samples, 0.44%)</title><rect x="974.9" y="931.0" width="5.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="977.9" y="942.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.02%)</title><rect x="975.2" y="915.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="978.2" y="926.0"></text>
</g>
<g>
<title>selinux_file_permission (32 samples, 0.39%)</title><rect x="975.5" y="915.0" width="4.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="978.5" y="926.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.02%)</title><rect x="978.1" y="899.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="981.1" y="910.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.02%)</title><rect x="978.3" y="899.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="981.3" y="910.0"></text>
</g>
<g>
<title>file_has_perm (10 samples, 0.12%)</title><rect x="978.6" y="899.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="981.6" y="910.0"></text>
</g>
<g>
<title>inode_has_perm.isra.34.constprop.71 (9 samples, 0.11%)</title><rect x="978.8" y="883.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="981.8" y="894.0"></text>
</g>
<g>
<title>avc_has_perm_flags (9 samples, 0.11%)</title><rect x="978.8" y="867.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="981.8" y="878.0"></text>
</g>
<g>
<title>selinux_file_permission (4 samples, 0.05%)</title><rect x="980.1" y="931.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="983.1" y="942.0"></text>
</g>
<g>
<title>tracesys (2 samples, 0.02%)</title><rect x="980.8" y="995.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="983.8" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (32 samples, 0.39%)</title><rect x="981.2" y="1043.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="984.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.add (9 samples, 0.11%)</title><rect x="981.4" y="1027.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="984.4" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.11%)</title><rect x="981.4" y="1011.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="984.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (9 samples, 0.11%)</title><rect x="981.4" y="995.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.4" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (22 samples, 0.27%)</title><rect x="982.6" y="1027.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="985.6" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.04%)</title><rect x="985.2" y="1011.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="988.2" y="1022.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (3 samples, 0.04%)</title><rect x="985.2" y="995.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="988.2" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.02%)</title><rect x="985.4" y="979.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="988.4" y="990.0"></text>
</g>
<g>
<title>system_call_fastpath (2 samples, 0.02%)</title><rect x="985.4" y="963.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="988.4" y="974.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.02%)</title><rect x="985.4" y="947.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="988.4" y="958.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.02%)</title><rect x="985.4" y="931.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="988.4" y="942.0"></text>
</g>
<g>
<title>futex_wake_op (2 samples, 0.02%)</title><rect x="985.4" y="915.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="988.4" y="926.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.02%)</title><rect x="985.4" y="899.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="988.4" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.02%)</title><rect x="985.4" y="883.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="988.4" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.02%)</title><rect x="985.4" y="867.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="988.4" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (38 samples, 0.46%)</title><rect x="985.8" y="1059.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.8" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (33 samples, 0.40%)</title><rect x="986.4" y="1043.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="989.4" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (4 samples, 0.05%)</title><rect x="991.2" y="1059.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="994.2" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.02%)</title><rect x="991.2" y="1043.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="994.2" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.02%)</title><rect x="991.5" y="1043.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="994.5" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (9 samples, 0.11%)</title><rect x="991.8" y="1059.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="994.8" y="1070.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (9 samples, 0.11%)</title><rect x="991.8" y="1043.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="994.8" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (9 samples, 0.11%)</title><rect x="991.8" y="1027.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (9 samples, 0.11%)</title><rect x="991.8" y="1011.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (9 samples, 0.11%)</title><rect x="991.8" y="995.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.8" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (38 samples, 0.46%)</title><rect x="993.1" y="1059.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="996.1" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (29 samples, 0.35%)</title><rect x="994.4" y="1043.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="997.4" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (29 samples, 0.35%)</title><rect x="994.4" y="1027.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="997.4" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (29 samples, 0.35%)</title><rect x="994.4" y="1011.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="997.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (29 samples, 0.35%)</title><rect x="994.4" y="995.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="997.4" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (4 samples, 0.05%)</title><rect x="998.5" y="1075.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1001.5" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (59 samples, 0.72%)</title><rect x="999.1" y="1107.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.1" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (59 samples, 0.72%)</title><rect x="999.1" y="1091.0" width="8.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1002.1" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (57 samples, 0.69%)</title><rect x="999.1" y="1075.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1002.1" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (48 samples, 0.58%)</title><rect x="999.1" y="1059.0" width="6.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1002.1" y="1070.0"></text>
</g>
<g>
<title>__GI_epoll_wait (43 samples, 0.52%)</title><rect x="999.5" y="1043.0" width="6.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1002.5" y="1054.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.02%)</title><rect x="1001.3" y="1027.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1004.3" y="1038.0"></text>
</g>
<g>
<title>auditsys (3 samples, 0.04%)</title><rect x="1001.5" y="1027.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1004.5" y="1038.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.04%)</title><rect x="1001.5" y="1011.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1004.5" y="1022.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.02%)</title><rect x="1002.0" y="1027.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1005.0" y="1038.0"></text>
</g>
<g>
<title>system_call_after_swapgs (8 samples, 0.10%)</title><rect x="1002.3" y="1027.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1005.3" y="1038.0"></text>
</g>
<g>
<title>system_call_fastpath (16 samples, 0.19%)</title><rect x="1003.4" y="1027.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1006.4" y="1038.0"></text>
</g>
<g>
<title>sys_epoll_wait (16 samples, 0.19%)</title><rect x="1003.4" y="1011.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1006.4" y="1022.0"></text>
</g>
<g>
<title>ep_poll (9 samples, 0.11%)</title><rect x="1003.7" y="995.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1006.7" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="1003.7" y="979.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1006.7" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list.isra.7 (6 samples, 0.07%)</title><rect x="1004.1" y="979.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1007.1" y="990.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.05%)</title><rect x="1004.3" y="963.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1007.3" y="974.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.02%)</title><rect x="1004.6" y="947.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1007.6" y="958.0"></text>
</g>
<g>
<title>fget_light (5 samples, 0.06%)</title><rect x="1005.0" y="995.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1008.0" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (4 samples, 0.05%)</title><rect x="1006.0" y="1059.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1009.0" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (3 samples, 0.04%)</title><rect x="1006.1" y="1043.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1009.1" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (3 samples, 0.04%)</title><rect x="1006.1" y="1027.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1009.1" y="1038.0"></text>
</g>
<g>
<title>__read (3 samples, 0.04%)</title><rect x="1006.1" y="1011.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1009.1" y="1022.0"></text>
</g>
<g>
<title>system_call_fastpath (3 samples, 0.04%)</title><rect x="1006.1" y="995.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1009.1" y="1006.0"></text>
</g>
<g>
<title>sys_read (3 samples, 0.04%)</title><rect x="1006.1" y="979.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1009.1" y="990.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.04%)</title><rect x="1006.1" y="963.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1009.1" y="974.0"></text>
</g>
<g>
<title>do_sync_read (2 samples, 0.02%)</title><rect x="1006.1" y="947.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1009.1" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (4 samples, 0.05%)</title><rect x="1006.7" y="1059.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1009.7" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.04%)</title><rect x="1006.8" y="1043.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1009.8" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3 samples, 0.04%)</title><rect x="1006.8" y="1027.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1009.8" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1006.8" y="1011.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1009.8" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1006.8" y="995.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1009.8" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2 samples, 0.02%)</title><rect x="1007.3" y="1075.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1010.3" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectedKeys (2 samples, 0.02%)</title><rect x="1007.6" y="1107.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1010.6" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.ensureOpen (2 samples, 0.02%)</title><rect x="1007.6" y="1091.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1010.6" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (3 samples, 0.04%)</title><rect x="1007.8" y="1107.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1010.8" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (3 samples, 0.04%)</title><rect x="1007.8" y="1091.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1010.8" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (12 samples, 0.15%)</title><rect x="1008.3" y="1107.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1011.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (12 samples, 0.15%)</title><rect x="1008.3" y="1091.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1011.3" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (5 samples, 0.06%)</title><rect x="1009.0" y="1075.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1012.0" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1009.0" y="1059.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1012.0" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1009.0" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1012.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (2 samples, 0.02%)</title><rect x="1009.4" y="1059.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1012.4" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2 samples, 0.02%)</title><rect x="1009.7" y="1075.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1012.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (944 samples, 11.46%)</title><rect x="1010.0" y="1123.0" width="135.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1013.0" y="1134.0">one/nio/server/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.07%)</title><rect x="1010.1" y="1107.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1013.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.07%)</title><rect x="1010.1" y="1091.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1013.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (153 samples, 1.86%)</title><rect x="1011.0" y="1107.0" width="21.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1014.0" y="1118.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1013.0" y="1091.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.05%)</title><rect x="1013.1" y="1075.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1016.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (134 samples, 1.63%)</title><rect x="1013.7" y="1091.0" width="19.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1016.7" y="1102.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (9 samples, 0.11%)</title><rect x="1016.7" y="1075.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1019.7" y="1086.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.05%)</title><rect x="1018.0" y="1075.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1021.0" y="1086.0"></text>
</g>
<g>
<title>__GI_epoll_wait (59 samples, 0.72%)</title><rect x="1018.6" y="1075.0" width="8.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1021.6" y="1086.0"></text>
</g>
<g>
<title>auditsys (7 samples, 0.08%)</title><rect x="1020.6" y="1059.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1023.6" y="1070.0"></text>
</g>
<g>
<title>__audit_syscall_entry (7 samples, 0.08%)</title><rect x="1020.6" y="1043.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1023.6" y="1054.0"></text>
</g>
<g>
<title>sys_epoll_wait (2 samples, 0.02%)</title><rect x="1021.6" y="1059.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1024.6" y="1070.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.02%)</title><rect x="1022.0" y="1059.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1025.0" y="1070.0"></text>
</g>
<g>
<title>system_call_fastpath (33 samples, 0.40%)</title><rect x="1022.3" y="1059.0" width="4.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1025.3" y="1070.0"></text>
</g>
<g>
<title>sys_epoll_wait (33 samples, 0.40%)</title><rect x="1022.3" y="1043.0" width="4.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1025.3" y="1054.0"></text>
</g>
<g>
<title>ep_poll (27 samples, 0.33%)</title><rect x="1022.3" y="1027.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1025.3" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.06%)</title><rect x="1022.6" y="1011.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1025.6" y="1022.0"></text>
</g>
<g>
<title>ep_scan_ready_list.isra.7 (15 samples, 0.18%)</title><rect x="1023.3" y="1011.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1026.3" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.05%)</title><rect x="1023.6" y="995.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1026.6" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.08%)</title><rect x="1024.2" y="995.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1027.2" y="1006.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.05%)</title><rect x="1024.6" y="979.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1027.6" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.06%)</title><rect x="1025.5" y="1011.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1028.5" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.06%)</title><rect x="1025.5" y="995.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1028.5" y="1006.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.06%)</title><rect x="1025.5" y="979.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1028.5" y="990.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.06%)</title><rect x="1025.5" y="963.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1028.5" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.02%)</title><rect x="1025.9" y="947.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1028.9" y="958.0"></text>
</g>
<g>
<title>fget_light (5 samples, 0.06%)</title><rect x="1026.2" y="1027.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1029.2" y="1038.0"></text>
</g>
<g>
<title>__clock_gettime (18 samples, 0.22%)</title><rect x="1027.0" y="1075.0" width="2.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1030.0" y="1086.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.06%)</title><rect x="1029.6" y="1075.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1032.6" y="1086.0"></text>
</g>
<g>
<title>__libc_recv (3 samples, 0.04%)</title><rect x="1030.3" y="1075.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1033.3" y="1086.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.04%)</title><rect x="1030.3" y="1059.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1033.3" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.10%)</title><rect x="1030.8" y="1075.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1033.8" y="1086.0"></text>
</g>
<g>
<title>system_call_after_swapgs (8 samples, 0.10%)</title><rect x="1030.8" y="1059.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1033.8" y="1070.0"></text>
</g>
<g>
<title>_init (5 samples, 0.06%)</title><rect x="1031.9" y="1075.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1034.9" y="1086.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.02%)</title><rect x="1032.6" y="1075.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1035.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (784 samples, 9.51%)</title><rect x="1032.9" y="1107.0" width="112.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1035.9" y="1118.0">one/nio/net/Se..</text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="1032.9" y="1091.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1035.9" y="1102.0"></text>
</g>
<g>
<title>_init (2 samples, 0.02%)</title><rect x="1033.3" y="1091.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1036.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (777 samples, 9.43%)</title><rect x="1033.6" y="1091.0" width="111.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1036.6" y="1102.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (340 samples, 4.13%)</title><rect x="1035.2" y="1075.0" width="48.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1038.2" y="1086.0">one/..</text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (2 samples, 0.02%)</title><rect x="1039.8" y="1059.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1042.8" y="1070.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (2 samples, 0.02%)</title><rect x="1039.8" y="1043.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1042.8" y="1054.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (2 samples, 0.02%)</title><rect x="1039.8" y="1027.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1042.8" y="1038.0"></text>
</g>
<g>
<title>malloc (2 samples, 0.02%)</title><rect x="1040.4" y="1059.0" width="0.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1043.4" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (252 samples, 3.06%)</title><rect x="1040.6" y="1059.0" width="36.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1043.6" y="1070.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (248 samples, 3.01%)</title><rect x="1041.2" y="1043.0" width="35.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1044.2" y="1054.0">one..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (232 samples, 2.82%)</title><rect x="1041.8" y="1027.0" width="33.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.8" y="1038.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.17%)</title><rect x="1042.1" y="1011.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1045.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="1042.5" y="995.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1045.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.05%)</title><rect x="1042.5" y="979.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1045.5" y="990.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (6 samples, 0.07%)</title><rect x="1043.2" y="995.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1046.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1043.6" y="979.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1046.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1043.6" y="963.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1046.6" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="1043.6" y="947.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1046.6" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.entity (216 samples, 2.62%)</title><rect x="1044.1" y="1011.0" width="30.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1047.1" y="1022.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.12%)</title><rect x="1044.8" y="995.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1047.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.10%)</title><rect x="1045.1" y="979.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1048.1" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$112/1725035167.get$Lambda (3 samples, 0.04%)</title><rect x="1045.2" y="963.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$391/1150276494.get$Lambda (4 samples, 0.05%)</title><rect x="1045.7" y="963.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1048.7" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$391/1150276494.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1045.7" y="947.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1048.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2 samples, 0.02%)</title><rect x="1045.9" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.9" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.asyncExecute (200 samples, 2.43%)</title><rect x="1046.2" y="995.0" width="28.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1049.2" y="1006.0">ru..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (200 samples, 2.43%)</title><rect x="1046.2" y="979.0" width="28.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.2" y="990.0">on..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (200 samples, 2.43%)</title><rect x="1046.2" y="963.0" width="28.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1049.2" y="974.0">ja..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (200 samples, 2.43%)</title><rect x="1046.2" y="947.0" width="28.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1049.2" y="958.0">on..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (200 samples, 2.43%)</title><rect x="1046.2" y="931.0" width="28.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.2" y="942.0">on..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (200 samples, 2.43%)</title><rect x="1046.2" y="915.0" width="28.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1049.2" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (200 samples, 2.43%)</title><rect x="1046.2" y="899.0" width="28.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1049.2" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (192 samples, 2.33%)</title><rect x="1046.5" y="883.0" width="27.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.5" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (192 samples, 2.33%)</title><rect x="1046.5" y="867.0" width="27.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1049.5" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (192 samples, 2.33%)</title><rect x="1046.5" y="851.0" width="27.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1049.5" y="862.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (35 samples, 0.42%)</title><rect x="1047.1" y="835.0" width="5.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1050.1" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="1048.5" y="819.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1051.5" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.02%)</title><rect x="1049.1" y="819.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1052.1" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (2 samples, 0.02%)</title><rect x="1049.8" y="819.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1052.8" y="830.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (5 samples, 0.06%)</title><rect x="1050.2" y="819.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1053.2" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_lock (7 samples, 0.08%)</title><rect x="1050.9" y="819.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1053.9" y="830.0"></text>
</g>
<g>
<title>__libc_recv (5 samples, 0.06%)</title><rect x="1052.1" y="835.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1055.1" y="846.0"></text>
</g>
<g>
<title>system_call_after_swapgs (5 samples, 0.06%)</title><rect x="1052.1" y="819.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1055.1" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (143 samples, 1.74%)</title><rect x="1052.8" y="835.0" width="20.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1055.8" y="846.0"></text>
</g>
<g>
<title>sysret_signal (2 samples, 0.02%)</title><rect x="1053.8" y="819.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1056.8" y="830.0"></text>
</g>
<g>
<title>system_call_fastpath (134 samples, 1.63%)</title><rect x="1054.1" y="819.0" width="19.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1057.1" y="830.0"></text>
</g>
<g>
<title>sys_futex (134 samples, 1.63%)</title><rect x="1054.1" y="803.0" width="19.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1057.1" y="814.0"></text>
</g>
<g>
<title>do_futex (132 samples, 1.60%)</title><rect x="1054.2" y="787.0" width="18.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1057.2" y="798.0"></text>
</g>
<g>
<title>_raw_qspin_lock (4 samples, 0.05%)</title><rect x="1054.2" y="771.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1057.2" y="782.0"></text>
</g>
<g>
<title>futex_wake_op (126 samples, 1.53%)</title><rect x="1054.8" y="771.0" width="18.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1057.8" y="782.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.05%)</title><rect x="1055.8" y="755.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1058.8" y="766.0"></text>
</g>
<g>
<title>wake_up_q (115 samples, 1.40%)</title><rect x="1056.4" y="755.0" width="16.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1059.4" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (115 samples, 1.40%)</title><rect x="1056.4" y="739.0" width="16.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1059.4" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (115 samples, 1.40%)</title><rect x="1056.4" y="723.0" width="16.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1059.4" y="734.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.02%)</title><rect x="1072.9" y="771.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1075.9" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.05%)</title><rect x="1073.3" y="835.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1076.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (4 samples, 0.05%)</title><rect x="1074.1" y="883.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1077.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (4 samples, 0.05%)</title><rect x="1074.1" y="867.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1077.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (3 samples, 0.04%)</title><rect x="1075.0" y="1027.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1078.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.08%)</title><rect x="1075.4" y="1027.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1078.4" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.08%)</title><rect x="1075.4" y="1011.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1078.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.06%)</title><rect x="1075.4" y="995.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1078.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.05%)</title><rect x="1075.6" y="979.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1078.6" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.02%)</title><rect x="1076.2" y="995.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1079.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.02%)</title><rect x="1076.2" y="979.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1079.2" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (24 samples, 0.29%)</title><rect x="1076.7" y="1059.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1079.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1078.6" y="1043.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1081.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.06%)</title><rect x="1078.6" y="1027.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1081.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="1078.9" y="1011.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="1078.9" y="995.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1081.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="1079.3" y="1043.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1082.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.06%)</title><rect x="1079.3" y="1027.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1082.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (8 samples, 0.10%)</title><rect x="1080.2" y="1059.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1083.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (4 samples, 0.05%)</title><rect x="1080.6" y="1043.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1083.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.10%)</title><rect x="1081.5" y="1059.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1084.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.06%)</title><rect x="1081.9" y="1043.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1084.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.06%)</title><rect x="1081.9" y="1027.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1084.9" y="1038.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.02%)</title><rect x="1082.2" y="1011.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1085.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.11%)</title><rect x="1082.6" y="1059.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1085.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.11%)</title><rect x="1082.6" y="1043.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1085.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (426 samples, 5.17%)</title><rect x="1083.9" y="1075.0" width="61.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1086.9" y="1086.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (421 samples, 5.11%)</title><rect x="1084.0" y="1059.0" width="60.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1087.0" y="1070.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.02%)</title><rect x="1087.2" y="1043.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1090.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.61%)</title><rect x="1087.5" y="1043.0" width="7.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1090.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.61%)</title><rect x="1087.5" y="1027.0" width="7.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1090.5" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (43 samples, 0.52%)</title><rect x="1087.5" y="1011.0" width="6.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1090.5" y="1022.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.05%)</title><rect x="1088.5" y="995.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1091.5" y="1006.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (12 samples, 0.15%)</title><rect x="1089.0" y="995.0" width="1.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1092.0" y="1006.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (18 samples, 0.22%)</title><rect x="1091.0" y="995.0" width="2.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1094.0" y="1006.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.06%)</title><rect x="1091.5" y="979.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1094.5" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (6 samples, 0.07%)</title><rect x="1092.2" y="979.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1095.2" y="990.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.05%)</title><rect x="1093.1" y="979.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1096.1" y="990.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.02%)</title><rect x="1093.3" y="963.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1096.3" y="974.0"></text>
</g>
<g>
<title>__libc_recv (3 samples, 0.04%)</title><rect x="1093.6" y="1011.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1096.6" y="1022.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.04%)</title><rect x="1094.2" y="1011.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1097.2" y="1022.0"></text>
</g>
<g>
<title>__GI_epoll_wait (11 samples, 0.13%)</title><rect x="1094.6" y="1043.0" width="1.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1097.6" y="1054.0"></text>
</g>
<g>
<title>system_call_after_swapgs (11 samples, 0.13%)</title><rect x="1094.6" y="1027.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1097.6" y="1038.0"></text>
</g>
<g>
<title>__libc_recv (334 samples, 4.05%)</title><rect x="1096.2" y="1043.0" width="47.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1099.2" y="1054.0">__li..</text>
</g>
<g>
<title>auditsys (3 samples, 0.04%)</title><rect x="1097.9" y="1027.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1100.9" y="1038.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.02%)</title><rect x="1098.1" y="1011.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1101.1" y="1022.0"></text>
</g>
<g>
<title>sysret_audit (4 samples, 0.05%)</title><rect x="1098.3" y="1027.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1101.3" y="1038.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.04%)</title><rect x="1098.5" y="1011.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1101.5" y="1022.0"></text>
</g>
<g>
<title>system_call_fastpath (315 samples, 3.82%)</title><rect x="1098.9" y="1027.0" width="45.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1101.9" y="1038.0">syst..</text>
</g>
<g>
<title>sys_recvfrom (311 samples, 3.77%)</title><rect x="1099.5" y="1011.0" width="44.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1102.5" y="1022.0">sys_..</text>
</g>
<g>
<title>SYSC_recvfrom (311 samples, 3.77%)</title><rect x="1099.5" y="995.0" width="44.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1102.5" y="1006.0">SYSC..</text>
</g>
<g>
<title>sock_recvmsg (302 samples, 3.67%)</title><rect x="1100.1" y="979.0" width="43.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1103.1" y="990.0">sock..</text>
</g>
<g>
<title>inet_recvmsg (289 samples, 3.51%)</title><rect x="1100.2" y="963.0" width="41.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1103.2" y="974.0">ine..</text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.02%)</title><rect x="1100.2" y="947.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1103.2" y="958.0"></text>
</g>
<g>
<title>tcp_recvmsg (286 samples, 3.47%)</title><rect x="1100.6" y="947.0" width="41.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1103.6" y="958.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (13 samples, 0.16%)</title><rect x="1101.6" y="931.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1104.6" y="942.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.04%)</title><rect x="1101.6" y="915.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1104.6" y="926.0"></text>
</g>
<g>
<title>skb_release_all (10 samples, 0.12%)</title><rect x="1102.1" y="915.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1105.1" y="926.0"></text>
</g>
<g>
<title>skb_release_head_state (9 samples, 0.11%)</title><rect x="1102.2" y="899.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1105.2" y="910.0"></text>
</g>
<g>
<title>dst_release (6 samples, 0.07%)</title><rect x="1102.2" y="883.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1105.2" y="894.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.04%)</title><rect x="1103.1" y="883.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1106.1" y="894.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.02%)</title><rect x="1103.6" y="931.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1106.6" y="942.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.02%)</title><rect x="1104.1" y="931.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1107.1" y="942.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.05%)</title><rect x="1104.4" y="931.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1107.4" y="942.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.05%)</title><rect x="1104.4" y="915.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1107.4" y="926.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.05%)</title><rect x="1104.4" y="899.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1107.4" y="910.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.04%)</title><rect x="1104.5" y="883.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1107.5" y="894.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.02%)</title><rect x="1104.7" y="867.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1107.7" y="878.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.02%)</title><rect x="1104.7" y="851.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1107.7" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.02%)</title><rect x="1104.7" y="835.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1107.7" y="846.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (17 samples, 0.21%)</title><rect x="1104.9" y="931.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1107.9" y="942.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.05%)</title><rect x="1105.4" y="915.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1108.4" y="926.0"></text>
</g>
<g>
<title>memcpy_toiovec (10 samples, 0.12%)</title><rect x="1105.9" y="915.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1108.9" y="926.0"></text>
</g>
<g>
<title>__check_object_size (10 samples, 0.12%)</title><rect x="1105.9" y="899.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1108.9" y="910.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.02%)</title><rect x="1106.9" y="883.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1109.9" y="894.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (239 samples, 2.90%)</title><rect x="1107.4" y="931.0" width="34.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1110.4" y="942.0">tc..</text>
</g>
<g>
<title>tcp_send_ack (237 samples, 2.88%)</title><rect x="1107.7" y="915.0" width="33.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1110.7" y="926.0">tc..</text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.06%)</title><rect x="1107.8" y="899.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1110.8" y="910.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.02%)</title><rect x="1108.8" y="899.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1111.8" y="910.0"></text>
</g>
<g>
<title>tcp_transmit_skb (227 samples, 2.75%)</title><rect x="1109.1" y="899.0" width="32.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1112.1" y="910.0">tc..</text>
</g>
<g>
<title>ip_queue_xmit (218 samples, 2.65%)</title><rect x="1110.1" y="883.0" width="31.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1113.1" y="894.0">ip..</text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.06%)</title><rect x="1110.5" y="867.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1113.5" y="878.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.05%)</title><rect x="1110.7" y="851.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1113.7" y="862.0"></text>
</g>
<g>
<title>ip_local_out_sk (209 samples, 2.54%)</title><rect x="1111.2" y="867.0" width="30.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1114.2" y="878.0">ip..</text>
</g>
<g>
<title>__ip_local_out_sk (73 samples, 0.89%)</title><rect x="1111.2" y="851.0" width="10.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1114.2" y="862.0"></text>
</g>
<g>
<title>nf_hook_slow (71 samples, 0.86%)</title><rect x="1111.5" y="835.0" width="10.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1114.5" y="846.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.02%)</title><rect x="1111.5" y="819.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1114.5" y="830.0"></text>
</g>
<g>
<title>nf_iterate (67 samples, 0.81%)</title><rect x="1112.1" y="819.0" width="9.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1115.1" y="830.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.02%)</title><rect x="1112.7" y="803.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1115.7" y="814.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.02%)</title><rect x="1112.7" y="787.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1115.7" y="798.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (5 samples, 0.06%)</title><rect x="1113.0" y="803.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1116.0" y="814.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.06%)</title><rect x="1113.0" y="787.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1116.0" y="798.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (12 samples, 0.15%)</title><rect x="1113.8" y="803.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1116.8" y="814.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (11 samples, 0.13%)</title><rect x="1114.0" y="787.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1117.0" y="798.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (9 samples, 0.11%)</title><rect x="1115.5" y="803.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1118.5" y="814.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.11%)</title><rect x="1115.5" y="787.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1118.5" y="798.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (28 samples, 0.34%)</title><rect x="1116.8" y="803.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1119.8" y="814.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (25 samples, 0.30%)</title><rect x="1117.0" y="787.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1120.0" y="798.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (8 samples, 0.10%)</title><rect x="1117.3" y="771.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1120.3" y="782.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (2 samples, 0.02%)</title><rect x="1118.7" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1121.7" y="782.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (10 samples, 0.12%)</title><rect x="1119.1" y="771.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1122.1" y="782.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (2 samples, 0.02%)</title><rect x="1119.7" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1122.7" y="766.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (4 samples, 0.05%)</title><rect x="1120.0" y="755.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1123.0" y="766.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.05%)</title><rect x="1120.8" y="803.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1123.8" y="814.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (2 samples, 0.02%)</title><rect x="1121.4" y="803.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1124.4" y="814.0"></text>
</g>
<g>
<title>ip_output (136 samples, 1.65%)</title><rect x="1121.7" y="851.0" width="19.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1124.7" y="862.0"></text>
</g>
<g>
<title>ip_finish_output (121 samples, 1.47%)</title><rect x="1121.8" y="835.0" width="17.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1124.8" y="846.0"></text>
</g>
<g>
<title>dev_queue_xmit (18 samples, 0.22%)</title><rect x="1122.4" y="819.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1125.4" y="830.0"></text>
</g>
<g>
<title>__dev_queue_xmit (18 samples, 0.22%)</title><rect x="1122.4" y="803.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1125.4" y="814.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.11%)</title><rect x="1123.1" y="787.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1126.1" y="798.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.10%)</title><rect x="1123.3" y="771.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1126.3" y="782.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.06%)</title><rect x="1123.6" y="755.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1126.6" y="766.0"></text>
</g>
<g>
<title>netif_rx_internal (5 samples, 0.06%)</title><rect x="1123.6" y="739.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1126.6" y="750.0"></text>
</g>
<g>
<title>getnstimeofday64 (2 samples, 0.02%)</title><rect x="1123.7" y="723.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1126.7" y="734.0"></text>
</g>
<g>
<title>ktime_get_real (2 samples, 0.02%)</title><rect x="1124.0" y="723.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1127.0" y="734.0"></text>
</g>
<g>
<title>getnstimeofday64 (2 samples, 0.02%)</title><rect x="1124.0" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1127.0" y="718.0"></text>
</g>
<g>
<title>__getnstimeofday64 (2 samples, 0.02%)</title><rect x="1124.0" y="691.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1127.0" y="702.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.02%)</title><rect x="1124.4" y="787.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1127.4" y="798.0"></text>
</g>
<g>
<title>local_bh_enable (98 samples, 1.19%)</title><rect x="1125.1" y="819.0" width="14.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1128.1" y="830.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (97 samples, 1.18%)</title><rect x="1125.1" y="803.0" width="13.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1128.1" y="814.0"></text>
</g>
<g>
<title>do_softirq (97 samples, 1.18%)</title><rect x="1125.1" y="787.0" width="13.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1128.1" y="798.0"></text>
</g>
<g>
<title>call_softirq (95 samples, 1.15%)</title><rect x="1125.4" y="771.0" width="13.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1128.4" y="782.0"></text>
</g>
<g>
<title>__do_softirq (95 samples, 1.15%)</title><rect x="1125.4" y="755.0" width="13.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1128.4" y="766.0"></text>
</g>
<g>
<title>net_rx_action (91 samples, 1.10%)</title><rect x="1126.0" y="739.0" width="13.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1129.0" y="750.0"></text>
</g>
<g>
<title>process_backlog (91 samples, 1.10%)</title><rect x="1126.0" y="723.0" width="13.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1129.0" y="734.0"></text>
</g>
<g>
<title>__netif_receive_skb (91 samples, 1.10%)</title><rect x="1126.0" y="707.0" width="13.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1129.0" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (91 samples, 1.10%)</title><rect x="1126.0" y="691.0" width="13.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1129.0" y="702.0"></text>
</g>
<g>
<title>ip_rcv (82 samples, 1.00%)</title><rect x="1127.1" y="675.0" width="11.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1130.1" y="686.0"></text>
</g>
<g>
<title>ip_rcv_finish (69 samples, 0.84%)</title><rect x="1127.3" y="659.0" width="9.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1130.3" y="670.0"></text>
</g>
<g>
<title>ip_local_deliver (69 samples, 0.84%)</title><rect x="1127.3" y="643.0" width="9.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1130.3" y="654.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (48 samples, 0.58%)</title><rect x="1127.3" y="627.0" width="6.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1130.3" y="638.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.02%)</title><rect x="1127.4" y="611.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1130.4" y="622.0"></text>
</g>
<g>
<title>tcp_v4_rcv (44 samples, 0.53%)</title><rect x="1127.8" y="611.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1130.8" y="622.0"></text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.08%)</title><rect x="1127.8" y="595.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1130.8" y="606.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (36 samples, 0.44%)</title><rect x="1129.0" y="595.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1132.0" y="606.0"></text>
</g>
<g>
<title>tcp_rcv_established (35 samples, 0.42%)</title><rect x="1129.1" y="579.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1132.1" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.05%)</title><rect x="1129.3" y="563.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1132.3" y="574.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.02%)</title><rect x="1129.6" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1132.6" y="558.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.02%)</title><rect x="1129.6" y="531.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1132.6" y="542.0"></text>
</g>
<g>
<title>tcp_ack (27 samples, 0.33%)</title><rect x="1130.0" y="563.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1133.0" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.11%)</title><rect x="1131.0" y="547.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1134.0" y="558.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.02%)</title><rect x="1131.0" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1134.0" y="542.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.08%)</title><rect x="1131.3" y="531.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1134.3" y="542.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.07%)</title><rect x="1131.4" y="515.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1134.4" y="526.0"></text>
</g>
<g>
<title>kfree (5 samples, 0.06%)</title><rect x="1131.6" y="499.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1134.6" y="510.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.05%)</title><rect x="1131.7" y="483.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1134.7" y="494.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.02%)</title><rect x="1132.3" y="547.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1135.3" y="558.0"></text>
</g>
<g>
<title>local_clock (2 samples, 0.02%)</title><rect x="1132.7" y="547.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1135.7" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.06%)</title><rect x="1133.0" y="547.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1136.0" y="558.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="1133.3" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1136.3" y="542.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="1133.3" y="515.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1136.3" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="1133.3" y="499.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1136.3" y="510.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.02%)</title><rect x="1133.9" y="563.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1136.9" y="574.0"></text>
</g>
<g>
<title>nf_hook_slow (21 samples, 0.25%)</title><rect x="1134.2" y="627.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1137.2" y="638.0"></text>
</g>
<g>
<title>nf_iterate (18 samples, 0.22%)</title><rect x="1134.6" y="611.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1137.6" y="622.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (11 samples, 0.13%)</title><rect x="1135.2" y="595.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1138.2" y="606.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.10%)</title><rect x="1135.2" y="579.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1138.2" y="590.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (2 samples, 0.02%)</title><rect x="1135.9" y="563.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1138.9" y="574.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (2 samples, 0.02%)</title><rect x="1135.9" y="547.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1138.9" y="558.0"></text>
</g>
<g>
<title>tcp_mt (3 samples, 0.04%)</title><rect x="1136.3" y="579.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1139.3" y="590.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (3 samples, 0.04%)</title><rect x="1136.7" y="595.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1139.7" y="606.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.04%)</title><rect x="1136.7" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1139.7" y="590.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.15%)</title><rect x="1137.2" y="659.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1140.2" y="670.0"></text>
</g>
<g>
<title>nf_iterate (11 samples, 0.13%)</title><rect x="1137.3" y="643.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1140.3" y="654.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (6 samples, 0.07%)</title><rect x="1137.7" y="627.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1140.7" y="638.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.07%)</title><rect x="1137.7" y="611.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1140.7" y="622.0"></text>
</g>
<g>
<title>nf_hook_slow (14 samples, 0.17%)</title><rect x="1139.2" y="835.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1142.2" y="846.0"></text>
</g>
<g>
<title>nf_iterate (10 samples, 0.12%)</title><rect x="1139.4" y="819.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1142.4" y="830.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (2 samples, 0.02%)</title><rect x="1140.5" y="803.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1143.5" y="814.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (2 samples, 0.02%)</title><rect x="1140.9" y="819.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1143.9" y="830.0"></text>
</g>
<g>
<title>security_socket_recvmsg (11 samples, 0.13%)</title><rect x="1141.6" y="963.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1144.6" y="974.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (11 samples, 0.13%)</title><rect x="1141.6" y="947.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1144.6" y="958.0"></text>
</g>
<g>
<title>sock_has_perm (11 samples, 0.13%)</title><rect x="1141.6" y="931.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1144.6" y="942.0"></text>
</g>
<g>
<title>avc_has_perm_flags (5 samples, 0.06%)</title><rect x="1142.5" y="915.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1145.5" y="926.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.06%)</title><rect x="1143.3" y="979.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1146.3" y="990.0"></text>
</g>
<g>
<title>fget_light (5 samples, 0.06%)</title><rect x="1143.3" y="963.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1146.3" y="974.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.02%)</title><rect x="1144.0" y="1043.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1147.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (4 samples, 0.05%)</title><rect x="1144.3" y="1059.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1147.3" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.02%)</title><rect x="1144.9" y="1091.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1147.9" y="1102.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.02%)</title><rect x="1144.9" y="1075.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1147.9" y="1086.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (3 samples, 0.04%)</title><rect x="1145.3" y="1123.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1148.3" y="1134.0"></text>
</g>
<g>
<title>start_thread (308 samples, 3.74%)</title><rect x="1145.9" y="1123.0" width="44.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1148.9" y="1134.0">star..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (308 samples, 3.74%)</title><rect x="1145.9" y="1107.0" width="44.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1148.9" y="1118.0">thre..</text>
</g>
<g>
<title>Thread::call_run() (308 samples, 3.74%)</title><rect x="1145.9" y="1091.0" width="44.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1148.9" y="1102.0">Thre..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.02%)</title><rect x="1145.9" y="1075.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1148.9" y="1086.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.02%)</title><rect x="1145.9" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.9" y="1070.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.02%)</title><rect x="1145.9" y="1043.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1148.9" y="1054.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (2 samples, 0.02%)</title><rect x="1145.9" y="1027.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1148.9" y="1038.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (2 samples, 0.02%)</title><rect x="1145.9" y="1011.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.9" y="1022.0"></text>
</g>
<g>
<title>GangWorker::loop() (112 samples, 1.36%)</title><rect x="1146.2" y="1075.0" width="16.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1149.2" y="1086.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (105 samples, 1.27%)</title><rect x="1146.3" y="1059.0" width="15.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1149.3" y="1070.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (24 samples, 0.29%)</title><rect x="1146.3" y="1043.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.3" y="1054.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (9 samples, 0.11%)</title><rect x="1146.5" y="1027.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.5" y="1038.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.05%)</title><rect x="1147.0" y="1011.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1150.0" y="1022.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.02%)</title><rect x="1147.3" y="995.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1150.3" y="1006.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (4 samples, 0.05%)</title><rect x="1147.8" y="1027.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1150.8" y="1038.0"></text>
</g>
<g>
<title>SpinPause (10 samples, 0.12%)</title><rect x="1148.3" y="1027.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1151.3" y="1038.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (75 samples, 0.91%)</title><rect x="1149.8" y="1043.0" width="10.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.8" y="1054.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (75 samples, 0.91%)</title><rect x="1149.8" y="1027.0" width="10.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.8" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (75 samples, 0.91%)</title><rect x="1149.8" y="1011.0" width="10.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.8" y="1022.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (75 samples, 0.91%)</title><rect x="1149.8" y="995.0" width="10.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1152.8" y="1006.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (74 samples, 0.90%)</title><rect x="1149.8" y="979.0" width="10.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1152.8" y="990.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (58 samples, 0.70%)</title><rect x="1149.8" y="963.0" width="8.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.8" y="974.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (30 samples, 0.36%)</title><rect x="1153.5" y="947.0" width="4.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1156.5" y="958.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.02%)</title><rect x="1156.5" y="931.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1159.5" y="942.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.02%)</title><rect x="1156.5" y="915.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1159.5" y="926.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.02%)</title><rect x="1156.5" y="899.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1159.5" y="910.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.02%)</title><rect x="1156.5" y="883.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1159.5" y="894.0"></text>
</g>
<g>
<title>handle_pte_fault (2 samples, 0.02%)</title><rect x="1156.5" y="867.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1159.5" y="878.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (7 samples, 0.08%)</title><rect x="1156.8" y="931.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.8" y="942.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (16 samples, 0.19%)</title><rect x="1158.1" y="963.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.1" y="974.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (13 samples, 0.16%)</title><rect x="1158.1" y="947.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.1" y="958.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 0.02%)</title><rect x="1158.5" y="931.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.5" y="942.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (2 samples, 0.02%)</title><rect x="1158.5" y="915.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.5" y="926.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.02%)</title><rect x="1159.1" y="931.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.1" y="942.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.02%)</title><rect x="1159.4" y="931.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.4" y="942.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (2 samples, 0.02%)</title><rect x="1159.6" y="931.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1162.6" y="942.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.02%)</title><rect x="1159.9" y="947.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.9" y="958.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.02%)</title><rect x="1160.5" y="1043.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.5" y="1054.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.02%)</title><rect x="1160.5" y="1027.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.5" y="1038.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.02%)</title><rect x="1160.5" y="1011.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.5" y="1022.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.02%)</title><rect x="1160.5" y="995.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.5" y="1006.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.05%)</title><rect x="1160.8" y="1043.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.8" y="1054.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (3 samples, 0.04%)</title><rect x="1160.8" y="1027.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.8" y="1038.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (3 samples, 0.04%)</title><rect x="1160.8" y="1011.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1163.8" y="1022.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (3 samples, 0.04%)</title><rect x="1160.8" y="995.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.8" y="1006.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.02%)</title><rect x="1160.9" y="979.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.9" y="990.0"></text>
</g>
<g>
<title>G1RedirtyLoggedCardsTask::work(unsigned int) (2 samples, 0.02%)</title><rect x="1161.4" y="1059.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1164.4" y="1070.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::par_apply_closure_to_all_completed_buffers(CardTableEntryClosure*) (2 samples, 0.02%)</title><rect x="1161.4" y="1043.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1164.4" y="1054.0"></text>
</g>
<g>
<title>RedirtyLoggedCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.02%)</title><rect x="1161.4" y="1027.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1164.4" y="1038.0"></text>
</g>
<g>
<title>JavaThread::run() (188 samples, 2.28%)</title><rect x="1162.2" y="1075.0" width="26.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1165.2" y="1086.0">J..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (188 samples, 2.28%)</title><rect x="1162.2" y="1059.0" width="26.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1165.2" y="1070.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (187 samples, 2.27%)</title><rect x="1162.2" y="1043.0" width="26.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.2" y="1054.0">C..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (187 samples, 2.27%)</title><rect x="1162.2" y="1027.0" width="26.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.2" y="1038.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (186 samples, 2.26%)</title><rect x="1162.2" y="1011.0" width="26.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.2" y="1022.0">C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (186 samples, 2.26%)</title><rect x="1162.2" y="995.0" width="26.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.2" y="1006.0">C..</text>
</g>
<g>
<title>Compile::Code_Gen() (115 samples, 1.40%)</title><rect x="1162.2" y="979.0" width="16.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.2" y="990.0"></text>
</g>
<g>
<title>Compile::Output() (3 samples, 0.04%)</title><rect x="1162.2" y="963.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.2" y="974.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (2 samples, 0.02%)</title><rect x="1162.4" y="947.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.4" y="958.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (2 samples, 0.02%)</title><rect x="1162.4" y="931.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.4" y="942.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (4 samples, 0.05%)</title><rect x="1162.6" y="963.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.6" y="974.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (2 samples, 0.02%)</title><rect x="1162.8" y="947.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.8" y="958.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.02%)</title><rect x="1162.8" y="931.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.8" y="942.0"></text>
</g>
<g>
<title>Matcher::match() (10 samples, 0.12%)</title><rect x="1163.2" y="963.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.2" y="974.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (8 samples, 0.10%)</title><rect x="1163.5" y="947.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1166.5" y="958.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (3 samples, 0.04%)</title><rect x="1163.7" y="931.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.7" y="942.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (4 samples, 0.05%)</title><rect x="1164.1" y="931.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1167.1" y="942.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (3 samples, 0.04%)</title><rect x="1164.1" y="915.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.1" y="926.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (3 samples, 0.04%)</title><rect x="1164.1" y="899.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.1" y="910.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (12 samples, 0.15%)</title><rect x="1164.8" y="963.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1167.8" y="974.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (12 samples, 0.15%)</title><rect x="1164.8" y="947.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1167.8" y="958.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (4 samples, 0.05%)</title><rect x="1164.9" y="931.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1167.9" y="942.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (2 samples, 0.02%)</title><rect x="1164.9" y="915.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1167.9" y="926.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (2 samples, 0.02%)</title><rect x="1165.2" y="915.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.2" y="926.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (2 samples, 0.02%)</title><rect x="1165.5" y="931.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.5" y="942.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (3 samples, 0.04%)</title><rect x="1166.1" y="931.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.1" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (85 samples, 1.03%)</title><rect x="1166.5" y="963.0" width="12.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1169.5" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.02%)</title><rect x="1166.9" y="947.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.9" y="958.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (2 samples, 0.02%)</title><rect x="1166.9" y="931.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1169.9" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (8 samples, 0.10%)</title><rect x="1167.2" y="947.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.2" y="958.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (6 samples, 0.07%)</title><rect x="1167.5" y="931.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.5" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (11 samples, 0.13%)</title><rect x="1168.4" y="947.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.4" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (24 samples, 0.29%)</title><rect x="1170.0" y="947.0" width="3.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.0" y="958.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (2 samples, 0.02%)</title><rect x="1170.5" y="931.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.5" y="942.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.04%)</title><rect x="1170.8" y="931.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.8" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (3 samples, 0.04%)</title><rect x="1171.2" y="931.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.2" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (6 samples, 0.07%)</title><rect x="1171.7" y="931.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.7" y="942.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.02%)</title><rect x="1172.2" y="915.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.2" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (4 samples, 0.05%)</title><rect x="1172.5" y="931.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.5" y="942.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (2 samples, 0.02%)</title><rect x="1172.8" y="915.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.8" y="926.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (2 samples, 0.02%)</title><rect x="1173.1" y="931.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1176.1" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (8 samples, 0.10%)</title><rect x="1173.7" y="947.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.7" y="958.0"></text>
</g>
<g>
<title>RegMask::Size() const (4 samples, 0.05%)</title><rect x="1174.2" y="931.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.2" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (2 samples, 0.02%)</title><rect x="1174.8" y="947.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1177.8" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (11 samples, 0.13%)</title><rect x="1175.1" y="947.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.1" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (4 samples, 0.05%)</title><rect x="1176.0" y="931.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.0" y="942.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (4 samples, 0.05%)</title><rect x="1176.8" y="947.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.8" y="958.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (3 samples, 0.04%)</title><rect x="1177.0" y="931.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.0" y="942.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (2 samples, 0.02%)</title><rect x="1177.1" y="915.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.1" y="926.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (5 samples, 0.06%)</title><rect x="1177.7" y="947.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.7" y="958.0"></text>
</g>
<g>
<title>Compile::Optimize() (47 samples, 0.57%)</title><rect x="1178.7" y="979.0" width="6.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.7" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (34 samples, 0.41%)</title><rect x="1178.8" y="963.0" width="4.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.8" y="974.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (3 samples, 0.04%)</title><rect x="1178.8" y="947.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.8" y="958.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (3 samples, 0.04%)</title><rect x="1178.8" y="931.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.8" y="942.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.02%)</title><rect x="1178.8" y="915.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.8" y="926.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.02%)</title><rect x="1178.8" y="899.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.8" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (3 samples, 0.04%)</title><rect x="1179.4" y="947.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.4" y="958.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (2 samples, 0.02%)</title><rect x="1179.5" y="931.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.5" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.04%)</title><rect x="1179.8" y="947.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.8" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (19 samples, 0.23%)</title><rect x="1180.3" y="947.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.3" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (18 samples, 0.22%)</title><rect x="1180.4" y="931.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.4" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (13 samples, 0.16%)</title><rect x="1181.1" y="915.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.1" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (11 samples, 0.13%)</title><rect x="1181.4" y="899.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.4" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (3 samples, 0.04%)</title><rect x="1183.1" y="947.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.1" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (2 samples, 0.02%)</title><rect x="1183.3" y="931.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.3" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (2 samples, 0.02%)</title><rect x="1183.3" y="915.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.3" y="926.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (8 samples, 0.10%)</title><rect x="1183.8" y="963.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.8" y="974.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (7 samples, 0.08%)</title><rect x="1184.0" y="947.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.0" y="958.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.02%)</title><rect x="1185.0" y="963.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.0" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (23 samples, 0.28%)</title><rect x="1185.6" y="979.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.6" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (23 samples, 0.28%)</title><rect x="1185.6" y="963.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.6" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (23 samples, 0.28%)</title><rect x="1185.6" y="947.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.6" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (23 samples, 0.28%)</title><rect x="1185.6" y="931.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (23 samples, 0.28%)</title><rect x="1185.6" y="915.0" width="3.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (22 samples, 0.27%)</title><rect x="1185.6" y="899.0" width="3.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.6" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 0.18%)</title><rect x="1185.7" y="883.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.7" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 0.18%)</title><rect x="1185.7" y="867.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.7" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (15 samples, 0.18%)</title><rect x="1185.7" y="851.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.7" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (15 samples, 0.18%)</title><rect x="1185.7" y="835.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.7" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (15 samples, 0.18%)</title><rect x="1185.7" y="819.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.7" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.16%)</title><rect x="1185.8" y="803.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.8" y="814.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.02%)</title><rect x="1185.8" y="787.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.8" y="798.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.02%)</title><rect x="1185.8" y="771.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.8" y="782.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.02%)</title><rect x="1185.8" y="755.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.8" y="766.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.02%)</title><rect x="1185.8" y="739.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.8" y="750.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.02%)</title><rect x="1185.8" y="723.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.8" y="734.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.02%)</title><rect x="1185.8" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.8" y="718.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.02%)</title><rect x="1185.8" y="691.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.8" y="702.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.02%)</title><rect x="1185.8" y="675.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.8" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.12%)</title><rect x="1186.1" y="787.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.1" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.12%)</title><rect x="1186.1" y="771.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.12%)</title><rect x="1186.1" y="755.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.12%)</title><rect x="1186.1" y="739.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.12%)</title><rect x="1186.1" y="723.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.12%)</title><rect x="1186.1" y="707.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.1" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.10%)</title><rect x="1186.4" y="691.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.4" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.10%)</title><rect x="1186.4" y="675.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.10%)</title><rect x="1186.4" y="659.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.10%)</title><rect x="1186.4" y="643.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.10%)</title><rect x="1186.4" y="627.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.07%)</title><rect x="1186.7" y="611.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.7" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.06%)</title><rect x="1186.8" y="595.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.8" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.06%)</title><rect x="1186.8" y="579.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.8" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.06%)</title><rect x="1186.8" y="563.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.06%)</title><rect x="1186.8" y="547.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.8" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.06%)</title><rect x="1186.8" y="531.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.8" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1186.8" y="515.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.8" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1187.0" y="499.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.0" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1187.0" y="483.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.0" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1187.0" y="467.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.0" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1187.0" y="451.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.0" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1187.1" y="435.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.1" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1187.1" y="419.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.1" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1187.1" y="403.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.1" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1187.1" y="387.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.1" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1187.1" y="371.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.1" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1187.1" y="355.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.1" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1187.1" y="339.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.1" y="350.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1187.1" y="323.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.1" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1187.1" y="307.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.1" y="318.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1187.1" y="291.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.1" y="302.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1187.1" y="275.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.1" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1187.1" y="259.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.1" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1187.1" y="243.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.1" y="254.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1187.1" y="227.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.1" y="238.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1187.1" y="211.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.1" y="222.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1187.1" y="195.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.1" y="206.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1187.1" y="179.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.1" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1187.1" y="163.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.1" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1187.1" y="147.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.1" y="158.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1187.1" y="131.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.1" y="142.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1187.1" y="115.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.1" y="126.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1187.1" y="99.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.1" y="110.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (6 samples, 0.07%)</title><rect x="1187.9" y="883.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.9" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.07%)</title><rect x="1187.9" y="867.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.9" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.07%)</title><rect x="1187.9" y="851.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.9" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.07%)</title><rect x="1187.9" y="835.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.9" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.07%)</title><rect x="1187.9" y="819.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.9" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.07%)</title><rect x="1187.9" y="803.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.9" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.07%)</title><rect x="1187.9" y="787.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.9" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.06%)</title><rect x="1187.9" y="771.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.9" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.06%)</title><rect x="1187.9" y="755.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.9" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.06%)</title><rect x="1187.9" y="739.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.9" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.06%)</title><rect x="1187.9" y="723.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.9" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.06%)</title><rect x="1187.9" y="707.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.9" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.06%)</title><rect x="1187.9" y="691.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.9" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.1" y="675.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.1" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.1" y="659.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.1" y="643.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.1" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.1" y="627.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.1" y="611.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1188.1" y="595.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.1" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.1" y="579.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.1" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.1" y="563.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.1" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.1" y="547.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.1" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.1" y="531.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.1" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.1" y="515.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.1" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1188.1" y="499.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.1" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.1" y="483.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.1" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.1" y="467.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.1" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.1" y="451.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.1" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.1" y="435.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.1" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.1" y="419.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.1" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1188.1" y="403.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.1" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.1" y="387.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.1" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.1" y="371.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.1" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.1" y="355.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.1" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.1" y="339.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.1" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.1" y="323.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.1" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1188.1" y="307.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.1" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.1" y="291.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.1" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.1" y="275.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.1" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.1" y="259.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.1" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.1" y="243.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.1" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.1" y="227.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.1" y="238.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1188.1" y="211.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.1" y="222.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.1" y="195.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.1" y="206.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.1" y="179.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.1" y="190.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.1" y="163.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.1" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.1" y="147.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.1" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.1" y="131.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.1" y="142.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1188.1" y="115.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.1" y="126.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1188.1" y="99.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.1" y="110.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1188.1" y="83.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.1" y="94.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1188.1" y="67.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.1" y="78.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1188.1" y="51.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.1" y="62.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.02%)</title><rect x="1188.1" y="35.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.1" y="46.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.04%)</title><rect x="1189.1" y="1075.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.1" y="1086.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.04%)</title><rect x="1189.1" y="1059.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.1" y="1070.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (3 samples, 0.04%)</title><rect x="1189.1" y="1043.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.1" y="1054.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.04%)</title><rect x="1189.1" y="1027.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.1" y="1038.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (3 samples, 0.04%)</title><rect x="1189.1" y="1011.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.1" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (3 samples, 0.04%)</title><rect x="1189.1" y="995.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.1" y="1006.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.04%)</title><rect x="1189.6" y="1075.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.6" y="1086.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (2 samples, 0.02%)</title><rect x="1189.6" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.6" y="1070.0"></text>
</g>
</g>
</svg>
