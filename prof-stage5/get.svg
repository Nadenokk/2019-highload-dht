<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="917"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="917"> </text>
<g id="frames">
<g>
<title>all (5,698 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="894.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (23 samples, 0.40%)</title><rect x="10.0" y="867.0" width="4.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (5 samples, 0.09%)</title><rect x="10.0" y="851.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.07%)</title><rect x="10.0" y="835.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.07%)</title><rect x="10.0" y="819.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.05%)</title><rect x="10.2" y="803.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.2" y="814.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (3 samples, 0.05%)</title><rect x="10.2" y="787.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.2" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (18 samples, 0.32%)</title><rect x="11.0" y="851.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.0" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (17 samples, 0.30%)</title><rect x="11.2" y="835.0" width="3.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.2" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (15 samples, 0.26%)</title><rect x="11.2" y="819.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="14.2" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="11.9" y="803.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="14.9" y="814.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (4 samples, 0.07%)</title><rect x="12.3" y="803.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="15.3" y="814.0"></text>
</g>
<g>
<title>__memset_sse2 (4 samples, 0.07%)</title><rect x="13.3" y="803.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="16.3" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="14.8" y="867.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="17.8" y="878.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.05%)</title><rect x="14.8" y="851.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="17.8" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="14.8" y="835.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.8" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="14.8" y="819.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.8" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="14.8" y="803.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="17.8" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (11 samples, 0.19%)</title><rect x="15.4" y="867.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="18.4" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.11%)</title><rect x="16.2" y="851.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="19.2" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.09%)</title><rect x="16.2" y="835.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="19.2" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.09%)</title><rect x="16.2" y="819.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="19.2" y="830.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="16.4" y="803.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="19.4" y="814.0"></text>
</g>
<g>
<title>[not_walkable_Java] (7 samples, 0.12%)</title><rect x="17.7" y="867.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="20.7" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.07%)</title><rect x="17.9" y="851.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="20.9" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.07%)</title><rect x="17.9" y="835.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="20.9" y="846.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.05%)</title><rect x="17.9" y="819.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="20.9" y="830.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="18.1" y="803.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="21.1" y="814.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.04%)</title><rect x="18.7" y="851.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="21.7" y="862.0"></text>
</g>
<g>
<title>[unknown_Java] (33 samples, 0.58%)</title><rect x="19.3" y="867.0" width="6.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="22.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="25.5" y="851.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="28.5" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,168 samples, 73.15%)</title><rect x="26.2" y="867.0" width="863.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.2" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,168 samples, 73.15%)</title><rect x="26.2" y="851.0" width="863.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.2" y="862.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,168 samples, 73.15%)</title><rect x="26.2" y="835.0" width="863.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.2" y="846.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (709 samples, 12.44%)</title><rect x="26.6" y="819.0" width="146.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.6" y="830.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (698 samples, 12.25%)</title><rect x="27.6" y="803.0" width="144.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.6" y="814.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (698 samples, 12.25%)</title><rect x="27.6" y="787.0" width="144.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.6" y="798.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (384 samples, 6.74%)</title><rect x="38.0" y="771.0" width="79.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.0" y="782.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (383 samples, 6.72%)</title><rect x="38.2" y="755.0" width="79.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.2" y="766.0">java/util..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (383 samples, 6.72%)</title><rect x="38.2" y="739.0" width="79.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.2" y="750.0">jdk/inter..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="41.1" y="723.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="44.1" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (7 samples, 0.12%)</title><rect x="41.7" y="723.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="44.7" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (315 samples, 5.53%)</title><rect x="43.1" y="723.0" width="65.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="46.1" y="734.0">Unsafe_..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (5 samples, 0.09%)</title><rect x="46.4" y="707.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="49.4" y="718.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (6 samples, 0.11%)</title><rect x="47.5" y="707.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="50.5" y="718.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.04%)</title><rect x="48.7" y="707.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="51.7" y="718.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (111 samples, 1.95%)</title><rect x="49.1" y="707.0" width="23.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="52.1" y="718.0">P..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (37 samples, 0.65%)</title><rect x="56.0" y="691.0" width="7.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="59.0" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (2 samples, 0.04%)</title><rect x="59.1" y="675.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="62.1" y="686.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (9 samples, 0.16%)</title><rect x="59.5" y="675.0" width="1.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="62.5" y="686.0"></text>
</g>
<g>
<title>update_get_addr (11 samples, 0.19%)</title><rect x="61.4" y="675.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="64.4" y="686.0"></text>
</g>
<g>
<title>Monitor::unlock() (4 samples, 0.07%)</title><rect x="63.6" y="691.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="66.6" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (29 samples, 0.51%)</title><rect x="64.5" y="691.0" width="6.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="67.5" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (2 samples, 0.04%)</title><rect x="70.5" y="691.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="73.5" y="702.0"></text>
</g>
<g>
<title>update_get_addr (4 samples, 0.07%)</title><rect x="71.3" y="691.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="74.3" y="702.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.04%)</title><rect x="72.1" y="707.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="75.1" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (6 samples, 0.11%)</title><rect x="72.7" y="707.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="75.7" y="718.0"></text>
</g>
<g>
<title>_L_unlock_738 (2 samples, 0.04%)</title><rect x="74.0" y="707.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="77.0" y="718.0"></text>
</g>
<g>
<title>__lll_unlock_wake (80 samples, 1.40%)</title><rect x="74.4" y="707.0" width="16.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="77.4" y="718.0"></text>
</g>
<g>
<title>auditsys (7 samples, 0.12%)</title><rect x="80.6" y="691.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="83.6" y="702.0"></text>
</g>
<g>
<title>__audit_syscall_entry (7 samples, 0.12%)</title><rect x="80.6" y="675.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="83.6" y="686.0"></text>
</g>
<g>
<title>sysret_audit (3 samples, 0.05%)</title><rect x="82.3" y="691.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="85.3" y="702.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.05%)</title><rect x="82.3" y="675.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="85.3" y="686.0"></text>
</g>
<g>
<title>system_call_fastpath (39 samples, 0.68%)</title><rect x="82.9" y="691.0" width="8.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="85.9" y="702.0"></text>
</g>
<g>
<title>sys_futex (38 samples, 0.67%)</title><rect x="83.1" y="675.0" width="7.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="86.1" y="686.0"></text>
</g>
<g>
<title>do_futex (37 samples, 0.65%)</title><rect x="83.3" y="659.0" width="7.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="86.3" y="670.0"></text>
</g>
<g>
<title>futex_wake (25 samples, 0.44%)</title><rect x="83.3" y="643.0" width="5.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="86.3" y="654.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.05%)</title><rect x="87.2" y="627.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="90.2" y="638.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (3 samples, 0.05%)</title><rect x="87.9" y="627.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="90.9" y="638.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="88.5" y="643.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="91.5" y="654.0"></text>
</g>
<g>
<title>hash_futex (10 samples, 0.18%)</title><rect x="88.9" y="643.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="91.9" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (51 samples, 0.90%)</title><rect x="91.0" y="707.0" width="10.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="94.0" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.05%)</title><rect x="91.6" y="691.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="94.6" y="702.0"></text>
</g>
<g>
<title>auditsys (9 samples, 0.16%)</title><rect x="92.2" y="691.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="95.2" y="702.0"></text>
</g>
<g>
<title>__audit_syscall_entry (8 samples, 0.14%)</title><rect x="92.4" y="675.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="95.4" y="686.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.04%)</title><rect x="94.3" y="691.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="97.3" y="702.0"></text>
</g>
<g>
<title>system_call_fastpath (32 samples, 0.56%)</title><rect x="94.7" y="691.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="97.7" y="702.0"></text>
</g>
<g>
<title>sys_futex (32 samples, 0.56%)</title><rect x="94.7" y="675.0" width="6.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="97.7" y="686.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.56%)</title><rect x="94.7" y="659.0" width="6.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="97.7" y="670.0"></text>
</g>
<g>
<title>futex_wait (25 samples, 0.44%)</title><rect x="95.9" y="643.0" width="5.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="98.9" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.05%)</title><rect x="96.4" y="627.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="99.4" y="638.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="96.6" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="99.6" y="622.0"></text>
</g>
<g>
<title>futex_wait_setup (16 samples, 0.28%)</title><rect x="97.0" y="627.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="100.0" y="638.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.05%)</title><rect x="99.5" y="611.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="102.5" y="622.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.05%)</title><rect x="100.3" y="627.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="103.3" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (6 samples, 0.11%)</title><rect x="101.5" y="707.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="104.5" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="103.2" y="707.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="106.2" y="718.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="103.8" y="707.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="106.8" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (5 samples, 0.09%)</title><rect x="104.2" y="707.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="107.2" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (14 samples, 0.25%)</title><rect x="105.3" y="707.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="108.3" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (12 samples, 0.21%)</title><rect x="108.4" y="723.0" width="2.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="111.4" y="734.0"></text>
</g>
<g>
<title>system_call_after_swapgs (12 samples, 0.21%)</title><rect x="108.4" y="707.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="111.4" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (4 samples, 0.07%)</title><rect x="110.9" y="723.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="113.9" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (9 samples, 0.16%)</title><rect x="111.7" y="723.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="114.7" y="734.0"></text>
</g>
<g>
<title>send (19 samples, 0.33%)</title><rect x="113.5" y="723.0" width="4.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="116.5" y="734.0"></text>
</g>
<g>
<title>system_call_after_swapgs (19 samples, 0.33%)</title><rect x="113.5" y="707.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="116.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (28 samples, 0.49%)</title><rect x="117.5" y="771.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (19 samples, 0.33%)</title><rect x="119.3" y="755.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (19 samples, 0.33%)</title><rect x="119.3" y="739.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (236 samples, 4.14%)</title><rect x="123.3" y="771.0" width="48.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.3" y="782.0">java..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (174 samples, 3.05%)</title><rect x="136.1" y="755.0" width="36.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.1" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (2 samples, 0.04%)</title><rect x="172.2" y="803.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.07%)</title><rect x="172.6" y="803.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="175.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$66/1617814768.run (3,457 samples, 60.67%)</title><rect x="173.4" y="819.0" width="715.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="176.4" y="830.0">ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$66/1617814768.run</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$asyncExecute$4 (3,457 samples, 60.67%)</title><rect x="173.4" y="803.0" width="715.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.4" y="814.0">ru/mail/polis/service/httprest/HttpRestDemon.lambda$asyncExecute$4</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpController.get (2 samples, 0.04%)</title><rect x="174.4" y="787.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="177.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$62/1745844725.submit (2,093 samples, 36.73%)</title><rect x="174.8" y="787.0" width="433.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.8" y="798.0">ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$62/174..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$entity$0 (2,093 samples, 36.73%)</title><rect x="174.8" y="771.0" width="433.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.8" y="782.0">ru/mail/polis/service/httprest/HttpRestDemon.lambda$entity$0</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpController.get (2,091 samples, 36.70%)</title><rect x="175.3" y="755.0" width="433.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.3" y="766.0">ru/mail/polis/service/httprest/HttpController.get</text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.04%)</title><rect x="187.1" y="739.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.1" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.16%)</title><rect x="187.7" y="739.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.12%)</title><rect x="188.1" y="723.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.1" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.12%)</title><rect x="188.1" y="707.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.1" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.12%)</title><rect x="188.1" y="691.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="191.1" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.12%)</title><rect x="188.1" y="675.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="191.1" y="686.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.04%)</title><rect x="189.5" y="739.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.04%)</title><rect x="189.5" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="192.5" y="734.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (3 samples, 0.05%)</title><rect x="190.0" y="739.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="190.2" y="723.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="190.2" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.2" y="718.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$91/1832196471.get$Lambda (2 samples, 0.04%)</title><rect x="190.2" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.2" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (16 samples, 0.28%)</title><rect x="190.6" y="739.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.6" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (11 samples, 0.19%)</title><rect x="191.0" y="723.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (7 samples, 0.12%)</title><rect x="191.6" y="707.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="194.6" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.05%)</title><rect x="193.3" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.05%)</title><rect x="193.3" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.05%)</title><rect x="193.3" y="691.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.3" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (10 samples, 0.18%)</title><rect x="193.9" y="739.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="196.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (10 samples, 0.18%)</title><rect x="193.9" y="723.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="196.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.18%)</title><rect x="193.9" y="707.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (7 samples, 0.12%)</title><rect x="194.5" y="691.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="197.5" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.12%)</title><rect x="194.5" y="675.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="197.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.09%)</title><rect x="194.5" y="659.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="197.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (3 samples, 0.05%)</title><rect x="194.7" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="197.7" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.05%)</title><rect x="194.7" y="627.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="197.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (2 samples, 0.04%)</title><rect x="194.7" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.7" y="622.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$95/757940611.apply (2 samples, 0.04%)</title><rect x="194.7" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="197.7" y="606.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (2 samples, 0.04%)</title><rect x="194.7" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="197.7" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$91/1832196471.compare (2 samples, 0.04%)</title><rect x="194.7" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.7" y="574.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (2 samples, 0.04%)</title><rect x="194.7" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="197.7" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.04%)</title><rect x="195.6" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (2 samples, 0.04%)</title><rect x="195.6" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.6" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (12 samples, 0.21%)</title><rect x="196.0" y="739.0" width="2.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="199.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.get (1,474 samples, 25.87%)</title><rect x="198.5" y="739.0" width="305.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="201.5" y="750.0">one/nio/http/HttpClient.get</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (5 samples, 0.09%)</title><rect x="198.9" y="723.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="201.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.05%)</title><rect x="199.3" y="707.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.05%)</title><rect x="199.3" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="202.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.05%)</title><rect x="199.3" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="202.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.05%)</title><rect x="199.3" y="659.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="202.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,467 samples, 25.75%)</title><rect x="199.9" y="723.0" width="303.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.9" y="734.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (4 samples, 0.07%)</title><rect x="200.3" y="707.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,461 samples, 25.64%)</title><rect x="201.1" y="707.0" width="302.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.1" y="718.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (362 samples, 6.35%)</title><rect x="203.2" y="691.0" width="75.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.2" y="702.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (321 samples, 5.63%)</title><rect x="211.7" y="675.0" width="66.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="214.7" y="686.0">one/nio..</text>
</g>
<g>
<title>[unknown] (51 samples, 0.90%)</title><rect x="215.4" y="659.0" width="10.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="218.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.90%)</title><rect x="215.4" y="643.0" width="10.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="218.4" y="654.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (45 samples, 0.79%)</title><rect x="215.4" y="627.0" width="9.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="218.4" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="217.7" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="220.7" y="622.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (6 samples, 0.11%)</title><rect x="218.3" y="611.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="221.3" y="622.0"></text>
</g>
<g>
<title>_init (4 samples, 0.07%)</title><rect x="219.6" y="611.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="222.6" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (18 samples, 0.32%)</title><rect x="220.4" y="611.0" width="3.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="223.4" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (8 samples, 0.14%)</title><rect x="222.3" y="595.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="225.3" y="606.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.05%)</title><rect x="224.1" y="611.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="227.1" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.09%)</title><rect x="225.0" y="627.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="228.0" y="638.0"></text>
</g>
<g>
<title>__libc_recv (239 samples, 4.19%)</title><rect x="226.0" y="659.0" width="49.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="229.0" y="670.0">__lib..</text>
</g>
<g>
<title>auditsys (6 samples, 0.11%)</title><rect x="232.0" y="643.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="235.0" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_entry (6 samples, 0.11%)</title><rect x="232.0" y="627.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="235.0" y="638.0"></text>
</g>
<g>
<title>sysret_audit (8 samples, 0.14%)</title><rect x="233.5" y="643.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="236.5" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_exit (8 samples, 0.14%)</title><rect x="233.5" y="627.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="236.5" y="638.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.04%)</title><rect x="234.3" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="237.3" y="622.0"></text>
</g>
<g>
<title>path_put (2 samples, 0.04%)</title><rect x="234.7" y="611.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="237.7" y="622.0"></text>
</g>
<g>
<title>dput (2 samples, 0.04%)</title><rect x="234.7" y="595.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="237.7" y="606.0"></text>
</g>
<g>
<title>system_call_fastpath (194 samples, 3.40%)</title><rect x="235.3" y="643.0" width="40.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="238.3" y="654.0">sys..</text>
</g>
<g>
<title>sys_recvfrom (192 samples, 3.37%)</title><rect x="235.7" y="627.0" width="39.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="238.7" y="638.0">sys..</text>
</g>
<g>
<title>SYSC_recvfrom (189 samples, 3.32%)</title><rect x="235.7" y="611.0" width="39.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="238.7" y="622.0">SYS..</text>
</g>
<g>
<title>fput (9 samples, 0.16%)</title><rect x="236.8" y="595.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="239.8" y="606.0"></text>
</g>
<g>
<title>sock_recvmsg (168 samples, 2.95%)</title><rect x="238.8" y="595.0" width="34.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="241.8" y="606.0">so..</text>
</g>
<g>
<title>inet_recvmsg (149 samples, 2.61%)</title><rect x="239.0" y="579.0" width="30.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="242.0" y="590.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (147 samples, 2.58%)</title><rect x="239.5" y="563.0" width="30.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="242.5" y="574.0">tc..</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.04%)</title><rect x="240.3" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="243.3" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="240.7" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="243.7" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="241.1" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="244.1" y="558.0"></text>
</g>
<g>
<title>local_bh_enable (2 samples, 0.04%)</title><rect x="241.1" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="244.1" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="241.1" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="244.1" y="526.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="241.5" y="547.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="244.5" y="558.0"></text>
</g>
<g>
<title>schedule_timeout (2 samples, 0.04%)</title><rect x="241.9" y="547.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="244.9" y="558.0"></text>
</g>
<g>
<title>sk_wait_data (13 samples, 0.23%)</title><rect x="242.4" y="547.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="245.4" y="558.0"></text>
</g>
<g>
<title>prepare_to_wait (6 samples, 0.11%)</title><rect x="242.8" y="531.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="245.8" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.11%)</title><rect x="242.8" y="515.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="245.8" y="526.0"></text>
</g>
<g>
<title>schedule_timeout (5 samples, 0.09%)</title><rect x="244.0" y="531.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="247.0" y="542.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (4 samples, 0.07%)</title><rect x="245.0" y="547.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="248.0" y="558.0"></text>
</g>
<g>
<title>tcp_send_ack (2 samples, 0.04%)</title><rect x="245.5" y="531.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="248.5" y="542.0"></text>
</g>
<g>
<title>tcp_prequeue_process (115 samples, 2.02%)</title><rect x="245.9" y="547.0" width="23.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="248.9" y="558.0">t..</text>
</g>
<g>
<title>tcp_v4_do_rcv (115 samples, 2.02%)</title><rect x="245.9" y="531.0" width="23.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="248.9" y="542.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.05%)</title><rect x="246.1" y="515.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="249.1" y="526.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.05%)</title><rect x="246.7" y="515.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="249.7" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (108 samples, 1.90%)</title><rect x="247.3" y="515.0" width="22.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="250.3" y="526.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (35 samples, 0.61%)</title><rect x="247.9" y="499.0" width="7.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="250.9" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (6 samples, 0.11%)</title><rect x="248.6" y="483.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="251.6" y="494.0"></text>
</g>
<g>
<title>tcp_send_ack (2 samples, 0.04%)</title><rect x="249.8" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="252.8" y="494.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (24 samples, 0.42%)</title><rect x="250.2" y="483.0" width="5.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.2" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (22 samples, 0.39%)</title><rect x="250.6" y="467.0" width="4.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.6" y="478.0"></text>
</g>
<g>
<title>mod_timer (22 samples, 0.39%)</title><rect x="250.6" y="451.0" width="4.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="253.6" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.35%)</title><rect x="250.8" y="435.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="253.8" y="446.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.05%)</title><rect x="255.4" y="499.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="258.4" y="510.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.05%)</title><rect x="256.0" y="499.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="259.0" y="510.0"></text>
</g>
<g>
<title>kfree_skb_partial (8 samples, 0.14%)</title><rect x="256.6" y="499.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="259.6" y="510.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.14%)</title><rect x="256.6" y="483.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="259.6" y="494.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.14%)</title><rect x="256.6" y="467.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="259.6" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (11 samples, 0.19%)</title><rect x="258.3" y="499.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="261.3" y="510.0"></text>
</g>
<g>
<title>tcp_ack (44 samples, 0.77%)</title><rect x="260.6" y="499.0" width="9.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="263.6" y="510.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.26%)</title><rect x="263.5" y="483.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="266.5" y="494.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.09%)</title><rect x="263.5" y="467.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="266.5" y="478.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.07%)</title><rect x="263.7" y="451.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="266.7" y="462.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.16%)</title><rect x="264.5" y="467.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="267.5" y="478.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.16%)</title><rect x="264.5" y="451.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="267.5" y="462.0"></text>
</g>
<g>
<title>kfree (7 samples, 0.12%)</title><rect x="264.9" y="435.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="267.9" y="446.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.05%)</title><rect x="266.6" y="483.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="269.6" y="494.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.07%)</title><rect x="267.2" y="483.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="270.2" y="494.0"></text>
</g>
<g>
<title>local_clock (2 samples, 0.04%)</title><rect x="268.0" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="271.0" y="494.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.04%)</title><rect x="268.0" y="467.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="271.0" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.07%)</title><rect x="268.4" y="483.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="271.4" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.05%)</title><rect x="268.7" y="467.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="271.7" y="478.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.05%)</title><rect x="268.7" y="451.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="271.7" y="462.0"></text>
</g>
<g>
<title>usecs_to_jiffies (2 samples, 0.04%)</title><rect x="269.3" y="483.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="272.3" y="494.0"></text>
</g>
<g>
<title>security_socket_recvmsg (16 samples, 0.28%)</title><rect x="269.9" y="579.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="272.9" y="590.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (14 samples, 0.25%)</title><rect x="270.3" y="563.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="273.3" y="574.0"></text>
</g>
<g>
<title>sock_has_perm (14 samples, 0.25%)</title><rect x="270.3" y="547.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="273.3" y="558.0"></text>
</g>
<g>
<title>avc_has_perm_flags (2 samples, 0.04%)</title><rect x="272.8" y="531.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="275.8" y="542.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.04%)</title><rect x="273.2" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="276.2" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.11%)</title><rect x="273.6" y="595.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="276.6" y="606.0"></text>
</g>
<g>
<title>fget_light (6 samples, 0.11%)</title><rect x="273.6" y="579.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="276.6" y="590.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="274.9" y="611.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="277.9" y="622.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.09%)</title><rect x="275.5" y="659.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="278.5" y="670.0"></text>
</g>
<g>
<title>send (8 samples, 0.14%)</title><rect x="276.5" y="659.0" width="1.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="279.5" y="670.0"></text>
</g>
<g>
<title>system_call_after_swapgs (8 samples, 0.14%)</title><rect x="276.5" y="643.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="279.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (76 samples, 1.33%)</title><rect x="278.2" y="691.0" width="15.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.23%)</title><rect x="280.5" y="675.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.12%)</title><rect x="281.7" y="659.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.09%)</title><rect x="281.7" y="643.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.05%)</title><rect x="282.1" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.1" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="282.7" y="643.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.7" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="283.2" y="675.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="286.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (32 samples, 0.56%)</title><rect x="283.6" y="675.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (30 samples, 0.53%)</title><rect x="284.0" y="659.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.0" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 0.51%)</title><rect x="284.2" y="643.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (8 samples, 0.14%)</title><rect x="290.2" y="675.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="293.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.11%)</title><rect x="290.6" y="659.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.6" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (8 samples, 0.14%)</title><rect x="291.8" y="675.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.05%)</title><rect x="292.9" y="659.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.05%)</title><rect x="292.9" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (2 samples, 0.04%)</title><rect x="293.5" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="296.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.04%)</title><rect x="293.5" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.04%)</title><rect x="293.5" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (23 samples, 0.40%)</title><rect x="293.9" y="691.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="296.9" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (11 samples, 0.19%)</title><rect x="296.4" y="675.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="299.4" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.19%)</title><rect x="296.4" y="659.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="299.4" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (11 samples, 0.19%)</title><rect x="296.4" y="643.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="299.4" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (11 samples, 0.19%)</title><rect x="296.4" y="627.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="299.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (8 samples, 0.14%)</title><rect x="298.7" y="691.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="301.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.07%)</title><rect x="299.5" y="675.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.07%)</title><rect x="299.5" y="659.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="302.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 0.12%)</title><rect x="300.3" y="691.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="303.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (155 samples, 2.72%)</title><rect x="301.8" y="691.0" width="32.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.8" y="702.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (9 samples, 0.16%)</title><rect x="303.7" y="675.0" width="1.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="306.7" y="686.0"></text>
</g>
<g>
<title>__GI___setsockopt (128 samples, 2.25%)</title><rect x="305.5" y="675.0" width="26.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="308.5" y="686.0">_..</text>
</g>
<g>
<title>__audit_syscall_entry (6 samples, 0.11%)</title><rect x="309.9" y="659.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="312.9" y="670.0"></text>
</g>
<g>
<title>auditsys (7 samples, 0.12%)</title><rect x="311.1" y="659.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="314.1" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_entry (7 samples, 0.12%)</title><rect x="311.1" y="643.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="314.1" y="654.0"></text>
</g>
<g>
<title>sys_setsockopt (3 samples, 0.05%)</title><rect x="312.6" y="659.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="315.6" y="670.0"></text>
</g>
<g>
<title>sysret_audit (5 samples, 0.09%)</title><rect x="313.2" y="659.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="316.2" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_exit (4 samples, 0.07%)</title><rect x="313.2" y="643.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="316.2" y="654.0"></text>
</g>
<g>
<title>path_put (2 samples, 0.04%)</title><rect x="313.6" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="316.6" y="638.0"></text>
</g>
<g>
<title>sysret_signal (2 samples, 0.04%)</title><rect x="314.2" y="659.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="317.2" y="670.0"></text>
</g>
<g>
<title>system_call_after_swapgs (5 samples, 0.09%)</title><rect x="314.6" y="659.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="317.6" y="670.0"></text>
</g>
<g>
<title>system_call_fastpath (79 samples, 1.39%)</title><rect x="315.7" y="659.0" width="16.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="318.7" y="670.0"></text>
</g>
<g>
<title>security_socket_setsockopt (2 samples, 0.04%)</title><rect x="315.9" y="643.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="318.9" y="654.0"></text>
</g>
<g>
<title>sys_setsockopt (76 samples, 1.33%)</title><rect x="316.3" y="643.0" width="15.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="319.3" y="654.0"></text>
</g>
<g>
<title>__get_user_4 (6 samples, 0.11%)</title><rect x="316.5" y="627.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="319.5" y="638.0"></text>
</g>
<g>
<title>security_socket_setsockopt (21 samples, 0.37%)</title><rect x="318.2" y="627.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="321.2" y="638.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (20 samples, 0.35%)</title><rect x="318.4" y="611.0" width="4.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="321.4" y="622.0"></text>
</g>
<g>
<title>sock_has_perm (16 samples, 0.28%)</title><rect x="319.2" y="595.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="322.2" y="606.0"></text>
</g>
<g>
<title>avc_has_perm_flags (4 samples, 0.07%)</title><rect x="321.7" y="579.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="324.7" y="590.0"></text>
</g>
<g>
<title>sock_set_timeout (3 samples, 0.05%)</title><rect x="322.5" y="627.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="325.5" y="638.0"></text>
</g>
<g>
<title>sock_setsockopt (27 samples, 0.47%)</title><rect x="323.1" y="627.0" width="5.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="326.1" y="638.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.04%)</title><rect x="323.1" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="326.1" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="323.5" y="611.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="326.5" y="622.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="324.4" y="611.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="327.4" y="622.0"></text>
</g>
<g>
<title>sock_set_timeout (18 samples, 0.32%)</title><rect x="324.8" y="611.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="327.8" y="622.0"></text>
</g>
<g>
<title>__check_object_size (15 samples, 0.26%)</title><rect x="325.0" y="595.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="328.0" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.09%)</title><rect x="326.8" y="579.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="329.8" y="590.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.04%)</title><rect x="328.1" y="595.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="331.1" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (16 samples, 0.28%)</title><rect x="328.7" y="627.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="331.7" y="638.0"></text>
</g>
<g>
<title>fget_light (14 samples, 0.25%)</title><rect x="329.1" y="611.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="332.1" y="622.0"></text>
</g>
<g>
<title>__libc_recv (6 samples, 0.11%)</title><rect x="332.0" y="675.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="335.0" y="686.0"></text>
</g>
<g>
<title>system_call_after_swapgs (6 samples, 0.11%)</title><rect x="332.0" y="659.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="335.0" y="670.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.04%)</title><rect x="333.3" y="675.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="336.3" y="686.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.04%)</title><rect x="333.3" y="659.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="336.3" y="670.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (807 samples, 14.16%)</title><rect x="333.9" y="691.0" width="167.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="336.9" y="702.0">one/nio/net/NativeSoc..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (26 samples, 0.46%)</title><rect x="338.4" y="675.0" width="5.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="341.4" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="338.9" y="659.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="341.9" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (3 samples, 0.05%)</title><rect x="339.5" y="659.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="342.5" y="670.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (6 samples, 0.11%)</title><rect x="340.1" y="659.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="343.1" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.14%)</title><rect x="341.3" y="659.0" width="1.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="344.3" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (4 samples, 0.07%)</title><rect x="341.8" y="643.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="344.8" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="342.6" y="643.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="345.6" y="654.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.05%)</title><rect x="343.2" y="659.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="346.2" y="670.0"></text>
</g>
<g>
<title>__GI___setsockopt (6 samples, 0.11%)</title><rect x="343.8" y="675.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="346.8" y="686.0"></text>
</g>
<g>
<title>system_call_after_swapgs (6 samples, 0.11%)</title><rect x="343.8" y="659.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="346.8" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (9 samples, 0.16%)</title><rect x="345.1" y="675.0" width="1.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="348.1" y="686.0"></text>
</g>
<g>
<title>send (743 samples, 13.04%)</title><rect x="347.1" y="675.0" width="153.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="350.1" y="686.0">send</text>
</g>
<g>
<title>auditsys (5 samples, 0.09%)</title><rect x="351.1" y="659.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="354.1" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_entry (5 samples, 0.09%)</title><rect x="351.1" y="643.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="354.1" y="654.0"></text>
</g>
<g>
<title>sys_sendto (2 samples, 0.04%)</title><rect x="352.1" y="659.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="355.1" y="670.0"></text>
</g>
<g>
<title>sysret_audit (5 samples, 0.09%)</title><rect x="352.5" y="659.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="355.5" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_exit (5 samples, 0.09%)</title><rect x="352.5" y="643.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="355.5" y="654.0"></text>
</g>
<g>
<title>system_call_fastpath (712 samples, 12.50%)</title><rect x="353.6" y="659.0" width="147.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="356.6" y="670.0">system_call_fastpath</text>
</g>
<g>
<title>sys_sendto (712 samples, 12.50%)</title><rect x="353.6" y="643.0" width="147.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="356.6" y="654.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (712 samples, 12.50%)</title><rect x="353.6" y="627.0" width="147.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="356.6" y="638.0">SYSC_sendto</text>
</g>
<g>
<title>sock_sendmsg (703 samples, 12.34%)</title><rect x="354.8" y="611.0" width="145.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="357.8" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (694 samples, 12.18%)</title><rect x="355.4" y="595.0" width="143.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="358.4" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (691 samples, 12.13%)</title><rect x="356.0" y="579.0" width="143.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="359.0" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.19%)</title><rect x="358.1" y="563.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="361.1" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.18%)</title><rect x="358.1" y="547.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="361.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.32 (3 samples, 0.05%)</title><rect x="358.1" y="531.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="361.1" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.04%)</title><rect x="358.1" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="361.1" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.09%)</title><rect x="358.7" y="531.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="361.7" y="542.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.04%)</title><rect x="359.8" y="531.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="362.8" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.04%)</title><rect x="360.8" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="363.8" y="574.0"></text>
</g>
<g>
<title>tcp_push (654 samples, 11.48%)</title><rect x="361.2" y="563.0" width="135.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="364.2" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (650 samples, 11.41%)</title><rect x="361.4" y="547.0" width="134.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="364.4" y="558.0">__tcp_push_pendin..</text>
</g>
<g>
<title>tcp_write_xmit (650 samples, 11.41%)</title><rect x="361.4" y="531.0" width="134.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="364.4" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.05%)</title><rect x="362.5" y="515.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="365.5" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.05%)</title><rect x="362.5" y="499.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="365.5" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.05%)</title><rect x="362.5" y="483.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="365.5" y="494.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.05%)</title><rect x="362.5" y="467.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="365.5" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="362.5" y="451.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="365.5" y="462.0"></text>
</g>
<g>
<title>tcp_transmit_skb (635 samples, 11.14%)</title><rect x="363.7" y="515.0" width="131.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="366.7" y="526.0">tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (612 samples, 10.74%)</title><rect x="366.4" y="499.0" width="126.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="369.4" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.07%)</title><rect x="367.2" y="483.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="370.2" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.05%)</title><rect x="367.4" y="467.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="370.4" y="478.0"></text>
</g>
<g>
<title>ip_local_out_sk (601 samples, 10.55%)</title><rect x="368.1" y="483.0" width="124.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="371.1" y="494.0">ip_local_out_sk</text>
</g>
<g>
<title>__ip_local_out_sk (157 samples, 2.76%)</title><rect x="368.1" y="467.0" width="32.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="371.1" y="478.0">__..</text>
</g>
<g>
<title>nf_hook_slow (157 samples, 2.76%)</title><rect x="368.1" y="451.0" width="32.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="371.1" y="462.0">nf..</text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.04%)</title><rect x="368.3" y="435.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="371.3" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (5 samples, 0.09%)</title><rect x="368.7" y="435.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="371.7" y="446.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (3 samples, 0.05%)</title><rect x="369.7" y="435.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="372.7" y="446.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.04%)</title><rect x="370.3" y="435.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="373.3" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.04%)</title><rect x="371.0" y="435.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="374.0" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (3 samples, 0.05%)</title><rect x="371.4" y="435.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="374.4" y="446.0"></text>
</g>
<g>
<title>nf_iterate (137 samples, 2.40%)</title><rect x="372.0" y="435.0" width="28.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="375.0" y="446.0">nf..</text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (6 samples, 0.11%)</title><rect x="375.3" y="419.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="378.3" y="430.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.11%)</title><rect x="375.3" y="403.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="378.3" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (13 samples, 0.23%)</title><rect x="376.5" y="419.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="379.5" y="430.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.21%)</title><rect x="376.8" y="403.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="379.8" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (5 samples, 0.09%)</title><rect x="379.2" y="419.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="382.2" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (4 samples, 0.07%)</title><rect x="379.4" y="403.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="382.4" y="414.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="379.7" y="387.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="382.7" y="398.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (17 samples, 0.30%)</title><rect x="380.3" y="419.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="383.3" y="430.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (16 samples, 0.28%)</title><rect x="380.5" y="403.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="383.5" y="414.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (5 samples, 0.09%)</title><rect x="383.8" y="419.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="386.8" y="430.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.09%)</title><rect x="383.8" y="403.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="386.8" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (73 samples, 1.28%)</title><rect x="385.0" y="419.0" width="15.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="388.0" y="430.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find	[nf_conntrack] (5 samples, 0.09%)</title><rect x="385.0" y="403.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="388.0" y="414.0"></text>
</g>
<g>
<title>ipv4_get_l4proto	[nf_conntrack_ipv4] (4 samples, 0.07%)</title><rect x="386.1" y="403.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="389.1" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (60 samples, 1.05%)</title><rect x="386.9" y="403.0" width="12.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="389.9" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (9 samples, 0.16%)</title><rect x="388.4" y="387.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="391.4" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="390.2" y="387.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="393.2" y="398.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (5 samples, 0.09%)</title><rect x="390.8" y="387.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="393.8" y="398.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple	[nf_conntrack_ipv4] (2 samples, 0.04%)</title><rect x="392.1" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="395.1" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (3 samples, 0.05%)</title><rect x="392.7" y="387.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="395.7" y="398.0"></text>
</g>
<g>
<title>tcp_error	[nf_conntrack] (4 samples, 0.07%)</title><rect x="393.3" y="387.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="396.3" y="398.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (22 samples, 0.39%)</title><rect x="394.4" y="387.0" width="4.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="397.4" y="398.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (2 samples, 0.04%)</title><rect x="396.0" y="371.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="399.0" y="382.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (10 samples, 0.18%)</title><rect x="396.8" y="371.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="399.8" y="382.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple	[nf_conntrack] (2 samples, 0.04%)</title><rect x="398.9" y="387.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="401.9" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (2 samples, 0.04%)</title><rect x="399.3" y="403.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="402.3" y="414.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (2 samples, 0.04%)</title><rect x="399.7" y="403.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="402.7" y="414.0"></text>
</g>
<g>
<title>ip_output (440 samples, 7.72%)</title><rect x="400.8" y="467.0" width="91.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="403.8" y="478.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (427 samples, 7.49%)</title><rect x="401.0" y="451.0" width="88.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="404.0" y="462.0">ip_finish_..</text>
</g>
<g>
<title>dev_queue_xmit (32 samples, 0.56%)</title><rect x="404.1" y="435.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="407.1" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (30 samples, 0.53%)</title><rect x="404.1" y="419.0" width="6.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="407.1" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (19 samples, 0.33%)</title><rect x="405.3" y="403.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="408.3" y="414.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.04%)</title><rect x="405.7" y="387.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="408.7" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (15 samples, 0.26%)</title><rect x="406.2" y="387.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="409.2" y="398.0"></text>
</g>
<g>
<title>netif_rx (12 samples, 0.21%)</title><rect x="406.4" y="371.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="409.4" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (10 samples, 0.18%)</title><rect x="406.8" y="355.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="409.8" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.05%)</title><rect x="406.8" y="339.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="409.8" y="350.0"></text>
</g>
<g>
<title>ktime_get_real (6 samples, 0.11%)</title><rect x="407.6" y="339.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="410.6" y="350.0"></text>
</g>
<g>
<title>getnstimeofday64 (6 samples, 0.11%)</title><rect x="407.6" y="323.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="410.6" y="334.0"></text>
</g>
<g>
<title>__getnstimeofday64 (5 samples, 0.09%)</title><rect x="407.6" y="307.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="410.6" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="409.5" y="403.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="412.5" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.04%)</title><rect x="410.3" y="419.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="413.3" y="430.0"></text>
</g>
<g>
<title>local_bh_enable (380 samples, 6.67%)</title><rect x="410.7" y="435.0" width="78.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="413.7" y="446.0">local_bh_..</text>
</g>
<g>
<title>__local_bh_enable_ip (380 samples, 6.67%)</title><rect x="410.7" y="419.0" width="78.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="413.7" y="430.0">__local_b..</text>
</g>
<g>
<title>do_softirq (378 samples, 6.63%)</title><rect x="411.1" y="403.0" width="78.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="414.1" y="414.0">do_softirq</text>
</g>
<g>
<title>call_softirq (377 samples, 6.62%)</title><rect x="411.3" y="387.0" width="78.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="414.3" y="398.0">call_soft..</text>
</g>
<g>
<title>__do_softirq (376 samples, 6.60%)</title><rect x="411.3" y="371.0" width="77.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="414.3" y="382.0">__do_soft..</text>
</g>
<g>
<title>net_rx_action (369 samples, 6.48%)</title><rect x="412.6" y="355.0" width="76.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="415.6" y="366.0">net_rx_a..</text>
</g>
<g>
<title>process_backlog (367 samples, 6.44%)</title><rect x="413.0" y="339.0" width="76.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="416.0" y="350.0">process_..</text>
</g>
<g>
<title>__netif_receive_skb (366 samples, 6.42%)</title><rect x="413.2" y="323.0" width="75.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="416.2" y="334.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_core (365 samples, 6.41%)</title><rect x="413.2" y="307.0" width="75.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="416.2" y="318.0">__netif_..</text>
</g>
<g>
<title>ip_rcv (357 samples, 6.27%)</title><rect x="414.7" y="291.0" width="73.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="417.7" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (321 samples, 5.63%)</title><rect x="416.1" y="275.0" width="66.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="419.1" y="286.0">ip_rcv_..</text>
</g>
<g>
<title>ip_local_deliver (320 samples, 5.62%)</title><rect x="416.1" y="259.0" width="66.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="419.1" y="270.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (284 samples, 4.98%)</title><rect x="416.5" y="243.0" width="58.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="419.5" y="254.0">ip_loc..</text>
</g>
<g>
<title>sock_put (2 samples, 0.04%)</title><rect x="416.7" y="227.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="419.7" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (281 samples, 4.93%)</title><rect x="417.1" y="227.0" width="58.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="420.1" y="238.0">tcp_v4..</text>
</g>
<g>
<title>__inet_lookup_established (14 samples, 0.25%)</title><rect x="418.0" y="211.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="421.0" y="222.0"></text>
</g>
<g>
<title>tcp_filter (8 samples, 0.14%)</title><rect x="421.5" y="211.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="424.5" y="222.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.12%)</title><rect x="421.7" y="195.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="424.7" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (6 samples, 0.11%)</title><rect x="421.9" y="179.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="424.9" y="190.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (6 samples, 0.11%)</title><rect x="421.9" y="163.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="424.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (252 samples, 4.42%)</title><rect x="423.1" y="211.0" width="52.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="426.1" y="222.0">tcp_v..</text>
</g>
<g>
<title>tcp_rcv_established (250 samples, 4.39%)</title><rect x="423.6" y="195.0" width="51.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="426.6" y="206.0">tcp_r..</text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.09%)</title><rect x="424.6" y="179.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="427.6" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.09%)</title><rect x="424.6" y="163.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="427.6" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.07%)</title><rect x="424.8" y="147.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="427.8" y="158.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.07%)</title><rect x="424.8" y="131.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="427.8" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="424.8" y="115.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="427.8" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (4 samples, 0.07%)</title><rect x="426.5" y="179.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="429.5" y="190.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.04%)</title><rect x="426.9" y="163.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="429.9" y="174.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="426.9" y="147.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="429.9" y="158.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="426.9" y="131.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="429.9" y="142.0"></text>
</g>
<g>
<title>tcp_ack (35 samples, 0.61%)</title><rect x="427.3" y="179.0" width="7.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="430.3" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (11 samples, 0.19%)</title><rect x="430.8" y="163.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="433.8" y="174.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="430.8" y="147.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="433.8" y="158.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.16%)</title><rect x="431.2" y="147.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="434.2" y="158.0"></text>
</g>
<g>
<title>skb_release_data (8 samples, 0.14%)</title><rect x="431.2" y="131.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="434.2" y="142.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.11%)</title><rect x="431.6" y="115.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="434.6" y="126.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="432.5" y="99.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="435.5" y="110.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.09%)</title><rect x="433.5" y="163.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="436.5" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.05%)</title><rect x="434.5" y="179.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="437.5" y="190.0"></text>
</g>
<g>
<title>tcp_data_queue (192 samples, 3.37%)</title><rect x="435.2" y="179.0" width="39.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="438.2" y="190.0">tcp..</text>
</g>
<g>
<title>sock_def_readable (187 samples, 3.28%)</title><rect x="436.0" y="163.0" width="38.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="439.0" y="174.0">soc..</text>
</g>
<g>
<title>__wake_up_sync_key (185 samples, 3.25%)</title><rect x="436.4" y="147.0" width="38.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="439.4" y="158.0">__w..</text>
</g>
<g>
<title>__wake_up_common_lock (185 samples, 3.25%)</title><rect x="436.4" y="131.0" width="38.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="439.4" y="142.0">__w..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (185 samples, 3.25%)</title><rect x="436.4" y="115.0" width="38.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="439.4" y="126.0">_ra..</text>
</g>
<g>
<title>nf_hook_slow (32 samples, 0.56%)</title><rect x="475.3" y="243.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="478.3" y="254.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn	[iptable_nat] (3 samples, 0.05%)</title><rect x="475.3" y="227.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="478.3" y="238.0"></text>
</g>
<g>
<title>nf_iterate (28 samples, 0.49%)</title><rect x="476.2" y="227.0" width="5.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="479.2" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (15 samples, 0.26%)</title><rect x="477.2" y="211.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="480.2" y="222.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.21%)</title><rect x="477.4" y="195.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="480.4" y="206.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (4 samples, 0.07%)</title><rect x="478.6" y="179.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="481.6" y="190.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (4 samples, 0.07%)</title><rect x="478.6" y="163.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="481.6" y="174.0"></text>
</g>
<g>
<title>tcp_mt (2 samples, 0.04%)</title><rect x="479.5" y="179.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="482.5" y="190.0"></text>
</g>
<g>
<title>tcp_mt (2 samples, 0.04%)</title><rect x="479.9" y="195.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="482.9" y="206.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.05%)</title><rect x="480.3" y="211.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="483.3" y="222.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.05%)</title><rect x="480.3" y="195.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="483.3" y="206.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (5 samples, 0.09%)</title><rect x="480.9" y="211.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="483.9" y="222.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.09%)</title><rect x="480.9" y="195.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="483.9" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.04%)</title><rect x="482.0" y="243.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="485.0" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (28 samples, 0.49%)</title><rect x="482.6" y="275.0" width="5.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="485.6" y="286.0"></text>
</g>
<g>
<title>nf_iterate (24 samples, 0.42%)</title><rect x="483.4" y="259.0" width="5.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="486.4" y="270.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (6 samples, 0.11%)</title><rect x="484.4" y="243.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="487.4" y="254.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.07%)</title><rect x="484.9" y="227.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="487.9" y="238.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (10 samples, 0.18%)</title><rect x="485.9" y="243.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="488.9" y="254.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.18%)</title><rect x="485.9" y="227.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="488.9" y="238.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="488.0" y="243.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="491.0" y="254.0"></text>
</g>
<g>
<title>nf_hook_slow (12 samples, 0.21%)</title><rect x="489.4" y="451.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="492.4" y="462.0"></text>
</g>
<g>
<title>nf_iterate (9 samples, 0.16%)</title><rect x="489.8" y="435.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="492.8" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.05%)</title><rect x="490.2" y="419.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="493.2" y="430.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out	[iptable_nat] (2 samples, 0.04%)</title><rect x="490.9" y="419.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="493.9" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="490.9" y="403.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="493.9" y="414.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (2 samples, 0.04%)</title><rect x="491.3" y="419.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="494.3" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.04%)</title><rect x="491.3" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="494.3" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.05%)</title><rect x="491.9" y="467.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="494.9" y="478.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.04%)</title><rect x="492.5" y="483.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="495.5" y="494.0"></text>
</g>
<g>
<title>local_clock (7 samples, 0.12%)</title><rect x="493.1" y="499.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="496.1" y="510.0"></text>
</g>
<g>
<title>sched_clock (6 samples, 0.11%)</title><rect x="493.1" y="483.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="496.1" y="494.0"></text>
</g>
<g>
<title>vmware_sched_clock (6 samples, 0.11%)</title><rect x="493.1" y="467.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="496.1" y="478.0"></text>
</g>
<g>
<title>tcp_v4_send_check (3 samples, 0.05%)</title><rect x="495.2" y="515.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="498.2" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.05%)</title><rect x="496.0" y="547.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="499.0" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (10 samples, 0.18%)</title><rect x="496.9" y="563.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="499.9" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="496.9" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="499.9" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (8 samples, 0.14%)</title><rect x="497.3" y="547.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="500.3" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (4 samples, 0.07%)</title><rect x="497.9" y="531.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="500.9" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.07%)</title><rect x="499.1" y="595.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="502.1" y="606.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (3 samples, 0.05%)</title><rect x="499.4" y="579.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="502.4" y="590.0"></text>
</g>
<g>
<title>sock_has_perm (3 samples, 0.05%)</title><rect x="499.4" y="563.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="502.4" y="574.0"></text>
</g>
<g>
<title>avc_has_perm_flags (3 samples, 0.05%)</title><rect x="499.4" y="547.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="502.4" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="500.4" y="611.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="503.4" y="622.0"></text>
</g>
<g>
<title>fget_light (3 samples, 0.05%)</title><rect x="500.4" y="595.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="503.4" y="606.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (12 samples, 0.21%)</title><rect x="501.0" y="691.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="504.0" y="702.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (4 samples, 0.07%)</title><rect x="502.7" y="675.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="505.7" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (4 samples, 0.07%)</title><rect x="502.7" y="659.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (6 samples, 0.11%)</title><rect x="503.7" y="739.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="506.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (29 samples, 0.51%)</title><rect x="504.9" y="739.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (17 samples, 0.30%)</title><rect x="507.4" y="723.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="510.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (17 samples, 0.30%)</title><rect x="507.4" y="707.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="510.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.07%)</title><rect x="511.0" y="739.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/LSMDao.lastIterator (347 samples, 6.09%)</title><rect x="511.8" y="739.0" width="71.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.8" y="750.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/IteratorsTool.lastIterator (346 samples, 6.07%)</title><rect x="512.0" y="723.0" width="71.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="515.0" y="734.0">ru/mail/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5 samples, 0.09%)</title><rect x="512.2" y="707.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.2" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 0.07%)</title><rect x="512.4" y="691.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="515.4" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.05%)</title><rect x="513.2" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="516.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (45 samples, 0.79%)</title><rect x="514.3" y="707.0" width="9.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (45 samples, 0.79%)</title><rect x="514.3" y="691.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="517.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (44 samples, 0.77%)</title><rect x="514.5" y="675.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.5" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (44 samples, 0.77%)</title><rect x="514.5" y="659.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="517.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (44 samples, 0.77%)</title><rect x="514.5" y="643.0" width="9.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.5" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (26 samples, 0.46%)</title><rect x="514.7" y="627.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (26 samples, 0.46%)</title><rect x="514.7" y="611.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (19 samples, 0.33%)</title><rect x="514.7" y="595.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (2 samples, 0.04%)</title><rect x="514.7" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTable$$Lambda$69/2016648547.apply (2 samples, 0.04%)</title><rect x="514.7" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTable.lambda$iterator$0 (2 samples, 0.04%)</title><rect x="514.7" y="547.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="517.7" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (17 samples, 0.30%)</title><rect x="515.1" y="579.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.1" y="590.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (17 samples, 0.30%)</title><rect x="515.1" y="563.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.1" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.&lt;init&gt; (5 samples, 0.09%)</title><rect x="515.1" y="547.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (12 samples, 0.21%)</title><rect x="516.1" y="547.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.1" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="516.5" y="531.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (7 samples, 0.12%)</title><rect x="517.2" y="531.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.2" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap$SimpleImmutableEntry.&lt;init&gt; (2 samples, 0.04%)</title><rect x="517.2" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="520.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (5 samples, 0.09%)</title><rect x="517.6" y="515.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (5 samples, 0.09%)</title><rect x="517.6" y="499.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooHigh (2 samples, 0.04%)</title><rect x="518.2" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="521.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7 samples, 0.12%)</title><rect x="518.6" y="595.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="521.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTablesPool$$Lambda$78/19566460.apply (2 samples, 0.04%)</title><rect x="519.6" y="579.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Cell.getKey (2 samples, 0.04%)</title><rect x="519.6" y="563.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (4 samples, 0.07%)</title><rect x="520.1" y="627.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.1" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.07%)</title><rect x="520.1" y="611.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="523.1" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="520.5" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="523.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/IteratorsTool$$Lambda$82/1390397591.apply (3 samples, 0.05%)</title><rect x="520.9" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Cell.getKey (3 samples, 0.05%)</title><rect x="520.9" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="523.9" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.05%)</title><rect x="520.9" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="523.9" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.05%)</title><rect x="520.9" y="579.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.9" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="520.9" y="563.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="520.9" y="547.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTablesPool$$Lambda$78/19566460.apply (10 samples, 0.18%)</title><rect x="521.5" y="627.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Cell.getKey (10 samples, 0.18%)</title><rect x="521.5" y="611.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="524.5" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.14%)</title><rect x="521.9" y="595.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.9" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (8 samples, 0.14%)</title><rect x="521.9" y="579.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.9" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.14%)</title><rect x="521.9" y="563.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="524.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.11%)</title><rect x="522.1" y="547.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.1" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (6 samples, 0.11%)</title><rect x="522.1" y="531.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.11%)</title><rect x="522.1" y="515.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="525.1" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.11%)</title><rect x="522.1" y="499.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="525.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTablesPool.iterator (290 samples, 5.09%)</title><rect x="523.6" y="707.0" width="60.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.6" y="718.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (14 samples, 0.25%)</title><rect x="523.8" y="691.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="526.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (14 samples, 0.25%)</title><rect x="523.8" y="675.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="526.8" y="686.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (5 samples, 0.09%)</title><rect x="525.7" y="659.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.7" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (7 samples, 0.12%)</title><rect x="526.9" y="691.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.9" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (7 samples, 0.12%)</title><rect x="526.9" y="675.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="529.9" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (7 samples, 0.12%)</title><rect x="526.9" y="659.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.&lt;init&gt; (7 samples, 0.12%)</title><rect x="526.9" y="643.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.9" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (5 samples, 0.09%)</title><rect x="528.3" y="691.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.3" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="529.4" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="532.4" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="529.4" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="532.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (28 samples, 0.49%)</title><rect x="529.8" y="691.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="532.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (28 samples, 0.49%)</title><rect x="529.8" y="675.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="532.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (27 samples, 0.47%)</title><rect x="530.0" y="659.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.05%)</title><rect x="532.1" y="643.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.1" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.05%)</title><rect x="532.7" y="643.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="535.7" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.05%)</title><rect x="532.7" y="627.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="535.7" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (3 samples, 0.05%)</title><rect x="533.3" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.3" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (3 samples, 0.05%)</title><rect x="533.3" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="536.3" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (2 samples, 0.04%)</title><rect x="533.5" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="536.5" y="622.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.09%)</title><rect x="534.4" y="643.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="537.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock.readLock (3 samples, 0.05%)</title><rect x="535.6" y="691.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.6" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (35 samples, 0.61%)</title><rect x="536.2" y="691.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="539.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (34 samples, 0.60%)</title><rect x="536.4" y="675.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.4" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (31 samples, 0.54%)</title><rect x="537.0" y="659.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="540.0" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (28 samples, 0.49%)</title><rect x="537.7" y="643.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="540.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (28 samples, 0.49%)</title><rect x="537.7" y="627.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="540.7" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (23 samples, 0.40%)</title><rect x="537.7" y="611.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="540.7" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (23 samples, 0.40%)</title><rect x="537.7" y="595.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="540.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (12 samples, 0.21%)</title><rect x="537.9" y="579.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="540.9" y="590.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (11 samples, 0.19%)</title><rect x="538.1" y="563.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="541.1" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (11 samples, 0.19%)</title><rect x="538.1" y="547.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.1" y="558.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.&lt;init&gt; (3 samples, 0.05%)</title><rect x="538.1" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="541.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.14%)</title><rect x="538.7" y="531.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 0.18%)</title><rect x="540.4" y="579.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTablesPool$$Lambda$78/19566460.apply (10 samples, 0.18%)</title><rect x="540.4" y="563.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.4" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Cell.getKey (6 samples, 0.11%)</title><rect x="541.2" y="547.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.2" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.07%)</title><rect x="541.6" y="531.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/IteratorsTool$$Lambda$82/1390397591.apply (5 samples, 0.09%)</title><rect x="542.4" y="611.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="545.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Cell.getKey (5 samples, 0.09%)</title><rect x="542.4" y="595.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.4" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.09%)</title><rect x="542.4" y="579.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (5 samples, 0.09%)</title><rect x="542.4" y="563.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="542.4" y="547.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="542.4" y="531.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="545.4" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.09%)</title><rect x="542.4" y="515.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="545.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTable.iterator (194 samples, 3.40%)</title><rect x="543.5" y="691.0" width="40.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.5" y="702.0">ru/..</text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (192 samples, 3.37%)</title><rect x="543.5" y="675.0" width="39.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.5" y="686.0">jav..</text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (188 samples, 3.30%)</title><rect x="544.3" y="659.0" width="38.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="547.3" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (188 samples, 3.30%)</title><rect x="544.3" y="643.0" width="38.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="547.3" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (188 samples, 3.30%)</title><rect x="544.3" y="627.0" width="38.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.3" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (178 samples, 3.12%)</title><rect x="546.4" y="611.0" width="36.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.4" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (3 samples, 0.05%)</title><rect x="546.8" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="549.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (3 samples, 0.05%)</title><rect x="546.8" y="579.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="549.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.04%)</title><rect x="547.0" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="547.0" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="550.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="547.0" y="531.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.0" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.04%)</title><rect x="547.0" y="515.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (173 samples, 3.04%)</title><rect x="547.4" y="595.0" width="35.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="550.4" y="606.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (173 samples, 3.04%)</title><rect x="547.4" y="579.0" width="35.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="550.4" y="590.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (29 samples, 0.51%)</title><rect x="549.3" y="563.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="552.3" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (29 samples, 0.51%)</title><rect x="549.3" y="547.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.3" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (26 samples, 0.46%)</title><rect x="549.9" y="531.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.9" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="550.5" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.5" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.04%)</title><rect x="550.9" y="515.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="553.9" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (14 samples, 0.25%)</title><rect x="551.3" y="515.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="554.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="553.8" y="499.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="556.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.09%)</title><rect x="554.2" y="515.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.2" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.04%)</title><rect x="554.9" y="499.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (135 samples, 2.37%)</title><rect x="555.3" y="563.0" width="27.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="558.3" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (90 samples, 1.58%)</title><rect x="564.6" y="547.0" width="18.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.6" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (85 samples, 1.49%)</title><rect x="565.6" y="531.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (50 samples, 0.88%)</title><rect x="572.9" y="515.0" width="10.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.9" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (36 samples, 0.63%)</title><rect x="573.5" y="499.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (15 samples, 0.26%)</title><rect x="577.8" y="483.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="580.8" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compare (3 samples, 0.05%)</title><rect x="580.9" y="499.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="583.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Byte.compare (3 samples, 0.05%)</title><rect x="580.9" y="483.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="583.9" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 0.14%)</title><rect x="581.6" y="499.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.6" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.04%)</title><rect x="581.6" y="483.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (6 samples, 0.11%)</title><rect x="582.0" y="483.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="585.0" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSortedMap.tailMap (2 samples, 0.04%)</title><rect x="583.2" y="675.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="586.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="583.2" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="583.2" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="583.2" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (2 samples, 0.04%)</title><rect x="583.2" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.2" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractMap.&lt;init&gt; (2 samples, 0.04%)</title><rect x="583.2" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="586.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/Balancer.poolsNodes (28 samples, 0.49%)</title><rect x="583.8" y="739.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="586.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/Balancer.hashCreate (25 samples, 0.44%)</title><rect x="584.3" y="723.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="587.3" y="734.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (25 samples, 0.44%)</title><rect x="584.3" y="707.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.3" y="718.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (9 samples, 0.16%)</title><rect x="584.3" y="691.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.3" y="702.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (9 samples, 0.16%)</title><rect x="584.3" y="675.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="587.3" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="585.7" y="659.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="588.7" y="670.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (16 samples, 0.28%)</title><rect x="586.1" y="691.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.1" y="702.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (16 samples, 0.28%)</title><rect x="586.1" y="675.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="589.1" y="686.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (16 samples, 0.28%)</title><rect x="586.1" y="659.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="589.1" y="670.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (16 samples, 0.28%)</title><rect x="586.1" y="643.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="589.1" y="654.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (16 samples, 0.28%)</title><rect x="586.1" y="627.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="589.1" y="638.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implDigest (16 samples, 0.28%)</title><rect x="586.1" y="611.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="589.1" y="622.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig4 (3 samples, 0.05%)</title><rect x="586.1" y="595.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="589.1" y="606.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (13 samples, 0.23%)</title><rect x="586.7" y="595.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.7" y="606.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress0 (12 samples, 0.21%)</title><rect x="586.7" y="579.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="589.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/ResponseTools.createResponse (22 samples, 0.39%)</title><rect x="589.6" y="739.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/954966403.linkToTargetMethod (9 samples, 0.16%)</title><rect x="590.7" y="723.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.7" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2088374785.invoke (9 samples, 0.16%)</title><rect x="590.7" y="707.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.7" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1647856310.invokeStatic (6 samples, 0.11%)</title><rect x="591.1" y="691.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="594.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (6 samples, 0.11%)</title><rect x="591.1" y="675.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="594.1" y="686.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (6 samples, 0.11%)</title><rect x="591.1" y="659.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="594.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.12%)</title><rect x="592.8" y="723.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/ResponseTools.getDataFromResponse (17 samples, 0.30%)</title><rect x="594.2" y="739.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (7 samples, 0.12%)</title><rect x="594.6" y="723.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="597.6" y="734.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (7 samples, 0.12%)</title><rect x="594.6" y="707.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="597.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.04%)</title><rect x="595.7" y="691.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="598.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.04%)</title><rect x="595.7" y="675.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="596.1" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="596.1" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.04%)</title><rect x="596.5" y="723.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Value.present (4 samples, 0.07%)</title><rect x="596.9" y="723.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/ResponseTools.value (51 samples, 0.90%)</title><rect x="597.7" y="739.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.04%)</title><rect x="597.7" y="723.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.7" y="734.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.04%)</title><rect x="597.7" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="600.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (49 samples, 0.86%)</title><rect x="598.1" y="723.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.1" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (35 samples, 0.61%)</title><rect x="598.1" y="707.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.1" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (35 samples, 0.61%)</title><rect x="598.1" y="691.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (35 samples, 0.61%)</title><rect x="598.1" y="675.0" width="7.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (29 samples, 0.51%)</title><rect x="598.1" y="659.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="601.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (28 samples, 0.49%)</title><rect x="598.1" y="643.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (22 samples, 0.39%)</title><rect x="598.1" y="627.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.1" y="638.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (21 samples, 0.37%)</title><rect x="598.3" y="611.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.3" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (14 samples, 0.25%)</title><rect x="599.8" y="595.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (13 samples, 0.23%)</title><rect x="600.0" y="579.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="603.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (4 samples, 0.07%)</title><rect x="601.9" y="563.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="604.9" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractMap$SimpleImmutableEntry.&lt;init&gt; (2 samples, 0.04%)</title><rect x="601.9" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="604.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.04%)</title><rect x="602.3" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (2 samples, 0.04%)</title><rect x="602.3" y="531.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.11%)</title><rect x="602.7" y="627.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/IteratorsTool$$Lambda$82/1390397591.apply (4 samples, 0.07%)</title><rect x="602.9" y="611.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="605.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Cell.getKey (3 samples, 0.05%)</title><rect x="603.1" y="595.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="606.1" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="603.3" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (3 samples, 0.05%)</title><rect x="604.1" y="659.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.1" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.05%)</title><rect x="604.1" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTablesPool$$Lambda$78/19566460.apply (3 samples, 0.05%)</title><rect x="604.8" y="659.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Cell.getKey (2 samples, 0.04%)</title><rect x="605.0" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="608.0" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="605.0" y="627.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.0" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.04%)</title><rect x="605.0" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.0" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="605.0" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.0" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="605.0" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.0" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="605.0" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="608.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="605.0" y="547.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="605.0" y="531.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (4 samples, 0.07%)</title><rect x="605.4" y="707.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.4" y="718.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.07%)</title><rect x="605.4" y="691.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="608.4" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.05%)</title><rect x="605.6" y="675.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/IteratorsTool$$Lambda$82/1390397591.apply (10 samples, 0.18%)</title><rect x="606.2" y="707.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="609.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Cell.getKey (7 samples, 0.12%)</title><rect x="606.8" y="691.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="609.8" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.07%)</title><rect x="607.5" y="675.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.5" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.04%)</title><rect x="607.9" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.9" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="607.9" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="610.9" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="607.9" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.9" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="607.9" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$ResponseUtils.sendResponse (1,357 samples, 23.82%)</title><rect x="608.3" y="787.0" width="281.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.3" y="798.0">ru/mail/polis/service/httprest/HttpRes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,355 samples, 23.78%)</title><rect x="608.7" y="771.0" width="280.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="611.7" y="782.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (32 samples, 0.56%)</title><rect x="609.9" y="755.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (32 samples, 0.56%)</title><rect x="609.9" y="739.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (32 samples, 0.56%)</title><rect x="609.9" y="723.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="611.8" y="707.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="614.8" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.05%)</title><rect x="611.8" y="691.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="614.8" y="702.0"></text>
</g>
<g>
<title>[vdso] (18 samples, 0.32%)</title><rect x="612.4" y="707.0" width="3.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="615.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,312 samples, 23.03%)</title><rect x="616.6" y="755.0" width="271.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.6" y="766.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (29 samples, 0.51%)</title><rect x="616.8" y="739.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (18 samples, 0.32%)</title><rect x="619.1" y="723.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="622.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (18 samples, 0.32%)</title><rect x="619.1" y="707.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (18 samples, 0.32%)</title><rect x="619.1" y="691.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (18 samples, 0.32%)</title><rect x="619.1" y="675.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.1" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="622.4" y="659.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="625.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,282 samples, 22.50%)</title><rect x="622.8" y="739.0" width="265.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.8" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,282 samples, 22.50%)</title><rect x="622.8" y="723.0" width="265.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.8" y="734.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (4 samples, 0.07%)</title><rect x="625.1" y="707.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,267 samples, 22.24%)</title><rect x="625.9" y="707.0" width="262.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="628.9" y="718.0">one/nio/net/Session$ArrayQueueItem...</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,262 samples, 22.15%)</title><rect x="626.9" y="691.0" width="261.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.9" y="702.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.04%)</title><rect x="630.6" y="675.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="633.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.61%)</title><rect x="631.1" y="675.0" width="7.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="634.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.61%)</title><rect x="631.1" y="659.0" width="7.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="634.1" y="670.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (29 samples, 0.51%)</title><rect x="631.1" y="643.0" width="6.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="634.1" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.11%)</title><rect x="632.5" y="627.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="635.5" y="638.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (4 samples, 0.07%)</title><rect x="634.0" y="627.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="637.0" y="638.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (9 samples, 0.16%)</title><rect x="634.8" y="627.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="637.8" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.04%)</title><rect x="635.8" y="611.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="638.8" y="622.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="636.2" y="611.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="639.2" y="622.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.04%)</title><rect x="636.7" y="627.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="639.7" y="638.0"></text>
</g>
<g>
<title>send (5 samples, 0.09%)</title><rect x="637.3" y="643.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="640.3" y="654.0"></text>
</g>
<g>
<title>__libc_recv (11 samples, 0.19%)</title><rect x="638.3" y="675.0" width="2.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="641.3" y="686.0"></text>
</g>
<g>
<title>system_call_after_swapgs (11 samples, 0.19%)</title><rect x="638.3" y="659.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="641.3" y="670.0"></text>
</g>
<g>
<title>__lll_unlock_wake (18 samples, 0.32%)</title><rect x="640.6" y="675.0" width="3.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="643.6" y="686.0"></text>
</g>
<g>
<title>system_call_after_swapgs (18 samples, 0.32%)</title><rect x="640.6" y="659.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="643.6" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (8 samples, 0.14%)</title><rect x="644.3" y="675.0" width="1.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="647.3" y="686.0"></text>
</g>
<g>
<title>send (1,170 samples, 20.53%)</title><rect x="646.0" y="675.0" width="242.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="649.0" y="686.0">send</text>
</g>
<g>
<title>__audit_syscall_entry (4 samples, 0.07%)</title><rect x="650.1" y="659.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="653.1" y="670.0"></text>
</g>
<g>
<title>auditsys (9 samples, 0.16%)</title><rect x="651.2" y="659.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="654.2" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_entry (8 samples, 0.14%)</title><rect x="651.4" y="643.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="654.4" y="654.0"></text>
</g>
<g>
<title>sys_sendto (5 samples, 0.09%)</title><rect x="653.0" y="659.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="656.0" y="670.0"></text>
</g>
<g>
<title>sysret_audit (5 samples, 0.09%)</title><rect x="654.1" y="659.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="657.1" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.05%)</title><rect x="654.3" y="643.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="657.3" y="654.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.04%)</title><rect x="655.1" y="659.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="658.1" y="670.0"></text>
</g>
<g>
<title>system_call_fastpath (1,124 samples, 19.73%)</title><rect x="655.5" y="659.0" width="232.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="658.5" y="670.0">system_call_fastpath</text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.04%)</title><rect x="655.9" y="643.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="658.9" y="654.0"></text>
</g>
<g>
<title>sys_sendto (1,120 samples, 19.66%)</title><rect x="656.3" y="643.0" width="232.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="659.3" y="654.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (1,116 samples, 19.59%)</title><rect x="656.5" y="627.0" width="231.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="659.5" y="638.0">SYSC_sendto</text>
</g>
<g>
<title>fget_light (4 samples, 0.07%)</title><rect x="657.2" y="611.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="660.2" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (1,095 samples, 19.22%)</title><rect x="658.4" y="611.0" width="226.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="661.4" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (1,074 samples, 18.85%)</title><rect x="658.8" y="595.0" width="222.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="661.8" y="606.0">inet_sendmsg</text>
</g>
<g>
<title>_copy_from_user (2 samples, 0.04%)</title><rect x="659.0" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="662.0" y="590.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.05%)</title><rect x="659.4" y="579.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="662.4" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,064 samples, 18.67%)</title><rect x="660.9" y="579.0" width="220.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="663.9" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (11 samples, 0.19%)</title><rect x="661.9" y="563.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="664.9" y="574.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.04%)</title><rect x="662.1" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="665.1" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (8 samples, 0.14%)</title><rect x="662.5" y="547.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="665.5" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.04%)</title><rect x="664.2" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="667.2" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="664.6" y="563.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="667.6" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="665.4" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="668.4" y="574.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="665.9" y="563.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="668.9" y="574.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="666.1" y="547.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="669.1" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (18 samples, 0.32%)</title><rect x="666.5" y="563.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="669.5" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (16 samples, 0.28%)</title><rect x="666.7" y="547.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="669.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.32 (4 samples, 0.07%)</title><rect x="667.3" y="531.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="670.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.07%)</title><rect x="667.3" y="515.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="670.3" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.09%)</title><rect x="668.1" y="531.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="671.1" y="542.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.07%)</title><rect x="669.2" y="531.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="672.2" y="542.0"></text>
</g>
<g>
<title>static_key_enabled (2 samples, 0.04%)</title><rect x="670.4" y="563.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="673.4" y="574.0"></text>
</g>
<g>
<title>tcp_push (1,000 samples, 17.55%)</title><rect x="670.8" y="563.0" width="207.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="673.8" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (997 samples, 17.50%)</title><rect x="671.0" y="547.0" width="206.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="674.0" y="558.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (996 samples, 17.48%)</title><rect x="671.2" y="531.0" width="206.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="674.2" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.04%)</title><rect x="673.9" y="515.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="676.9" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.05%)</title><rect x="674.3" y="515.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="677.3" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (11 samples, 0.19%)</title><rect x="675.2" y="515.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="678.2" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (9 samples, 0.16%)</title><rect x="675.6" y="499.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="678.6" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.14%)</title><rect x="675.8" y="483.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="678.8" y="494.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.14%)</title><rect x="675.8" y="467.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="678.8" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.11%)</title><rect x="676.2" y="451.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="679.2" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.07%)</title><rect x="677.7" y="515.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="680.7" y="526.0"></text>
</g>
<g>
<title>tcp_transmit_skb (956 samples, 16.78%)</title><rect x="678.5" y="515.0" width="198.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="681.5" y="526.0">tcp_transmit_skb</text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.04%)</title><rect x="681.2" y="499.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="684.2" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (923 samples, 16.20%)</title><rect x="681.6" y="499.0" width="191.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="684.6" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.09%)</title><rect x="682.2" y="483.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="685.2" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.05%)</title><rect x="682.6" y="467.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="685.6" y="478.0"></text>
</g>
<g>
<title>ip_local_out_sk (910 samples, 15.97%)</title><rect x="683.3" y="483.0" width="188.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="686.3" y="494.0">ip_local_out_sk</text>
</g>
<g>
<title>__ip_local_out_sk (215 samples, 3.77%)</title><rect x="683.7" y="467.0" width="44.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="686.7" y="478.0">__ip..</text>
</g>
<g>
<title>nf_hook_slow (212 samples, 3.72%)</title><rect x="684.3" y="451.0" width="43.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="687.3" y="462.0">nf_h..</text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.04%)</title><rect x="684.9" y="435.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="687.9" y="446.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (3 samples, 0.05%)</title><rect x="685.3" y="435.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="688.3" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.04%)</title><rect x="686.1" y="435.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="689.1" y="446.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (2 samples, 0.04%)</title><rect x="686.6" y="435.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="689.6" y="446.0"></text>
</g>
<g>
<title>nf_iterate (197 samples, 3.46%)</title><rect x="687.0" y="435.0" width="40.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="690.0" y="446.0">nf_..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.05%)</title><rect x="692.2" y="419.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="695.2" y="430.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (9 samples, 0.16%)</title><rect x="692.8" y="419.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="695.8" y="430.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.12%)</title><rect x="693.0" y="403.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="696.0" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (28 samples, 0.49%)</title><rect x="694.6" y="419.0" width="5.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="697.6" y="430.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (25 samples, 0.44%)</title><rect x="695.3" y="403.0" width="5.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="698.3" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (7 samples, 0.12%)</title><rect x="700.4" y="419.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="703.4" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (7 samples, 0.12%)</title><rect x="700.4" y="403.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="703.4" y="414.0"></text>
</g>
<g>
<title>nf_ct_nat_ext_add	[nf_nat] (2 samples, 0.04%)</title><rect x="700.6" y="387.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="703.6" y="398.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat_ipv4] (4 samples, 0.07%)</title><rect x="701.1" y="387.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="704.1" y="398.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (26 samples, 0.46%)</title><rect x="701.9" y="419.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="704.9" y="430.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (24 samples, 0.42%)</title><rect x="702.1" y="403.0" width="5.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="705.1" y="414.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (17 samples, 0.30%)</title><rect x="707.3" y="419.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="710.3" y="430.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (16 samples, 0.28%)</title><rect x="707.5" y="403.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="710.5" y="414.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (72 samples, 1.26%)</title><rect x="711.0" y="419.0" width="14.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="714.0" y="430.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find	[nf_conntrack] (2 samples, 0.04%)</title><rect x="711.0" y="403.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="714.0" y="414.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (2 samples, 0.04%)</title><rect x="711.6" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="714.6" y="414.0"></text>
</g>
<g>
<title>ipv4_get_l4proto	[nf_conntrack_ipv4] (4 samples, 0.07%)</title><rect x="712.0" y="403.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="715.0" y="414.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (56 samples, 0.98%)</title><rect x="712.9" y="403.0" width="11.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="715.9" y="414.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (14 samples, 0.25%)</title><rect x="714.9" y="387.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="717.9" y="398.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (2 samples, 0.04%)</title><rect x="718.0" y="387.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="721.0" y="398.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (3 samples, 0.05%)</title><rect x="719.3" y="387.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="722.3" y="398.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (2 samples, 0.04%)</title><rect x="719.9" y="387.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="722.9" y="398.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (19 samples, 0.33%)</title><rect x="720.3" y="387.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="723.3" y="398.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (2 samples, 0.04%)</title><rect x="721.1" y="371.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="724.1" y="382.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (3 samples, 0.05%)</title><rect x="721.6" y="371.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="724.6" y="382.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (10 samples, 0.18%)</title><rect x="722.2" y="371.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="725.2" y="382.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (5 samples, 0.09%)</title><rect x="724.9" y="403.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="727.9" y="414.0"></text>
</g>
<g>
<title>netlbl_enabled (3 samples, 0.05%)</title><rect x="725.9" y="419.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="728.9" y="430.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (2 samples, 0.04%)</title><rect x="726.5" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="729.5" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="726.9" y="419.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="729.9" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.04%)</title><rect x="727.4" y="419.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="730.4" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_output (2 samples, 0.04%)</title><rect x="727.8" y="435.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="730.8" y="446.0"></text>
</g>
<g>
<title>ip_output (692 samples, 12.14%)</title><rect x="728.2" y="467.0" width="143.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="731.2" y="478.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (660 samples, 11.58%)</title><rect x="729.2" y="451.0" width="136.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="732.2" y="462.0">ip_finish_output</text>
</g>
<g>
<title>dev_queue_xmit (40 samples, 0.70%)</title><rect x="733.2" y="435.0" width="8.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="736.2" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (39 samples, 0.68%)</title><rect x="733.2" y="419.0" width="8.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="736.2" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (30 samples, 0.53%)</title><rect x="734.6" y="403.0" width="6.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="737.6" y="414.0"></text>
</g>
<g>
<title>loopback_xmit (22 samples, 0.39%)</title><rect x="736.1" y="387.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="739.1" y="398.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.04%)</title><rect x="736.5" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="739.5" y="382.0"></text>
</g>
<g>
<title>netif_rx (16 samples, 0.28%)</title><rect x="736.9" y="371.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="739.9" y="382.0"></text>
</g>
<g>
<title>ktime_get_real (2 samples, 0.04%)</title><rect x="736.9" y="355.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="739.9" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (14 samples, 0.25%)</title><rect x="737.3" y="355.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="740.3" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.07%)</title><rect x="737.5" y="339.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="740.5" y="350.0"></text>
</g>
<g>
<title>getnstimeofday64 (2 samples, 0.04%)</title><rect x="738.3" y="339.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="741.3" y="350.0"></text>
</g>
<g>
<title>ktime_get_real (7 samples, 0.12%)</title><rect x="738.8" y="339.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="741.8" y="350.0"></text>
</g>
<g>
<title>getnstimeofday64 (6 samples, 0.11%)</title><rect x="739.0" y="323.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="742.0" y="334.0"></text>
</g>
<g>
<title>__getnstimeofday64 (6 samples, 0.11%)</title><rect x="739.0" y="307.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="742.0" y="318.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="739.8" y="291.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="742.8" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.04%)</title><rect x="740.2" y="371.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="743.2" y="382.0"></text>
</g>
<g>
<title>local_bh_enable (601 samples, 10.55%)</title><rect x="741.4" y="435.0" width="124.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="744.4" y="446.0">local_bh_enable</text>
</g>
<g>
<title>__local_bh_enable_ip (600 samples, 10.53%)</title><rect x="741.4" y="419.0" width="124.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="744.4" y="430.0">__local_bh_enab..</text>
</g>
<g>
<title>do_softirq (599 samples, 10.51%)</title><rect x="741.6" y="403.0" width="124.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="744.6" y="414.0">do_softirq</text>
</g>
<g>
<title>call_softirq (593 samples, 10.41%)</title><rect x="742.9" y="387.0" width="122.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="745.9" y="398.0">call_softirq</text>
</g>
<g>
<title>__do_softirq (592 samples, 10.39%)</title><rect x="742.9" y="371.0" width="122.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="745.9" y="382.0">__do_softirq</text>
</g>
<g>
<title>net_rx_action (582 samples, 10.21%)</title><rect x="744.5" y="355.0" width="120.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="747.5" y="366.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (578 samples, 10.14%)</title><rect x="745.4" y="339.0" width="119.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="748.4" y="350.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (574 samples, 10.07%)</title><rect x="746.2" y="323.0" width="118.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="749.2" y="334.0">__netif_receiv..</text>
</g>
<g>
<title>__netif_receive_skb_core (573 samples, 10.06%)</title><rect x="746.2" y="307.0" width="118.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="749.2" y="318.0">__netif_receiv..</text>
</g>
<g>
<title>ip_rcv (564 samples, 9.90%)</title><rect x="747.9" y="291.0" width="116.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="750.9" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (513 samples, 9.00%)</title><rect x="749.9" y="275.0" width="106.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="752.9" y="286.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (507 samples, 8.90%)</title><rect x="750.3" y="259.0" width="105.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="753.3" y="270.0">ip_local_del..</text>
</g>
<g>
<title>ip_local_deliver_finish (441 samples, 7.74%)</title><rect x="750.8" y="243.0" width="91.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="753.8" y="254.0">ip_local_de..</text>
</g>
<g>
<title>_raw_qspin_lock (2 samples, 0.04%)</title><rect x="751.4" y="227.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="754.4" y="238.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.05%)</title><rect x="751.8" y="227.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="754.8" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (433 samples, 7.60%)</title><rect x="752.4" y="227.0" width="89.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="755.4" y="238.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (19 samples, 0.33%)</title><rect x="754.1" y="211.0" width="3.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="757.1" y="222.0"></text>
</g>
<g>
<title>tcp_filter (8 samples, 0.14%)</title><rect x="758.0" y="211.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="761.0" y="222.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.04%)</title><rect x="758.0" y="195.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="761.0" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (6 samples, 0.11%)</title><rect x="758.4" y="195.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="761.4" y="206.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.07%)</title><rect x="758.8" y="179.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="761.8" y="190.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (4 samples, 0.07%)</title><rect x="758.8" y="163.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="761.8" y="174.0"></text>
</g>
<g>
<title>tcp_prequeue (235 samples, 4.12%)</title><rect x="759.7" y="211.0" width="48.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="762.7" y="222.0">tcp_..</text>
</g>
<g>
<title>__wake_up_sync_key (212 samples, 3.72%)</title><rect x="761.1" y="195.0" width="43.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="764.1" y="206.0">__wa..</text>
</g>
<g>
<title>__wake_up_common_lock (212 samples, 3.72%)</title><rect x="761.1" y="179.0" width="43.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="764.1" y="190.0">__wa..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (212 samples, 3.72%)</title><rect x="761.1" y="163.0" width="43.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="764.1" y="174.0">_raw..</text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="805.0" y="195.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="808.0" y="206.0"></text>
</g>
<g>
<title>sk_reset_timer (14 samples, 0.25%)</title><rect x="805.4" y="195.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="808.4" y="206.0"></text>
</g>
<g>
<title>mod_timer (14 samples, 0.25%)</title><rect x="805.4" y="179.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="808.4" y="190.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.19%)</title><rect x="806.1" y="163.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="809.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (163 samples, 2.86%)</title><rect x="808.3" y="211.0" width="33.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="811.3" y="222.0">tc..</text>
</g>
<g>
<title>tcp_ack (2 samples, 0.04%)</title><rect x="808.5" y="195.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="811.5" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (159 samples, 2.79%)</title><rect x="809.0" y="195.0" width="32.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="812.0" y="206.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.07%)</title><rect x="809.0" y="179.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="812.0" y="190.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.07%)</title><rect x="809.0" y="163.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="812.0" y="174.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.07%)</title><rect x="809.0" y="147.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="812.0" y="158.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.07%)</title><rect x="809.0" y="131.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="812.0" y="142.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="809.0" y="115.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="812.0" y="126.0"></text>
</g>
<g>
<title>tcp_ack (16 samples, 0.28%)</title><rect x="809.8" y="179.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="812.8" y="190.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.14%)</title><rect x="810.8" y="163.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="813.8" y="174.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.09%)</title><rect x="810.8" y="147.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="813.8" y="158.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.05%)</title><rect x="811.2" y="131.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="814.2" y="142.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.05%)</title><rect x="811.9" y="147.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="814.9" y="158.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.05%)</title><rect x="811.9" y="131.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="814.9" y="142.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.05%)</title><rect x="811.9" y="115.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="814.9" y="126.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.05%)</title><rect x="811.9" y="99.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="814.9" y="110.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.05%)</title><rect x="812.5" y="163.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="815.5" y="174.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.05%)</title><rect x="813.1" y="179.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="816.1" y="190.0"></text>
</g>
<g>
<title>tcp_data_queue (136 samples, 2.39%)</title><rect x="813.7" y="179.0" width="28.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="816.7" y="190.0">tc..</text>
</g>
<g>
<title>sock_def_readable (123 samples, 2.16%)</title><rect x="815.8" y="163.0" width="25.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="818.8" y="174.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (119 samples, 2.09%)</title><rect x="816.6" y="147.0" width="24.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="819.6" y="158.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (119 samples, 2.09%)</title><rect x="816.6" y="131.0" width="24.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="819.6" y="142.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (119 samples, 2.09%)</title><rect x="816.6" y="115.0" width="24.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="819.6" y="126.0">_..</text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.05%)</title><rect x="841.3" y="163.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="844.3" y="174.0"></text>
</g>
<g>
<title>nf_hook_slow (61 samples, 1.07%)</title><rect x="842.1" y="243.0" width="12.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="845.1" y="254.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn	[iptable_nat] (3 samples, 0.05%)</title><rect x="842.7" y="227.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="845.7" y="238.0"></text>
</g>
<g>
<title>nf_iterate (52 samples, 0.91%)</title><rect x="844.0" y="227.0" width="10.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="847.0" y="238.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (33 samples, 0.58%)</title><rect x="845.2" y="211.0" width="6.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="848.2" y="222.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.04%)</title><rect x="845.4" y="195.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="848.4" y="206.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (3 samples, 0.05%)</title><rect x="845.8" y="195.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="848.8" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (24 samples, 0.42%)</title><rect x="846.4" y="195.0" width="5.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="849.4" y="206.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (2 samples, 0.04%)</title><rect x="848.9" y="179.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="851.9" y="190.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (6 samples, 0.11%)</title><rect x="849.3" y="179.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="852.3" y="190.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (6 samples, 0.11%)</title><rect x="849.3" y="163.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="852.3" y="174.0"></text>
</g>
<g>
<title>tcp_mt (4 samples, 0.07%)</title><rect x="850.6" y="179.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="853.6" y="190.0"></text>
</g>
<g>
<title>tcp_mt (3 samples, 0.05%)</title><rect x="851.4" y="195.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="854.4" y="206.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.05%)</title><rect x="852.0" y="211.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="855.0" y="222.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.05%)</title><rect x="852.0" y="195.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="855.0" y="206.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (8 samples, 0.14%)</title><rect x="852.9" y="211.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="855.9" y="222.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.12%)</title><rect x="853.1" y="195.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="856.1" y="206.0"></text>
</g>
<g>
<title>local_bh_enable (2 samples, 0.04%)</title><rect x="854.1" y="179.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="857.1" y="190.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="854.1" y="163.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="857.1" y="174.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.04%)</title><rect x="854.7" y="243.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="857.7" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.05%)</title><rect x="855.3" y="259.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="858.3" y="270.0"></text>
</g>
<g>
<title>nf_hook_slow (41 samples, 0.72%)</title><rect x="856.2" y="275.0" width="8.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="859.2" y="286.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack_ipv4] (2 samples, 0.04%)</title><rect x="856.6" y="259.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="859.6" y="270.0"></text>
</g>
<g>
<title>nf_iterate (37 samples, 0.65%)</title><rect x="857.0" y="259.0" width="7.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="860.0" y="270.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in	[iptable_nat] (3 samples, 0.05%)</title><rect x="858.0" y="243.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="861.0" y="254.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="858.0" y="227.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="861.0" y="238.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (28 samples, 0.49%)</title><rect x="858.7" y="243.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="861.7" y="254.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (28 samples, 0.49%)</title><rect x="858.7" y="227.0" width="5.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="861.7" y="238.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.04%)</title><rect x="865.1" y="355.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="868.1" y="366.0"></text>
</g>
<g>
<title>nf_hook_slow (26 samples, 0.46%)</title><rect x="866.1" y="451.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="869.1" y="462.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out	[iptable_nat] (3 samples, 0.05%)</title><rect x="866.1" y="435.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="869.1" y="446.0"></text>
</g>
<g>
<title>ipv4_helper	[nf_conntrack_ipv4] (3 samples, 0.05%)</title><rect x="866.9" y="435.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="869.9" y="446.0"></text>
</g>
<g>
<title>nf_iterate (19 samples, 0.33%)</title><rect x="867.6" y="435.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="870.6" y="446.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (5 samples, 0.09%)</title><rect x="868.0" y="419.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="871.0" y="430.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.04%)</title><rect x="868.6" y="403.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="871.6" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out	[iptable_nat] (3 samples, 0.05%)</title><rect x="869.0" y="419.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="872.0" y="430.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="869.0" y="403.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="872.0" y="414.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (3 samples, 0.05%)</title><rect x="869.6" y="419.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="872.6" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.04%)</title><rect x="870.5" y="419.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="873.5" y="430.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (3 samples, 0.05%)</title><rect x="870.9" y="419.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="873.9" y="430.0"></text>
</g>
<g>
<title>selinux_ip_postroute (3 samples, 0.05%)</title><rect x="870.9" y="403.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="873.9" y="414.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.05%)</title><rect x="871.7" y="483.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="874.7" y="494.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.04%)</title><rect x="872.3" y="483.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="875.3" y="494.0"></text>
</g>
<g>
<title>local_clock (8 samples, 0.14%)</title><rect x="872.7" y="499.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="875.7" y="510.0"></text>
</g>
<g>
<title>sched_clock (4 samples, 0.07%)</title><rect x="872.7" y="483.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="875.7" y="494.0"></text>
</g>
<g>
<title>vmware_sched_clock (4 samples, 0.07%)</title><rect x="872.7" y="467.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="875.7" y="478.0"></text>
</g>
<g>
<title>vmware_sched_clock (4 samples, 0.07%)</title><rect x="873.6" y="483.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="876.6" y="494.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.11%)</title><rect x="874.4" y="499.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="877.4" y="510.0"></text>
</g>
<g>
<title>__skb_clone (4 samples, 0.07%)</title><rect x="874.8" y="483.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="877.8" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.04%)</title><rect x="875.2" y="467.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="878.2" y="478.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="875.6" y="499.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="878.6" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (4 samples, 0.07%)</title><rect x="876.5" y="515.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="879.5" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.04%)</title><rect x="877.5" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="880.5" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.07%)</title><rect x="877.9" y="563.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="880.9" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (10 samples, 0.18%)</title><rect x="878.7" y="563.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="881.7" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (10 samples, 0.18%)</title><rect x="878.7" y="547.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="881.7" y="558.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.04%)</title><rect x="880.2" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="883.2" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.04%)</title><rect x="880.8" y="563.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="883.8" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (17 samples, 0.30%)</title><rect x="881.2" y="595.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="884.2" y="606.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (15 samples, 0.26%)</title><rect x="881.6" y="579.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="884.6" y="590.0"></text>
</g>
<g>
<title>sock_has_perm (15 samples, 0.26%)</title><rect x="881.6" y="563.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="884.6" y="574.0"></text>
</g>
<g>
<title>avc_has_perm_flags (8 samples, 0.14%)</title><rect x="883.1" y="547.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="886.1" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (12 samples, 0.21%)</title><rect x="885.2" y="611.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="888.2" y="622.0"></text>
</g>
<g>
<title>fget_light (12 samples, 0.21%)</title><rect x="885.2" y="595.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="888.2" y="606.0"></text>
</g>
<g>
<title>fput (3 samples, 0.05%)</title><rect x="887.6" y="627.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="890.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.09%)</title><rect x="888.3" y="755.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="891.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.09%)</title><rect x="888.3" y="739.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="891.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.09%)</title><rect x="888.3" y="723.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.3" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,213 samples, 21.29%)</title><rect x="889.5" y="867.0" width="251.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="892.5" y="878.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>[vdso] (8 samples, 0.14%)</title><rect x="891.6" y="851.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="894.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.04%)</title><rect x="893.7" y="851.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="896.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (234 samples, 4.11%)</title><rect x="894.1" y="851.0" width="48.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="897.1" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (228 samples, 4.00%)</title><rect x="895.3" y="835.0" width="47.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.3" y="846.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (14 samples, 0.25%)</title><rect x="909.2" y="819.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="912.2" y="830.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.11%)</title><rect x="912.1" y="819.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="915.1" y="830.0"></text>
</g>
<g>
<title>__GI_epoll_wait (78 samples, 1.37%)</title><rect x="913.3" y="819.0" width="16.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="916.3" y="830.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.04%)</title><rect x="916.2" y="803.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="919.2" y="814.0"></text>
</g>
<g>
<title>auditsys (7 samples, 0.12%)</title><rect x="916.8" y="803.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="919.8" y="814.0"></text>
</g>
<g>
<title>__audit_syscall_entry (7 samples, 0.12%)</title><rect x="916.8" y="787.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="919.8" y="798.0"></text>
</g>
<g>
<title>system_call_fastpath (53 samples, 0.93%)</title><rect x="918.5" y="803.0" width="11.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="921.5" y="814.0"></text>
</g>
<g>
<title>sys_epoll_wait (49 samples, 0.86%)</title><rect x="919.3" y="787.0" width="10.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="922.3" y="798.0"></text>
</g>
<g>
<title>ep_poll (33 samples, 0.58%)</title><rect x="920.0" y="771.0" width="6.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="923.0" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.11%)</title><rect x="920.2" y="755.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="923.2" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.isra.7 (17 samples, 0.30%)</title><rect x="921.4" y="755.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="924.4" y="766.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.04%)</title><rect x="921.6" y="739.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="924.6" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="922.0" y="739.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="925.0" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (11 samples, 0.19%)</title><rect x="922.4" y="739.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="925.4" y="750.0"></text>
</g>
<g>
<title>__list_del_entry (2 samples, 0.04%)</title><rect x="922.9" y="723.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="925.9" y="734.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.12%)</title><rect x="923.3" y="723.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="926.3" y="734.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.04%)</title><rect x="924.1" y="707.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="927.1" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.12%)</title><rect x="925.1" y="755.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="928.1" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 0.11%)</title><rect x="925.3" y="739.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="928.3" y="750.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.11%)</title><rect x="925.3" y="723.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="928.3" y="734.0"></text>
</g>
<g>
<title>fget_light (12 samples, 0.21%)</title><rect x="926.8" y="771.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="929.8" y="782.0"></text>
</g>
<g>
<title>__clock_gettime (43 samples, 0.75%)</title><rect x="929.5" y="819.0" width="8.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="932.5" y="830.0"></text>
</g>
<g>
<title>[vdso] (13 samples, 0.23%)</title><rect x="935.7" y="803.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="938.7" y="814.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="938.4" y="819.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="941.4" y="830.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.05%)</title><rect x="938.8" y="819.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="941.8" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.23%)</title><rect x="939.4" y="819.0" width="2.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="942.4" y="830.0"></text>
</g>
<g>
<title>system_call_after_swapgs (13 samples, 0.23%)</title><rect x="939.4" y="803.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="942.4" y="814.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="942.1" y="819.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="945.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (951 samples, 16.69%)</title><rect x="942.5" y="851.0" width="197.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="945.5" y="862.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (949 samples, 16.65%)</title><rect x="942.9" y="835.0" width="196.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="945.9" y="846.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (638 samples, 11.20%)</title><rect x="944.2" y="819.0" width="132.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.2" y="830.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (555 samples, 9.74%)</title><rect x="947.1" y="803.0" width="114.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="950.1" y="814.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (545 samples, 9.56%)</title><rect x="947.7" y="787.0" width="112.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="950.7" y="798.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (502 samples, 8.81%)</title><rect x="948.7" y="771.0" width="104.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="951.7" y="782.0">RequestHandl..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (26 samples, 0.46%)</title><rect x="949.2" y="755.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="952.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.11%)</title><rect x="950.4" y="739.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="953.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.11%)</title><rect x="950.4" y="723.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="953.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.12%)</title><rect x="951.6" y="739.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="954.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.12%)</title><rect x="951.6" y="723.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="954.6" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.07%)</title><rect x="953.1" y="739.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="956.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.05%)</title><rect x="953.9" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="956.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="954.1" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="957.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="954.1" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="957.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="954.1" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="957.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.entity (474 samples, 8.32%)</title><rect x="954.5" y="755.0" width="98.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.5" y="766.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.asyncExecute (465 samples, 8.16%)</title><rect x="955.4" y="739.0" width="96.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="958.4" y="750.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (465 samples, 8.16%)</title><rect x="955.4" y="723.0" width="96.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="958.4" y="734.0">one/nio/ser..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (465 samples, 8.16%)</title><rect x="955.4" y="707.0" width="96.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="958.4" y="718.0">java/util/c..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (465 samples, 8.16%)</title><rect x="955.4" y="691.0" width="96.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="958.4" y="702.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (465 samples, 8.16%)</title><rect x="955.4" y="675.0" width="96.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="958.4" y="686.0">one/nio/ser..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (465 samples, 8.16%)</title><rect x="955.4" y="659.0" width="96.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="958.4" y="670.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (450 samples, 7.90%)</title><rect x="958.5" y="643.0" width="93.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="961.5" y="654.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (426 samples, 7.48%)</title><rect x="959.3" y="627.0" width="88.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="962.3" y="638.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (423 samples, 7.42%)</title><rect x="959.9" y="611.0" width="87.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="962.9" y="622.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (423 samples, 7.42%)</title><rect x="959.9" y="595.0" width="87.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.9" y="606.0">jdk/intern..</text>
</g>
<g>
<title>Parker::unpark() (7 samples, 0.12%)</title><rect x="960.8" y="579.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="963.8" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (3 samples, 0.05%)</title><rect x="962.2" y="579.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="965.2" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.05%)</title><rect x="962.8" y="579.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="965.8" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark (79 samples, 1.39%)</title><rect x="963.9" y="579.0" width="16.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="966.9" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="967.2" y="563.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="970.2" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (2 samples, 0.04%)</title><rect x="967.8" y="563.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="970.8" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.05%)</title><rect x="968.2" y="563.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="971.2" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (17 samples, 0.30%)</title><rect x="968.8" y="563.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="971.8" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="972.6" y="563.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="975.6" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (2 samples, 0.04%)</title><rect x="973.2" y="563.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="976.2" y="574.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (5 samples, 0.09%)</title><rect x="973.6" y="563.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="976.6" y="574.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (12 samples, 0.21%)</title><rect x="974.6" y="563.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="977.6" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock (13 samples, 0.23%)</title><rect x="977.3" y="563.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="980.3" y="574.0"></text>
</g>
<g>
<title>__libc_recv (22 samples, 0.39%)</title><rect x="980.2" y="579.0" width="4.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="983.2" y="590.0"></text>
</g>
<g>
<title>system_call_after_swapgs (22 samples, 0.39%)</title><rect x="980.2" y="563.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="983.2" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (296 samples, 5.19%)</title><rect x="984.8" y="579.0" width="61.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="987.8" y="590.0">__pthr..</text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.05%)</title><rect x="988.3" y="563.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="991.3" y="574.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.04%)</title><rect x="988.9" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="991.9" y="574.0"></text>
</g>
<g>
<title>auditsys (6 samples, 0.11%)</title><rect x="989.3" y="563.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="992.3" y="574.0"></text>
</g>
<g>
<title>__audit_syscall_entry (6 samples, 0.11%)</title><rect x="989.3" y="547.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="992.3" y="558.0"></text>
</g>
<g>
<title>system_call_fastpath (266 samples, 4.67%)</title><rect x="991.0" y="563.0" width="55.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="994.0" y="574.0">syste..</text>
</g>
<g>
<title>do_futex (3 samples, 0.05%)</title><rect x="991.0" y="547.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.0" y="558.0"></text>
</g>
<g>
<title>sys_futex (263 samples, 4.62%)</title><rect x="991.6" y="547.0" width="54.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="994.6" y="558.0">sys_f..</text>
</g>
<g>
<title>do_futex (260 samples, 4.56%)</title><rect x="992.0" y="531.0" width="53.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="995.0" y="542.0">do_fu..</text>
</g>
<g>
<title>_raw_qspin_lock (12 samples, 0.21%)</title><rect x="992.4" y="515.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="995.4" y="526.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.13 (2 samples, 0.04%)</title><rect x="994.9" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="997.9" y="526.0"></text>
</g>
<g>
<title>futex_wake_op (241 samples, 4.23%)</title><rect x="995.3" y="515.0" width="49.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="998.3" y="526.0">futex..</text>
</g>
<g>
<title>mark_wake_futex (10 samples, 0.18%)</title><rect x="998.6" y="499.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1001.6" y="510.0"></text>
</g>
<g>
<title>__unqueue_futex (4 samples, 0.07%)</title><rect x="999.9" y="483.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1002.9" y="494.0"></text>
</g>
<g>
<title>wake_up_q (215 samples, 3.77%)</title><rect x="1000.7" y="499.0" width="44.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1003.7" y="510.0">wake..</text>
</g>
<g>
<title>try_to_wake_up (212 samples, 3.72%)</title><rect x="1001.3" y="483.0" width="43.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1004.3" y="494.0">try_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (210 samples, 3.69%)</title><rect x="1001.3" y="467.0" width="43.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1004.3" y="478.0">_raw..</text>
</g>
<g>
<title>hash_futex (2 samples, 0.04%)</title><rect x="1045.5" y="515.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1048.5" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.12%)</title><rect x="1046.1" y="579.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1049.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (4 samples, 0.07%)</title><rect x="1047.5" y="627.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.07%)</title><rect x="1047.5" y="611.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1050.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.07%)</title><rect x="1047.5" y="595.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1050.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (15 samples, 0.26%)</title><rect x="1048.4" y="627.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1051.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/utils/RF.of (5 samples, 0.09%)</title><rect x="1051.7" y="739.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1054.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (4 samples, 0.07%)</title><rect x="1051.9" y="723.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1054.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (38 samples, 0.67%)</title><rect x="1052.7" y="771.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1055.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (38 samples, 0.67%)</title><rect x="1052.7" y="755.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1055.7" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (23 samples, 0.40%)</title><rect x="1052.7" y="739.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.7" y="750.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (8 samples, 0.14%)</title><rect x="1052.9" y="723.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1055.9" y="734.0"></text>
</g>
<g>
<title>itable stub (14 samples, 0.25%)</title><rect x="1054.6" y="723.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1057.6" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (15 samples, 0.26%)</title><rect x="1057.5" y="739.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1060.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (15 samples, 0.26%)</title><rect x="1057.5" y="723.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1060.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (15 samples, 0.26%)</title><rect x="1057.5" y="707.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1060.5" y="718.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.11%)</title><rect x="1059.3" y="691.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1062.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.12%)</title><rect x="1060.6" y="787.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (38 samples, 0.67%)</title><rect x="1062.0" y="803.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1065.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.11%)</title><rect x="1064.3" y="787.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1067.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.09%)</title><rect x="1064.5" y="771.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1067.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.09%)</title><rect x="1064.5" y="755.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1067.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.09%)</title><rect x="1064.5" y="739.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1067.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.26%)</title><rect x="1065.5" y="787.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1068.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.23%)</title><rect x="1066.0" y="771.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (6 samples, 0.11%)</title><rect x="1068.6" y="787.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1071.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.18%)</title><rect x="1069.9" y="803.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1072.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.09%)</title><rect x="1070.9" y="787.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1073.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.09%)</title><rect x="1070.9" y="771.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1073.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.37%)</title><rect x="1072.0" y="803.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1075.0" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 0.09%)</title><rect x="1073.2" y="787.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1076.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.18%)</title><rect x="1074.2" y="787.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1077.2" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (304 samples, 5.34%)</title><rect x="1076.5" y="819.0" width="63.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1079.5" y="830.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (259 samples, 4.55%)</title><rect x="1080.7" y="803.0" width="53.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1083.7" y="814.0">one/n..</text>
</g>
<g>
<title>[unknown] (69 samples, 1.21%)</title><rect x="1085.2" y="787.0" width="14.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1088.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 1.21%)</title><rect x="1085.2" y="771.0" width="14.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1088.2" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (58 samples, 1.02%)</title><rect x="1085.2" y="755.0" width="12.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1088.2" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.05%)</title><rect x="1086.5" y="739.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1089.5" y="750.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (10 samples, 0.18%)</title><rect x="1087.3" y="739.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1090.3" y="750.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="1089.4" y="739.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1092.4" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (34 samples, 0.60%)</title><rect x="1090.0" y="739.0" width="7.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1093.0" y="750.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="1091.4" y="723.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1094.4" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="1092.0" y="723.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1095.0" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (7 samples, 0.12%)</title><rect x="1092.7" y="723.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1095.7" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (14 samples, 0.25%)</title><rect x="1094.1" y="723.0" width="2.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1097.1" y="734.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (9 samples, 0.16%)</title><rect x="1095.2" y="707.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1098.2" y="718.0"></text>
</g>
<g>
<title>__libc_recv (6 samples, 0.11%)</title><rect x="1097.2" y="755.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1100.2" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.07%)</title><rect x="1098.7" y="755.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1101.7" y="766.0"></text>
</g>
<g>
<title>__GI_epoll_wait (30 samples, 0.53%)</title><rect x="1099.5" y="787.0" width="6.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1102.5" y="798.0"></text>
</g>
<g>
<title>system_call_after_swapgs (30 samples, 0.53%)</title><rect x="1099.5" y="771.0" width="6.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1102.5" y="782.0"></text>
</g>
<g>
<title>__libc_recv (134 samples, 2.35%)</title><rect x="1105.7" y="787.0" width="27.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1108.7" y="798.0">_..</text>
</g>
<g>
<title>__audit_syscall_entry (4 samples, 0.07%)</title><rect x="1108.4" y="771.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1111.4" y="782.0"></text>
</g>
<g>
<title>auditsys (4 samples, 0.07%)</title><rect x="1109.2" y="771.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1112.2" y="782.0"></text>
</g>
<g>
<title>__audit_syscall_entry (4 samples, 0.07%)</title><rect x="1109.2" y="755.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1112.2" y="766.0"></text>
</g>
<g>
<title>sys_recvfrom (11 samples, 0.19%)</title><rect x="1110.1" y="771.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1113.1" y="782.0"></text>
</g>
<g>
<title>system_call_fastpath (99 samples, 1.74%)</title><rect x="1112.5" y="771.0" width="20.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1115.5" y="782.0"></text>
</g>
<g>
<title>sys_recvfrom (97 samples, 1.70%)</title><rect x="1113.0" y="755.0" width="20.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1116.0" y="766.0"></text>
</g>
<g>
<title>SYSC_recvfrom (95 samples, 1.67%)</title><rect x="1113.0" y="739.0" width="19.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1116.0" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.05%)</title><rect x="1113.4" y="723.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1116.4" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (76 samples, 1.33%)</title><rect x="1114.0" y="723.0" width="15.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1117.0" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (56 samples, 0.98%)</title><rect x="1114.0" y="707.0" width="11.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1117.0" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (53 samples, 0.93%)</title><rect x="1114.6" y="691.0" width="11.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1117.6" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (12 samples, 0.21%)</title><rect x="1116.9" y="675.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1119.9" y="686.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="1116.9" y="659.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1119.9" y="670.0"></text>
</g>
<g>
<title>skb_release_all (8 samples, 0.14%)</title><rect x="1117.5" y="659.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1120.5" y="670.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.04%)</title><rect x="1117.5" y="643.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1120.5" y="654.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.07%)</title><rect x="1117.9" y="643.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1120.9" y="654.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.07%)</title><rect x="1117.9" y="627.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1120.9" y="638.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.04%)</title><rect x="1118.8" y="643.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1121.8" y="654.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="1119.6" y="675.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1122.6" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (19 samples, 0.33%)</title><rect x="1120.2" y="675.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1123.2" y="686.0"></text>
</g>
<g>
<title>memcpy_toiovec (19 samples, 0.33%)</title><rect x="1120.2" y="659.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1123.2" y="670.0"></text>
</g>
<g>
<title>__check_object_size (19 samples, 0.33%)</title><rect x="1120.2" y="643.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1123.2" y="654.0"></text>
</g>
<g>
<title>__check_heap_object (6 samples, 0.11%)</title><rect x="1120.4" y="627.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1123.4" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (12 samples, 0.21%)</title><rect x="1121.7" y="627.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1124.7" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.05%)</title><rect x="1124.1" y="675.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1127.1" y="686.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.07%)</title><rect x="1124.8" y="675.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1127.8" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (18 samples, 0.32%)</title><rect x="1125.6" y="707.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1128.6" y="718.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (17 samples, 0.30%)</title><rect x="1125.8" y="691.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1128.8" y="702.0"></text>
</g>
<g>
<title>sock_has_perm (17 samples, 0.30%)</title><rect x="1125.8" y="675.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1128.8" y="686.0"></text>
</g>
<g>
<title>avc_has_perm_flags (2 samples, 0.04%)</title><rect x="1128.9" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1131.9" y="670.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (2 samples, 0.04%)</title><rect x="1129.3" y="707.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1132.3" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (14 samples, 0.25%)</title><rect x="1129.7" y="723.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1132.7" y="734.0"></text>
</g>
<g>
<title>fget_light (14 samples, 0.25%)</title><rect x="1129.7" y="707.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1132.7" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="1132.6" y="739.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1135.6" y="750.0"></text>
</g>
<g>
<title>tracesys (2 samples, 0.04%)</title><rect x="1133.1" y="771.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1136.1" y="782.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.05%)</title><rect x="1133.7" y="787.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1136.7" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (25 samples, 0.44%)</title><rect x="1134.3" y="803.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1137.3" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.11%)</title><rect x="1139.5" y="851.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1142.5" y="862.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.07%)</title><rect x="1139.9" y="835.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1142.9" y="846.0"></text>
</g>
<g>
<title>start_thread (236 samples, 4.14%)</title><rect x="1140.9" y="867.0" width="48.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1143.9" y="878.0">star..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (236 samples, 4.14%)</title><rect x="1140.9" y="851.0" width="48.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1143.9" y="862.0">thre..</text>
</g>
<g>
<title>Thread::call_run() (236 samples, 4.14%)</title><rect x="1140.9" y="835.0" width="48.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1143.9" y="846.0">Thre..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (3 samples, 0.05%)</title><rect x="1140.9" y="819.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1143.9" y="830.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (3 samples, 0.05%)</title><rect x="1140.9" y="803.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1143.9" y="814.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.04%)</title><rect x="1140.9" y="787.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1143.9" y="798.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (2 samples, 0.04%)</title><rect x="1140.9" y="771.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1143.9" y="782.0"></text>
</g>
<g>
<title>GangWorker::loop() (39 samples, 0.68%)</title><rect x="1141.5" y="819.0" width="8.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.5" y="830.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (33 samples, 0.58%)</title><rect x="1141.5" y="803.0" width="6.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1144.5" y="814.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (8 samples, 0.14%)</title><rect x="1141.5" y="787.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.5" y="798.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (2 samples, 0.04%)</title><rect x="1141.5" y="771.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.5" y="782.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.11%)</title><rect x="1142.0" y="771.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1145.0" y="782.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (19 samples, 0.33%)</title><rect x="1143.4" y="787.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1146.4" y="798.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (19 samples, 0.33%)</title><rect x="1143.4" y="771.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1146.4" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (19 samples, 0.33%)</title><rect x="1143.4" y="755.0" width="3.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1146.4" y="766.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (19 samples, 0.33%)</title><rect x="1143.4" y="739.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1146.4" y="750.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (19 samples, 0.33%)</title><rect x="1143.4" y="723.0" width="3.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1146.4" y="734.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (9 samples, 0.16%)</title><rect x="1143.6" y="707.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1146.6" y="718.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.09%)</title><rect x="1144.2" y="691.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1147.2" y="702.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (4 samples, 0.07%)</title><rect x="1144.4" y="675.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1147.4" y="686.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (9 samples, 0.16%)</title><rect x="1145.5" y="707.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.5" y="718.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (7 samples, 0.12%)</title><rect x="1145.5" y="691.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1148.5" y="702.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (3 samples, 0.05%)</title><rect x="1145.7" y="675.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1148.7" y="686.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (2 samples, 0.04%)</title><rect x="1146.3" y="675.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1149.3" y="686.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.04%)</title><rect x="1146.9" y="691.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.9" y="702.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.05%)</title><rect x="1147.5" y="787.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1150.5" y="798.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.04%)</title><rect x="1147.8" y="771.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1150.8" y="782.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.04%)</title><rect x="1147.8" y="755.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1150.8" y="766.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.04%)</title><rect x="1147.8" y="739.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.8" y="750.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (3 samples, 0.05%)</title><rect x="1148.4" y="803.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1151.4" y="814.0"></text>
</g>
<g>
<title>RefProcPhase1Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (3 samples, 0.05%)</title><rect x="1148.4" y="787.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1151.4" y="798.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_soft_ref_reconsider_work(DiscoveredList&amp;, ReferencePolicy*, BoolObjectClosure*, OopClosure*, VoidClosure*) (3 samples, 0.05%)</title><rect x="1148.4" y="771.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1151.4" y="782.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.05%)</title><rect x="1148.4" y="755.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.4" y="766.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.05%)</title><rect x="1148.4" y="739.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1151.4" y="750.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.04%)</title><rect x="1149.0" y="803.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.0" y="814.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.04%)</title><rect x="1149.0" y="787.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.0" y="798.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.64] (2 samples, 0.04%)</title><rect x="1149.0" y="771.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.0" y="782.0"></text>
</g>
<g>
<title>JavaThread::run() (186 samples, 3.26%)</title><rect x="1149.6" y="819.0" width="38.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.6" y="830.0">Jav..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (186 samples, 3.26%)</title><rect x="1149.6" y="803.0" width="38.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.6" y="814.0">Jav..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (182 samples, 3.19%)</title><rect x="1149.6" y="787.0" width="37.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.6" y="798.0">Com..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (180 samples, 3.16%)</title><rect x="1149.6" y="771.0" width="37.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.6" y="782.0">Com..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (176 samples, 3.09%)</title><rect x="1149.6" y="755.0" width="36.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1152.6" y="766.0">C2C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (176 samples, 3.09%)</title><rect x="1149.6" y="739.0" width="36.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1152.6" y="750.0">Com..</text>
</g>
<g>
<title>Compile::Code_Gen() (87 samples, 1.53%)</title><rect x="1149.6" y="723.0" width="18.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.6" y="734.0"></text>
</g>
<g>
<title>Compile::Output() (3 samples, 0.05%)</title><rect x="1149.6" y="707.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1152.6" y="718.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (2 samples, 0.04%)</title><rect x="1149.8" y="691.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.8" y="702.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (2 samples, 0.04%)</title><rect x="1149.8" y="675.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.8" y="686.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (3 samples, 0.05%)</title><rect x="1150.2" y="707.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1153.2" y="718.0"></text>
</g>
<g>
<title>Matcher::match() (9 samples, 0.16%)</title><rect x="1150.9" y="707.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1153.9" y="718.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (8 samples, 0.14%)</title><rect x="1151.1" y="691.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.1" y="702.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (5 samples, 0.09%)</title><rect x="1151.1" y="675.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.1" y="686.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (3 samples, 0.05%)</title><rect x="1152.1" y="675.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1155.1" y="686.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (8 samples, 0.14%)</title><rect x="1152.9" y="707.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1155.9" y="718.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (8 samples, 0.14%)</title><rect x="1152.9" y="691.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.9" y="702.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.04%)</title><rect x="1152.9" y="675.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1155.9" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.04%)</title><rect x="1153.6" y="675.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.6" y="686.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.04%)</title><rect x="1154.0" y="675.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.0" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (63 samples, 1.11%)</title><rect x="1154.6" y="707.0" width="13.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.6" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (4 samples, 0.07%)</title><rect x="1155.0" y="691.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.0" y="702.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (2 samples, 0.04%)</title><rect x="1155.4" y="675.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.4" y="686.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.04%)</title><rect x="1155.4" y="659.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1158.4" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.05%)</title><rect x="1155.8" y="691.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1158.8" y="702.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (2 samples, 0.04%)</title><rect x="1156.0" y="675.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.0" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (7 samples, 0.12%)</title><rect x="1156.5" y="691.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.5" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (12 samples, 0.21%)</title><rect x="1157.9" y="691.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1160.9" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (2 samples, 0.04%)</title><rect x="1158.3" y="675.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.3" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (5 samples, 0.09%)</title><rect x="1158.9" y="675.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.9" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.04%)</title><rect x="1160.0" y="675.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.0" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (5 samples, 0.09%)</title><rect x="1160.6" y="691.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.6" y="702.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.05%)</title><rect x="1161.0" y="675.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1164.0" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (2 samples, 0.04%)</title><rect x="1161.6" y="691.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.6" y="702.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.04%)</title><rect x="1161.6" y="675.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1164.6" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (8 samples, 0.14%)</title><rect x="1162.0" y="691.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.0" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (5 samples, 0.09%)</title><rect x="1162.7" y="675.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.7" y="686.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (4 samples, 0.07%)</title><rect x="1163.9" y="691.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.9" y="702.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (3 samples, 0.05%)</title><rect x="1164.1" y="675.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1167.1" y="686.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (11 samples, 0.19%)</title><rect x="1164.9" y="691.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1167.9" y="702.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 0.05%)</title><rect x="1166.4" y="675.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1169.4" y="686.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.04%)</title><rect x="1166.4" y="659.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.4" y="670.0"></text>
</g>
<g>
<title>Compile::Optimize() (71 samples, 1.25%)</title><rect x="1167.6" y="723.0" width="14.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1170.6" y="734.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (2 samples, 0.04%)</title><rect x="1167.8" y="707.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1170.8" y="718.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (3 samples, 0.05%)</title><rect x="1168.5" y="707.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1171.5" y="718.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (3 samples, 0.05%)</title><rect x="1168.5" y="691.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.5" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (50 samples, 0.88%)</title><rect x="1169.3" y="707.0" width="10.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.3" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (3 samples, 0.05%)</title><rect x="1169.5" y="691.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.5" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (6 samples, 0.11%)</title><rect x="1170.1" y="691.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.1" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (33 samples, 0.58%)</title><rect x="1171.4" y="691.0" width="6.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.4" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (30 samples, 0.53%)</title><rect x="1172.0" y="675.0" width="6.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.0" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (30 samples, 0.53%)</title><rect x="1172.0" y="659.0" width="6.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.0" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (24 samples, 0.42%)</title><rect x="1173.2" y="643.0" width="5.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1176.2" y="654.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (3 samples, 0.05%)</title><rect x="1178.2" y="691.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.2" y="702.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.05%)</title><rect x="1179.0" y="691.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.0" y="702.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.05%)</title><rect x="1179.0" y="675.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.0" y="686.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (10 samples, 0.18%)</title><rect x="1179.6" y="707.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.6" y="718.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (10 samples, 0.18%)</title><rect x="1179.6" y="691.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.6" y="702.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (3 samples, 0.05%)</title><rect x="1179.9" y="675.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.9" y="686.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (2 samples, 0.04%)</title><rect x="1180.1" y="659.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.1" y="670.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (2 samples, 0.04%)</title><rect x="1180.7" y="675.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.7" y="686.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.04%)</title><rect x="1181.1" y="675.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.1" y="686.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.138] (2 samples, 0.04%)</title><rect x="1181.1" y="659.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.1" y="670.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="643.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.1" y="654.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="627.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.1" y="638.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="611.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.1" y="622.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="595.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.1" y="606.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="579.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.1" y="590.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="563.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.1" y="574.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="547.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.1" y="558.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="531.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.1" y="542.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="515.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.1" y="526.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="499.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.1" y="510.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="483.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.1" y="494.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="467.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.1" y="478.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="451.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.1" y="462.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="435.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.1" y="446.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="419.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.1" y="430.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1181.1" y="403.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.1" y="414.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.04%)</title><rect x="1181.7" y="707.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.7" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (14 samples, 0.25%)</title><rect x="1182.3" y="723.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.3" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (14 samples, 0.25%)</title><rect x="1182.3" y="707.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (14 samples, 0.25%)</title><rect x="1182.3" y="691.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (14 samples, 0.25%)</title><rect x="1182.3" y="675.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (14 samples, 0.25%)</title><rect x="1182.3" y="659.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (14 samples, 0.25%)</title><rect x="1182.3" y="643.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.3" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.11%)</title><rect x="1182.3" y="627.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.3" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.11%)</title><rect x="1182.3" y="611.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.3" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.11%)</title><rect x="1182.3" y="595.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.3" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.11%)</title><rect x="1182.3" y="579.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.3" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.11%)</title><rect x="1182.3" y="563.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.11%)</title><rect x="1182.3" y="547.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.3" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.09%)</title><rect x="1182.3" y="531.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.3" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.09%)</title><rect x="1182.3" y="515.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.3" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.09%)</title><rect x="1182.3" y="499.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.09%)</title><rect x="1182.3" y="483.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.09%)</title><rect x="1182.3" y="467.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.3" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1182.3" y="451.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.3" y="462.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1182.5" y="435.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.5" y="446.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.04%)</title><rect x="1183.0" y="451.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.0" y="462.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (8 samples, 0.14%)</title><rect x="1183.6" y="627.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.6" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.09%)</title><rect x="1183.6" y="611.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.6" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.09%)</title><rect x="1183.6" y="595.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.6" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.09%)</title><rect x="1183.6" y="579.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.6" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.09%)</title><rect x="1183.6" y="563.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.6" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.09%)</title><rect x="1183.6" y="547.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.6" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.09%)</title><rect x="1183.6" y="531.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.6" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.09%)</title><rect x="1183.6" y="515.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.6" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.09%)</title><rect x="1183.6" y="499.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.6" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.09%)</title><rect x="1183.6" y="483.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.6" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.09%)</title><rect x="1183.6" y="467.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.6" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.09%)</title><rect x="1183.6" y="451.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.6" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.09%)</title><rect x="1183.6" y="435.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.6" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1183.6" y="419.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.6" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.07%)</title><rect x="1183.6" y="403.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.6" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1183.6" y="387.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.6" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1183.6" y="371.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.6" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1183.6" y="355.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.6" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1183.6" y="339.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.6" y="350.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1183.8" y="323.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.8" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1183.8" y="307.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.8" y="318.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1183.8" y="291.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.8" y="302.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1183.8" y="275.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.8" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1183.8" y="259.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.8" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1183.8" y="243.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.8" y="254.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1183.8" y="227.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.8" y="238.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1183.8" y="211.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.8" y="222.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1183.8" y="195.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.8" y="206.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1183.8" y="179.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.8" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1183.8" y="163.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.8" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1183.8" y="147.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.8" y="158.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1183.8" y="131.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.8" y="142.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1183.8" y="115.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.8" y="126.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1183.8" y="99.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.8" y="110.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1183.8" y="83.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.8" y="94.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1183.8" y="67.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.8" y="78.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1183.8" y="51.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.8" y="62.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1183.8" y="35.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.8" y="46.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1184.6" y="611.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.6" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1184.6" y="595.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.6" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1184.6" y="579.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.6" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1184.6" y="563.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.6" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1184.6" y="547.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.6" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1184.6" y="531.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.6" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1184.6" y="515.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.6" y="526.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1184.6" y="499.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.6" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1184.6" y="483.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.6" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1184.6" y="467.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.6" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1184.6" y="451.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.6" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1184.6" y="435.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.6" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1184.6" y="419.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.6" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1184.6" y="403.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.6" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1184.6" y="387.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.6" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1184.6" y="371.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.6" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1184.6" y="355.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.6" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1184.6" y="339.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.6" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1184.6" y="323.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.6" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1184.6" y="307.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.6" y="318.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1184.6" y="291.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.6" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1184.6" y="275.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.6" y="286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1184.6" y="259.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.6" y="270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1184.6" y="243.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.6" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1184.6" y="227.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.6" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1184.6" y="211.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.6" y="222.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1184.6" y="195.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.6" y="206.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.04%)</title><rect x="1185.2" y="723.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.2" y="734.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (2 samples, 0.04%)</title><rect x="1185.2" y="707.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.2" y="718.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (2 samples, 0.04%)</title><rect x="1185.7" y="723.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.7" y="734.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.04%)</title><rect x="1185.7" y="707.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.7" y="718.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 0.05%)</title><rect x="1186.3" y="755.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.3" y="766.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (3 samples, 0.05%)</title><rect x="1186.3" y="739.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.3" y="750.0"></text>
</g>
<g>
<title>Compilation::compile_method() (3 samples, 0.05%)</title><rect x="1186.3" y="723.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.3" y="734.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (3 samples, 0.05%)</title><rect x="1186.3" y="707.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.3" y="718.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (2 samples, 0.04%)</title><rect x="1186.3" y="691.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.3" y="702.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 0.04%)</title><rect x="1186.3" y="675.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.3" y="686.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 0.04%)</title><rect x="1186.3" y="659.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.3" y="670.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2 samples, 0.04%)</title><rect x="1186.3" y="643.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.3" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.04%)</title><rect x="1186.3" y="627.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.3" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.04%)</title><rect x="1186.3" y="611.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.3" y="622.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.04%)</title><rect x="1186.3" y="595.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.3" y="606.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1186.3" y="579.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.3" y="590.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1186.3" y="563.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.3" y="574.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.04%)</title><rect x="1186.3" y="547.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.3" y="558.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.04%)</title><rect x="1186.3" y="531.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.3" y="542.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.04%)</title><rect x="1186.3" y="515.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.3" y="526.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1186.3" y="499.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.3" y="510.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1186.3" y="483.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.3" y="494.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.04%)</title><rect x="1186.3" y="467.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.3" y="478.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.04%)</title><rect x="1186.3" y="451.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.3" y="462.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.04%)</title><rect x="1186.3" y="435.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.3" y="446.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1186.3" y="419.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.3" y="430.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1186.3" y="403.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.3" y="414.0"></text>
</g>
<g>
<title>CompileQueue::get() (2 samples, 0.04%)</title><rect x="1186.9" y="771.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.9" y="782.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.04%)</title><rect x="1186.9" y="755.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.9" y="766.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.04%)</title><rect x="1186.9" y="739.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.9" y="750.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (3 samples, 0.05%)</title><rect x="1187.5" y="787.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.5" y="798.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (3 samples, 0.05%)</title><rect x="1187.5" y="771.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.5" y="782.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (2 samples, 0.04%)</title><rect x="1187.7" y="755.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.7" y="766.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (2 samples, 0.04%)</title><rect x="1187.7" y="739.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.7" y="750.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.04%)</title><rect x="1187.7" y="723.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.7" y="734.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.04%)</title><rect x="1187.7" y="707.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.7" y="718.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.07%)</title><rect x="1188.1" y="819.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.1" y="830.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.07%)</title><rect x="1188.1" y="803.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.1" y="814.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.04%)</title><rect x="1188.1" y="787.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.1" y="798.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.04%)</title><rect x="1188.6" y="787.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.6" y="798.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.04%)</title><rect x="1188.6" y="771.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.6" y="782.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.04%)</title><rect x="1188.6" y="755.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.6" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.04%)</title><rect x="1188.6" y="739.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.6" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::pre_evacuate_collection_set() (2 samples, 0.04%)</title><rect x="1188.6" y="723.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.6" y="734.0"></text>
</g>
<g>
<title>G1RemSet::prepare_for_oops_into_collection_set_do() (2 samples, 0.04%)</title><rect x="1188.6" y="707.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.6" y="718.0"></text>
</g>
<g>
<title>WatcherThread::run() (4 samples, 0.07%)</title><rect x="1189.0" y="819.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.0" y="830.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (4 samples, 0.07%)</title><rect x="1189.0" y="803.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.0" y="814.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (4 samples, 0.07%)</title><rect x="1189.0" y="787.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.0" y="798.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.04%)</title><rect x="1189.2" y="771.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.2" y="782.0"></text>
</g>
</g>
</svg>
