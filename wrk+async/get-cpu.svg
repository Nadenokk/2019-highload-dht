<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="885"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="885"> </text>
<g id="frames">
<g>
<title>all (7,007 samples, 100.00%)</title><rect x="10.0" y="851.0" width="1180.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="13.0" y="862.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="10.0" y="835.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.03%)</title><rect x="10.0" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="10.0" y="803.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="10.0" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.06%)</title><rect x="10.3" y="835.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="13.3" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.06%)</title><rect x="10.3" y="819.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="13.3" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.06%)</title><rect x="10.3" y="803.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.3" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.06%)</title><rect x="10.3" y="787.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.3" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="10.5" y="771.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.5" y="782.0"></text>
</g>
<g>
<title>[unknown_Java] (68 samples, 0.97%)</title><rect x="11.2" y="835.0" width="11.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="14.2" y="846.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (6,791 samples, 96.92%)</title><rect x="23.0" y="835.0" width="1143.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.0" y="846.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (14 samples, 0.20%)</title><rect x="26.5" y="819.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.5" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (14 samples, 0.20%)</title><rect x="26.5" y="803.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.5" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (452 samples, 6.45%)</title><rect x="28.9" y="819.0" width="76.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.9" y="830.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (9 samples, 0.13%)</title><rect x="31.2" y="803.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="34.2" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (8 samples, 0.11%)</title><rect x="31.4" y="787.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="34.4" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (429 samples, 6.12%)</title><rect x="32.7" y="803.0" width="72.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.7" y="814.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (12 samples, 0.17%)</title><rect x="37.3" y="787.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="40.3" y="798.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.06%)</title><rect x="39.3" y="787.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="42.3" y="798.0"></text>
</g>
<g>
<title>__GI_epoll_wait (271 samples, 3.87%)</title><rect x="40.0" y="787.0" width="45.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="43.0" y="798.0">__GI..</text>
</g>
<g>
<title>auditsys (22 samples, 0.31%)</title><rect x="48.1" y="771.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="51.1" y="782.0"></text>
</g>
<g>
<title>__audit_syscall_entry (21 samples, 0.30%)</title><rect x="48.1" y="755.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="51.1" y="766.0"></text>
</g>
<g>
<title>current_kernel_time (8 samples, 0.11%)</title><rect x="50.2" y="739.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="53.2" y="750.0"></text>
</g>
<g>
<title>sys_epoll_wait (7 samples, 0.10%)</title><rect x="51.8" y="771.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="54.8" y="782.0"></text>
</g>
<g>
<title>sysret_audit (4 samples, 0.06%)</title><rect x="52.9" y="771.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="55.9" y="782.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="53.1" y="755.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="56.1" y="766.0"></text>
</g>
<g>
<title>system_call_after_swapgs (7 samples, 0.10%)</title><rect x="53.6" y="771.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="56.6" y="782.0"></text>
</g>
<g>
<title>system_call_fastpath (183 samples, 2.61%)</title><rect x="54.8" y="771.0" width="30.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="57.8" y="782.0">sy..</text>
</g>
<g>
<title>fget_light (7 samples, 0.10%)</title><rect x="55.3" y="755.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="58.3" y="766.0"></text>
</g>
<g>
<title>sys_epoll_wait (173 samples, 2.47%)</title><rect x="56.5" y="755.0" width="29.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="59.5" y="766.0">sy..</text>
</g>
<g>
<title>ep_poll (139 samples, 1.98%)</title><rect x="56.8" y="739.0" width="23.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="59.8" y="750.0">e..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="57.2" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="60.2" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 0.27%)</title><rect x="57.5" y="723.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="60.5" y="734.0"></text>
</g>
<g>
<title>ep_scan_ready_list.isra.7 (86 samples, 1.23%)</title><rect x="60.7" y="723.0" width="14.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="63.7" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.20%)</title><rect x="61.9" y="707.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="64.9" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (52 samples, 0.74%)</title><rect x="64.2" y="707.0" width="8.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="67.2" y="718.0"></text>
</g>
<g>
<title>sock_poll (28 samples, 0.40%)</title><rect x="67.4" y="691.0" width="4.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="70.4" y="702.0"></text>
</g>
<g>
<title>tcp_poll (10 samples, 0.14%)</title><rect x="69.8" y="675.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="72.8" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.06%)</title><rect x="71.5" y="675.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="74.5" y="686.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.07%)</title><rect x="72.1" y="691.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="75.1" y="702.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="73.0" y="707.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="76.0" y="718.0"></text>
</g>
<g>
<title>sock_poll (11 samples, 0.16%)</title><rect x="73.3" y="707.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="76.3" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (27 samples, 0.39%)</title><rect x="75.2" y="723.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="78.2" y="734.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="75.2" y="707.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="78.2" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (24 samples, 0.34%)</title><rect x="75.7" y="707.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="78.7" y="718.0"></text>
</g>
<g>
<title>schedule (22 samples, 0.31%)</title><rect x="76.0" y="691.0" width="3.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="79.0" y="702.0"></text>
</g>
<g>
<title>__schedule (19 samples, 0.27%)</title><rect x="76.5" y="675.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="79.5" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="78.9" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="81.9" y="670.0"></text>
</g>
<g>
<title>rcu_note_context_switch (3 samples, 0.04%)</title><rect x="79.2" y="659.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="82.2" y="670.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.04%)</title><rect x="79.7" y="723.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="82.7" y="734.0"></text>
</g>
<g>
<title>fget_light (27 samples, 0.39%)</title><rect x="80.2" y="739.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="83.2" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.07%)</title><rect x="84.8" y="739.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="87.8" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (47 samples, 0.67%)</title><rect x="85.6" y="787.0" width="7.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="88.6" y="798.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="93.0" y="771.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="96.0" y="782.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.06%)</title><rect x="93.5" y="787.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="96.5" y="798.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (9 samples, 0.13%)</title><rect x="94.2" y="787.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="97.2" y="798.0"></text>
</g>
<g>
<title>_init (18 samples, 0.26%)</title><rect x="95.7" y="787.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="98.7" y="798.0"></text>
</g>
<g>
<title>send (37 samples, 0.53%)</title><rect x="98.7" y="787.0" width="6.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="101.7" y="798.0"></text>
</g>
<g>
<title>system_call_after_swapgs (37 samples, 0.53%)</title><rect x="98.7" y="771.0" width="6.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="101.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6,304 samples, 89.97%)</title><rect x="105.0" y="819.0" width="1061.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.0" y="830.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6,292 samples, 89.80%)</title><rect x="106.5" y="803.0" width="1059.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.5" y="814.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,212 samples, 74.38%)</title><rect x="109.5" y="787.0" width="877.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="112.5" y="798.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (4,869 samples, 69.49%)</title><rect x="111.4" y="771.0" width="819.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.4" y="782.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4,869 samples, 69.49%)</title><rect x="111.4" y="755.0" width="819.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.4" y="766.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (4,840 samples, 69.07%)</title><rect x="112.2" y="739.0" width="815.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="115.2" y="750.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3,364 samples, 48.01%)</title><rect x="113.1" y="723.0" width="566.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.1" y="734.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3,325 samples, 47.45%)</title><rect x="119.0" y="707.0" width="559.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="122.0" y="718.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (46 samples, 0.66%)</title><rect x="119.0" y="691.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.0" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.10%)</title><rect x="122.7" y="675.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="125.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (17 samples, 0.24%)</title><rect x="123.8" y="675.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.8" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (9 samples, 0.13%)</title><rect x="124.0" y="659.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="125.2" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.2" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.10%)</title><rect x="125.5" y="659.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="128.5" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.10%)</title><rect x="125.5" y="643.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.5" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3,279 samples, 46.80%)</title><rect x="126.7" y="691.0" width="552.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.7" y="702.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (3,276 samples, 46.75%)</title><rect x="127.2" y="675.0" width="551.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.2" y="686.0">one/nio/net/Session.write</text>
</g>
<g>
<title>[unknown] (11 samples, 0.16%)</title><rect x="131.4" y="659.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="134.4" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (11 samples, 0.16%)</title><rect x="131.4" y="643.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="134.4" y="654.0"></text>
</g>
<g>
<title>[vdso] (25 samples, 0.36%)</title><rect x="133.3" y="659.0" width="4.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="136.3" y="670.0"></text>
</g>
<g>
<title>_init (9 samples, 0.13%)</title><rect x="137.5" y="659.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="140.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3,203 samples, 45.71%)</title><rect x="139.0" y="659.0" width="539.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="142.0" y="670.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3,184 samples, 45.44%)</title><rect x="142.2" y="643.0" width="536.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.2" y="654.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.04%)</title><rect x="152.5" y="627.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="155.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.74%)</title><rect x="153.1" y="627.0" width="8.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="156.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.74%)</title><rect x="153.1" y="611.0" width="8.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="156.1" y="622.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (32 samples, 0.46%)</title><rect x="153.1" y="595.0" width="5.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="156.1" y="606.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (3 samples, 0.04%)</title><rect x="156.7" y="579.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="159.7" y="590.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (8 samples, 0.11%)</title><rect x="157.2" y="579.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="160.2" y="590.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="157.2" y="563.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="160.2" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.03%)</title><rect x="157.5" y="563.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="160.5" y="574.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.06%)</title><rect x="157.9" y="563.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="160.9" y="574.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="158.5" y="595.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="161.5" y="606.0"></text>
</g>
<g>
<title>_init (5 samples, 0.07%)</title><rect x="158.9" y="595.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="161.9" y="606.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="159.7" y="595.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="162.7" y="606.0"></text>
</g>
<g>
<title>send (11 samples, 0.16%)</title><rect x="160.0" y="595.0" width="1.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="163.0" y="606.0"></text>
</g>
<g>
<title>__libc_recv (49 samples, 0.70%)</title><rect x="161.9" y="627.0" width="8.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="164.9" y="638.0"></text>
</g>
<g>
<title>system_call_after_swapgs (49 samples, 0.70%)</title><rect x="161.9" y="611.0" width="8.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="164.9" y="622.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (19 samples, 0.27%)</title><rect x="170.3" y="627.0" width="3.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="173.3" y="638.0"></text>
</g>
<g>
<title>send (2,998 samples, 42.79%)</title><rect x="173.5" y="627.0" width="504.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="176.5" y="638.0">send</text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.03%)</title><rect x="181.1" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="184.1" y="622.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="181.4" y="611.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="184.4" y="622.0"></text>
</g>
<g>
<title>auditsys (27 samples, 0.39%)</title><rect x="181.9" y="611.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="184.9" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_entry (27 samples, 0.39%)</title><rect x="181.9" y="595.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="184.9" y="606.0"></text>
</g>
<g>
<title>current_kernel_time (6 samples, 0.09%)</title><rect x="185.5" y="579.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="188.5" y="590.0"></text>
</g>
<g>
<title>sys_sendto (10 samples, 0.14%)</title><rect x="186.7" y="611.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="189.7" y="622.0"></text>
</g>
<g>
<title>sysret_audit (21 samples, 0.30%)</title><rect x="188.3" y="611.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="191.3" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (13 samples, 0.19%)</title><rect x="188.5" y="595.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="191.5" y="606.0"></text>
</g>
<g>
<title>mntput (4 samples, 0.06%)</title><rect x="189.5" y="579.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="192.5" y="590.0"></text>
</g>
<g>
<title>path_put (2 samples, 0.03%)</title><rect x="190.2" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="193.2" y="590.0"></text>
</g>
<g>
<title>dput (2 samples, 0.03%)</title><rect x="190.2" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="193.2" y="574.0"></text>
</g>
<g>
<title>unroll_tree_refs (5 samples, 0.07%)</title><rect x="191.0" y="595.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="194.0" y="606.0"></text>
</g>
<g>
<title>system_call_after_swapgs (6 samples, 0.09%)</title><rect x="192.0" y="611.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="195.0" y="622.0"></text>
</g>
<g>
<title>system_call_fastpath (2,882 samples, 41.13%)</title><rect x="193.1" y="611.0" width="485.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="196.1" y="622.0">system_call_fastpath</text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.03%)</title><rect x="194.1" y="595.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="197.1" y="606.0"></text>
</g>
<g>
<title>sys_sendto (2,874 samples, 41.02%)</title><rect x="194.4" y="595.0" width="484.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="197.4" y="606.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (2,868 samples, 40.93%)</title><rect x="194.7" y="579.0" width="483.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="197.7" y="590.0">SYSC_sendto</text>
</g>
<g>
<title>fput (6 samples, 0.09%)</title><rect x="196.6" y="563.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="199.6" y="574.0"></text>
</g>
<g>
<title>inet_sendmsg (3 samples, 0.04%)</title><rect x="197.6" y="563.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="200.6" y="574.0"></text>
</g>
<g>
<title>sock_sendmsg (2,821 samples, 40.26%)</title><rect x="198.3" y="563.0" width="475.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="201.3" y="574.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (2,748 samples, 39.22%)</title><rect x="199.3" y="547.0" width="462.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="202.3" y="558.0">inet_sendmsg</text>
</g>
<g>
<title>__check_object_size (4 samples, 0.06%)</title><rect x="201.3" y="531.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="204.3" y="542.0"></text>
</g>
<g>
<title>_copy_from_user (5 samples, 0.07%)</title><rect x="202.0" y="531.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="205.0" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (18 samples, 0.26%)</title><rect x="202.8" y="531.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="205.8" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.04%)</title><rect x="205.9" y="531.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="208.9" y="542.0"></text>
</g>
<g>
<title>release_sock (7 samples, 0.10%)</title><rect x="206.4" y="531.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="209.4" y="542.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="207.5" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="210.5" y="542.0"></text>
</g>
<g>
<title>skb_put (6 samples, 0.09%)</title><rect x="207.9" y="531.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="210.9" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (2,684 samples, 38.30%)</title><rect x="209.2" y="531.0" width="452.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="212.2" y="542.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (15 samples, 0.21%)</title><rect x="213.4" y="515.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="216.4" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (11 samples, 0.16%)</title><rect x="214.1" y="499.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="217.1" y="510.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.03%)</title><rect x="216.0" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="219.0" y="526.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="216.5" y="515.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="219.5" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (7 samples, 0.10%)</title><rect x="216.8" y="515.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="219.8" y="526.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.03%)</title><rect x="218.0" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="221.0" y="526.0"></text>
</g>
<g>
<title>local_bh_enable (5 samples, 0.07%)</title><rect x="218.3" y="515.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="221.3" y="526.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.09%)</title><rect x="219.2" y="515.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="222.2" y="526.0"></text>
</g>
<g>
<title>local_bh_enable (6 samples, 0.09%)</title><rect x="219.2" y="499.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="222.2" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 0.09%)</title><rect x="219.2" y="483.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="222.2" y="494.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.06%)</title><rect x="220.2" y="515.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="223.2" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="220.3" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="223.3" y="510.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (91 samples, 1.30%)</title><rect x="221.0" y="515.0" width="15.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="224.0" y="526.0"></text>
</g>
<g>
<title>__alloc_skb (85 samples, 1.21%)</title><rect x="221.5" y="499.0" width="14.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="224.5" y="510.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.32 (28 samples, 0.40%)</title><rect x="222.4" y="483.0" width="4.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="225.4" y="494.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (22 samples, 0.31%)</title><rect x="222.4" y="467.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="225.4" y="478.0"></text>
</g>
<g>
<title>__slab_alloc (5 samples, 0.07%)</title><rect x="225.2" y="451.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="228.2" y="462.0"></text>
</g>
<g>
<title>kmalloc_slab (5 samples, 0.07%)</title><rect x="226.2" y="467.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="229.2" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (34 samples, 0.49%)</title><rect x="227.1" y="483.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="230.1" y="494.0"></text>
</g>
<g>
<title>__slab_alloc (4 samples, 0.06%)</title><rect x="232.1" y="467.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="235.1" y="478.0"></text>
</g>
<g>
<title>ksize (18 samples, 0.26%)</title><rect x="232.8" y="483.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="235.8" y="494.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="235.8" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="238.8" y="510.0"></text>
</g>
<g>
<title>skb_entail (5 samples, 0.07%)</title><rect x="236.3" y="515.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="239.3" y="526.0"></text>
</g>
<g>
<title>static_key_enabled (2 samples, 0.03%)</title><rect x="237.2" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="240.2" y="526.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.03%)</title><rect x="237.5" y="515.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="240.5" y="526.0"></text>
</g>
<g>
<title>tcp_push (2,459 samples, 35.09%)</title><rect x="237.8" y="515.0" width="414.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="240.8" y="526.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (2,456 samples, 35.05%)</title><rect x="238.0" y="499.0" width="413.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="241.0" y="510.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.03%)</title><rect x="238.7" y="483.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="241.7" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.04%)</title><rect x="239.2" y="483.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="242.2" y="494.0"></text>
</g>
<g>
<title>tcp_write_xmit (2,446 samples, 34.91%)</title><rect x="239.7" y="483.0" width="411.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="242.7" y="494.0">tcp_write_xmit</text>
</g>
<g>
<title>bictcp_cwnd_event (6 samples, 0.09%)</title><rect x="243.7" y="467.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="246.7" y="478.0"></text>
</g>
<g>
<title>local_clock (4 samples, 0.06%)</title><rect x="244.9" y="467.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="247.9" y="478.0"></text>
</g>
<g>
<title>skb_push (3 samples, 0.04%)</title><rect x="245.9" y="467.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="248.9" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (17 samples, 0.24%)</title><rect x="246.4" y="467.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="249.4" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (10 samples, 0.14%)</title><rect x="247.6" y="451.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="250.6" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.13%)</title><rect x="247.8" y="435.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="250.8" y="446.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.13%)</title><rect x="247.8" y="419.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="250.8" y="430.0"></text>
</g>
<g>
<title>tcp_init_tso_segs (3 samples, 0.04%)</title><rect x="249.3" y="467.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="252.3" y="478.0"></text>
</g>
<g>
<title>tcp_set_skb_tso_segs (2 samples, 0.03%)</title><rect x="249.5" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="252.5" y="462.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.03%)</title><rect x="249.8" y="467.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="252.8" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="250.1" y="467.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="253.1" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (9 samples, 0.13%)</title><rect x="250.5" y="467.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="253.5" y="478.0"></text>
</g>
<g>
<title>msecs_to_jiffies (2 samples, 0.03%)</title><rect x="251.5" y="451.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="254.5" y="462.0"></text>
</g>
<g>
<title>tcp_transmit_skb (2,366 samples, 33.77%)</title><rect x="252.2" y="467.0" width="398.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="255.2" y="478.0">tcp_transmit_skb</text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.06%)</title><rect x="257.0" y="451.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="260.0" y="462.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.03%)</title><rect x="258.1" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="261.1" y="462.0"></text>
</g>
<g>
<title>ip_queue_xmit (2,285 samples, 32.61%)</title><rect x="258.4" y="451.0" width="384.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="261.4" y="462.0">ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (10 samples, 0.14%)</title><rect x="259.6" y="435.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="262.6" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (7 samples, 0.10%)</title><rect x="260.1" y="419.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="263.1" y="430.0"></text>
</g>
<g>
<title>ip_local_out_sk (2,264 samples, 32.31%)</title><rect x="261.4" y="435.0" width="381.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="264.4" y="446.0">ip_local_out_sk</text>
</g>
<g>
<title>__ip_local_out_sk (602 samples, 8.59%)</title><rect x="261.6" y="419.0" width="101.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="264.6" y="430.0">__ip_local_o..</text>
</g>
<g>
<title>nf_hook_slow (595 samples, 8.49%)</title><rect x="262.6" y="403.0" width="100.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="265.6" y="414.0">nf_hook_slow</text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (6 samples, 0.09%)</title><rect x="263.1" y="387.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="266.1" y="398.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (9 samples, 0.13%)</title><rect x="264.1" y="387.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="267.1" y="398.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (3 samples, 0.04%)</title><rect x="265.6" y="387.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="268.6" y="398.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (21 samples, 0.30%)</title><rect x="266.1" y="387.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="269.1" y="398.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (14 samples, 0.20%)</title><rect x="269.7" y="387.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="272.7" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (11 samples, 0.16%)</title><rect x="272.0" y="387.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="275.0" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (6 samples, 0.09%)</title><rect x="273.9" y="387.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="276.9" y="398.0"></text>
</g>
<g>
<title>nf_iterate (515 samples, 7.35%)</title><rect x="274.9" y="387.0" width="86.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="277.9" y="398.0">nf_iterate</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.09%)</title><rect x="286.7" y="371.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="289.7" y="382.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (43 samples, 0.61%)</title><rect x="287.7" y="371.0" width="7.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="290.7" y="382.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (39 samples, 0.56%)</title><rect x="288.2" y="355.0" width="6.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="291.2" y="366.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (40 samples, 0.57%)</title><rect x="294.9" y="371.0" width="6.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="297.9" y="382.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (35 samples, 0.50%)</title><rect x="295.8" y="355.0" width="5.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="298.8" y="366.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (25 samples, 0.36%)</title><rect x="301.7" y="371.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="304.7" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (25 samples, 0.36%)</title><rect x="301.7" y="355.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="304.7" y="366.0"></text>
</g>
<g>
<title>nf_ct_nat_ext_add	[nf_nat] (11 samples, 0.16%)</title><rect x="301.8" y="339.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="304.8" y="350.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat_ipv4] (8 samples, 0.11%)</title><rect x="303.7" y="339.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="306.7" y="350.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (5 samples, 0.07%)</title><rect x="305.0" y="339.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="308.0" y="350.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (82 samples, 1.17%)</title><rect x="305.9" y="371.0" width="13.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="308.9" y="382.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (70 samples, 1.00%)</title><rect x="307.7" y="355.0" width="11.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="310.7" y="366.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (32 samples, 0.46%)</title><rect x="319.7" y="371.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="322.7" y="382.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (31 samples, 0.44%)</title><rect x="319.7" y="355.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="322.7" y="366.0"></text>
</g>
<g>
<title>local_bh_enable (2 samples, 0.03%)</title><rect x="324.6" y="339.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="327.6" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="324.6" y="323.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="327.6" y="334.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (201 samples, 2.87%)</title><rect x="325.3" y="371.0" width="33.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="328.3" y="382.0">ip..</text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (10 samples, 0.14%)</title><rect x="325.3" y="355.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="328.3" y="366.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find	[nf_conntrack] (24 samples, 0.34%)</title><rect x="326.9" y="355.0" width="4.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="329.9" y="366.0"></text>
</g>
<g>
<title>ipv4_get_l4proto	[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="331.3" y="355.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="334.3" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (150 samples, 2.14%)</title><rect x="331.6" y="355.0" width="25.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="334.6" y="366.0">n..</text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (38 samples, 0.54%)</title><rect x="334.5" y="339.0" width="6.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="337.5" y="350.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find	[nf_conntrack] (2 samples, 0.03%)</title><rect x="340.9" y="339.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="343.9" y="350.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (2 samples, 0.03%)</title><rect x="341.4" y="339.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="344.4" y="350.0"></text>
</g>
<g>
<title>ipv4_get_l4proto	[nf_conntrack_ipv4] (7 samples, 0.10%)</title><rect x="341.8" y="339.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="344.8" y="350.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple	[nf_conntrack_ipv4] (4 samples, 0.06%)</title><rect x="342.9" y="339.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="345.9" y="350.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (8 samples, 0.11%)</title><rect x="343.6" y="339.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="346.6" y="350.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple	[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="344.3" y="323.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="347.3" y="334.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple	[nf_conntrack] (2 samples, 0.03%)</title><rect x="344.6" y="323.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="347.6" y="334.0"></text>
</g>
<g>
<title>tcp_error	[nf_conntrack] (13 samples, 0.19%)</title><rect x="345.0" y="339.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="348.0" y="350.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (55 samples, 0.78%)</title><rect x="347.1" y="339.0" width="9.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="350.1" y="350.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (4 samples, 0.06%)</title><rect x="350.7" y="323.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="353.7" y="334.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (30 samples, 0.43%)</title><rect x="351.4" y="323.0" width="5.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="354.4" y="334.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple	[nf_conntrack] (3 samples, 0.04%)</title><rect x="356.4" y="339.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="359.4" y="350.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (3 samples, 0.04%)</title><rect x="356.9" y="355.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="359.9" y="366.0"></text>
</g>
<g>
<title>tcp_error	[nf_conntrack] (2 samples, 0.03%)</title><rect x="357.4" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="360.4" y="366.0"></text>
</g>
<g>
<title>tcp_get_timeouts	[nf_conntrack] (2 samples, 0.03%)</title><rect x="357.8" y="355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="360.8" y="366.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (6 samples, 0.09%)</title><rect x="358.1" y="355.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="361.1" y="366.0"></text>
</g>
<g>
<title>netlbl_enabled (4 samples, 0.06%)</title><rect x="359.1" y="371.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="362.1" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (6 samples, 0.09%)</title><rect x="359.8" y="371.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="362.8" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (5 samples, 0.07%)</title><rect x="360.8" y="371.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="363.8" y="382.0"></text>
</g>
<g>
<title>selinux_ipv4_output (7 samples, 0.10%)</title><rect x="361.6" y="387.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="364.6" y="398.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.03%)</title><rect x="363.0" y="419.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="366.0" y="430.0"></text>
</g>
<g>
<title>ip_output (1,654 samples, 23.60%)</title><rect x="363.3" y="419.0" width="278.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="366.3" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (1,584 samples, 22.61%)</title><rect x="363.8" y="403.0" width="266.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="366.8" y="414.0">ip_finish_output</text>
</g>
<g>
<title>dev_queue_xmit (114 samples, 1.63%)</title><rect x="371.4" y="387.0" width="19.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="374.4" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (112 samples, 1.60%)</title><rect x="371.4" y="371.0" width="18.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="374.4" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (81 samples, 1.16%)</title><rect x="374.9" y="355.0" width="13.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="377.9" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (7 samples, 0.10%)</title><rect x="376.6" y="339.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="379.6" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (60 samples, 0.86%)</title><rect x="377.8" y="339.0" width="10.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="380.8" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (9 samples, 0.13%)</title><rect x="378.3" y="323.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="381.3" y="334.0"></text>
</g>
<g>
<title>netif_rx (44 samples, 0.63%)</title><rect x="379.8" y="323.0" width="7.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="382.8" y="334.0"></text>
</g>
<g>
<title>ktime_get_real (5 samples, 0.07%)</title><rect x="379.8" y="307.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="382.8" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (39 samples, 0.56%)</title><rect x="380.7" y="307.0" width="6.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="383.7" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (19 samples, 0.27%)</title><rect x="380.8" y="291.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="383.8" y="302.0"></text>
</g>
<g>
<title>getnstimeofday64 (2 samples, 0.03%)</title><rect x="384.0" y="291.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="387.0" y="302.0"></text>
</g>
<g>
<title>ktime_get_real (17 samples, 0.24%)</title><rect x="384.4" y="291.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.4" y="302.0"></text>
</g>
<g>
<title>getnstimeofday64 (15 samples, 0.21%)</title><rect x="384.7" y="275.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="387.7" y="286.0"></text>
</g>
<g>
<title>__getnstimeofday64 (13 samples, 0.19%)</title><rect x="384.7" y="259.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="387.7" y="270.0"></text>
</g>
<g>
<title>read_tsc (4 samples, 0.06%)</title><rect x="386.2" y="243.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="389.2" y="254.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="386.9" y="259.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="389.9" y="270.0"></text>
</g>
<g>
<title>sock_wfree (3 samples, 0.04%)</title><rect x="387.2" y="323.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="390.2" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (4 samples, 0.06%)</title><rect x="387.9" y="339.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="390.9" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (8 samples, 0.11%)</title><rect x="388.7" y="355.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="391.7" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.03%)</title><rect x="390.3" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="393.3" y="382.0"></text>
</g>
<g>
<title>local_bh_enable (1,425 samples, 20.34%)</title><rect x="390.6" y="387.0" width="240.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="393.6" y="398.0">local_bh_enable</text>
</g>
<g>
<title>__local_bh_enable_ip (1,423 samples, 20.31%)</title><rect x="390.6" y="371.0" width="239.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="393.6" y="382.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq (1,419 samples, 20.25%)</title><rect x="391.3" y="355.0" width="238.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="394.3" y="366.0">do_softirq</text>
</g>
<g>
<title>call_softirq (1,411 samples, 20.14%)</title><rect x="392.6" y="339.0" width="237.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="395.6" y="350.0">call_softirq</text>
</g>
<g>
<title>__do_softirq (1,404 samples, 20.04%)</title><rect x="392.6" y="323.0" width="236.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="395.6" y="334.0">__do_softirq</text>
</g>
<g>
<title>__list_del_entry (2 samples, 0.03%)</title><rect x="397.3" y="307.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="400.3" y="318.0"></text>
</g>
<g>
<title>net_rx_action (1,360 samples, 19.41%)</title><rect x="397.8" y="307.0" width="229.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="400.8" y="318.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (1,347 samples, 19.22%)</title><rect x="400.0" y="291.0" width="226.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="403.0" y="302.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (1,337 samples, 19.08%)</title><rect x="401.7" y="275.0" width="225.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="404.7" y="286.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_core (1,331 samples, 19.00%)</title><rect x="401.9" y="259.0" width="224.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="404.9" y="270.0">__netif_receive_skb_core</text>
</g>
<g>
<title>ip_rcv (1,312 samples, 18.72%)</title><rect x="404.6" y="243.0" width="220.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="407.6" y="254.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.06%)</title><rect x="406.1" y="227.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="409.1" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (1,209 samples, 17.25%)</title><rect x="406.8" y="227.0" width="203.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="409.8" y="238.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (1,202 samples, 17.15%)</title><rect x="407.4" y="211.0" width="202.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="410.4" y="222.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (1,075 samples, 15.34%)</title><rect x="407.9" y="195.0" width="181.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="410.9" y="206.0">ip_local_deliver_finish</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.04%)</title><rect x="409.1" y="179.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="412.1" y="190.0"></text>
</g>
<g>
<title>_raw_qspin_lock (3 samples, 0.04%)</title><rect x="409.6" y="179.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="412.6" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (5 samples, 0.07%)</title><rect x="410.1" y="179.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="413.1" y="190.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="411.0" y="179.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="414.0" y="190.0"></text>
</g>
<g>
<title>tcp_prequeue (2 samples, 0.03%)</title><rect x="411.5" y="179.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="414.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1,052 samples, 15.01%)</title><rect x="411.8" y="179.0" width="177.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="414.8" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (57 samples, 0.81%)</title><rect x="414.0" y="163.0" width="9.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="417.0" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.03%)</title><rect x="423.3" y="147.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="426.3" y="158.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.03%)</title><rect x="423.8" y="163.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="426.8" y="174.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="424.1" y="163.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="427.1" y="174.0"></text>
</g>
<g>
<title>tcp_filter (16 samples, 0.23%)</title><rect x="424.4" y="163.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="427.4" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (13 samples, 0.19%)</title><rect x="424.9" y="147.0" width="2.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="427.9" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (10 samples, 0.14%)</title><rect x="425.1" y="131.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="428.1" y="142.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (7 samples, 0.10%)</title><rect x="425.6" y="115.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="428.6" y="126.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.03%)</title><rect x="426.8" y="131.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="429.8" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (6 samples, 0.09%)</title><rect x="427.3" y="163.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="430.3" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (954 samples, 13.61%)</title><rect x="428.3" y="163.0" width="160.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="431.3" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_parse_aligned_timestamp.part.40 (2 samples, 0.03%)</title><rect x="428.8" y="147.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="431.8" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (947 samples, 13.52%)</title><rect x="429.2" y="147.0" width="159.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="432.2" y="158.0">tcp_rcv_established</text>
</g>
<g>
<title>__tcp_ack_snd_check (13 samples, 0.19%)</title><rect x="431.0" y="131.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="434.0" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (12 samples, 0.17%)</title><rect x="431.2" y="115.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="434.2" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (12 samples, 0.17%)</title><rect x="431.2" y="99.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="434.2" y="110.0"></text>
</g>
<g>
<title>mod_timer (12 samples, 0.17%)</title><rect x="431.2" y="83.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="434.2" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.14%)</title><rect x="431.3" y="67.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="434.3" y="78.0"></text>
</g>
<g>
<title>__tcp_fast_path_on (2 samples, 0.03%)</title><rect x="433.2" y="131.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="436.2" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.04%)</title><rect x="433.5" y="131.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="436.5" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (5 samples, 0.07%)</title><rect x="434.0" y="131.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="437.0" y="142.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.06%)</title><rect x="434.9" y="131.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="437.9" y="142.0"></text>
</g>
<g>
<title>get_seconds (2 samples, 0.03%)</title><rect x="435.6" y="131.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="438.6" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="436.1" y="131.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="439.1" y="142.0"></text>
</g>
<g>
<title>tcp_ack (128 samples, 1.83%)</title><rect x="436.4" y="131.0" width="21.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="439.4" y="142.0">t..</text>
</g>
<g>
<title>__kfree_skb (43 samples, 0.61%)</title><rect x="445.0" y="115.0" width="7.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="448.0" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.10%)</title><rect x="445.0" y="99.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="448.0" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 0.07%)</title><rect x="445.3" y="83.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="448.3" y="94.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.06%)</title><rect x="445.5" y="67.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="448.5" y="78.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.52 (3 samples, 0.04%)</title><rect x="445.7" y="51.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="448.7" y="62.0"></text>
</g>
<g>
<title>skb_release_all (36 samples, 0.51%)</title><rect x="446.2" y="99.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="449.2" y="110.0"></text>
</g>
<g>
<title>skb_release_data (36 samples, 0.51%)</title><rect x="446.2" y="83.0" width="6.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="449.2" y="94.0"></text>
</g>
<g>
<title>kfree (24 samples, 0.34%)</title><rect x="448.2" y="67.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="451.2" y="78.0"></text>
</g>
<g>
<title>__slab_free (11 samples, 0.16%)</title><rect x="450.4" y="51.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="453.4" y="62.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.52 (4 samples, 0.06%)</title><rect x="451.6" y="35.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="454.6" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (7 samples, 0.10%)</title><rect x="452.2" y="115.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="455.2" y="126.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.03%)</title><rect x="453.4" y="115.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="456.4" y="126.0"></text>
</g>
<g>
<title>local_clock (2 samples, 0.03%)</title><rect x="453.7" y="115.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="456.7" y="126.0"></text>
</g>
<g>
<title>tcp_rearm_rto (23 samples, 0.33%)</title><rect x="454.1" y="115.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="457.1" y="126.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="456.1" y="99.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="459.1" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (9 samples, 0.13%)</title><rect x="456.4" y="99.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="459.4" y="110.0"></text>
</g>
<g>
<title>mod_timer (9 samples, 0.13%)</title><rect x="456.4" y="83.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="459.4" y="94.0"></text>
</g>
<g>
<title>tcp_check_space (13 samples, 0.19%)</title><rect x="458.0" y="131.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="461.0" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (757 samples, 10.80%)</title><rect x="460.1" y="131.0" width="127.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="463.1" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>sock_def_readable (712 samples, 10.16%)</title><rect x="463.8" y="115.0" width="119.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="466.8" y="126.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_sync_key (702 samples, 10.02%)</title><rect x="465.5" y="99.0" width="118.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="468.5" y="110.0">__wake_up_sync..</text>
</g>
<g>
<title>__wake_up_common_lock (702 samples, 10.02%)</title><rect x="465.5" y="83.0" width="118.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="468.5" y="94.0">__wake_up_comm..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (701 samples, 10.00%)</title><rect x="465.7" y="67.0" width="118.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="468.7" y="78.0">_raw_spin_unlo..</text>
</g>
<g>
<title>tcp_event_data_recv (16 samples, 0.23%)</title><rect x="583.7" y="115.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="586.7" y="126.0"></text>
</g>
<g>
<title>tcp_queue_rcv (7 samples, 0.10%)</title><rect x="586.4" y="115.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="589.4" y="126.0"></text>
</g>
<g>
<title>tcp_parse_aligned_timestamp.part.40 (3 samples, 0.04%)</title><rect x="587.6" y="131.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="590.6" y="142.0"></text>
</g>
<g>
<title>tcp_urg (2 samples, 0.03%)</title><rect x="588.1" y="131.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="591.1" y="142.0"></text>
</g>
<g>
<title>tcp_urg (2 samples, 0.03%)</title><rect x="588.6" y="147.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="591.6" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (110 samples, 1.57%)</title><rect x="589.0" y="195.0" width="18.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="592.0" y="206.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (2 samples, 0.03%)</title><rect x="589.5" y="179.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="592.5" y="190.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn	[iptable_nat] (3 samples, 0.04%)</title><rect x="590.0" y="179.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="593.0" y="190.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (5 samples, 0.07%)</title><rect x="590.5" y="179.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="593.5" y="190.0"></text>
</g>
<g>
<title>nf_iterate (95 samples, 1.36%)</title><rect x="591.5" y="179.0" width="16.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="594.5" y="190.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (51 samples, 0.73%)</title><rect x="594.2" y="163.0" width="8.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="597.2" y="174.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (4 samples, 0.06%)</title><rect x="594.4" y="147.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="597.4" y="158.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (46 samples, 0.66%)</title><rect x="595.0" y="147.0" width="7.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="598.0" y="158.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (2 samples, 0.03%)</title><rect x="600.1" y="131.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="603.1" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (12 samples, 0.17%)</title><rect x="600.4" y="131.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="603.4" y="142.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (12 samples, 0.17%)</title><rect x="600.4" y="115.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="603.4" y="126.0"></text>
</g>
<g>
<title>tcp_mt (2 samples, 0.03%)</title><rect x="602.4" y="131.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="605.4" y="142.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (8 samples, 0.11%)</title><rect x="602.8" y="163.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="605.8" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.10%)</title><rect x="602.9" y="147.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="605.9" y="158.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn	[iptable_nat] (3 samples, 0.04%)</title><rect x="604.1" y="163.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="607.1" y="174.0"></text>
</g>
<g>
<title>nf_ct_nat_ext_add	[nf_nat] (2 samples, 0.03%)</title><rect x="604.1" y="147.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="607.1" y="158.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (13 samples, 0.19%)</title><rect x="604.6" y="163.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="607.6" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.17%)</title><rect x="604.8" y="147.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="607.8" y="158.0"></text>
</g>
<g>
<title>local_bh_enable (2 samples, 0.03%)</title><rect x="606.5" y="131.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="609.5" y="142.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="606.5" y="115.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="609.5" y="126.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="607.2" y="163.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="610.2" y="174.0"></text>
</g>
<g>
<title>raw_local_deliver (8 samples, 0.11%)</title><rect x="607.5" y="195.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="610.5" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (6 samples, 0.09%)</title><rect x="608.8" y="195.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="611.8" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="609.9" y="211.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="612.9" y="222.0"></text>
</g>
<g>
<title>nf_hook_slow (90 samples, 1.28%)</title><rect x="610.4" y="227.0" width="15.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="613.4" y="238.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (3 samples, 0.04%)</title><rect x="610.7" y="211.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="613.7" y="222.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack_ipv4] (5 samples, 0.07%)</title><rect x="611.2" y="211.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="614.2" y="222.0"></text>
</g>
<g>
<title>nf_iterate (80 samples, 1.14%)</title><rect x="612.0" y="211.0" width="13.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="615.0" y="222.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (6 samples, 0.09%)</title><rect x="613.9" y="195.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="616.9" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.06%)</title><rect x="614.2" y="179.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="617.2" y="190.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in	[iptable_nat] (3 samples, 0.04%)</title><rect x="614.9" y="195.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="617.9" y="206.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat_ipv4] (3 samples, 0.04%)</title><rect x="614.9" y="179.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="617.9" y="190.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (53 samples, 0.76%)</title><rect x="615.4" y="195.0" width="8.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="618.4" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (53 samples, 0.76%)</title><rect x="615.4" y="179.0" width="8.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="618.4" y="190.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack_ipv4] (4 samples, 0.06%)</title><rect x="624.5" y="195.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="627.5" y="206.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (4 samples, 0.06%)</title><rect x="624.5" y="179.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="627.5" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.04%)</title><rect x="625.5" y="243.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="628.5" y="254.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.07%)</title><rect x="626.0" y="259.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="629.0" y="270.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="626.9" y="307.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="629.9" y="318.0"></text>
</g>
<g>
<title>rcu_bh_qs (9 samples, 0.13%)</title><rect x="627.2" y="307.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="630.2" y="318.0"></text>
</g>
<g>
<title>run_timer_softirq (2 samples, 0.03%)</title><rect x="628.7" y="307.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="631.7" y="318.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.03%)</title><rect x="629.0" y="323.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="632.0" y="334.0"></text>
</g>
<g>
<title>rcu_bh_qs (5 samples, 0.07%)</title><rect x="629.4" y="323.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="632.4" y="334.0"></text>
</g>
<g>
<title>do_softirq (2 samples, 0.03%)</title><rect x="630.2" y="371.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="633.2" y="382.0"></text>
</g>
<g>
<title>nf_hook_slow (65 samples, 0.93%)</title><rect x="630.9" y="403.0" width="10.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="633.9" y="414.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.03%)</title><rect x="630.9" y="387.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="633.9" y="398.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out	[iptable_nat] (5 samples, 0.07%)</title><rect x="631.2" y="387.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="634.2" y="398.0"></text>
</g>
<g>
<title>ipv4_helper	[nf_conntrack_ipv4] (5 samples, 0.07%)</title><rect x="632.2" y="387.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="635.2" y="398.0"></text>
</g>
<g>
<title>nf_iterate (45 samples, 0.64%)</title><rect x="633.1" y="387.0" width="7.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="636.1" y="398.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (8 samples, 0.11%)</title><rect x="634.6" y="371.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="637.6" y="382.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.10%)</title><rect x="634.8" y="355.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="637.8" y="366.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out	[iptable_nat] (4 samples, 0.06%)</title><rect x="636.0" y="371.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="639.0" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat_ipv4] (3 samples, 0.04%)</title><rect x="636.1" y="355.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="639.1" y="366.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack_ipv4] (3 samples, 0.04%)</title><rect x="636.6" y="371.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="639.6" y="382.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (3 samples, 0.04%)</title><rect x="637.1" y="371.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="640.1" y="382.0"></text>
</g>
<g>
<title>selinux_ip_postroute (7 samples, 0.10%)</title><rect x="637.8" y="371.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="640.8" y="382.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (10 samples, 0.14%)</title><rect x="639.0" y="371.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="642.0" y="382.0"></text>
</g>
<g>
<title>selinux_ip_postroute (10 samples, 0.14%)</title><rect x="639.0" y="355.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="642.0" y="366.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (7 samples, 0.10%)</title><rect x="640.7" y="387.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="643.7" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (5 samples, 0.07%)</title><rect x="641.8" y="419.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="644.8" y="430.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.03%)</title><rect x="642.7" y="435.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="645.7" y="446.0"></text>
</g>
<g>
<title>local_clock (19 samples, 0.27%)</title><rect x="643.2" y="451.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="646.2" y="462.0"></text>
</g>
<g>
<title>sched_clock (7 samples, 0.10%)</title><rect x="643.2" y="435.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="646.2" y="446.0"></text>
</g>
<g>
<title>vmware_sched_clock (7 samples, 0.10%)</title><rect x="643.2" y="419.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="646.2" y="430.0"></text>
</g>
<g>
<title>vmware_sched_clock (12 samples, 0.17%)</title><rect x="644.4" y="435.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="647.4" y="446.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.03%)</title><rect x="646.4" y="451.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="649.4" y="462.0"></text>
</g>
<g>
<title>skb_clone (18 samples, 0.26%)</title><rect x="646.7" y="451.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="649.7" y="462.0"></text>
</g>
<g>
<title>__skb_clone (14 samples, 0.20%)</title><rect x="647.4" y="435.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="650.4" y="446.0"></text>
</g>
<g>
<title>__copy_skb_header (7 samples, 0.10%)</title><rect x="648.6" y="419.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="651.6" y="430.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="649.8" y="451.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="652.8" y="462.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (2 samples, 0.03%)</title><rect x="650.1" y="451.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="653.1" y="462.0"></text>
</g>
<g>
<title>tcp_v4_send_check (6 samples, 0.09%)</title><rect x="650.6" y="467.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="653.6" y="478.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.03%)</title><rect x="651.6" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="654.6" y="510.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="652.0" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="655.0" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (51 samples, 0.73%)</title><rect x="652.3" y="515.0" width="8.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="655.3" y="526.0"></text>
</g>
<g>
<title>ipv4_mtu (15 samples, 0.21%)</title><rect x="652.8" y="499.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="655.8" y="510.0"></text>
</g>
<g>
<title>tcp_current_mss (31 samples, 0.44%)</title><rect x="655.3" y="499.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="658.3" y="510.0"></text>
</g>
<g>
<title>tcp_established_options (13 samples, 0.19%)</title><rect x="657.2" y="483.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="660.2" y="494.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (4 samples, 0.06%)</title><rect x="658.7" y="467.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="661.7" y="478.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (7 samples, 0.10%)</title><rect x="659.4" y="483.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="662.4" y="494.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="660.5" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="663.5" y="510.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="660.9" y="515.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="663.9" y="526.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (5 samples, 0.07%)</title><rect x="661.2" y="531.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="664.2" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (60 samples, 0.86%)</title><rect x="662.1" y="547.0" width="10.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="665.1" y="558.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (45 samples, 0.64%)</title><rect x="664.6" y="531.0" width="7.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="667.6" y="542.0"></text>
</g>
<g>
<title>sock_has_perm (45 samples, 0.64%)</title><rect x="664.6" y="515.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="667.6" y="526.0"></text>
</g>
<g>
<title>avc_has_perm_flags (18 samples, 0.26%)</title><rect x="669.1" y="499.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="672.1" y="510.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (3 samples, 0.04%)</title><rect x="672.2" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="675.2" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg (4 samples, 0.06%)</title><rect x="672.7" y="547.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="675.7" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (26 samples, 0.37%)</title><rect x="673.3" y="563.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="676.3" y="574.0"></text>
</g>
<g>
<title>fget_light (26 samples, 0.37%)</title><rect x="673.3" y="547.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="676.3" y="558.0"></text>
</g>
<g>
<title>fput (4 samples, 0.06%)</title><rect x="677.7" y="579.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="680.7" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="678.4" y="659.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="681.4" y="670.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="678.4" y="643.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="681.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.04%)</title><rect x="678.9" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="678.9" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="681.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="678.9" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="681.9" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (57 samples, 0.81%)</title><rect x="679.6" y="723.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="682.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (14 samples, 0.20%)</title><rect x="681.3" y="707.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.3" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (14 samples, 0.20%)</title><rect x="681.3" y="691.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.3" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.10%)</title><rect x="682.4" y="675.0" width="1.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="685.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (21 samples, 0.30%)</title><rect x="683.6" y="707.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (6 samples, 0.09%)</title><rect x="684.1" y="691.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.03%)</title><rect x="684.8" y="675.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.8" y="686.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (12 samples, 0.17%)</title><rect x="685.1" y="691.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="688.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="687.1" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="690.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="687.1" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.1" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="687.1" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.1" y="686.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (10 samples, 0.14%)</title><rect x="687.5" y="707.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="690.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.13%)</title><rect x="687.7" y="691.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.13%)</title><rect x="687.7" y="675.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.13%)</title><rect x="687.7" y="659.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.entity (1,414 samples, 20.18%)</title><rect x="689.2" y="723.0" width="238.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.2" y="734.0">ru/mail/polis/service/httprest/H..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="691.4" y="707.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="694.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="691.5" y="691.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.5" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="691.9" y="675.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="691.9" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.9" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="691.9" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.14%)</title><rect x="692.4" y="707.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="695.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,385 samples, 19.77%)</title><rect x="694.1" y="707.0" width="233.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.1" y="718.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (84 samples, 1.20%)</title><rect x="694.1" y="691.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="697.1" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (84 samples, 1.20%)</title><rect x="694.1" y="675.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="697.1" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (77 samples, 1.10%)</title><rect x="695.2" y="659.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.2" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (71 samples, 1.01%)</title><rect x="696.2" y="643.0" width="12.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (70 samples, 1.00%)</title><rect x="696.4" y="627.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.4" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (44 samples, 0.63%)</title><rect x="696.6" y="611.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (43 samples, 0.61%)</title><rect x="696.7" y="595.0" width="7.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (42 samples, 0.60%)</title><rect x="696.9" y="579.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.9" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (36 samples, 0.51%)</title><rect x="696.9" y="563.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.9" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (34 samples, 0.49%)</title><rect x="697.1" y="547.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (21 samples, 0.30%)</title><rect x="697.1" y="531.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (6 samples, 0.09%)</title><rect x="697.1" y="515.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.1" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (6 samples, 0.09%)</title><rect x="697.1" y="499.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.1" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.04%)</title><rect x="697.1" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.1" y="494.0"></text>
</g>
<g>
<title>java/lang/Enum.ordinal (3 samples, 0.04%)</title><rect x="697.6" y="483.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (10 samples, 0.14%)</title><rect x="698.1" y="515.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/LSMDao$$Lambda$79/769204217.apply (9 samples, 0.13%)</title><rect x="698.1" y="499.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (3 samples, 0.04%)</title><rect x="698.6" y="483.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="701.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/LSMDao.lambda$iterator$2 (3 samples, 0.04%)</title><rect x="699.1" y="483.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/Cell.getKey (2 samples, 0.03%)</title><rect x="699.1" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.1" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="699.1" y="451.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.1" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (5 samples, 0.07%)</title><rect x="699.8" y="515.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="702.8" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (5 samples, 0.07%)</title><rect x="699.8" y="499.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="699.8" y="483.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.07%)</title><rect x="699.8" y="467.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (5 samples, 0.07%)</title><rect x="699.8" y="451.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (3 samples, 0.04%)</title><rect x="700.1" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (13 samples, 0.19%)</title><rect x="700.6" y="531.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/IteratorsTool$$Lambda$70/951375489.apply (6 samples, 0.09%)</title><rect x="701.5" y="515.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="704.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/Cell.getKey (6 samples, 0.09%)</title><rect x="701.5" y="499.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.07%)</title><rect x="701.6" y="483.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/MemTablesPool$$Lambda$67/457817302.apply (2 samples, 0.03%)</title><rect x="702.5" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.03%)</title><rect x="703.0" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.0" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="703.0" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="706.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/MemTablesPool$$Lambda$67/457817302.apply (3 samples, 0.04%)</title><rect x="703.5" y="563.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/Cell.getKey (3 samples, 0.04%)</title><rect x="703.5" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="706.5" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.03%)</title><rect x="703.7" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="706.7" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.03%)</title><rect x="703.7" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="703.7" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.7" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="703.7" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.7" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="703.7" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="706.7" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (15 samples, 0.21%)</title><rect x="704.0" y="611.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.0" y="622.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.19%)</title><rect x="704.3" y="595.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.3" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.04%)</title><rect x="706.0" y="579.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/IteratorsTool$$Lambda$70/951375489.apply (9 samples, 0.13%)</title><rect x="706.5" y="611.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/Cell.getKey (9 samples, 0.13%)</title><rect x="706.5" y="595.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.5" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (8 samples, 0.11%)</title><rect x="706.7" y="579.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.7" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (6 samples, 0.09%)</title><rect x="707.0" y="563.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="707.0" y="547.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.0" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.09%)</title><rect x="707.0" y="531.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="710.0" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.07%)</title><rect x="707.2" y="515.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.2" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="707.5" y="499.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="710.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.04%)</title><rect x="707.5" y="483.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.5" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.04%)</title><rect x="707.5" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.5" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (8 samples, 0.11%)</title><rect x="708.2" y="691.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.2" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (4 samples, 0.06%)</title><rect x="708.4" y="675.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.4" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (4 samples, 0.06%)</title><rect x="708.4" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.4" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.04%)</title><rect x="709.0" y="675.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.03%)</title><rect x="709.5" y="691.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.5" y="702.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (896 samples, 12.79%)</title><rect x="709.9" y="691.0" width="150.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="712.9" y="702.0">java/util/NoSuchEle..</text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (896 samples, 12.79%)</title><rect x="709.9" y="675.0" width="150.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.9" y="686.0">java/lang/RuntimeEx..</text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (896 samples, 12.79%)</title><rect x="709.9" y="659.0" width="150.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.9" y="670.0">java/lang/Exception..</text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (896 samples, 12.79%)</title><rect x="709.9" y="643.0" width="150.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.9" y="654.0">java/lang/Throwable..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (888 samples, 12.67%)</title><rect x="711.2" y="627.0" width="149.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.2" y="638.0">java/lang/Throwable..</text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (886 samples, 12.64%)</title><rect x="711.6" y="611.0" width="149.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.6" y="622.0">java/lang/Throwable..</text>
</g>
<g>
<title>JVM_FillInStackTrace (18 samples, 0.26%)</title><rect x="712.7" y="595.0" width="3.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="715.7" y="606.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (855 samples, 12.20%)</title><rect x="715.8" y="595.0" width="144.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="718.8" y="606.0">Java_java_lang_Thr..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (8 samples, 0.11%)</title><rect x="718.5" y="579.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="721.5" y="590.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (805 samples, 11.49%)</title><rect x="720.0" y="579.0" width="135.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="723.0" y="590.0">JVM_FillInStackTr..</text>
</g>
<g>
<title>JavaThread::active() (5 samples, 0.07%)</title><rect x="720.7" y="563.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="723.7" y="574.0"></text>
</g>
<g>
<title>PreserveExceptionMark::PreserveExceptionMark(Thread*&amp;) (6 samples, 0.09%)</title><rect x="721.5" y="563.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="724.5" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.06%)</title><rect x="722.5" y="563.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="725.5" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (2 samples, 0.03%)</title><rect x="723.2" y="563.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="726.2" y="574.0"></text>
</g>
<g>
<title>Universe::should_fill_in_stack_trace(Handle) (12 samples, 0.17%)</title><rect x="723.5" y="563.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="726.5" y="574.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (770 samples, 10.99%)</title><rect x="725.5" y="563.0" width="129.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="728.5" y="574.0">java_lang_Throwa..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;574518ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 574518ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (8 samples, 0.11%)</title><rect x="726.4" y="547.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="729.4" y="558.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (4 samples, 0.06%)</title><rect x="727.7" y="547.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="730.7" y="558.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (6 samples, 0.09%)</title><rect x="728.4" y="547.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="731.4" y="558.0"></text>
</g>
<g>
<title>JavaThread::active() (2 samples, 0.03%)</title><rect x="729.4" y="547.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="732.4" y="558.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (4 samples, 0.06%)</title><rect x="729.8" y="547.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="732.8" y="558.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (12 samples, 0.17%)</title><rect x="730.4" y="547.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="733.4" y="558.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (4 samples, 0.06%)</title><rect x="732.4" y="547.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="735.4" y="558.0"></text>
</g>
<g>
<title>PreserveExceptionMark::PreserveExceptionMark(Thread*&amp;) (34 samples, 0.49%)</title><rect x="733.1" y="547.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="736.1" y="558.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (2 samples, 0.03%)</title><rect x="733.5" y="531.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="736.5" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (5 samples, 0.07%)</title><rect x="733.8" y="531.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="736.8" y="542.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (6 samples, 0.09%)</title><rect x="734.6" y="531.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="737.6" y="542.0"></text>
</g>
<g>
<title>update_get_addr (19 samples, 0.27%)</title><rect x="735.6" y="531.0" width="3.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="738.6" y="542.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (10 samples, 0.14%)</title><rect x="739.0" y="547.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="742.0" y="558.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (5 samples, 0.07%)</title><rect x="740.7" y="547.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="743.7" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (17 samples, 0.24%)</title><rect x="741.7" y="547.0" width="2.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="744.7" y="558.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.03%)</title><rect x="744.6" y="547.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="747.6" y="558.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (649 samples, 9.26%)</title><rect x="744.9" y="547.0" width="109.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="747.9" y="558.0">java_lang_Thr..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (52 samples, 0.74%)</title><rect x="765.5" y="531.0" width="8.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="768.5" y="542.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;574518ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 574518ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (26 samples, 0.37%)</title><rect x="774.5" y="531.0" width="4.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="777.5" y="542.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (208 samples, 2.97%)</title><rect x="778.9" y="531.0" width="35.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="781.9" y="542.0">Bac..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (5 samples, 0.07%)</title><rect x="779.1" y="515.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="782.1" y="526.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (188 samples, 2.68%)</title><rect x="779.9" y="515.0" width="31.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="782.9" y="526.0">Ba..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (14 samples, 0.20%)</title><rect x="782.5" y="499.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="785.5" y="510.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (15 samples, 0.21%)</title><rect x="784.8" y="499.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="787.8" y="510.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (3 samples, 0.04%)</title><rect x="787.3" y="499.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="790.3" y="510.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (89 samples, 1.27%)</title><rect x="787.9" y="499.0" width="14.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="790.9" y="510.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (61 samples, 0.87%)</title><rect x="792.6" y="483.0" width="10.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="795.6" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (56 samples, 0.80%)</title><rect x="792.6" y="467.0" width="9.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="795.6" y="478.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.03%)</title><rect x="794.8" y="451.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="797.8" y="462.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (6 samples, 0.09%)</title><rect x="795.1" y="451.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="798.1" y="462.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (15 samples, 0.21%)</title><rect x="796.1" y="451.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="799.1" y="462.0"></text>
</g>
<g>
<title>__memset_sse2 (11 samples, 0.16%)</title><rect x="798.6" y="451.0" width="1.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="801.6" y="462.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (5 samples, 0.07%)</title><rect x="800.5" y="451.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="803.5" y="462.0"></text>
</g>
<g>
<title>_init (4 samples, 0.06%)</title><rect x="801.3" y="451.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="804.3" y="462.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (5 samples, 0.07%)</title><rect x="802.0" y="467.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="805.0" y="478.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (50 samples, 0.71%)</title><rect x="802.8" y="499.0" width="8.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="805.8" y="510.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (40 samples, 0.57%)</title><rect x="803.9" y="483.0" width="6.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="806.9" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (26 samples, 0.37%)</title><rect x="806.0" y="467.0" width="4.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="809.0" y="478.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (11 samples, 0.16%)</title><rect x="807.2" y="451.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="810.2" y="462.0"></text>
</g>
<g>
<title>__memset_sse2 (3 samples, 0.04%)</title><rect x="809.1" y="451.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="812.1" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (2 samples, 0.03%)</title><rect x="809.6" y="451.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="812.6" y="462.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (3 samples, 0.04%)</title><rect x="809.9" y="451.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="812.9" y="462.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.06%)</title><rect x="810.6" y="483.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="813.6" y="494.0"></text>
</g>
<g>
<title>objArrayOopDesc::obj_at_put(int, oopDesc*) (2 samples, 0.03%)</title><rect x="811.3" y="499.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="814.3" y="510.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (5 samples, 0.07%)</title><rect x="811.8" y="515.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="814.8" y="526.0"></text>
</g>
<g>
<title>objArrayOopDesc::obj_at_put(int, oopDesc*) (7 samples, 0.10%)</title><rect x="812.8" y="515.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="815.8" y="526.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (3 samples, 0.04%)</title><rect x="814.0" y="531.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="817.0" y="542.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (45 samples, 0.64%)</title><rect x="814.5" y="531.0" width="7.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="817.5" y="542.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (4 samples, 0.06%)</title><rect x="821.4" y="515.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="824.4" y="526.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.06%)</title><rect x="822.0" y="531.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="825.0" y="542.0"></text>
</g>
<g>
<title>G1BarrierSet::enqueue(oopDesc*) (7 samples, 0.10%)</title><rect x="822.7" y="531.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="825.7" y="542.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (56 samples, 0.80%)</title><rect x="823.9" y="531.0" width="9.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="826.9" y="542.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (37 samples, 0.53%)</title><rect x="824.1" y="515.0" width="6.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="827.1" y="526.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (8 samples, 0.11%)</title><rect x="828.9" y="499.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="831.9" y="510.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (12 samples, 0.17%)</title><rect x="830.3" y="515.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="833.3" y="526.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (6 samples, 0.09%)</title><rect x="832.3" y="515.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="835.3" y="526.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (38 samples, 0.54%)</title><rect x="833.3" y="531.0" width="6.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="836.3" y="542.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (13 samples, 0.19%)</title><rect x="839.7" y="531.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="842.7" y="542.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (73 samples, 1.04%)</title><rect x="841.9" y="531.0" width="12.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="844.9" y="542.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (3 samples, 0.04%)</title><rect x="843.3" y="515.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="846.3" y="526.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (62 samples, 0.88%)</title><rect x="843.8" y="515.0" width="10.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="846.8" y="526.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (10 samples, 0.14%)</title><rect x="844.1" y="499.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="847.1" y="510.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (41 samples, 0.59%)</title><rect x="845.8" y="499.0" width="6.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="848.8" y="510.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (30 samples, 0.43%)</title><rect x="847.6" y="483.0" width="5.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="850.6" y="494.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (8 samples, 0.11%)</title><rect x="852.9" y="499.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="855.9" y="510.0"></text>
</g>
<g>
<title>oopDesc::release_obj_field_put(int, oopDesc*) (6 samples, 0.09%)</title><rect x="854.2" y="547.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="857.2" y="558.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.03%)</title><rect x="855.2" y="563.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="858.2" y="574.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (13 samples, 0.19%)</title><rect x="855.9" y="579.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="858.9" y="590.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (10 samples, 0.14%)</title><rect x="858.1" y="579.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="861.1" y="590.0"></text>
</g>
<g>
<title>_init (6 samples, 0.09%)</title><rect x="859.8" y="595.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="862.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/LSMDao.iterator (395 samples, 5.64%)</title><rect x="860.8" y="691.0" width="66.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="863.8" y="702.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (12 samples, 0.17%)</title><rect x="860.9" y="675.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="863.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.&lt;init&gt; (12 samples, 0.17%)</title><rect x="860.9" y="659.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="863.9" y="670.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.&lt;init&gt; (12 samples, 0.17%)</title><rect x="860.9" y="643.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="863.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/LSMDao.cellIterator (382 samples, 5.45%)</title><rect x="863.0" y="675.0" width="64.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="866.0" y="686.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/IteratorsTool.data (378 samples, 5.39%)</title><rect x="863.6" y="659.0" width="63.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="866.6" y="670.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.03%)</title><rect x="864.6" y="643.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.6" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="864.6" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="865.3" y="643.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="868.3" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="865.3" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="868.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="865.3" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="868.3" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="865.3" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="868.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (44 samples, 0.63%)</title><rect x="865.8" y="643.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="868.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (44 samples, 0.63%)</title><rect x="865.8" y="627.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="868.8" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (44 samples, 0.63%)</title><rect x="865.8" y="611.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="868.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (44 samples, 0.63%)</title><rect x="865.8" y="595.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="868.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (44 samples, 0.63%)</title><rect x="865.8" y="579.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="868.8" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (32 samples, 0.46%)</title><rect x="865.8" y="563.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (28 samples, 0.40%)</title><rect x="866.0" y="547.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="869.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (15 samples, 0.21%)</title><rect x="866.2" y="531.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="869.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.04%)</title><rect x="866.2" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="869.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/MemTable$1.apply (2 samples, 0.03%)</title><rect x="866.3" y="499.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="869.3" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (12 samples, 0.17%)</title><rect x="866.7" y="515.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="869.7" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (12 samples, 0.17%)</title><rect x="866.7" y="499.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="869.7" y="510.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.&lt;init&gt; (2 samples, 0.03%)</title><rect x="866.8" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="869.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (9 samples, 0.13%)</title><rect x="867.2" y="483.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="870.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.11%)</title><rect x="867.3" y="467.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="870.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (7 samples, 0.10%)</title><rect x="867.5" y="451.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="870.5" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (12 samples, 0.17%)</title><rect x="868.7" y="531.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="871.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (3 samples, 0.04%)</title><rect x="869.4" y="515.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="872.4" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="869.5" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/IteratorsTool$$Lambda$70/951375489.apply (5 samples, 0.07%)</title><rect x="869.9" y="515.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="872.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/Cell.getKey (5 samples, 0.07%)</title><rect x="869.9" y="499.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="872.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (5 samples, 0.07%)</title><rect x="869.9" y="483.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="872.9" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.04%)</title><rect x="870.7" y="547.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.7" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.04%)</title><rect x="870.7" y="531.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="873.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/MemTablesPool$$Lambda$67/457817302.apply (12 samples, 0.17%)</title><rect x="871.2" y="563.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="874.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/Cell.getKey (12 samples, 0.17%)</title><rect x="871.2" y="547.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="874.2" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (12 samples, 0.17%)</title><rect x="871.2" y="531.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="874.2" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (8 samples, 0.11%)</title><rect x="871.9" y="515.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="874.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.11%)</title><rect x="871.9" y="499.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="874.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.11%)</title><rect x="871.9" y="483.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="874.9" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.11%)</title><rect x="871.9" y="467.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="874.9" y="478.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (7 samples, 0.10%)</title><rect x="871.9" y="451.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="874.9" y="462.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (7 samples, 0.10%)</title><rect x="871.9" y="435.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="874.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/MemTablesPool.iterator (321 samples, 4.58%)</title><rect x="873.2" y="643.0" width="54.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="876.2" y="654.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (17 samples, 0.24%)</title><rect x="874.6" y="627.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.6" y="638.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (17 samples, 0.24%)</title><rect x="874.6" y="611.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="877.6" y="622.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (12 samples, 0.17%)</title><rect x="875.4" y="595.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="878.4" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (22 samples, 0.31%)</title><rect x="877.4" y="627.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="880.4" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (22 samples, 0.31%)</title><rect x="877.4" y="611.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="880.4" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (4 samples, 0.06%)</title><rect x="880.5" y="595.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="883.5" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.&lt;init&gt; (3 samples, 0.04%)</title><rect x="880.5" y="579.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="883.5" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="880.6" y="563.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="883.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (19 samples, 0.27%)</title><rect x="881.1" y="627.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="884.1" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (25 samples, 0.36%)</title><rect x="884.3" y="627.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="887.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (25 samples, 0.36%)</title><rect x="884.3" y="611.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="887.3" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.16%)</title><rect x="886.7" y="595.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.7" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (11 samples, 0.16%)</title><rect x="886.7" y="579.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.16%)</title><rect x="886.7" y="563.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (42 samples, 0.60%)</title><rect x="888.6" y="627.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="891.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (37 samples, 0.53%)</title><rect x="889.4" y="611.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (37 samples, 0.53%)</title><rect x="889.4" y="595.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.4" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.14%)</title><rect x="892.1" y="579.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="895.1" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.04%)</title><rect x="892.9" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="895.9" y="574.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (2 samples, 0.03%)</title><rect x="893.4" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="896.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.04%)</title><rect x="893.8" y="579.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.04%)</title><rect x="893.8" y="563.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="896.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="893.8" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (7 samples, 0.10%)</title><rect x="894.3" y="579.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (7 samples, 0.10%)</title><rect x="894.3" y="563.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (18 samples, 0.26%)</title><rect x="895.8" y="627.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="898.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (18 samples, 0.26%)</title><rect x="895.8" y="611.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.8" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (18 samples, 0.26%)</title><rect x="895.8" y="595.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="898.8" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (18 samples, 0.26%)</title><rect x="895.8" y="579.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="898.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (18 samples, 0.26%)</title><rect x="895.8" y="563.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.13%)</title><rect x="895.8" y="547.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="898.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (2 samples, 0.03%)</title><rect x="895.8" y="531.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="898.8" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (2 samples, 0.03%)</title><rect x="895.8" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="898.8" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext (2 samples, 0.03%)</title><rect x="895.8" y="499.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.8" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (7 samples, 0.10%)</title><rect x="896.1" y="531.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="899.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6 samples, 0.09%)</title><rect x="896.3" y="515.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/MemTablesPool$$Lambda$67/457817302.apply (3 samples, 0.04%)</title><rect x="896.8" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="899.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/Cell.getKey (3 samples, 0.04%)</title><rect x="896.8" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.8" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.04%)</title><rect x="896.8" y="467.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.8" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/IteratorsTool$$Lambda$70/951375489.apply (9 samples, 0.13%)</title><rect x="897.3" y="547.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="900.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/Cell.getKey (9 samples, 0.13%)</title><rect x="897.3" y="531.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="900.3" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (9 samples, 0.13%)</title><rect x="897.3" y="515.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (8 samples, 0.11%)</title><rect x="897.5" y="499.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.5" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.11%)</title><rect x="897.5" y="483.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="900.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.11%)</title><rect x="897.5" y="467.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="900.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/MemTable.iterator (169 samples, 2.41%)</title><rect x="898.8" y="627.0" width="28.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.8" y="638.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (2 samples, 0.03%)</title><rect x="898.8" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="901.8" y="622.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (167 samples, 2.38%)</title><rect x="899.2" y="611.0" width="28.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="902.2" y="622.0">ja..</text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (165 samples, 2.35%)</title><rect x="899.5" y="595.0" width="27.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.5" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (164 samples, 2.34%)</title><rect x="899.7" y="579.0" width="27.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="902.7" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (156 samples, 2.23%)</title><rect x="901.0" y="563.0" width="26.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.0" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (150 samples, 2.14%)</title><rect x="902.0" y="547.0" width="25.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="905.0" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (17 samples, 0.24%)</title><rect x="902.5" y="531.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (17 samples, 0.24%)</title><rect x="902.5" y="515.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="905.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (17 samples, 0.24%)</title><rect x="902.5" y="499.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="905.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.23%)</title><rect x="902.7" y="483.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.7" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.20%)</title><rect x="903.0" y="467.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.0" y="478.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.07%)</title><rect x="903.0" y="451.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.06%)</title><rect x="903.2" y="435.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.2" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (9 samples, 0.13%)</title><rect x="903.9" y="451.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (130 samples, 1.86%)</title><rect x="905.4" y="531.0" width="21.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="908.4" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (130 samples, 1.86%)</title><rect x="905.4" y="515.0" width="21.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="908.4" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.07%)</title><rect x="905.9" y="499.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.9" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.06%)</title><rect x="906.1" y="483.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="909.1" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.06%)</title><rect x="906.1" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="909.1" y="478.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="906.2" y="451.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="909.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (122 samples, 1.74%)</title><rect x="906.7" y="499.0" width="20.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (36 samples, 0.51%)</title><rect x="921.2" y="483.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.2" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (36 samples, 0.51%)</title><rect x="921.2" y="467.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="924.2" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (35 samples, 0.50%)</title><rect x="921.4" y="451.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="924.4" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.04%)</title><rect x="921.6" y="435.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="924.6" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (7 samples, 0.10%)</title><rect x="922.1" y="435.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="925.1" y="446.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (21 samples, 0.30%)</title><rect x="923.2" y="435.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="926.2" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (10 samples, 0.14%)</title><rect x="925.1" y="419.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="928.1" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (4 samples, 0.06%)</title><rect x="926.1" y="403.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="929.1" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.04%)</title><rect x="926.8" y="435.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="929.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (6 samples, 0.09%)</title><rect x="927.3" y="739.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="930.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (4 samples, 0.06%)</title><rect x="928.3" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="931.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (9 samples, 0.13%)</title><rect x="929.0" y="739.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.0" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.13%)</title><rect x="929.0" y="723.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="932.0" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.11%)</title><rect x="929.1" y="707.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="932.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (8 samples, 0.11%)</title><rect x="929.1" y="691.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="932.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.07%)</title><rect x="930.5" y="739.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="933.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.07%)</title><rect x="930.5" y="723.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="933.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (162 samples, 2.31%)</title><rect x="931.3" y="771.0" width="27.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="934.3" y="782.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (85 samples, 1.21%)</title><rect x="933.4" y="755.0" width="14.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="936.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (17 samples, 0.24%)</title><rect x="943.1" y="739.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="946.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (17 samples, 0.24%)</title><rect x="943.1" y="723.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="946.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (17 samples, 0.24%)</title><rect x="943.1" y="707.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="946.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.09%)</title><rect x="946.0" y="739.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.06%)</title><rect x="947.0" y="739.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="950.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (65 samples, 0.93%)</title><rect x="947.7" y="755.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="950.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (55 samples, 0.78%)</title><rect x="949.4" y="739.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.4" y="750.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (2 samples, 0.03%)</title><rect x="958.3" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="961.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (63 samples, 0.90%)</title><rect x="958.6" y="771.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="961.6" y="782.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (26 samples, 0.37%)</title><rect x="958.8" y="755.0" width="4.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="961.8" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (26 samples, 0.37%)</title><rect x="958.8" y="739.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="961.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.04%)</title><rect x="960.3" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="963.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.04%)</title><rect x="960.3" y="707.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="963.3" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (2 samples, 0.03%)</title><rect x="960.5" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.06%)</title><rect x="960.8" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="960.8" y="707.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="963.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.03%)</title><rect x="961.1" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (10 samples, 0.14%)</title><rect x="961.5" y="723.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="964.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (36 samples, 0.51%)</title><rect x="963.2" y="755.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="966.2" y="766.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (2 samples, 0.03%)</title><rect x="966.7" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="969.7" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.06%)</title><rect x="967.0" y="739.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="970.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.07%)</title><rect x="967.9" y="739.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="970.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/IteratorsTool.data (3 samples, 0.04%)</title><rect x="968.7" y="739.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="971.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (19 samples, 0.27%)</title><rect x="969.2" y="771.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="972.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (65 samples, 0.93%)</title><rect x="972.4" y="771.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="975.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="977.1" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (34 samples, 0.49%)</title><rect x="977.6" y="755.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="980.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (34 samples, 0.49%)</title><rect x="977.6" y="739.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="980.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="977.6" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="980.6" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="977.6" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="980.6" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.03%)</title><rect x="977.6" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="980.6" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (32 samples, 0.46%)</title><rect x="978.0" y="723.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="981.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (32 samples, 0.46%)</title><rect x="978.0" y="707.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="981.0" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (32 samples, 0.46%)</title><rect x="978.0" y="691.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="981.0" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.33%)</title><rect x="983.4" y="771.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="986.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.30%)</title><rect x="983.7" y="755.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="986.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1,062 samples, 15.16%)</title><rect x="987.2" y="787.0" width="178.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="990.2" y="798.0">one/nio/net/Session.read</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1,050 samples, 14.99%)</title><rect x="987.9" y="771.0" width="176.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.9" y="782.0">one/nio/net/NativeSocke..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (27 samples, 0.39%)</title><rect x="1015.5" y="755.0" width="4.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1018.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (280 samples, 4.00%)</title><rect x="1020.1" y="755.0" width="47.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1023.1" y="766.0">[unk..</text>
</g>
<g>
<title>[unknown] (280 samples, 4.00%)</title><rect x="1020.1" y="739.0" width="47.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1023.1" y="750.0">[unk..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (158 samples, 2.25%)</title><rect x="1020.1" y="723.0" width="26.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1023.1" y="734.0">J..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (20 samples, 0.29%)</title><rect x="1022.6" y="707.0" width="3.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1025.6" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (7 samples, 0.10%)</title><rect x="1026.0" y="707.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1029.0" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (31 samples, 0.44%)</title><rect x="1027.2" y="707.0" width="5.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1030.2" y="718.0"></text>
</g>
<g>
<title>_init (5 samples, 0.07%)</title><rect x="1032.4" y="707.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1035.4" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (68 samples, 0.97%)</title><rect x="1033.2" y="707.0" width="11.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1036.2" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.06%)</title><rect x="1034.6" y="691.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1037.6" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (7 samples, 0.10%)</title><rect x="1035.2" y="691.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1038.2" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="1036.4" y="691.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1039.4" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (22 samples, 0.31%)</title><rect x="1036.9" y="691.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1039.9" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (24 samples, 0.34%)</title><rect x="1040.6" y="691.0" width="4.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1043.6" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (17 samples, 0.24%)</title><rect x="1041.8" y="675.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1044.8" y="686.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (8 samples, 0.11%)</title><rect x="1044.7" y="707.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1047.7" y="718.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (4 samples, 0.06%)</title><rect x="1046.0" y="707.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1049.0" y="718.0"></text>
</g>
<g>
<title>__libc_recv (92 samples, 1.31%)</title><rect x="1046.7" y="723.0" width="15.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1049.7" y="734.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.09%)</title><rect x="1062.2" y="723.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1065.2" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (24 samples, 0.34%)</title><rect x="1063.2" y="723.0" width="4.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1066.2" y="734.0"></text>
</g>
<g>
<title>__GI_epoll_wait (119 samples, 1.70%)</title><rect x="1067.2" y="755.0" width="20.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1070.2" y="766.0"></text>
</g>
<g>
<title>system_call_after_swapgs (119 samples, 1.70%)</title><rect x="1067.2" y="739.0" width="20.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1070.2" y="750.0"></text>
</g>
<g>
<title>__libc_recv (449 samples, 6.41%)</title><rect x="1087.3" y="755.0" width="75.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1090.3" y="766.0">__libc_r..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.06%)</title><rect x="1091.5" y="739.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1094.5" y="750.0"></text>
</g>
<g>
<title>auditsys (23 samples, 0.33%)</title><rect x="1092.2" y="739.0" width="3.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1095.2" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_entry (23 samples, 0.33%)</title><rect x="1092.2" y="723.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1095.2" y="734.0"></text>
</g>
<g>
<title>current_kernel_time (2 samples, 0.03%)</title><rect x="1095.7" y="707.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1098.7" y="718.0"></text>
</g>
<g>
<title>sys_recvfrom (5 samples, 0.07%)</title><rect x="1096.0" y="739.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1099.0" y="750.0"></text>
</g>
<g>
<title>sysret_audit (12 samples, 0.17%)</title><rect x="1096.9" y="739.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1099.9" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_exit (9 samples, 0.13%)</title><rect x="1096.9" y="723.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1099.9" y="734.0"></text>
</g>
<g>
<title>dput (4 samples, 0.06%)</title><rect x="1097.2" y="707.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1100.2" y="718.0"></text>
</g>
<g>
<title>path_put (2 samples, 0.03%)</title><rect x="1098.4" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1101.4" y="734.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.04%)</title><rect x="1098.9" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1101.9" y="750.0"></text>
</g>
<g>
<title>system_call_fastpath (376 samples, 5.37%)</title><rect x="1099.4" y="739.0" width="63.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1102.4" y="750.0">system_..</text>
</g>
<g>
<title>SYSC_recvfrom (2 samples, 0.03%)</title><rect x="1099.6" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1102.6" y="734.0"></text>
</g>
<g>
<title>sys_recvfrom (373 samples, 5.32%)</title><rect x="1099.9" y="723.0" width="62.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1102.9" y="734.0">sys_re..</text>
</g>
<g>
<title>SYSC_recvfrom (365 samples, 5.21%)</title><rect x="1099.9" y="707.0" width="61.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1102.9" y="718.0">SYSC_r..</text>
</g>
<g>
<title>fget_light (2 samples, 0.03%)</title><rect x="1101.1" y="691.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1104.1" y="702.0"></text>
</g>
<g>
<title>inet_recvmsg (4 samples, 0.06%)</title><rect x="1101.6" y="691.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1104.6" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.06%)</title><rect x="1102.3" y="691.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1105.3" y="702.0"></text>
</g>
<g>
<title>sock_recvmsg (310 samples, 4.42%)</title><rect x="1102.9" y="691.0" width="52.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1105.9" y="702.0">sock_..</text>
</g>
<g>
<title>inet_recvmsg (235 samples, 3.35%)</title><rect x="1103.1" y="675.0" width="39.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1106.1" y="686.0">ine..</text>
</g>
<g>
<title>lock_sock_nested (5 samples, 0.07%)</title><rect x="1104.5" y="659.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1107.5" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="1105.5" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1108.5" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (12 samples, 0.17%)</title><rect x="1105.8" y="659.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1108.8" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (207 samples, 2.95%)</title><rect x="1107.8" y="659.0" width="34.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1110.8" y="670.0">tc..</text>
</g>
<g>
<title>__kfree_skb (35 samples, 0.50%)</title><rect x="1112.9" y="643.0" width="5.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1115.9" y="654.0"></text>
</g>
<g>
<title>kfree_skbmem (9 samples, 0.13%)</title><rect x="1112.9" y="627.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1115.9" y="638.0"></text>
</g>
<g>
<title>skb_release_all (26 samples, 0.37%)</title><rect x="1114.4" y="627.0" width="4.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1117.4" y="638.0"></text>
</g>
<g>
<title>skb_release_data (10 samples, 0.14%)</title><rect x="1114.6" y="611.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1117.6" y="622.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.09%)</title><rect x="1116.2" y="611.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1119.2" y="622.0"></text>
</g>
<g>
<title>sock_rfree (4 samples, 0.06%)</title><rect x="1116.6" y="595.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1119.6" y="606.0"></text>
</g>
<g>
<title>sock_rfree (9 samples, 0.13%)</title><rect x="1117.2" y="611.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1120.2" y="622.0"></text>
</g>
<g>
<title>_cond_resched (10 samples, 0.14%)</title><rect x="1118.9" y="643.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1121.9" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (20 samples, 0.29%)</title><rect x="1120.6" y="643.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1123.6" y="654.0"></text>
</g>
<g>
<title>local_bh_enable (2 samples, 0.03%)</title><rect x="1124.2" y="643.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1127.2" y="654.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.09%)</title><rect x="1124.5" y="643.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1127.5" y="654.0"></text>
</g>
<g>
<title>local_bh_enable (5 samples, 0.07%)</title><rect x="1124.7" y="627.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1127.7" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.06%)</title><rect x="1124.8" y="611.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1127.8" y="622.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="1125.7" y="643.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1128.7" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (86 samples, 1.23%)</title><rect x="1126.0" y="643.0" width="14.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1129.0" y="654.0"></text>
</g>
<g>
<title>_copy_to_user (4 samples, 0.06%)</title><rect x="1126.2" y="627.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1129.2" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (16 samples, 0.23%)</title><rect x="1126.8" y="627.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1129.8" y="638.0"></text>
</g>
<g>
<title>memcpy_toiovec (65 samples, 0.93%)</title><rect x="1129.5" y="627.0" width="11.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1132.5" y="638.0"></text>
</g>
<g>
<title>__check_object_size (51 samples, 0.73%)</title><rect x="1129.5" y="611.0" width="8.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1132.5" y="622.0"></text>
</g>
<g>
<title>__check_heap_object (11 samples, 0.16%)</title><rect x="1131.9" y="595.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1134.9" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (26 samples, 0.37%)</title><rect x="1133.8" y="595.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1136.8" y="606.0"></text>
</g>
<g>
<title>static_key_enabled (13 samples, 0.19%)</title><rect x="1138.3" y="611.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1141.3" y="622.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (7 samples, 0.10%)</title><rect x="1140.7" y="643.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1143.7" y="654.0"></text>
</g>
<g>
<title>tcp_release_cb (5 samples, 0.07%)</title><rect x="1141.8" y="643.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1144.8" y="654.0"></text>
</g>
<g>
<title>security_socket_recvmsg (62 samples, 0.88%)</title><rect x="1142.7" y="675.0" width="10.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1145.7" y="686.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (52 samples, 0.74%)</title><rect x="1144.2" y="659.0" width="8.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1147.2" y="670.0"></text>
</g>
<g>
<title>sock_has_perm (52 samples, 0.74%)</title><rect x="1144.2" y="643.0" width="8.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1147.2" y="654.0"></text>
</g>
<g>
<title>avc_has_perm_flags (23 samples, 0.33%)</title><rect x="1149.1" y="627.0" width="3.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1152.1" y="638.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (7 samples, 0.10%)</title><rect x="1153.1" y="675.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1156.1" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.07%)</title><rect x="1154.3" y="675.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1157.3" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (37 samples, 0.53%)</title><rect x="1155.1" y="691.0" width="6.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1158.1" y="702.0"></text>
</g>
<g>
<title>fget_light (36 samples, 0.51%)</title><rect x="1155.3" y="675.0" width="6.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1158.3" y="686.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="1161.4" y="707.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1164.4" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.09%)</title><rect x="1161.7" y="707.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1164.7" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (10 samples, 0.14%)</title><rect x="1162.9" y="755.0" width="1.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1165.9" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (8 samples, 0.11%)</title><rect x="1164.7" y="771.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1167.7" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="1166.1" y="803.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.1" y="814.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="1166.1" y="787.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1169.1" y="798.0"></text>
</g>
<g>
<title>start_thread (139 samples, 1.98%)</title><rect x="1166.6" y="835.0" width="23.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1169.6" y="846.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (139 samples, 1.98%)</title><rect x="1166.6" y="819.0" width="23.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1169.6" y="830.0">t..</text>
</g>
<g>
<title>Thread::call_run() (139 samples, 1.98%)</title><rect x="1166.6" y="803.0" width="23.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1169.6" y="814.0">T..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.03%)</title><rect x="1166.6" y="787.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1169.6" y="798.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.03%)</title><rect x="1166.6" y="771.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.6" y="782.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.03%)</title><rect x="1166.6" y="755.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.6" y="766.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (2 samples, 0.03%)</title><rect x="1166.6" y="739.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.6" y="750.0"></text>
</g>
<g>
<title>GangWorker::loop() (21 samples, 0.30%)</title><rect x="1166.9" y="787.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.9" y="798.0"></text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1166.9" y="771.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1169.9" y="782.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.03%)</title><rect x="1166.9" y="755.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.9" y="766.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.154] (2 samples, 0.03%)</title><rect x="1166.9" y="739.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.9" y="750.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (2 samples, 0.03%)</title><rect x="1166.9" y="723.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.9" y="734.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1166.9" y="707.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.9" y="718.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (2 samples, 0.03%)</title><rect x="1166.9" y="691.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.9" y="702.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (17 samples, 0.24%)</title><rect x="1167.3" y="771.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1170.3" y="782.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (13 samples, 0.19%)</title><rect x="1167.3" y="755.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.3" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (12 samples, 0.17%)</title><rect x="1167.3" y="739.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1170.3" y="750.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (9 samples, 0.13%)</title><rect x="1167.8" y="723.0" width="1.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.8" y="734.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.04%)</title><rect x="1169.6" y="755.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1172.6" y="766.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (2 samples, 0.03%)</title><rect x="1169.8" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.8" y="750.0"></text>
</g>
<g>
<title>JavaThread::run() (111 samples, 1.58%)</title><rect x="1170.5" y="787.0" width="18.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.5" y="798.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (111 samples, 1.58%)</title><rect x="1170.5" y="771.0" width="18.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.5" y="782.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (109 samples, 1.56%)</title><rect x="1170.5" y="755.0" width="18.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.5" y="766.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (108 samples, 1.54%)</title><rect x="1170.5" y="739.0" width="18.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.5" y="750.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (102 samples, 1.46%)</title><rect x="1170.5" y="723.0" width="17.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.5" y="734.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (102 samples, 1.46%)</title><rect x="1170.5" y="707.0" width="17.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.5" y="718.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (66 samples, 0.94%)</title><rect x="1170.5" y="691.0" width="11.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.5" y="702.0"></text>
</g>
<g>
<title>Compile::Output() (2 samples, 0.03%)</title><rect x="1170.5" y="675.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.5" y="686.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (2 samples, 0.03%)</title><rect x="1170.8" y="675.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.8" y="686.0"></text>
</g>
<g>
<title>Matcher::match() (4 samples, 0.06%)</title><rect x="1171.1" y="675.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.1" y="686.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.04%)</title><rect x="1171.3" y="659.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.3" y="670.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.03%)</title><rect x="1171.5" y="643.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.5" y="654.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.03%)</title><rect x="1171.5" y="627.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.5" y="638.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (6 samples, 0.09%)</title><rect x="1171.8" y="675.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.8" y="686.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (6 samples, 0.09%)</title><rect x="1171.8" y="659.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.8" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (52 samples, 0.74%)</title><rect x="1172.8" y="675.0" width="8.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.8" y="686.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (3 samples, 0.04%)</title><rect x="1172.8" y="659.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.8" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (3 samples, 0.04%)</title><rect x="1173.3" y="659.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.3" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.03%)</title><rect x="1173.8" y="659.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.8" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (6 samples, 0.09%)</title><rect x="1174.2" y="659.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1177.2" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (13 samples, 0.19%)</title><rect x="1175.2" y="659.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.2" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (3 samples, 0.04%)</title><rect x="1175.7" y="643.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1178.7" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (4 samples, 0.06%)</title><rect x="1176.2" y="643.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.2" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (3 samples, 0.04%)</title><rect x="1176.9" y="643.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.9" y="654.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (2 samples, 0.03%)</title><rect x="1177.0" y="627.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.0" y="638.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.03%)</title><rect x="1177.5" y="659.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.5" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (3 samples, 0.04%)</title><rect x="1177.9" y="659.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.9" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (9 samples, 0.13%)</title><rect x="1178.4" y="659.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.4" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (5 samples, 0.07%)</title><rect x="1179.1" y="643.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1182.1" y="654.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (2 samples, 0.03%)</title><rect x="1180.2" y="659.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.2" y="670.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (6 samples, 0.09%)</title><rect x="1180.6" y="659.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.6" y="670.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 0.04%)</title><rect x="1181.1" y="643.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.1" y="654.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.03%)</title><rect x="1181.1" y="627.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.1" y="638.0"></text>
</g>
<g>
<title>Compile::Optimize() (25 samples, 0.36%)</title><rect x="1181.6" y="691.0" width="4.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.6" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (18 samples, 0.26%)</title><rect x="1181.9" y="675.0" width="3.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.9" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.04%)</title><rect x="1182.8" y="659.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.8" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (5 samples, 0.07%)</title><rect x="1183.3" y="659.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.3" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (4 samples, 0.06%)</title><rect x="1183.4" y="643.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.4" y="654.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (3 samples, 0.04%)</title><rect x="1183.6" y="627.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.6" y="638.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (3 samples, 0.04%)</title><rect x="1183.6" y="611.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.6" y="622.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.06%)</title><rect x="1184.9" y="675.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.9" y="686.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.06%)</title><rect x="1184.9" y="659.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.9" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.14%)</title><rect x="1185.8" y="691.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.8" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.14%)</title><rect x="1185.8" y="675.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.14%)</title><rect x="1185.8" y="659.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.14%)</title><rect x="1185.8" y="643.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.14%)</title><rect x="1185.8" y="627.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.8" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.13%)</title><rect x="1186.0" y="611.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.0" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.07%)</title><rect x="1186.0" y="595.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.0" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.07%)</title><rect x="1186.0" y="579.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.07%)</title><rect x="1186.0" y="563.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.0" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.07%)</title><rect x="1186.0" y="547.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.0" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.07%)</title><rect x="1186.0" y="531.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.0" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.06%)</title><rect x="1186.0" y="515.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.0" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.06%)</title><rect x="1186.0" y="499.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.0" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.06%)</title><rect x="1186.0" y="483.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.0" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.06%)</title><rect x="1186.0" y="467.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.0" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.06%)</title><rect x="1186.0" y="451.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.0" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.06%)</title><rect x="1186.0" y="435.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.0" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1186.0" y="419.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.0" y="430.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1186.1" y="403.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.1" y="414.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.06%)</title><rect x="1186.8" y="595.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.8" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1186.8" y="579.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.8" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1186.8" y="563.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1186.8" y="547.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.8" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1186.8" y="531.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.8" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1186.8" y="515.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.8" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1186.8" y="499.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.8" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1186.8" y="483.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.8" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1186.8" y="467.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.8" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1186.8" y="451.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.8" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1186.8" y="435.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.8" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1186.8" y="419.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.8" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1186.8" y="403.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.8" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1186.8" y="387.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.8" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1186.8" y="371.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.8" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1186.8" y="355.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.8" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1186.8" y="339.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.8" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1186.8" y="323.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.8" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1186.8" y="307.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.8" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1186.8" y="291.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.8" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1186.8" y="275.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.8" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1186.8" y="259.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.8" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1186.8" y="243.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.8" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1186.8" y="227.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.8" y="238.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1187.1" y="579.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.1" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1187.1" y="563.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.1" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1187.1" y="547.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.1" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1187.1" y="531.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.1" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1187.1" y="515.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.1" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1187.1" y="499.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.1" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1187.1" y="483.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.1" y="494.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (6 samples, 0.09%)</title><rect x="1187.6" y="723.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.6" y="734.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (5 samples, 0.07%)</title><rect x="1187.8" y="707.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.8" y="718.0"></text>
</g>
<g>
<title>Compilation::compile_method() (5 samples, 0.07%)</title><rect x="1187.8" y="691.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.8" y="702.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (5 samples, 0.07%)</title><rect x="1187.8" y="675.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.8" y="686.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (4 samples, 0.06%)</title><rect x="1188.0" y="659.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.0" y="670.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (3 samples, 0.04%)</title><rect x="1188.1" y="643.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.1" y="654.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (2 samples, 0.03%)</title><rect x="1188.3" y="627.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.3" y="638.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (2 samples, 0.03%)</title><rect x="1188.8" y="755.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.8" y="766.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (2 samples, 0.03%)</title><rect x="1188.8" y="739.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.8" y="750.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (2 samples, 0.03%)</title><rect x="1188.8" y="723.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.8" y="734.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.03%)</title><rect x="1189.2" y="787.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.2" y="798.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.03%)</title><rect x="1189.2" y="771.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.2" y="782.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.03%)</title><rect x="1189.2" y="755.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.2" y="766.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.03%)</title><rect x="1189.2" y="739.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.2" y="750.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.03%)</title><rect x="1189.2" y="723.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.2" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.03%)</title><rect x="1189.2" y="707.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.2" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (2 samples, 0.03%)</title><rect x="1189.2" y="691.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.2" y="702.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.04%)</title><rect x="1189.5" y="787.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.5" y="798.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (3 samples, 0.04%)</title><rect x="1189.5" y="771.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.5" y="782.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.03%)</title><rect x="1189.5" y="755.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.5" y="766.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.03%)</title><rect x="1189.5" y="739.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.5" y="750.0"></text>
</g>
</g>
</svg>
