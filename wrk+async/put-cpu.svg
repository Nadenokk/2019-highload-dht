<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="902" onload="init(evt)" viewBox="0 0 1200 902" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="885"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="885"> </text>
<g id="frames">
<g>
<title>all (6,158 samples, 100.00%)</title><rect x="10.0" y="851.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="862.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="10.0" y="835.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.05%)</title><rect x="10.0" y="819.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="10.0" y="803.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.05%)</title><rect x="10.0" y="787.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="10.0" y="771.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.03%)</title><rect x="10.0" y="755.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.03%)</title><rect x="10.0" y="739.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="11.3" y="835.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="14.3" y="846.0"></text>
</g>
<g>
<title>[unknown_Java] (8 samples, 0.13%)</title><rect x="11.7" y="835.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="14.7" y="846.0"></text>
</g>
<g>
<title>__GI_munmap (2 samples, 0.03%)</title><rect x="13.3" y="835.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="16.3" y="846.0"></text>
</g>
<g>
<title>system_call_fastpath (2 samples, 0.03%)</title><rect x="13.3" y="819.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="16.3" y="830.0"></text>
</g>
<g>
<title>sys_munmap (2 samples, 0.03%)</title><rect x="13.3" y="803.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="16.3" y="814.0"></text>
</g>
<g>
<title>vm_munmap (2 samples, 0.03%)</title><rect x="13.3" y="787.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="16.3" y="798.0"></text>
</g>
<g>
<title>do_munmap (2 samples, 0.03%)</title><rect x="13.3" y="771.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="16.3" y="782.0"></text>
</g>
<g>
<title>unmap_region (2 samples, 0.03%)</title><rect x="13.3" y="755.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="16.3" y="766.0"></text>
</g>
<g>
<title>tlb_finish_mmu (2 samples, 0.03%)</title><rect x="13.3" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="16.3" y="750.0"></text>
</g>
<g>
<title>arch_tlb_finish_mmu (2 samples, 0.03%)</title><rect x="13.3" y="723.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="16.3" y="734.0"></text>
</g>
<g>
<title>tlb_flush_mmu_tlbonly (2 samples, 0.03%)</title><rect x="13.3" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="16.3" y="718.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (2 samples, 0.03%)</title><rect x="13.3" y="691.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="16.3" y="702.0"></text>
</g>
<g>
<title>native_flush_tlb_others (2 samples, 0.03%)</title><rect x="13.3" y="675.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="16.3" y="686.0"></text>
</g>
<g>
<title>smp_call_function_many (2 samples, 0.03%)</title><rect x="13.3" y="659.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="16.3" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.run (767 samples, 12.46%)</title><rect x="13.6" y="835.0" width="147.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.6" y="846.0">java/lang/Thread.run</text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/LSMDao$FlusherTask.run (767 samples, 12.46%)</title><rect x="13.6" y="819.0" width="147.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.6" y="830.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/LSMDao.flush (767 samples, 12.46%)</title><rect x="13.6" y="803.0" width="147.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.6" y="814.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/FileTable.writeTable (767 samples, 12.46%)</title><rect x="13.6" y="787.0" width="147.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.6" y="798.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.05%)</title><rect x="16.3" y="771.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.3" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (4 samples, 0.06%)</title><rect x="16.9" y="771.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.9" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (10 samples, 0.16%)</title><rect x="17.7" y="771.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.7" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (10 samples, 0.16%)</title><rect x="17.7" y="755.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.7" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (10 samples, 0.16%)</title><rect x="17.7" y="739.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.7" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.&lt;init&gt; (2 samples, 0.03%)</title><rect x="17.7" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (2 samples, 0.03%)</title><rect x="17.7" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.13%)</title><rect x="18.0" y="723.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (8 samples, 0.13%)</title><rect x="18.0" y="707.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (8 samples, 0.13%)</title><rect x="18.0" y="691.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (7 samples, 0.11%)</title><rect x="18.2" y="675.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/Cell.getKey (13 samples, 0.21%)</title><rect x="20.2" y="771.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.2" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.21%)</title><rect x="20.2" y="755.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="23.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (6 samples, 0.10%)</title><rect x="21.5" y="739.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.10%)</title><rect x="21.5" y="723.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.10%)</title><rect x="21.5" y="707.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.08%)</title><rect x="21.7" y="691.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.05%)</title><rect x="21.9" y="675.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.05%)</title><rect x="21.9" y="659.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.9" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.05%)</title><rect x="21.9" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/FileTable.fromInt (7 samples, 0.11%)</title><rect x="22.6" y="771.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.08%)</title><rect x="22.6" y="755.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="25.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="23.0" y="739.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="23.0" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.0" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="23.0" y="707.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.0" y="718.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="23.0" y="691.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="26.0" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putInt (2 samples, 0.03%)</title><rect x="23.6" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/FileTable.fromLong (5 samples, 0.08%)</title><rect x="24.0" y="771.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="27.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.03%)</title><rect x="24.0" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putLong (3 samples, 0.05%)</title><rect x="24.4" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/Value.isRemoved (4 samples, 0.06%)</title><rect x="25.1" y="771.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (703 samples, 11.42%)</title><rect x="25.9" y="771.0" width="134.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="28.9" y="782.0">sun/nio/ch/FileCh..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (17 samples, 0.28%)</title><rect x="28.8" y="755.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.8" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (17 samples, 0.28%)</title><rect x="28.8" y="739.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.06%)</title><rect x="31.3" y="723.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.03%)</title><rect x="31.7" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.03%)</title><rect x="32.0" y="755.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.0" y="766.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.03%)</title><rect x="32.0" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="35.0" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (651 samples, 10.57%)</title><rect x="32.4" y="755.0" width="124.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="35.4" y="766.0">sun/nio/ch/IOUt..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (9 samples, 0.15%)</title><rect x="34.1" y="739.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="37.1" y="750.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (7 samples, 0.11%)</title><rect x="34.5" y="723.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.5" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.05%)</title><rect x="34.9" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="34.9" y="691.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.9" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.05%)</title><rect x="34.9" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.03%)</title><rect x="35.5" y="707.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.03%)</title><rect x="35.5" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.03%)</title><rect x="35.5" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="38.5" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (584 samples, 9.48%)</title><rect x="36.1" y="739.0" width="111.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.1" y="750.0">sun/nio/ch/IO..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (584 samples, 9.48%)</title><rect x="36.1" y="723.0" width="111.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.1" y="734.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (583 samples, 9.47%)</title><rect x="36.3" y="707.0" width="111.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="39.3" y="718.0">sun/nio/ch/Fi..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (4 samples, 0.06%)</title><rect x="41.0" y="691.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="44.0" y="702.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="42.0" y="691.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="45.0" y="702.0"></text>
</g>
<g>
<title>__write (548 samples, 8.90%)</title><rect x="42.4" y="691.0" width="105.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="45.4" y="702.0">__write</text>
</g>
<g>
<title>auditsys (28 samples, 0.45%)</title><rect x="51.4" y="675.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="54.4" y="686.0"></text>
</g>
<g>
<title>__audit_syscall_entry (21 samples, 0.34%)</title><rect x="51.6" y="659.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="54.6" y="670.0"></text>
</g>
<g>
<title>current_kernel_time (4 samples, 0.06%)</title><rect x="54.8" y="643.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="57.8" y="654.0"></text>
</g>
<g>
<title>current_kernel_time (6 samples, 0.10%)</title><rect x="55.6" y="659.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="58.6" y="670.0"></text>
</g>
<g>
<title>sys_write (5 samples, 0.08%)</title><rect x="56.8" y="675.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="59.8" y="686.0"></text>
</g>
<g>
<title>sysret_audit (9 samples, 0.15%)</title><rect x="57.7" y="675.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="60.7" y="686.0"></text>
</g>
<g>
<title>__audit_syscall_exit (4 samples, 0.06%)</title><rect x="57.9" y="659.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="60.9" y="670.0"></text>
</g>
<g>
<title>unroll_tree_refs (2 samples, 0.03%)</title><rect x="59.1" y="659.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="62.1" y="670.0"></text>
</g>
<g>
<title>system_call_after_swapgs (66 samples, 1.07%)</title><rect x="59.4" y="675.0" width="12.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="62.4" y="686.0"></text>
</g>
<g>
<title>system_call_fastpath (393 samples, 6.38%)</title><rect x="72.1" y="675.0" width="75.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="75.1" y="686.0">system_c..</text>
</g>
<g>
<title>sys_write (392 samples, 6.37%)</title><rect x="72.3" y="659.0" width="75.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="75.3" y="670.0">sys_write</text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.03%)</title><rect x="74.2" y="643.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="77.2" y="654.0"></text>
</g>
<g>
<title>do_sync_write (3 samples, 0.05%)</title><rect x="74.8" y="643.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="77.8" y="654.0"></text>
</g>
<g>
<title>fget_light (17 samples, 0.28%)</title><rect x="75.3" y="643.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="78.3" y="654.0"></text>
</g>
<g>
<title>fput (3 samples, 0.05%)</title><rect x="78.6" y="643.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="81.6" y="654.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.05%)</title><rect x="79.4" y="643.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="82.4" y="654.0"></text>
</g>
<g>
<title>vfs_write (352 samples, 5.72%)</title><rect x="79.9" y="643.0" width="67.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="82.9" y="654.0">vfs_write</text>
</g>
<g>
<title>__sb_end_write (3 samples, 0.05%)</title><rect x="80.9" y="627.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="83.9" y="638.0"></text>
</g>
<g>
<title>__sb_start_write (13 samples, 0.21%)</title><rect x="81.5" y="627.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="84.5" y="638.0"></text>
</g>
<g>
<title>__percpu_counter_add (4 samples, 0.06%)</title><rect x="83.2" y="611.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="86.2" y="622.0"></text>
</g>
<g>
<title>do_sync_write (263 samples, 4.27%)</title><rect x="84.0" y="627.0" width="50.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="87.0" y="638.0">do_sy..</text>
</g>
<g>
<title>xfs_file_aio_write	[xfs] (259 samples, 4.21%)</title><rect x="84.7" y="611.0" width="49.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="87.7" y="622.0">xfs_f..</text>
</g>
<g>
<title>xfs_file_buffered_aio_write	[xfs] (228 samples, 3.70%)</title><rect x="90.7" y="595.0" width="43.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="93.7" y="606.0">xfs_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="90.9" y="579.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="93.9" y="590.0"></text>
</g>
<g>
<title>generic_write_checks (2 samples, 0.03%)</title><rect x="91.2" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="94.2" y="590.0"></text>
</g>
<g>
<title>iomap_file_buffered_write (186 samples, 3.02%)</title><rect x="91.6" y="579.0" width="35.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="94.6" y="590.0">iom..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="91.8" y="563.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="94.8" y="574.0"></text>
</g>
<g>
<title>iomap_apply (175 samples, 2.84%)</title><rect x="92.2" y="563.0" width="33.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="95.2" y="574.0">io..</text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (12 samples, 0.19%)</title><rect x="93.5" y="547.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="96.5" y="558.0"></text>
</g>
<g>
<title>iomap_write_actor (122 samples, 1.98%)</title><rect x="95.8" y="547.0" width="23.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.8" y="558.0">i..</text>
</g>
<g>
<title>copy_user_generic_unrolled (9 samples, 0.15%)</title><rect x="97.0" y="531.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="100.0" y="542.0"></text>
</g>
<g>
<title>iomap_write_begin (49 samples, 0.80%)</title><rect x="98.7" y="531.0" width="9.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="101.7" y="542.0"></text>
</g>
<g>
<title>__block_write_begin_int (6 samples, 0.10%)</title><rect x="98.9" y="515.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.9" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (40 samples, 0.65%)</title><rect x="100.4" y="515.0" width="7.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="103.4" y="526.0"></text>
</g>
<g>
<title>__find_lock_page (30 samples, 0.49%)</title><rect x="102.0" y="499.0" width="5.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="105.0" y="510.0"></text>
</g>
<g>
<title>__find_get_page (23 samples, 0.37%)</title><rect x="102.4" y="483.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="105.4" y="494.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (15 samples, 0.24%)</title><rect x="103.9" y="467.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="106.9" y="478.0"></text>
</g>
<g>
<title>__radix_tree_lookup (10 samples, 0.16%)</title><rect x="104.1" y="451.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="107.1" y="462.0"></text>
</g>
<g>
<title>radix_tree_descend (5 samples, 0.08%)</title><rect x="105.0" y="435.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="108.0" y="446.0"></text>
</g>
<g>
<title>radix_tree_descend (4 samples, 0.06%)</title><rect x="106.0" y="451.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="109.0" y="462.0"></text>
</g>
<g>
<title>radix_tree_lookup_slot (5 samples, 0.08%)</title><rect x="106.8" y="483.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="109.8" y="494.0"></text>
</g>
<g>
<title>iomap_write_end (43 samples, 0.70%)</title><rect x="108.1" y="531.0" width="8.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="111.1" y="542.0"></text>
</g>
<g>
<title>generic_write_end (40 samples, 0.65%)</title><rect x="108.7" y="515.0" width="7.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="111.7" y="526.0"></text>
</g>
<g>
<title>__block_commit_write.isra.21 (2 samples, 0.03%)</title><rect x="108.7" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="111.7" y="510.0"></text>
</g>
<g>
<title>__generic_write_end (28 samples, 0.45%)</title><rect x="109.1" y="499.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="112.1" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (7 samples, 0.11%)</title><rect x="109.1" y="483.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="112.1" y="494.0"></text>
</g>
<g>
<title>unlock_page (19 samples, 0.31%)</title><rect x="110.8" y="483.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="113.8" y="494.0"></text>
</g>
<g>
<title>__wake_up_bit (3 samples, 0.05%)</title><rect x="111.2" y="467.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="114.2" y="478.0"></text>
</g>
<g>
<title>page_waitqueue (14 samples, 0.23%)</title><rect x="111.8" y="467.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="114.8" y="478.0"></text>
</g>
<g>
<title>block_write_end (9 samples, 0.15%)</title><rect x="114.4" y="499.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="117.4" y="510.0"></text>
</g>
<g>
<title>__block_commit_write.isra.21 (8 samples, 0.13%)</title><rect x="114.6" y="483.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="117.6" y="494.0"></text>
</g>
<g>
<title>mark_buffer_dirty (2 samples, 0.03%)</title><rect x="115.8" y="467.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="118.8" y="478.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (4 samples, 0.06%)</title><rect x="116.3" y="531.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="119.3" y="542.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (11 samples, 0.18%)</title><rect x="117.1" y="531.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="120.1" y="542.0"></text>
</g>
<g>
<title>xfs_file_iomap_begin	[xfs] (31 samples, 0.50%)</title><rect x="119.4" y="547.0" width="6.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="122.4" y="558.0"></text>
</g>
<g>
<title>up_write (2 samples, 0.03%)</title><rect x="120.0" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="123.0" y="542.0"></text>
</g>
<g>
<title>xfs_bmbt_to_iomap	[xfs] (3 samples, 0.05%)</title><rect x="120.4" y="531.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="123.4" y="542.0"></text>
</g>
<g>
<title>xfs_find_bdev_for_inode	[xfs] (6 samples, 0.10%)</title><rect x="120.9" y="531.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="123.9" y="542.0"></text>
</g>
<g>
<title>xfs_ilock	[xfs] (3 samples, 0.05%)</title><rect x="122.3" y="531.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="125.3" y="542.0"></text>
</g>
<g>
<title>xfs_iomap_write_delay	[xfs] (10 samples, 0.16%)</title><rect x="122.9" y="531.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="125.9" y="542.0"></text>
</g>
<g>
<title>xfs_iext_lookup_extent	[xfs] (5 samples, 0.08%)</title><rect x="123.8" y="515.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="126.8" y="526.0"></text>
</g>
<g>
<title>xfs_iunlock	[xfs] (3 samples, 0.05%)</title><rect x="124.8" y="531.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="127.8" y="542.0"></text>
</g>
<g>
<title>up_write (3 samples, 0.05%)</title><rect x="124.8" y="515.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="127.8" y="526.0"></text>
</g>
<g>
<title>iomap_write_actor (3 samples, 0.05%)</title><rect x="125.7" y="563.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="128.7" y="574.0"></text>
</g>
<g>
<title>xfs_file_iomap_begin	[xfs] (5 samples, 0.08%)</title><rect x="126.3" y="563.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="129.3" y="574.0"></text>
</g>
<g>
<title>xfs_file_aio_write_checks	[xfs] (27 samples, 0.44%)</title><rect x="127.8" y="579.0" width="5.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="130.8" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="128.4" y="563.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="131.4" y="574.0"></text>
</g>
<g>
<title>current_fs_time (3 samples, 0.05%)</title><rect x="129.2" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="132.2" y="574.0"></text>
</g>
<g>
<title>file_update_time (7 samples, 0.11%)</title><rect x="129.8" y="563.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="132.8" y="574.0"></text>
</g>
<g>
<title>update_time (3 samples, 0.05%)</title><rect x="130.5" y="547.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="133.5" y="558.0"></text>
</g>
<g>
<title>xfs_vn_update_time	[xfs] (3 samples, 0.05%)</title><rect x="130.5" y="531.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="133.5" y="542.0"></text>
</g>
<g>
<title>generic_write_checks (5 samples, 0.08%)</title><rect x="131.1" y="563.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="134.1" y="574.0"></text>
</g>
<g>
<title>xfs_break_layouts	[xfs] (4 samples, 0.06%)</title><rect x="132.1" y="563.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="135.1" y="574.0"></text>
</g>
<g>
<title>xfs_break_leased_layouts	[xfs] (4 samples, 0.06%)</title><rect x="132.1" y="547.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="135.1" y="558.0"></text>
</g>
<g>
<title>xfs_ilock	[xfs] (2 samples, 0.03%)</title><rect x="133.0" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="136.0" y="590.0"></text>
</g>
<g>
<title>down_write (2 samples, 0.03%)</title><rect x="133.0" y="563.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="136.0" y="574.0"></text>
</g>
<g>
<title>xfs_iunlock	[xfs] (5 samples, 0.08%)</title><rect x="133.4" y="579.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="136.4" y="590.0"></text>
</g>
<g>
<title>up_write (5 samples, 0.08%)</title><rect x="133.4" y="563.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="136.4" y="574.0"></text>
</g>
<g>
<title>rw_verify_area (58 samples, 0.94%)</title><rect x="134.4" y="627.0" width="11.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="137.4" y="638.0"></text>
</g>
<g>
<title>security_file_permission (42 samples, 0.68%)</title><rect x="136.1" y="611.0" width="8.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="139.1" y="622.0"></text>
</g>
<g>
<title>avc_policy_seqno (4 samples, 0.06%)</title><rect x="139.0" y="595.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="142.0" y="606.0"></text>
</g>
<g>
<title>selinux_file_permission (23 samples, 0.37%)</title><rect x="139.7" y="595.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="142.7" y="606.0"></text>
</g>
<g>
<title>__inode_security_revalidate (3 samples, 0.05%)</title><rect x="143.6" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="146.6" y="590.0"></text>
</g>
<g>
<title>selinux_file_permission (7 samples, 0.11%)</title><rect x="144.1" y="611.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="147.1" y="622.0"></text>
</g>
<g>
<title>xfs_file_aio_write	[xfs] (9 samples, 0.15%)</title><rect x="145.7" y="627.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="148.7" y="638.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.05%)</title><rect x="147.4" y="691.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="150.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (47 samples, 0.76%)</title><rect x="148.0" y="739.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.0" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.06%)</title><rect x="151.0" y="723.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.0" y="734.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.05%)</title><rect x="151.2" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.2" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (14 samples, 0.23%)</title><rect x="151.8" y="723.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.8" y="734.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (4 samples, 0.06%)</title><rect x="153.7" y="707.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.7" y="718.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (3 samples, 0.05%)</title><rect x="153.9" y="691.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.9" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (13 samples, 0.21%)</title><rect x="154.5" y="723.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (18 samples, 0.29%)</title><rect x="157.2" y="755.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (12 samples, 0.19%)</title><rect x="158.3" y="739.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="161.3" y="750.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_NativeThread_current (2 samples, 0.03%)</title><rect x="158.7" y="723.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="161.7" y="734.0"></text>
</g>
<g>
<title>pthread_self (7 samples, 0.11%)</title><rect x="159.3" y="723.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="162.3" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,160 samples, 83.79%)</title><rect x="160.8" y="835.0" width="988.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.8" y="846.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.03%)</title><rect x="166.4" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (15 samples, 0.24%)</title><rect x="166.7" y="819.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.7" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (15 samples, 0.24%)</title><rect x="166.7" y="803.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.7" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (443 samples, 7.19%)</title><rect x="169.6" y="819.0" width="84.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.6" y="830.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (9 samples, 0.15%)</title><rect x="172.3" y="803.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (8 samples, 0.13%)</title><rect x="172.5" y="787.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.5" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (420 samples, 6.82%)</title><rect x="174.0" y="803.0" width="80.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="177.0" y="814.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (8 samples, 0.13%)</title><rect x="178.2" y="787.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="181.2" y="798.0"></text>
</g>
<g>
<title>__GI_epoll_wait (290 samples, 4.71%)</title><rect x="179.8" y="787.0" width="55.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="182.8" y="798.0">__GI_..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.05%)</title><rect x="189.2" y="771.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="192.2" y="782.0"></text>
</g>
<g>
<title>auditsys (26 samples, 0.42%)</title><rect x="189.7" y="771.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="192.7" y="782.0"></text>
</g>
<g>
<title>__audit_syscall_entry (24 samples, 0.39%)</title><rect x="189.7" y="755.0" width="4.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="192.7" y="766.0"></text>
</g>
<g>
<title>current_kernel_time (5 samples, 0.08%)</title><rect x="193.4" y="739.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="196.4" y="750.0"></text>
</g>
<g>
<title>current_kernel_time (2 samples, 0.03%)</title><rect x="194.3" y="755.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="197.3" y="766.0"></text>
</g>
<g>
<title>sys_epoll_wait (14 samples, 0.23%)</title><rect x="194.7" y="771.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="197.7" y="782.0"></text>
</g>
<g>
<title>sysret_audit (6 samples, 0.10%)</title><rect x="197.4" y="771.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="200.4" y="782.0"></text>
</g>
<g>
<title>__audit_syscall_exit (5 samples, 0.08%)</title><rect x="197.4" y="755.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="200.4" y="766.0"></text>
</g>
<g>
<title>mntput (3 samples, 0.05%)</title><rect x="197.6" y="739.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="200.6" y="750.0"></text>
</g>
<g>
<title>system_call_after_swapgs (4 samples, 0.06%)</title><rect x="198.6" y="771.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="201.6" y="782.0"></text>
</g>
<g>
<title>system_call_fastpath (188 samples, 3.05%)</title><rect x="199.3" y="771.0" width="36.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="202.3" y="782.0">sys..</text>
</g>
<g>
<title>sys_epoll_wait (184 samples, 2.99%)</title><rect x="200.1" y="755.0" width="35.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="203.1" y="766.0">sys..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="201.8" y="739.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="204.8" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="202.2" y="739.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="205.2" y="750.0"></text>
</g>
<g>
<title>ep_poll (133 samples, 2.16%)</title><rect x="202.6" y="739.0" width="25.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="205.6" y="750.0">e..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="202.8" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="205.8" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 0.31%)</title><rect x="203.2" y="723.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="206.2" y="734.0"></text>
</g>
<g>
<title>ep_scan_ready_list.isra.7 (85 samples, 1.38%)</title><rect x="206.8" y="723.0" width="16.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="209.8" y="734.0"></text>
</g>
<g>
<title>__list_del_entry (3 samples, 0.05%)</title><rect x="206.8" y="707.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="209.8" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="207.6" y="707.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="210.6" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.23%)</title><rect x="207.9" y="707.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="210.9" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (59 samples, 0.96%)</title><rect x="210.6" y="707.0" width="11.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="213.6" y="718.0"></text>
</g>
<g>
<title>sock_poll (43 samples, 0.70%)</title><rect x="212.2" y="691.0" width="8.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="215.2" y="702.0"></text>
</g>
<g>
<title>tcp_poll (17 samples, 0.28%)</title><rect x="215.4" y="675.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="218.4" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (9 samples, 0.15%)</title><rect x="218.7" y="675.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="221.7" y="686.0"></text>
</g>
<g>
<title>tcp_poll (8 samples, 0.13%)</title><rect x="220.4" y="691.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="223.4" y="702.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.08%)</title><rect x="222.1" y="707.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="225.1" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.11%)</title><rect x="223.1" y="723.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="226.1" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (17 samples, 0.28%)</title><rect x="224.4" y="723.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="227.4" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (16 samples, 0.26%)</title><rect x="224.6" y="707.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="227.6" y="718.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.24%)</title><rect x="224.8" y="691.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="227.8" y="702.0"></text>
</g>
<g>
<title>__schedule (15 samples, 0.24%)</title><rect x="224.8" y="675.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="227.8" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="226.3" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="229.3" y="670.0"></text>
</g>
<g>
<title>rcu_note_context_switch (5 samples, 0.08%)</title><rect x="226.7" y="659.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="229.7" y="670.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.03%)</title><rect x="227.7" y="723.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="230.7" y="734.0"></text>
</g>
<g>
<title>fget_light (36 samples, 0.58%)</title><rect x="228.1" y="739.0" width="6.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="231.1" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.03%)</title><rect x="235.0" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="238.0" y="750.0"></text>
</g>
<g>
<title>__clock_gettime (42 samples, 0.68%)</title><rect x="235.3" y="787.0" width="8.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="238.3" y="798.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.11%)</title><rect x="242.1" y="771.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="245.1" y="782.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="243.4" y="787.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="246.4" y="798.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (7 samples, 0.11%)</title><rect x="243.8" y="787.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="246.8" y="798.0"></text>
</g>
<g>
<title>_init (11 samples, 0.18%)</title><rect x="245.1" y="787.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="248.1" y="798.0"></text>
</g>
<g>
<title>send (38 samples, 0.62%)</title><rect x="247.2" y="787.0" width="7.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="250.2" y="798.0"></text>
</g>
<g>
<title>system_call_after_swapgs (38 samples, 0.62%)</title><rect x="247.2" y="771.0" width="7.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="250.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (4,671 samples, 75.85%)</title><rect x="254.5" y="819.0" width="895.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="257.5" y="830.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (4,653 samples, 75.56%)</title><rect x="257.6" y="803.0" width="891.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.6" y="814.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3,719 samples, 60.39%)</title><rect x="258.3" y="787.0" width="712.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.3" y="798.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3,438 samples, 55.83%)</title><rect x="265.4" y="771.0" width="658.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.4" y="782.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3,434 samples, 55.76%)</title><rect x="265.6" y="755.0" width="658.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.6" y="766.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3,357 samples, 54.51%)</title><rect x="265.8" y="739.0" width="643.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.8" y="750.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,905 samples, 47.17%)</title><rect x="266.4" y="723.0" width="556.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="269.4" y="734.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.11%)</title><rect x="269.5" y="707.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.05%)</title><rect x="270.2" y="691.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="270.4" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="273.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,876 samples, 46.70%)</title><rect x="270.8" y="707.0" width="551.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.8" y="718.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (49 samples, 0.80%)</title><rect x="270.8" y="691.0" width="9.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.8" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (9 samples, 0.15%)</title><rect x="272.7" y="675.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="275.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (29 samples, 0.47%)</title><rect x="274.6" y="675.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (11 samples, 0.18%)</title><rect x="275.0" y="659.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.08%)</title><rect x="276.0" y="643.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="279.0" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (4 samples, 0.06%)</title><rect x="276.2" y="627.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="279.2" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (16 samples, 0.26%)</title><rect x="277.1" y="659.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="280.1" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (16 samples, 0.26%)</title><rect x="277.1" y="643.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="280.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="279.6" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.6" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,827 samples, 45.91%)</title><rect x="280.2" y="691.0" width="541.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="283.2" y="702.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.&lt;init&gt; (4 samples, 0.06%)</title><rect x="280.6" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.6" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session$QueueItem.&lt;init&gt; (4 samples, 0.06%)</title><rect x="280.6" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="283.6" y="670.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.06%)</title><rect x="280.6" y="643.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.6" y="654.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (4 samples, 0.06%)</title><rect x="280.6" y="627.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="283.6" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,821 samples, 45.81%)</title><rect x="281.3" y="675.0" width="540.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.3" y="686.0">one/nio/net/Session.write</text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="282.9" y="659.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="285.9" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.05%)</title><rect x="282.9" y="643.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="285.9" y="654.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.13%)</title><rect x="283.4" y="659.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="286.4" y="670.0"></text>
</g>
<g>
<title>_init (4 samples, 0.06%)</title><rect x="285.0" y="659.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="288.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2,795 samples, 45.39%)</title><rect x="285.9" y="659.0" width="535.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="288.9" y="670.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2,772 samples, 45.01%)</title><rect x="290.3" y="643.0" width="531.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="293.3" y="654.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.08%)</title><rect x="298.6" y="627.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="301.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.73%)</title><rect x="299.5" y="627.0" width="8.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="302.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.73%)</title><rect x="299.5" y="611.0" width="8.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="302.5" y="622.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (37 samples, 0.60%)</title><rect x="299.5" y="595.0" width="7.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="302.5" y="606.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (3 samples, 0.05%)</title><rect x="304.7" y="579.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="307.7" y="590.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.11%)</title><rect x="305.3" y="579.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="308.3" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.03%)</title><rect x="305.9" y="563.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="308.9" y="574.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="306.2" y="563.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="309.2" y="574.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="306.8" y="595.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="309.8" y="606.0"></text>
</g>
<g>
<title>send (5 samples, 0.08%)</title><rect x="307.2" y="595.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="310.2" y="606.0"></text>
</g>
<g>
<title>__libc_recv (35 samples, 0.57%)</title><rect x="308.2" y="627.0" width="6.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="311.2" y="638.0"></text>
</g>
<g>
<title>system_call_after_swapgs (35 samples, 0.57%)</title><rect x="308.2" y="611.0" width="6.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="311.2" y="622.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (13 samples, 0.21%)</title><rect x="314.9" y="627.0" width="2.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="317.9" y="638.0"></text>
</g>
<g>
<title>send (2,630 samples, 42.71%)</title><rect x="317.4" y="627.0" width="503.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="320.4" y="638.0">send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="327.1" y="611.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="330.1" y="622.0"></text>
</g>
<g>
<title>auditsys (12 samples, 0.19%)</title><rect x="327.5" y="611.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="330.5" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_entry (12 samples, 0.19%)</title><rect x="327.5" y="595.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="330.5" y="606.0"></text>
</g>
<g>
<title>sys_sendto (10 samples, 0.16%)</title><rect x="329.8" y="611.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="332.8" y="622.0"></text>
</g>
<g>
<title>sysret_audit (15 samples, 0.24%)</title><rect x="331.7" y="611.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="334.7" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (9 samples, 0.15%)</title><rect x="331.7" y="595.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="334.7" y="606.0"></text>
</g>
<g>
<title>unroll_tree_refs (2 samples, 0.03%)</title><rect x="333.1" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="336.1" y="590.0"></text>
</g>
<g>
<title>unroll_tree_refs (5 samples, 0.08%)</title><rect x="333.6" y="595.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="336.6" y="606.0"></text>
</g>
<g>
<title>sysret_signal (2 samples, 0.03%)</title><rect x="334.6" y="611.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="337.6" y="622.0"></text>
</g>
<g>
<title>system_call_after_swapgs (10 samples, 0.16%)</title><rect x="335.0" y="611.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="338.0" y="622.0"></text>
</g>
<g>
<title>system_call_fastpath (2,528 samples, 41.05%)</title><rect x="336.9" y="611.0" width="484.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="339.9" y="622.0">system_call_fastpath</text>
</g>
<g>
<title>SYSC_sendto (4 samples, 0.06%)</title><rect x="338.1" y="595.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="341.1" y="606.0"></text>
</g>
<g>
<title>sys_sendto (2,518 samples, 40.89%)</title><rect x="338.8" y="595.0" width="482.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="341.8" y="606.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (2,516 samples, 40.86%)</title><rect x="339.0" y="579.0" width="482.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="342.0" y="590.0">SYSC_sendto</text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.06%)</title><rect x="340.7" y="563.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="343.7" y="574.0"></text>
</g>
<g>
<title>sock_sendmsg (2,491 samples, 40.45%)</title><rect x="341.5" y="563.0" width="477.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="344.5" y="574.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (2,443 samples, 39.67%)</title><rect x="341.9" y="547.0" width="468.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="344.9" y="558.0">inet_sendmsg</text>
</g>
<g>
<title>__check_object_size (7 samples, 0.11%)</title><rect x="343.0" y="531.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="346.0" y="542.0"></text>
</g>
<g>
<title>_copy_from_user (4 samples, 0.06%)</title><rect x="344.4" y="531.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="347.4" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (8 samples, 0.13%)</title><rect x="345.1" y="531.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="348.1" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="346.7" y="531.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="349.7" y="542.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.06%)</title><rect x="347.3" y="531.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="350.3" y="542.0"></text>
</g>
<g>
<title>skb_put (2 samples, 0.03%)</title><rect x="348.0" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="351.0" y="542.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.03%)</title><rect x="348.4" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="351.4" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (2,403 samples, 39.02%)</title><rect x="348.8" y="531.0" width="460.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="351.8" y="542.0">tcp_sendmsg</text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.05%)</title><rect x="352.0" y="515.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="355.0" y="526.0"></text>
</g>
<g>
<title>__check_object_size (8 samples, 0.13%)</title><rect x="352.6" y="515.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="355.6" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (6 samples, 0.10%)</title><rect x="353.0" y="499.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="356.0" y="510.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (5 samples, 0.08%)</title><rect x="354.2" y="515.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="357.2" y="526.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.05%)</title><rect x="355.1" y="515.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="358.1" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.08%)</title><rect x="355.7" y="515.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="358.7" y="526.0"></text>
</g>
<g>
<title>check_stack_object (3 samples, 0.05%)</title><rect x="356.6" y="515.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="359.6" y="526.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.10%)</title><rect x="357.4" y="515.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="360.4" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="357.8" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="360.8" y="510.0"></text>
</g>
<g>
<title>local_bh_enable (2 samples, 0.03%)</title><rect x="358.2" y="499.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="361.2" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="358.2" y="483.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="361.2" y="494.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.06%)</title><rect x="358.6" y="515.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="361.6" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="358.7" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="361.7" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="358.7" y="483.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="361.7" y="494.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (69 samples, 1.12%)</title><rect x="359.5" y="515.0" width="13.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="362.5" y="526.0"></text>
</g>
<g>
<title>__alloc_skb (64 samples, 1.04%)</title><rect x="359.5" y="499.0" width="12.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="362.5" y="510.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.32 (23 samples, 0.37%)</title><rect x="360.5" y="483.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="363.5" y="494.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (17 samples, 0.28%)</title><rect x="360.7" y="467.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="363.7" y="478.0"></text>
</g>
<g>
<title>kmalloc_slab (5 samples, 0.08%)</title><rect x="363.9" y="467.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="366.9" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (28 samples, 0.45%)</title><rect x="364.9" y="483.0" width="5.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="367.9" y="494.0"></text>
</g>
<g>
<title>ksize (8 samples, 0.13%)</title><rect x="370.2" y="483.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="373.2" y="494.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (2 samples, 0.03%)</title><rect x="372.4" y="499.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="375.4" y="510.0"></text>
</g>
<g>
<title>skb_entail (6 samples, 0.10%)</title><rect x="372.7" y="515.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="375.7" y="526.0"></text>
</g>
<g>
<title>static_key_enabled (3 samples, 0.05%)</title><rect x="373.9" y="515.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="376.9" y="526.0"></text>
</g>
<g>
<title>tcp_push (2,223 samples, 36.10%)</title><rect x="374.5" y="515.0" width="425.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="377.5" y="526.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (2,217 samples, 36.00%)</title><rect x="375.2" y="499.0" width="424.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="378.2" y="510.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.05%)</title><rect x="376.0" y="483.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="379.0" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (3 samples, 0.05%)</title><rect x="376.6" y="483.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="379.6" y="494.0"></text>
</g>
<g>
<title>tcp_write_xmit (2,207 samples, 35.84%)</title><rect x="377.1" y="483.0" width="423.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="380.1" y="494.0">tcp_write_xmit</text>
</g>
<g>
<title>bictcp_cwnd_event (7 samples, 0.11%)</title><rect x="380.8" y="467.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="383.8" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="382.1" y="467.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="385.1" y="478.0"></text>
</g>
<g>
<title>local_clock (2 samples, 0.03%)</title><rect x="382.5" y="467.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="385.5" y="478.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.03%)</title><rect x="383.1" y="467.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="386.1" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (10 samples, 0.16%)</title><rect x="383.5" y="467.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="386.5" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.08%)</title><rect x="384.4" y="451.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="387.4" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.06%)</title><rect x="384.6" y="435.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="387.6" y="446.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.06%)</title><rect x="384.6" y="419.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="387.6" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="384.8" y="403.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="387.8" y="414.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (7 samples, 0.11%)</title><rect x="385.6" y="467.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="388.6" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="386.5" y="451.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="389.5" y="462.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="386.5" y="435.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="389.5" y="446.0"></text>
</g>
<g>
<title>tcp_transmit_skb (2,148 samples, 34.88%)</title><rect x="387.1" y="467.0" width="411.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="390.1" y="478.0">tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (2,087 samples, 33.89%)</title><rect x="393.8" y="451.0" width="399.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="396.8" y="462.0">ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (6 samples, 0.10%)</title><rect x="394.0" y="435.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="397.0" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.06%)</title><rect x="394.4" y="419.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="397.4" y="430.0"></text>
</g>
<g>
<title>ip_local_out_sk (2,070 samples, 33.61%)</title><rect x="395.2" y="435.0" width="396.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="398.2" y="446.0">ip_local_out_sk</text>
</g>
<g>
<title>__ip_local_out_sk (565 samples, 9.18%)</title><rect x="395.7" y="419.0" width="108.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="398.7" y="430.0">__ip_local_ou..</text>
</g>
<g>
<title>nf_hook_slow (561 samples, 9.11%)</title><rect x="396.5" y="403.0" width="107.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="399.5" y="414.0">nf_hook_slow</text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (8 samples, 0.13%)</title><rect x="397.1" y="387.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="400.1" y="398.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (9 samples, 0.15%)</title><rect x="398.6" y="387.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="401.6" y="398.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (6 samples, 0.10%)</title><rect x="400.3" y="387.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="403.3" y="398.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (9 samples, 0.15%)</title><rect x="401.5" y="387.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="404.5" y="398.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (6 samples, 0.10%)</title><rect x="403.2" y="387.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="406.2" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (16 samples, 0.26%)</title><rect x="404.4" y="387.0" width="3.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="407.4" y="398.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (11 samples, 0.18%)</title><rect x="407.4" y="387.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="410.4" y="398.0"></text>
</g>
<g>
<title>nf_iterate (484 samples, 7.86%)</title><rect x="409.5" y="387.0" width="92.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="412.5" y="398.0">nf_iterate</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.05%)</title><rect x="422.8" y="371.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="425.8" y="382.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (39 samples, 0.63%)</title><rect x="423.3" y="371.0" width="7.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="426.3" y="382.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (34 samples, 0.55%)</title><rect x="424.3" y="355.0" width="6.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="427.3" y="366.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (38 samples, 0.62%)</title><rect x="430.8" y="371.0" width="7.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="433.8" y="382.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (37 samples, 0.60%)</title><rect x="430.8" y="355.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="433.8" y="366.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (15 samples, 0.24%)</title><rect x="438.1" y="371.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="441.1" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (15 samples, 0.24%)</title><rect x="438.1" y="355.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="441.1" y="366.0"></text>
</g>
<g>
<title>nf_ct_nat_ext_add	[nf_nat] (7 samples, 0.11%)</title><rect x="438.3" y="339.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="441.3" y="350.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat_ipv4] (6 samples, 0.10%)</title><rect x="439.6" y="339.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="442.6" y="350.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (2 samples, 0.03%)</title><rect x="440.4" y="323.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="443.4" y="334.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (69 samples, 1.12%)</title><rect x="441.0" y="371.0" width="13.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="444.0" y="382.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (62 samples, 1.01%)</title><rect x="441.9" y="355.0" width="11.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="444.9" y="366.0"></text>
</g>
<g>
<title>local_bh_disable (2 samples, 0.03%)</title><rect x="453.8" y="355.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="456.8" y="366.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (25 samples, 0.41%)</title><rect x="454.2" y="371.0" width="4.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="457.2" y="382.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (22 samples, 0.36%)</title><rect x="454.8" y="355.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="457.8" y="366.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (209 samples, 3.39%)</title><rect x="459.0" y="371.0" width="40.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="462.0" y="382.0">ipv..</text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (3 samples, 0.05%)</title><rect x="459.0" y="355.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="462.0" y="366.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find	[nf_conntrack] (21 samples, 0.34%)</title><rect x="459.5" y="355.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="462.5" y="366.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (3 samples, 0.05%)</title><rect x="463.8" y="355.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="466.8" y="366.0"></text>
</g>
<g>
<title>ipv4_get_l4proto	[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="464.3" y="355.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="467.3" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (156 samples, 2.53%)</title><rect x="464.7" y="355.0" width="29.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="467.7" y="366.0">nf..</text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (40 samples, 0.65%)</title><rect x="467.8" y="339.0" width="7.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="470.8" y="350.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (3 samples, 0.05%)</title><rect x="475.6" y="339.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="478.6" y="350.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (11 samples, 0.18%)</title><rect x="476.8" y="339.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="479.8" y="350.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple	[nf_conntrack_ipv4] (7 samples, 0.11%)</title><rect x="477.2" y="323.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="480.2" y="334.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple	[nf_conntrack] (2 samples, 0.03%)</title><rect x="478.5" y="323.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="481.5" y="334.0"></text>
</g>
<g>
<title>tcp_error	[nf_conntrack] (13 samples, 0.21%)</title><rect x="478.9" y="339.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="481.9" y="350.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (3 samples, 0.05%)</title><rect x="481.4" y="339.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="484.4" y="350.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (62 samples, 1.01%)</title><rect x="482.0" y="339.0" width="11.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="485.0" y="350.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (3 samples, 0.05%)</title><rect x="486.8" y="323.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="489.8" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (3 samples, 0.05%)</title><rect x="487.3" y="323.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="490.3" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="487.3" y="307.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="490.3" y="318.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (7 samples, 0.11%)</title><rect x="487.9" y="323.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="490.9" y="334.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (24 samples, 0.39%)</title><rect x="489.2" y="323.0" width="4.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="492.2" y="334.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple	[nf_conntrack] (4 samples, 0.06%)</title><rect x="493.8" y="339.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="496.8" y="350.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (5 samples, 0.08%)</title><rect x="494.6" y="355.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="497.6" y="366.0"></text>
</g>
<g>
<title>tcp_error	[nf_conntrack] (9 samples, 0.15%)</title><rect x="495.6" y="355.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="498.6" y="366.0"></text>
</g>
<g>
<title>tcp_get_timeouts	[nf_conntrack] (2 samples, 0.03%)</title><rect x="497.3" y="355.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="500.3" y="366.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (7 samples, 0.11%)</title><rect x="497.7" y="355.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="500.7" y="366.0"></text>
</g>
<g>
<title>netlbl_enabled (7 samples, 0.11%)</title><rect x="499.0" y="371.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="502.0" y="382.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (3 samples, 0.05%)</title><rect x="500.4" y="371.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="503.4" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (6 samples, 0.10%)</title><rect x="500.9" y="371.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="503.9" y="382.0"></text>
</g>
<g>
<title>selinux_ipv4_output (9 samples, 0.15%)</title><rect x="502.3" y="387.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="505.3" y="398.0"></text>
</g>
<g>
<title>ip_output (1,499 samples, 24.34%)</title><rect x="504.0" y="419.0" width="287.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="507.0" y="430.0">ip_output</text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.03%)</title><rect x="505.1" y="403.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="508.1" y="414.0"></text>
</g>
<g>
<title>ip_finish_output (1,436 samples, 23.32%)</title><rect x="505.5" y="403.0" width="275.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="508.5" y="414.0">ip_finish_output</text>
</g>
<g>
<title>dev_queue_xmit (122 samples, 1.98%)</title><rect x="517.4" y="387.0" width="23.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="520.4" y="398.0">d..</text>
</g>
<g>
<title>__dev_queue_xmit (116 samples, 1.88%)</title><rect x="517.4" y="371.0" width="22.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="520.4" y="382.0">_..</text>
</g>
<g>
<title>dev_hard_start_xmit (78 samples, 1.27%)</title><rect x="522.8" y="355.0" width="14.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="525.8" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (5 samples, 0.08%)</title><rect x="524.5" y="339.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="527.5" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (57 samples, 0.93%)</title><rect x="525.5" y="339.0" width="10.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="528.5" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (8 samples, 0.13%)</title><rect x="526.8" y="323.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="529.8" y="334.0"></text>
</g>
<g>
<title>netif_rx (39 samples, 0.63%)</title><rect x="528.3" y="323.0" width="7.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="531.3" y="334.0"></text>
</g>
<g>
<title>ktime_get_real (6 samples, 0.10%)</title><rect x="528.5" y="307.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="531.5" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (32 samples, 0.52%)</title><rect x="529.7" y="307.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="532.7" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (14 samples, 0.23%)</title><rect x="529.7" y="291.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="532.7" y="302.0"></text>
</g>
<g>
<title>getnstimeofday64 (4 samples, 0.06%)</title><rect x="532.4" y="291.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="535.4" y="302.0"></text>
</g>
<g>
<title>ktime_get_real (14 samples, 0.23%)</title><rect x="533.1" y="291.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="536.1" y="302.0"></text>
</g>
<g>
<title>__getnstimeofday64 (3 samples, 0.05%)</title><rect x="533.1" y="275.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="536.1" y="286.0"></text>
</g>
<g>
<title>getnstimeofday64 (11 samples, 0.18%)</title><rect x="533.7" y="275.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="536.7" y="286.0"></text>
</g>
<g>
<title>__getnstimeofday64 (8 samples, 0.13%)</title><rect x="533.7" y="259.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="536.7" y="270.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="534.8" y="243.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="537.8" y="254.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="535.4" y="259.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="538.4" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.03%)</title><rect x="536.0" y="323.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="539.0" y="334.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="536.4" y="339.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="539.4" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (5 samples, 0.08%)</title><rect x="536.8" y="339.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="539.8" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.10%)</title><rect x="537.7" y="355.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="540.7" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb.isra.109.part.110 (4 samples, 0.06%)</title><rect x="538.9" y="355.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="541.9" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.05%)</title><rect x="539.1" y="339.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="542.1" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.06%)</title><rect x="539.6" y="371.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="542.6" y="382.0"></text>
</g>
<g>
<title>local_bh_enable (2 samples, 0.03%)</title><rect x="540.4" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="543.4" y="382.0"></text>
</g>
<g>
<title>local_bh_disable (2 samples, 0.03%)</title><rect x="540.8" y="387.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="543.8" y="398.0"></text>
</g>
<g>
<title>local_bh_enable (1,250 samples, 20.30%)</title><rect x="541.2" y="387.0" width="239.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="544.2" y="398.0">local_bh_enable</text>
</g>
<g>
<title>__local_bh_enable_ip (1,249 samples, 20.28%)</title><rect x="541.2" y="371.0" width="239.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="544.2" y="382.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq (1,243 samples, 20.19%)</title><rect x="542.3" y="355.0" width="238.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="545.3" y="366.0">do_softirq</text>
</g>
<g>
<title>call_softirq (1,233 samples, 20.02%)</title><rect x="544.2" y="339.0" width="236.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="547.2" y="350.0">call_softirq</text>
</g>
<g>
<title>__do_softirq (1,223 samples, 19.86%)</title><rect x="544.2" y="323.0" width="234.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="547.2" y="334.0">__do_softirq</text>
</g>
<g>
<title>net_rx_action (1,192 samples, 19.36%)</title><rect x="549.0" y="307.0" width="228.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="552.0" y="318.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (1,177 samples, 19.11%)</title><rect x="551.9" y="291.0" width="225.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="554.9" y="302.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (1,172 samples, 19.03%)</title><rect x="552.9" y="275.0" width="224.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="555.9" y="286.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_core (1,165 samples, 18.92%)</title><rect x="552.9" y="259.0" width="223.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="555.9" y="270.0">__netif_receive_skb_core</text>
</g>
<g>
<title>ip_rcv (1,150 samples, 18.67%)</title><rect x="555.7" y="243.0" width="220.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="558.7" y="254.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="557.7" y="227.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="560.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (1,063 samples, 17.26%)</title><rect x="558.2" y="227.0" width="203.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="561.2" y="238.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (1,058 samples, 17.18%)</title><rect x="559.2" y="211.0" width="202.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="562.2" y="222.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (948 samples, 15.39%)</title><rect x="560.1" y="195.0" width="181.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="563.1" y="206.0">ip_local_deliver_finish</text>
</g>
<g>
<title>_raw_qspin_lock (2 samples, 0.03%)</title><rect x="563.6" y="179.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="566.6" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.05%)</title><rect x="564.0" y="179.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="567.0" y="190.0"></text>
</g>
<g>
<title>sock_put (3 samples, 0.05%)</title><rect x="564.6" y="179.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="567.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (921 samples, 14.96%)</title><rect x="565.3" y="179.0" width="176.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="568.3" y="190.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (57 samples, 0.93%)</title><rect x="567.4" y="163.0" width="10.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="570.4" y="174.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.05%)</title><rect x="578.9" y="163.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="581.9" y="174.0"></text>
</g>
<g>
<title>tcp_filter (12 samples, 0.19%)</title><rect x="579.7" y="163.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="582.7" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="580.1" y="147.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="583.1" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (8 samples, 0.13%)</title><rect x="580.5" y="147.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="583.5" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (6 samples, 0.10%)</title><rect x="580.6" y="131.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="583.6" y="142.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (4 samples, 0.06%)</title><rect x="581.0" y="115.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="584.0" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (833 samples, 13.53%)</title><rect x="582.2" y="163.0" width="159.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="585.2" y="174.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_ack (2 samples, 0.03%)</title><rect x="582.4" y="147.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="585.4" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (5 samples, 0.08%)</title><rect x="582.8" y="147.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="585.8" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (820 samples, 13.32%)</title><rect x="583.9" y="147.0" width="157.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="586.9" y="158.0">tcp_rcv_established</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.06%)</title><rect x="584.9" y="131.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="587.9" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.06%)</title><rect x="584.9" y="115.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="587.9" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.05%)</title><rect x="585.1" y="99.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="588.1" y="110.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.05%)</title><rect x="585.1" y="83.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="588.1" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="585.1" y="67.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="588.1" y="78.0"></text>
</g>
<g>
<title>__tcp_fast_path_on (3 samples, 0.05%)</title><rect x="585.6" y="131.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="588.6" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.03%)</title><rect x="586.4" y="131.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="589.4" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (6 samples, 0.10%)</title><rect x="586.8" y="131.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="589.8" y="142.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.05%)</title><rect x="587.9" y="131.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="590.9" y="142.0"></text>
</g>
<g>
<title>get_seconds (2 samples, 0.03%)</title><rect x="588.5" y="131.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="591.5" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (7 samples, 0.11%)</title><rect x="589.3" y="131.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="592.3" y="142.0"></text>
</g>
<g>
<title>tcp_ack (95 samples, 1.54%)</title><rect x="590.6" y="131.0" width="18.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="593.6" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (31 samples, 0.50%)</title><rect x="598.3" y="115.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="601.3" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (7 samples, 0.11%)</title><rect x="598.5" y="99.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="601.5" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.10%)</title><rect x="598.7" y="83.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="601.7" y="94.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.06%)</title><rect x="599.0" y="67.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="602.0" y="78.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.52 (4 samples, 0.06%)</title><rect x="599.0" y="51.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="602.0" y="62.0"></text>
</g>
<g>
<title>skb_release_all (23 samples, 0.37%)</title><rect x="599.8" y="99.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="602.8" y="110.0"></text>
</g>
<g>
<title>skb_release_data (23 samples, 0.37%)</title><rect x="599.8" y="83.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="602.8" y="94.0"></text>
</g>
<g>
<title>kfree (15 samples, 0.24%)</title><rect x="601.3" y="67.0" width="2.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="604.3" y="78.0"></text>
</g>
<g>
<title>__slab_free (9 samples, 0.15%)</title><rect x="602.5" y="51.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="605.5" y="62.0"></text>
</g>
<g>
<title>cmpxchg_double_slab.isra.52 (3 samples, 0.05%)</title><rect x="603.6" y="35.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="606.6" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (5 samples, 0.08%)</title><rect x="604.2" y="115.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="607.2" y="126.0"></text>
</g>
<g>
<title>local_clock (3 samples, 0.05%)</title><rect x="605.2" y="115.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="608.2" y="126.0"></text>
</g>
<g>
<title>sched_clock (3 samples, 0.05%)</title><rect x="605.2" y="99.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="608.2" y="110.0"></text>
</g>
<g>
<title>vmware_sched_clock (3 samples, 0.05%)</title><rect x="605.2" y="83.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="608.2" y="94.0"></text>
</g>
<g>
<title>tcp_rearm_rto (14 samples, 0.23%)</title><rect x="605.9" y="115.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="608.9" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.05%)</title><rect x="608.0" y="99.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="611.0" y="110.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.05%)</title><rect x="608.0" y="83.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="611.0" y="94.0"></text>
</g>
<g>
<title>tcp_check_space (13 samples, 0.21%)</title><rect x="608.8" y="131.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="611.8" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (671 samples, 10.90%)</title><rect x="611.3" y="131.0" width="128.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="614.3" y="142.0">tcp_data_queue</text>
</g>
<g>
<title>sock_def_readable (634 samples, 10.30%)</title><rect x="615.3" y="115.0" width="121.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="618.3" y="126.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_sync_key (623 samples, 10.12%)</title><rect x="617.4" y="99.0" width="119.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="620.4" y="110.0">__wake_up_sync_..</text>
</g>
<g>
<title>__wake_up_common_lock (623 samples, 10.12%)</title><rect x="617.4" y="83.0" width="119.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="620.4" y="94.0">__wake_up_commo..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (621 samples, 10.08%)</title><rect x="617.8" y="67.0" width="119.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="620.8" y="78.0">_raw_spin_unlo..</text>
</g>
<g>
<title>tcp_event_data_recv (10 samples, 0.16%)</title><rect x="736.8" y="115.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="739.8" y="126.0"></text>
</g>
<g>
<title>tcp_queue_rcv (6 samples, 0.10%)</title><rect x="738.7" y="115.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="741.7" y="126.0"></text>
</g>
<g>
<title>tcp_parse_aligned_timestamp.part.40 (2 samples, 0.03%)</title><rect x="739.9" y="131.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="742.9" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.03%)</title><rect x="740.3" y="131.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="743.3" y="142.0"></text>
</g>
<g>
<title>tcp_urg (4 samples, 0.06%)</title><rect x="741.0" y="147.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="744.0" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (102 samples, 1.66%)</title><rect x="741.8" y="195.0" width="19.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="744.8" y="206.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r9 (2 samples, 0.03%)</title><rect x="742.0" y="179.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="745.0" y="190.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (3 samples, 0.05%)</title><rect x="742.4" y="179.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="745.4" y="190.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn	[iptable_nat] (4 samples, 0.06%)</title><rect x="743.1" y="179.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="746.1" y="190.0"></text>
</g>
<g>
<title>nf_iterate (89 samples, 1.45%)</title><rect x="744.3" y="179.0" width="17.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="747.3" y="190.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (45 samples, 0.73%)</title><rect x="747.2" y="163.0" width="8.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="750.2" y="174.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (4 samples, 0.06%)</title><rect x="747.2" y="147.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="750.2" y="158.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (32 samples, 0.52%)</title><rect x="747.9" y="147.0" width="6.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="750.9" y="158.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (11 samples, 0.18%)</title><rect x="750.6" y="131.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="753.6" y="142.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (10 samples, 0.16%)</title><rect x="750.8" y="115.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="753.8" y="126.0"></text>
</g>
<g>
<title>tcp_mt (7 samples, 0.11%)</title><rect x="752.7" y="131.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="755.7" y="142.0"></text>
</g>
<g>
<title>tcp_mt (9 samples, 0.15%)</title><rect x="754.1" y="147.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="757.1" y="158.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (5 samples, 0.08%)</title><rect x="755.8" y="163.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="758.8" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.08%)</title><rect x="755.8" y="147.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="758.8" y="158.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_fn	[iptable_nat] (4 samples, 0.06%)</title><rect x="756.7" y="163.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="759.7" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="756.9" y="147.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="759.9" y="158.0"></text>
</g>
<g>
<title>nf_nat_packet	[nf_nat] (3 samples, 0.05%)</title><rect x="756.9" y="131.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="759.9" y="142.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (18 samples, 0.29%)</title><rect x="757.5" y="163.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="760.5" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (14 samples, 0.23%)</title><rect x="758.3" y="147.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="761.3" y="158.0"></text>
</g>
<g>
<title>local_bh_enable (3 samples, 0.05%)</title><rect x="760.4" y="131.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="763.4" y="142.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.05%)</title><rect x="760.4" y="115.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="763.4" y="126.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="761.5" y="195.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="764.5" y="206.0"></text>
</g>
<g>
<title>nf_hook_slow (74 samples, 1.20%)</title><rect x="761.9" y="227.0" width="14.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="764.9" y="238.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in	[iptable_nat] (2 samples, 0.03%)</title><rect x="762.1" y="211.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="765.1" y="222.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack_ipv4] (5 samples, 0.08%)</title><rect x="762.7" y="211.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="765.7" y="222.0"></text>
</g>
<g>
<title>nf_iterate (65 samples, 1.06%)</title><rect x="763.6" y="211.0" width="12.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="766.6" y="222.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.06%)</title><rect x="766.5" y="195.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="769.5" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.03%)</title><rect x="766.7" y="179.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="769.7" y="190.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (40 samples, 0.65%)</title><rect x="767.5" y="195.0" width="7.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="770.5" y="206.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (40 samples, 0.65%)</title><rect x="767.5" y="179.0" width="7.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="770.5" y="190.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack_ipv4] (3 samples, 0.05%)</title><rect x="775.3" y="195.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="778.3" y="206.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (3 samples, 0.05%)</title><rect x="775.3" y="179.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="778.3" y="190.0"></text>
</g>
<g>
<title>ip_rcv (6 samples, 0.10%)</title><rect x="776.3" y="259.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="779.3" y="270.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.06%)</title><rect x="777.4" y="307.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="780.4" y="318.0"></text>
</g>
<g>
<title>rcu_bh_qs (2 samples, 0.03%)</title><rect x="778.2" y="307.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="781.2" y="318.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 0.10%)</title><rect x="778.6" y="323.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="781.6" y="334.0"></text>
</g>
<g>
<title>rcu_bh_qs (4 samples, 0.06%)</title><rect x="779.7" y="323.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="782.7" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="780.7" y="403.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="783.7" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (52 samples, 0.84%)</title><rect x="781.3" y="403.0" width="9.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="784.3" y="414.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out	[iptable_nat] (4 samples, 0.06%)</title><rect x="781.7" y="387.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="784.7" y="398.0"></text>
</g>
<g>
<title>ipv4_helper	[nf_conntrack_ipv4] (6 samples, 0.10%)</title><rect x="782.6" y="387.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="785.6" y="398.0"></text>
</g>
<g>
<title>nf_iterate (30 samples, 0.49%)</title><rect x="783.8" y="387.0" width="5.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="786.8" y="398.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.03%)</title><rect x="785.1" y="371.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="788.1" y="382.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out	[iptable_nat] (4 samples, 0.06%)</title><rect x="785.5" y="371.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="788.5" y="382.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat_ipv4] (4 samples, 0.06%)</title><rect x="785.5" y="355.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="788.5" y="366.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack_ipv4] (3 samples, 0.05%)</title><rect x="786.3" y="371.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="789.3" y="382.0"></text>
</g>
<g>
<title>nf_ct_deliver_cached_events	[nf_conntrack] (2 samples, 0.03%)</title><rect x="786.4" y="355.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="789.4" y="366.0"></text>
</g>
<g>
<title>selinux_ip_postroute (5 samples, 0.08%)</title><rect x="787.2" y="371.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="790.2" y="382.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (7 samples, 0.11%)</title><rect x="788.2" y="371.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="791.2" y="382.0"></text>
</g>
<g>
<title>selinux_ip_postroute (7 samples, 0.11%)</title><rect x="788.2" y="355.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="791.2" y="366.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (9 samples, 0.15%)</title><rect x="789.5" y="387.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="792.5" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (3 samples, 0.05%)</title><rect x="791.2" y="419.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="794.2" y="430.0"></text>
</g>
<g>
<title>ip_output (6 samples, 0.10%)</title><rect x="791.8" y="435.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="794.8" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.06%)</title><rect x="793.0" y="435.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="796.0" y="446.0"></text>
</g>
<g>
<title>local_clock (18 samples, 0.29%)</title><rect x="793.7" y="451.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="796.7" y="462.0"></text>
</g>
<g>
<title>sched_clock (9 samples, 0.15%)</title><rect x="793.7" y="435.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="796.7" y="446.0"></text>
</g>
<g>
<title>vmware_sched_clock (9 samples, 0.15%)</title><rect x="793.7" y="419.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="796.7" y="430.0"></text>
</g>
<g>
<title>vmware_sched_clock (9 samples, 0.15%)</title><rect x="795.5" y="435.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="798.5" y="446.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.08%)</title><rect x="797.4" y="451.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="800.4" y="462.0"></text>
</g>
<g>
<title>__skb_clone (5 samples, 0.08%)</title><rect x="797.4" y="435.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="800.4" y="446.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="797.9" y="419.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="800.9" y="430.0"></text>
</g>
<g>
<title>tcp_v4_send_check (7 samples, 0.11%)</title><rect x="798.7" y="467.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="801.7" y="478.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.03%)</title><rect x="800.1" y="499.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="803.1" y="510.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="800.4" y="515.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="803.4" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (43 samples, 0.70%)</title><rect x="800.8" y="515.0" width="8.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="803.8" y="526.0"></text>
</g>
<g>
<title>ipv4_mtu (5 samples, 0.08%)</title><rect x="801.4" y="499.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="804.4" y="510.0"></text>
</g>
<g>
<title>tcp_current_mss (32 samples, 0.52%)</title><rect x="802.4" y="499.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="805.4" y="510.0"></text>
</g>
<g>
<title>ipv4_mtu (7 samples, 0.11%)</title><rect x="805.0" y="483.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="808.0" y="494.0"></text>
</g>
<g>
<title>tcp_established_options (7 samples, 0.11%)</title><rect x="806.4" y="483.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="809.4" y="494.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (4 samples, 0.06%)</title><rect x="807.7" y="483.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="810.7" y="494.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="808.5" y="499.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="811.5" y="510.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.06%)</title><rect x="809.2" y="531.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="812.2" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (34 samples, 0.55%)</title><rect x="810.0" y="547.0" width="6.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="813.0" y="558.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (28 samples, 0.45%)</title><rect x="811.2" y="531.0" width="5.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="814.2" y="542.0"></text>
</g>
<g>
<title>sock_has_perm (28 samples, 0.45%)</title><rect x="811.2" y="515.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="814.2" y="526.0"></text>
</g>
<g>
<title>avc_has_perm_flags (19 samples, 0.31%)</title><rect x="812.9" y="499.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="815.9" y="510.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (5 samples, 0.08%)</title><rect x="816.5" y="547.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="819.5" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg (7 samples, 0.11%)</title><rect x="817.5" y="547.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="820.5" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (12 samples, 0.19%)</title><rect x="818.8" y="563.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="821.8" y="574.0"></text>
</g>
<g>
<title>fget_light (12 samples, 0.19%)</title><rect x="818.8" y="547.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="821.8" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="821.5" y="659.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="824.5" y="670.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="821.5" y="643.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="824.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.10%)</title><rect x="821.9" y="707.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (36 samples, 0.58%)</title><rect x="823.0" y="723.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="826.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.10%)</title><rect x="823.4" y="707.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="826.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.08%)</title><rect x="823.6" y="691.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="826.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (12 samples, 0.19%)</title><rect x="824.6" y="707.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="827.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="825.2" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="828.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (7 samples, 0.11%)</title><rect x="825.5" y="691.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.11%)</title><rect x="826.9" y="707.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="829.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.10%)</title><rect x="827.1" y="691.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="830.1" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.06%)</title><rect x="827.5" y="675.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (9 samples, 0.15%)</title><rect x="828.2" y="707.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="831.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.10%)</title><rect x="828.8" y="691.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="831.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.10%)</title><rect x="828.8" y="675.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="831.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.10%)</title><rect x="828.8" y="659.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="831.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.entity (413 samples, 6.71%)</title><rect x="829.9" y="723.0" width="79.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="832.9" y="734.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.isEmpty (5 samples, 0.08%)</title><rect x="831.7" y="707.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.7" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.06%)</title><rect x="831.9" y="691.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="834.9" y="702.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.06%)</title><rect x="831.9" y="675.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="834.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.34%)</title><rect x="832.6" y="707.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="835.6" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (21 samples, 0.34%)</title><rect x="832.6" y="691.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.6" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (20 samples, 0.32%)</title><rect x="832.6" y="675.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="835.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (20 samples, 0.32%)</title><rect x="832.6" y="659.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="835.6" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (17 samples, 0.28%)</title><rect x="833.0" y="643.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="836.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.06%)</title><rect x="833.4" y="627.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="836.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.13%)</title><rect x="834.2" y="627.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="837.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.06%)</title><rect x="834.9" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="837.9" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.03%)</title><rect x="835.1" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="838.1" y="606.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.05%)</title><rect x="835.7" y="627.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="838.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (7 samples, 0.11%)</title><rect x="836.7" y="707.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="839.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/LSMDao.upsert (371 samples, 6.02%)</title><rect x="838.0" y="707.0" width="71.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.0" y="718.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/MemTablesPool.upsert (370 samples, 6.01%)</title><rect x="838.2" y="691.0" width="70.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="841.2" y="702.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/MemTable.upsert (269 samples, 4.37%)</title><rect x="838.2" y="675.0" width="51.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.2" y="686.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (239 samples, 3.88%)</title><rect x="839.0" y="659.0" width="45.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="842.0" y="670.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (239 samples, 3.88%)</title><rect x="839.0" y="643.0" width="45.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="842.0" y="654.0">java..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (70 samples, 1.14%)</title><rect x="846.4" y="627.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (8 samples, 0.13%)</title><rect x="858.3" y="611.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="861.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (12 samples, 0.19%)</title><rect x="859.8" y="627.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="862.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (3 samples, 0.05%)</title><rect x="862.1" y="627.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="865.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (25 samples, 0.41%)</title><rect x="862.7" y="627.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="865.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.03%)</title><rect x="864.2" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="867.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (15 samples, 0.24%)</title><rect x="864.6" y="611.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="867.6" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 0.24%)</title><rect x="864.6" y="595.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="867.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.23%)</title><rect x="864.8" y="579.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.8" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (11 samples, 0.18%)</title><rect x="865.0" y="563.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="868.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="866.7" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="869.7" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="867.1" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="870.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (88 samples, 1.43%)</title><rect x="867.5" y="627.0" width="16.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="870.5" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (86 samples, 1.40%)</title><rect x="867.9" y="611.0" width="16.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="870.9" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (82 samples, 1.33%)</title><rect x="868.7" y="595.0" width="15.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="871.7" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.05%)</title><rect x="877.1" y="579.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="880.1" y="590.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (23 samples, 0.37%)</title><rect x="877.8" y="579.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="880.8" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (16 samples, 0.26%)</title><rect x="879.2" y="563.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="882.2" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (11 samples, 0.18%)</title><rect x="880.1" y="547.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="883.1" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (11 samples, 0.18%)</title><rect x="882.3" y="579.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.3" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.10%)</title><rect x="883.2" y="563.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (2 samples, 0.03%)</title><rect x="884.4" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/Value.getData (7 samples, 0.11%)</title><rect x="884.7" y="659.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.7" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.10%)</title><rect x="884.9" y="643.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="887.9" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.06%)</title><rect x="885.3" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="888.3" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="885.3" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="888.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.06%)</title><rect x="885.3" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="888.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="885.5" y="579.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="888.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/Value.of (19 samples, 0.31%)</title><rect x="886.1" y="659.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.1" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (15 samples, 0.24%)</title><rect x="886.1" y="643.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.1" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.23%)</title><rect x="886.3" y="627.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.3" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (14 samples, 0.23%)</title><rect x="886.3" y="611.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="889.3" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.19%)</title><rect x="886.7" y="595.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.10%)</title><rect x="886.7" y="579.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="889.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="887.8" y="579.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.8" y="590.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.05%)</title><rect x="888.4" y="579.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="891.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/Value.getTime (4 samples, 0.06%)</title><rect x="889.0" y="643.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="892.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.incrementAndGet (3 samples, 0.05%)</title><rect x="889.2" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="892.2" y="638.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="889.3" y="611.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="892.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/persistence/MemTablesPool.enqueueFlush (101 samples, 1.64%)</title><rect x="889.7" y="675.0" width="19.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="892.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock (96 samples, 1.56%)</title><rect x="889.7" y="659.0" width="18.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (96 samples, 1.56%)</title><rect x="889.7" y="643.0" width="18.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="892.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquire (96 samples, 1.56%)</title><rect x="889.7" y="627.0" width="18.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (95 samples, 1.54%)</title><rect x="889.9" y="611.0" width="18.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="892.9" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="900.8" y="595.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="903.8" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (16 samples, 0.26%)</title><rect x="901.4" y="595.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="904.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (5 samples, 0.08%)</title><rect x="904.5" y="595.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (3 samples, 0.05%)</title><rect x="905.4" y="595.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="908.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.03%)</title><rect x="906.2" y="595.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="909.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.13%)</title><rect x="906.6" y="595.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock (4 samples, 0.06%)</title><rect x="908.1" y="659.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="911.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.06%)</title><rect x="908.1" y="643.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="911.1" y="654.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (41 samples, 0.67%)</title><rect x="909.3" y="739.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="912.3" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.get (36 samples, 0.58%)</title><rect x="910.2" y="723.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="913.2" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (36 samples, 0.58%)</title><rect x="910.2" y="707.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.equals (33 samples, 0.54%)</title><rect x="910.8" y="691.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (34 samples, 0.55%)</title><rect x="917.1" y="739.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="920.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (34 samples, 0.55%)</title><rect x="917.1" y="723.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="920.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (28 samples, 0.45%)</title><rect x="918.3" y="707.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.3" y="718.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.10%)</title><rect x="918.3" y="691.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="921.3" y="702.0"></text>
</g>
<g>
<title>_init (5 samples, 0.08%)</title><rect x="919.4" y="691.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="922.4" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.26%)</title><rect x="920.6" y="691.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="923.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="922.5" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="925.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.06%)</title><rect x="922.9" y="675.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.9" y="686.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.05%)</title><rect x="923.6" y="755.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="926.6" y="766.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="923.8" y="739.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="926.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (93 samples, 1.51%)</title><rect x="924.2" y="771.0" width="17.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="927.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (24 samples, 0.39%)</title><rect x="927.5" y="755.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="930.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.13%)</title><rect x="930.5" y="739.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="933.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.13%)</title><rect x="930.5" y="723.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.10%)</title><rect x="930.9" y="707.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="933.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 0.55%)</title><rect x="932.1" y="755.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (34 samples, 0.55%)</title><rect x="932.1" y="739.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="935.1" y="750.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (2 samples, 0.03%)</title><rect x="938.2" y="723.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="941.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (18 samples, 0.29%)</title><rect x="938.6" y="755.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="941.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.08%)</title><rect x="941.1" y="739.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="944.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (36 samples, 0.58%)</title><rect x="942.0" y="771.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="945.0" y="782.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (26 samples, 0.42%)</title><rect x="943.0" y="755.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="946.0" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (25 samples, 0.41%)</title><rect x="943.2" y="739.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="946.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.digit (4 samples, 0.06%)</title><rect x="944.2" y="723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.2" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.digit (4 samples, 0.06%)</title><rect x="944.2" y="707.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.2" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (4 samples, 0.06%)</title><rect x="944.2" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="944.9" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (9 samples, 0.15%)</title><rect x="945.3" y="723.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="948.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.13%)</title><rect x="945.5" y="707.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="948.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="947.0" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="950.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.05%)</title><rect x="947.4" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="950.4" y="734.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="948.0" y="755.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="951.0" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="948.4" y="755.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="951.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (75 samples, 1.22%)</title><rect x="948.9" y="771.0" width="14.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (59 samples, 0.96%)</title><rect x="951.2" y="755.0" width="11.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="954.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (58 samples, 0.94%)</title><rect x="951.4" y="739.0" width="11.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="954.4" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (10 samples, 0.16%)</title><rect x="953.9" y="723.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="956.9" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (10 samples, 0.16%)</title><rect x="953.9" y="707.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="956.9" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (10 samples, 0.16%)</title><rect x="953.9" y="691.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.9" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (27 samples, 0.44%)</title><rect x="955.8" y="723.0" width="5.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="958.8" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.13%)</title><rect x="961.0" y="723.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="964.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="962.5" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="965.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="962.7" y="739.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="965.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeaderCount (14 samples, 0.23%)</title><rect x="963.3" y="771.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="966.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (12 samples, 0.19%)</title><rect x="963.7" y="755.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="966.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.05%)</title><rect x="966.2" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="969.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (22 samples, 0.36%)</title><rect x="966.8" y="771.0" width="4.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (21 samples, 0.34%)</title><rect x="967.0" y="755.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.0" y="766.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (3 samples, 0.05%)</title><rect x="970.4" y="739.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (930 samples, 15.10%)</title><rect x="971.0" y="787.0" width="178.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.0" y="798.0">one/nio/net/Session.read</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (923 samples, 14.99%)</title><rect x="971.4" y="771.0" width="176.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="974.4" y="782.0">one/nio/net/NativeSocke..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.10%)</title><rect x="991.3" y="755.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="994.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (235 samples, 3.82%)</title><rect x="992.4" y="755.0" width="45.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="995.4" y="766.0">[unk..</text>
</g>
<g>
<title>[unknown] (235 samples, 3.82%)</title><rect x="992.4" y="739.0" width="45.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="995.4" y="750.0">[unk..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (162 samples, 2.63%)</title><rect x="992.4" y="723.0" width="31.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="995.4" y="734.0">Ja..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (21 samples, 0.34%)</title><rect x="995.1" y="707.0" width="4.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="998.1" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (11 samples, 0.18%)</title><rect x="999.5" y="707.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1002.5" y="718.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (27 samples, 0.44%)</title><rect x="1001.6" y="707.0" width="5.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1004.6" y="718.0"></text>
</g>
<g>
<title>_init (5 samples, 0.08%)</title><rect x="1006.8" y="707.0" width="1.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1009.8" y="718.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (73 samples, 1.19%)</title><rect x="1007.8" y="707.0" width="14.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1010.8" y="718.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="1011.2" y="691.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1014.2" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (5 samples, 0.08%)</title><rect x="1011.6" y="691.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1014.6" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.10%)</title><rect x="1012.6" y="691.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1015.6" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (15 samples, 0.24%)</title><rect x="1013.7" y="691.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1016.7" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (27 samples, 0.44%)</title><rect x="1016.6" y="691.0" width="5.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1019.6" y="702.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (15 samples, 0.24%)</title><rect x="1018.9" y="675.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1021.9" y="686.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (6 samples, 0.10%)</title><rect x="1021.8" y="707.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1024.8" y="718.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.05%)</title><rect x="1022.9" y="707.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1025.9" y="718.0"></text>
</g>
<g>
<title>__libc_recv (52 samples, 0.84%)</title><rect x="1023.5" y="723.0" width="9.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1026.5" y="734.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (6 samples, 0.10%)</title><rect x="1033.4" y="723.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1036.4" y="734.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (15 samples, 0.24%)</title><rect x="1034.6" y="723.0" width="2.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1037.6" y="734.0"></text>
</g>
<g>
<title>__GI_epoll_wait (148 samples, 2.40%)</title><rect x="1037.5" y="755.0" width="28.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1040.5" y="766.0">__..</text>
</g>
<g>
<title>system_call_after_swapgs (148 samples, 2.40%)</title><rect x="1037.5" y="739.0" width="28.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1040.5" y="750.0">sy..</text>
</g>
<g>
<title>__libc_recv (423 samples, 6.87%)</title><rect x="1066.0" y="755.0" width="81.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1069.0" y="766.0">__libc_recv</text>
</g>
<g>
<title>auditsys (34 samples, 0.55%)</title><rect x="1073.1" y="739.0" width="6.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1076.1" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_entry (34 samples, 0.55%)</title><rect x="1073.1" y="723.0" width="6.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1076.1" y="734.0"></text>
</g>
<g>
<title>current_kernel_time (2 samples, 0.03%)</title><rect x="1079.2" y="707.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1082.2" y="718.0"></text>
</g>
<g>
<title>sys_recvfrom (12 samples, 0.19%)</title><rect x="1079.6" y="739.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1082.6" y="750.0"></text>
</g>
<g>
<title>sysret_audit (8 samples, 0.13%)</title><rect x="1081.9" y="739.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1084.9" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_exit (6 samples, 0.10%)</title><rect x="1082.1" y="723.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1085.1" y="734.0"></text>
</g>
<g>
<title>dput (2 samples, 0.03%)</title><rect x="1082.7" y="707.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1085.7" y="718.0"></text>
</g>
<g>
<title>system_call_after_swapgs (5 samples, 0.08%)</title><rect x="1083.7" y="739.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1086.7" y="750.0"></text>
</g>
<g>
<title>system_call_fastpath (326 samples, 5.29%)</title><rect x="1084.6" y="739.0" width="62.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1087.6" y="750.0">system..</text>
</g>
<g>
<title>SYSC_recvfrom (3 samples, 0.05%)</title><rect x="1085.8" y="723.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1088.8" y="734.0"></text>
</g>
<g>
<title>sys_recvfrom (317 samples, 5.15%)</title><rect x="1086.3" y="723.0" width="60.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1089.3" y="734.0">sys_re..</text>
</g>
<g>
<title>SYSC_recvfrom (312 samples, 5.07%)</title><rect x="1086.3" y="707.0" width="59.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1089.3" y="718.0">SYSC_r..</text>
</g>
<g>
<title>fget_light (3 samples, 0.05%)</title><rect x="1088.1" y="691.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1091.1" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.08%)</title><rect x="1089.0" y="691.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1092.0" y="702.0"></text>
</g>
<g>
<title>sock_recvmsg (275 samples, 4.47%)</title><rect x="1090.0" y="691.0" width="52.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1093.0" y="702.0">sock_..</text>
</g>
<g>
<title>inet_recvmsg (181 samples, 2.94%)</title><rect x="1090.9" y="675.0" width="34.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1093.9" y="686.0">in..</text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.10%)</title><rect x="1091.3" y="659.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1094.3" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (2 samples, 0.03%)</title><rect x="1092.5" y="659.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1095.5" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (5 samples, 0.08%)</title><rect x="1092.8" y="659.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1095.8" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (6 samples, 0.10%)</title><rect x="1093.8" y="659.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1096.8" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (160 samples, 2.60%)</title><rect x="1095.0" y="659.0" width="30.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1098.0" y="670.0">tc..</text>
</g>
<g>
<title>__kfree_skb (30 samples, 0.49%)</title><rect x="1100.3" y="643.0" width="5.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1103.3" y="654.0"></text>
</g>
<g>
<title>kfree_skbmem (5 samples, 0.08%)</title><rect x="1100.3" y="627.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1103.3" y="638.0"></text>
</g>
<g>
<title>skb_release_all (25 samples, 0.41%)</title><rect x="1101.3" y="627.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1104.3" y="638.0"></text>
</g>
<g>
<title>skb_release_data (11 samples, 0.18%)</title><rect x="1101.3" y="611.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1104.3" y="622.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.06%)</title><rect x="1103.4" y="611.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1106.4" y="622.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.05%)</title><rect x="1103.6" y="595.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1106.6" y="606.0"></text>
</g>
<g>
<title>sock_rfree (10 samples, 0.16%)</title><rect x="1104.2" y="611.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1107.2" y="622.0"></text>
</g>
<g>
<title>_cond_resched (3 samples, 0.05%)</title><rect x="1106.3" y="643.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1109.3" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.10%)</title><rect x="1106.8" y="643.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1109.8" y="654.0"></text>
</g>
<g>
<title>local_bh_enable (2 samples, 0.03%)</title><rect x="1108.0" y="643.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1111.0" y="654.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.06%)</title><rect x="1108.4" y="643.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1111.4" y="654.0"></text>
</g>
<g>
<title>local_bh_enable (4 samples, 0.06%)</title><rect x="1108.4" y="627.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1111.4" y="638.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.06%)</title><rect x="1108.4" y="611.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1111.4" y="622.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.05%)</title><rect x="1109.1" y="643.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1112.1" y="654.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.05%)</title><rect x="1109.1" y="627.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1112.1" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (72 samples, 1.17%)</title><rect x="1109.7" y="643.0" width="13.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1112.7" y="654.0"></text>
</g>
<g>
<title>_copy_to_user (2 samples, 0.03%)</title><rect x="1110.1" y="627.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1113.1" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (16 samples, 0.26%)</title><rect x="1110.5" y="627.0" width="3.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1113.5" y="638.0"></text>
</g>
<g>
<title>memcpy_toiovec (52 samples, 0.84%)</title><rect x="1113.5" y="627.0" width="10.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1116.5" y="638.0"></text>
</g>
<g>
<title>__check_object_size (41 samples, 0.67%)</title><rect x="1113.9" y="611.0" width="7.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1116.9" y="622.0"></text>
</g>
<g>
<title>__check_heap_object (12 samples, 0.19%)</title><rect x="1116.6" y="595.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1119.6" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (15 samples, 0.24%)</title><rect x="1118.9" y="595.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1121.9" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="1121.8" y="611.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1124.8" y="622.0"></text>
</g>
<g>
<title>static_key_enabled (7 samples, 0.11%)</title><rect x="1122.2" y="611.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1125.2" y="622.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (6 samples, 0.10%)</title><rect x="1123.5" y="643.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1126.5" y="654.0"></text>
</g>
<g>
<title>tcp_release_cb (5 samples, 0.08%)</title><rect x="1124.7" y="643.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1127.7" y="654.0"></text>
</g>
<g>
<title>security_socket_recvmsg (79 samples, 1.28%)</title><rect x="1125.6" y="675.0" width="15.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1128.6" y="686.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (71 samples, 1.15%)</title><rect x="1127.0" y="659.0" width="13.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1130.0" y="670.0"></text>
</g>
<g>
<title>sock_has_perm (71 samples, 1.15%)</title><rect x="1127.0" y="643.0" width="13.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1130.0" y="654.0"></text>
</g>
<g>
<title>avc_has_perm_flags (46 samples, 0.75%)</title><rect x="1131.7" y="627.0" width="8.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1134.7" y="638.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (6 samples, 0.10%)</title><rect x="1140.8" y="675.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1143.8" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 0.06%)</title><rect x="1141.9" y="675.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1144.9" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (18 samples, 0.29%)</title><rect x="1142.7" y="691.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1145.7" y="702.0"></text>
</g>
<g>
<title>fget_light (18 samples, 0.29%)</title><rect x="1142.7" y="675.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1145.7" y="686.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.06%)</title><rect x="1146.3" y="707.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1149.3" y="718.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.10%)</title><rect x="1147.1" y="755.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1150.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (5 samples, 0.08%)</title><rect x="1148.2" y="771.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1151.2" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="1149.2" y="803.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.2" y="814.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="1149.2" y="787.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1152.2" y="798.0"></text>
</g>
<g>
<title>start_thread (211 samples, 3.43%)</title><rect x="1149.6" y="835.0" width="40.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1152.6" y="846.0">sta..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (211 samples, 3.43%)</title><rect x="1149.6" y="819.0" width="40.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1152.6" y="830.0">thr..</text>
</g>
<g>
<title>Thread::call_run() (211 samples, 3.43%)</title><rect x="1149.6" y="803.0" width="40.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1152.6" y="814.0">Thr..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.03%)</title><rect x="1149.6" y="787.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.6" y="798.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.03%)</title><rect x="1149.6" y="771.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.6" y="782.0"></text>
</g>
<g>
<title>GangWorker::loop() (11 samples, 0.18%)</title><rect x="1150.0" y="787.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.0" y="798.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (9 samples, 0.15%)</title><rect x="1150.1" y="771.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.1" y="782.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (8 samples, 0.13%)</title><rect x="1150.1" y="755.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1153.1" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (8 samples, 0.13%)</title><rect x="1150.1" y="739.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.1" y="750.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (8 samples, 0.13%)</title><rect x="1150.1" y="723.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1153.1" y="734.0"></text>
</g>
<g>
<title>JavaThread::run() (193 samples, 3.13%)</title><rect x="1152.1" y="787.0" width="36.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1155.1" y="798.0">Jav..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (193 samples, 3.13%)</title><rect x="1152.1" y="771.0" width="36.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1155.1" y="782.0">Jav..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (189 samples, 3.07%)</title><rect x="1152.1" y="755.0" width="36.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1155.1" y="766.0">Com..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (187 samples, 3.04%)</title><rect x="1152.1" y="739.0" width="35.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1155.1" y="750.0">Com..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (169 samples, 2.74%)</title><rect x="1152.1" y="723.0" width="32.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.1" y="734.0">C2..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (169 samples, 2.74%)</title><rect x="1152.1" y="707.0" width="32.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.1" y="718.0">Co..</text>
</g>
<g>
<title>Compile::Code_Gen() (91 samples, 1.48%)</title><rect x="1152.4" y="691.0" width="17.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1155.4" y="702.0"></text>
</g>
<g>
<title>Compile::Output() (4 samples, 0.06%)</title><rect x="1152.6" y="675.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.6" y="686.0"></text>
</g>
<g>
<title>Matcher::match() (6 samples, 0.10%)</title><rect x="1153.6" y="675.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1156.6" y="686.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (5 samples, 0.08%)</title><rect x="1153.8" y="659.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.8" y="670.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (4 samples, 0.06%)</title><rect x="1154.0" y="643.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.0" y="654.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.03%)</title><rect x="1154.2" y="627.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.2" y="638.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (12 samples, 0.19%)</title><rect x="1154.7" y="675.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.7" y="686.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (11 samples, 0.18%)</title><rect x="1154.9" y="659.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.9" y="670.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (3 samples, 0.05%)</title><rect x="1155.1" y="643.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.1" y="654.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (2 samples, 0.03%)</title><rect x="1155.7" y="643.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1158.7" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (66 samples, 1.07%)</title><rect x="1157.0" y="675.0" width="12.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.0" y="686.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (2 samples, 0.03%)</title><rect x="1157.0" y="659.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1160.0" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.03%)</title><rect x="1157.4" y="659.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1160.4" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.03%)</title><rect x="1157.8" y="659.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1160.8" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (6 samples, 0.10%)</title><rect x="1158.2" y="659.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.2" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (21 samples, 0.34%)</title><rect x="1159.3" y="659.0" width="4.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1162.3" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (5 samples, 0.08%)</title><rect x="1160.1" y="643.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.1" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (8 samples, 0.13%)</title><rect x="1161.1" y="643.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1164.1" y="654.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.05%)</title><rect x="1162.0" y="627.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.0" y="638.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (4 samples, 0.06%)</title><rect x="1162.6" y="643.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.6" y="654.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (2 samples, 0.03%)</title><rect x="1163.0" y="627.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.0" y="638.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (2 samples, 0.03%)</title><rect x="1163.4" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.4" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.03%)</title><rect x="1163.4" y="643.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.4" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (5 samples, 0.08%)</title><rect x="1164.1" y="659.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1167.1" y="670.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (2 samples, 0.03%)</title><rect x="1164.5" y="643.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1167.5" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (3 samples, 0.05%)</title><rect x="1165.3" y="659.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.3" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (8 samples, 0.13%)</title><rect x="1165.9" y="659.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.9" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (4 samples, 0.06%)</title><rect x="1166.6" y="643.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.6" y="654.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (2 samples, 0.03%)</title><rect x="1167.6" y="659.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1170.6" y="670.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (2 samples, 0.03%)</title><rect x="1167.6" y="643.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.6" y="654.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (3 samples, 0.05%)</title><rect x="1168.2" y="659.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.2" y="670.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (4 samples, 0.06%)</title><rect x="1168.9" y="659.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.9" y="670.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 0.05%)</title><rect x="1169.1" y="643.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.1" y="654.0"></text>
</g>
<g>
<title>Compile::Optimize() (58 samples, 0.94%)</title><rect x="1169.9" y="691.0" width="11.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.9" y="702.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.256] (2 samples, 0.03%)</title><rect x="1169.9" y="675.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.9" y="686.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (2 samples, 0.03%)</title><rect x="1170.5" y="675.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.5" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (42 samples, 0.68%)</title><rect x="1171.0" y="675.0" width="8.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.0" y="686.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (2 samples, 0.03%)</title><rect x="1171.2" y="659.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.2" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.03%)</title><rect x="1171.8" y="659.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.8" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (2 samples, 0.03%)</title><rect x="1171.8" y="643.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.8" y="654.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (24 samples, 0.39%)</title><rect x="1172.2" y="659.0" width="4.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.2" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (21 samples, 0.34%)</title><rect x="1172.8" y="643.0" width="4.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.8" y="654.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (19 samples, 0.31%)</title><rect x="1172.9" y="627.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.9" y="638.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (15 samples, 0.24%)</title><rect x="1173.7" y="611.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.7" y="622.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (3 samples, 0.05%)</title><rect x="1176.8" y="659.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.8" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (2 samples, 0.03%)</title><rect x="1177.4" y="659.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.4" y="670.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.06%)</title><rect x="1177.9" y="659.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.9" y="670.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.06%)</title><rect x="1177.9" y="643.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.9" y="654.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.03%)</title><rect x="1178.1" y="627.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.1" y="638.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (6 samples, 0.10%)</title><rect x="1179.3" y="675.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.3" y="686.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (6 samples, 0.10%)</title><rect x="1179.3" y="659.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.3" y="670.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1179.3" y="643.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.3" y="654.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1179.7" y="643.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.7" y="654.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (2 samples, 0.03%)</title><rect x="1179.7" y="627.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.7" y="638.0"></text>
</g>
<g>
<title>PhaseMacroExpand::eliminate_macro_nodes() (2 samples, 0.03%)</title><rect x="1180.4" y="675.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.4" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (18 samples, 0.29%)</title><rect x="1181.0" y="691.0" width="3.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.0" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (18 samples, 0.29%)</title><rect x="1181.0" y="675.0" width="3.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (18 samples, 0.29%)</title><rect x="1181.0" y="659.0" width="3.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (18 samples, 0.29%)</title><rect x="1181.0" y="643.0" width="3.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.0" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (18 samples, 0.29%)</title><rect x="1181.0" y="627.0" width="3.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.0" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (18 samples, 0.29%)</title><rect x="1181.0" y="611.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.0" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (14 samples, 0.23%)</title><rect x="1181.2" y="595.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.2" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (14 samples, 0.23%)</title><rect x="1181.2" y="579.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.2" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (13 samples, 0.21%)</title><rect x="1181.4" y="563.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (13 samples, 0.21%)</title><rect x="1181.4" y="547.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.4" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (13 samples, 0.21%)</title><rect x="1181.4" y="531.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.4" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (12 samples, 0.19%)</title><rect x="1181.4" y="515.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.4" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.13%)</title><rect x="1181.6" y="499.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.6" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.13%)</title><rect x="1181.6" y="483.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.6" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.13%)</title><rect x="1181.6" y="467.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.6" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.13%)</title><rect x="1181.6" y="451.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.6" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.13%)</title><rect x="1181.6" y="435.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.6" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.11%)</title><rect x="1181.6" y="419.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.6" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.11%)</title><rect x="1181.6" y="403.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.6" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.11%)</title><rect x="1181.6" y="387.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.6" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.11%)</title><rect x="1181.6" y="371.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.6" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.11%)</title><rect x="1181.6" y="355.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.6" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.11%)</title><rect x="1181.6" y="339.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.6" y="350.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.08%)</title><rect x="1181.6" y="323.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.6" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.08%)</title><rect x="1181.6" y="307.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.6" y="318.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.08%)</title><rect x="1181.6" y="291.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.6" y="302.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.08%)</title><rect x="1181.6" y="275.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.6" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.08%)</title><rect x="1181.6" y="259.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.6" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.08%)</title><rect x="1181.6" y="243.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.6" y="254.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.08%)</title><rect x="1181.6" y="227.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.6" y="238.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1182.0" y="211.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.0" y="222.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1182.0" y="195.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.0" y="206.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1182.1" y="179.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.1" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1182.1" y="163.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.1" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1182.1" y="147.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.1" y="158.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1182.1" y="131.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.1" y="142.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1182.1" y="115.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.1" y="126.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1182.1" y="99.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.1" y="110.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1183.1" y="499.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.1" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1183.1" y="483.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.1" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1183.1" y="467.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.1" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1183.1" y="451.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.1" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1183.1" y="435.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.1" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1183.1" y="419.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.1" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1183.1" y="403.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.1" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1183.1" y="387.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.1" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1183.1" y="371.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.1" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1183.1" y="355.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.1" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1183.1" y="339.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.1" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1183.1" y="323.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.1" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1183.1" y="307.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.1" y="318.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1183.9" y="595.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.9" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1183.9" y="579.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.9" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1183.9" y="563.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.9" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1183.9" y="547.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1183.9" y="531.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.9" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1183.9" y="515.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.9" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1183.9" y="499.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.9" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1183.9" y="483.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.9" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1183.9" y="467.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.9" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1183.9" y="451.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.9" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1183.9" y="435.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.9" y="446.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (18 samples, 0.29%)</title><rect x="1184.4" y="723.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.4" y="734.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (18 samples, 0.29%)</title><rect x="1184.4" y="707.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.4" y="718.0"></text>
</g>
<g>
<title>Compilation::compile_method() (18 samples, 0.29%)</title><rect x="1184.4" y="691.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.4" y="702.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (18 samples, 0.29%)</title><rect x="1184.4" y="675.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.4" y="686.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (10 samples, 0.16%)</title><rect x="1184.4" y="659.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.4" y="670.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (8 samples, 0.13%)</title><rect x="1184.4" y="643.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.4" y="654.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (8 samples, 0.13%)</title><rect x="1184.4" y="627.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.4" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (8 samples, 0.13%)</title><rect x="1184.4" y="611.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.4" y="622.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (8 samples, 0.13%)</title><rect x="1184.4" y="595.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.4" y="606.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (8 samples, 0.13%)</title><rect x="1184.4" y="579.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.4" y="590.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (7 samples, 0.11%)</title><rect x="1184.6" y="563.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.6" y="574.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (7 samples, 0.11%)</title><rect x="1184.6" y="547.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.6" y="558.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (7 samples, 0.11%)</title><rect x="1184.6" y="531.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.6" y="542.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 0.06%)</title><rect x="1184.6" y="515.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.6" y="526.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 0.06%)</title><rect x="1184.6" y="499.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.6" y="510.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 0.06%)</title><rect x="1184.6" y="483.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.6" y="494.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1184.6" y="467.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.6" y="478.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (2 samples, 0.03%)</title><rect x="1185.6" y="515.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.6" y="526.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (6 samples, 0.10%)</title><rect x="1186.6" y="659.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.6" y="670.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (3 samples, 0.05%)</title><rect x="1186.6" y="643.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.6" y="654.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (3 samples, 0.05%)</title><rect x="1186.6" y="627.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.6" y="638.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (3 samples, 0.05%)</title><rect x="1187.1" y="643.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.1" y="654.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (4 samples, 0.06%)</title><rect x="1188.3" y="755.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.3" y="766.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (4 samples, 0.06%)</title><rect x="1188.3" y="739.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.3" y="750.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (4 samples, 0.06%)</title><rect x="1188.3" y="723.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.3" y="734.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (3 samples, 0.05%)</title><rect x="1188.5" y="707.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1191.5" y="718.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.03%)</title><rect x="1188.7" y="691.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.7" y="702.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.03%)</title><rect x="1188.7" y="675.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.7" y="686.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.03%)</title><rect x="1189.0" y="787.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.0" y="798.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.03%)</title><rect x="1189.0" y="771.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.0" y="782.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.03%)</title><rect x="1189.0" y="755.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.0" y="766.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.05%)</title><rect x="1189.4" y="787.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="798.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.03%)</title><rect x="1189.6" y="771.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.6" y="782.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="1189.6" y="755.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1192.6" y="766.0"></text>
</g>
</g>
</svg>
