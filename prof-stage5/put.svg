<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (5,533 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (7 samples, 0.13%)</title><rect x="10.6" y="803.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.6" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.11%)</title><rect x="10.9" y="787.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.9" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.11%)</title><rect x="10.9" y="771.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.9" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.11%)</title><rect x="10.9" y="755.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.9" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="12.1" y="803.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="15.1" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title><rect x="12.1" y="787.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.1" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="12.1" y="771.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="15.1" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="12.1" y="755.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.1" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="12.1" y="739.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="15.1" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.04%)</title><rect x="12.1" y="723.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.1" y="734.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.04%)</title><rect x="12.1" y="707.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.1" y="718.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.07%)</title><rect x="12.6" y="803.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.6" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.07%)</title><rect x="12.6" y="787.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.6" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.07%)</title><rect x="12.6" y="771.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.6" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.07%)</title><rect x="12.6" y="755.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.6" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.05%)</title><rect x="12.6" y="739.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.6" y="750.0"></text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (2 samples, 0.04%)</title><rect x="13.6" y="803.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="16.6" y="814.0"></text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.07%)</title><rect x="14.1" y="803.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="17.1" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="14.3" y="787.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.3" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (2 samples, 0.04%)</title><rect x="14.3" y="771.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="17.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="14.9" y="803.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="17.9" y="814.0"></text>
</g>
<g>
<title>[unknown_Java] (13 samples, 0.23%)</title><rect x="15.3" y="803.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="18.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="17.5" y="787.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="20.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,030 samples, 72.84%)</title><rect x="18.5" y="803.0" width="859.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.5" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,030 samples, 72.84%)</title><rect x="18.5" y="787.0" width="859.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.5" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,030 samples, 72.84%)</title><rect x="18.5" y="771.0" width="859.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="21.5" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/lang/Thread.interrupted (10 samples, 0.18%)</title><rect x="23.0" y="755.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.0" y="766.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (8 samples, 0.14%)</title><rect x="23.4" y="739.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.4" y="750.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (6 samples, 0.11%)</title><rect x="23.6" y="723.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="26.6" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="24.3" y="707.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="27.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (8 samples, 0.14%)</title><rect x="25.1" y="755.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="28.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.13%)</title><rect x="25.4" y="739.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="28.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (7 samples, 0.13%)</title><rect x="25.4" y="723.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (4 samples, 0.07%)</title><rect x="26.0" y="707.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpController.upset (2 samples, 0.04%)</title><rect x="26.4" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (4 samples, 0.07%)</title><rect x="26.8" y="755.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="27.3" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="30.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (654 samples, 11.82%)</title><rect x="27.7" y="755.0" width="139.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.7" y="766.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (643 samples, 11.62%)</title><rect x="29.2" y="739.0" width="137.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.2" y="750.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (641 samples, 11.59%)</title><rect x="29.6" y="723.0" width="136.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.6" y="734.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (6 samples, 0.11%)</title><rect x="38.4" y="707.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.09%)</title><rect x="38.6" y="691.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (449 samples, 8.11%)</title><rect x="39.6" y="707.0" width="95.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.6" y="718.0">java/util/c..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 0.09%)</title><rect x="41.4" y="691.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (436 samples, 7.88%)</title><rect x="42.4" y="691.0" width="93.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.4" y="702.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (357 samples, 6.45%)</title><rect x="59.3" y="675.0" width="76.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.3" y="686.0">jdk/inte..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (4 samples, 0.07%)</title><rect x="63.1" y="659.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="66.1" y="670.0"></text>
</g>
<g>
<title>Unsafe_Park (305 samples, 5.51%)</title><rect x="64.0" y="659.0" width="65.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="67.0" y="670.0">Unsafe_..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (4 samples, 0.07%)</title><rect x="68.0" y="643.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="71.0" y="654.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.07%)</title><rect x="68.9" y="643.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="71.9" y="654.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.11%)</title><rect x="69.7" y="643.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="72.7" y="654.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (83 samples, 1.50%)</title><rect x="71.2" y="643.0" width="17.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="74.2" y="654.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (28 samples, 0.51%)</title><rect x="75.7" y="627.0" width="6.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="78.7" y="638.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (7 samples, 0.13%)</title><rect x="77.6" y="611.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="80.6" y="622.0"></text>
</g>
<g>
<title>update_get_addr (12 samples, 0.22%)</title><rect x="79.1" y="611.0" width="2.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="82.1" y="622.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.04%)</title><rect x="81.7" y="627.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="84.7" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (28 samples, 0.51%)</title><rect x="82.1" y="627.0" width="6.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="85.1" y="638.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="88.3" y="627.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="91.3" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.09%)</title><rect x="89.1" y="643.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="92.1" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (3 samples, 0.05%)</title><rect x="90.2" y="643.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="93.2" y="654.0"></text>
</g>
<g>
<title>_L_unlock_738 (5 samples, 0.09%)</title><rect x="90.8" y="643.0" width="1.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="93.8" y="654.0"></text>
</g>
<g>
<title>__lll_unlock_wake (80 samples, 1.45%)</title><rect x="91.9" y="643.0" width="17.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="94.9" y="654.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.04%)</title><rect x="98.5" y="627.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="101.5" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.04%)</title><rect x="98.5" y="611.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="101.5" y="622.0"></text>
</g>
<g>
<title>sysret_audit (3 samples, 0.05%)</title><rect x="98.9" y="627.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="101.9" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.05%)</title><rect x="98.9" y="611.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="101.9" y="622.0"></text>
</g>
<g>
<title>system_call_fastpath (43 samples, 0.78%)</title><rect x="99.8" y="627.0" width="9.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="102.8" y="638.0"></text>
</g>
<g>
<title>sys_futex (43 samples, 0.78%)</title><rect x="99.8" y="611.0" width="9.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="102.8" y="622.0"></text>
</g>
<g>
<title>do_futex (41 samples, 0.74%)</title><rect x="99.8" y="595.0" width="8.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="102.8" y="606.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 0.47%)</title><rect x="100.9" y="579.0" width="5.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="103.9" y="590.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="105.8" y="563.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="108.8" y="574.0"></text>
</g>
<g>
<title>hash_futex (9 samples, 0.16%)</title><rect x="106.6" y="579.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="109.6" y="590.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="108.5" y="595.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="111.5" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_wait (54 samples, 0.98%)</title><rect x="109.0" y="643.0" width="11.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="112.0" y="654.0"></text>
</g>
<g>
<title>auditsys (9 samples, 0.16%)</title><rect x="110.7" y="627.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="113.7" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_entry (9 samples, 0.16%)</title><rect x="110.7" y="611.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="113.7" y="622.0"></text>
</g>
<g>
<title>system_call_fastpath (35 samples, 0.63%)</title><rect x="113.0" y="627.0" width="7.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="116.0" y="638.0"></text>
</g>
<g>
<title>sys_futex (35 samples, 0.63%)</title><rect x="113.0" y="611.0" width="7.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="116.0" y="622.0"></text>
</g>
<g>
<title>do_futex (34 samples, 0.61%)</title><rect x="113.2" y="595.0" width="7.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="116.2" y="606.0"></text>
</g>
<g>
<title>futex_wait (30 samples, 0.54%)</title><rect x="113.6" y="579.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="116.6" y="590.0"></text>
</g>
<g>
<title>futex_wait_queue_me (9 samples, 0.16%)</title><rect x="114.1" y="563.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="117.1" y="574.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.11%)</title><rect x="114.7" y="547.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="117.7" y="558.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.11%)</title><rect x="114.7" y="531.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="117.7" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="115.4" y="515.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="118.4" y="526.0"></text>
</g>
<g>
<title>futex_wait_setup (16 samples, 0.29%)</title><rect x="116.0" y="563.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="119.0" y="574.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.04%)</title><rect x="119.0" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="122.0" y="558.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.04%)</title><rect x="120.5" y="643.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="123.5" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (5 samples, 0.09%)</title><rect x="120.9" y="643.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="123.9" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.04%)</title><rect x="122.2" y="643.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="125.2" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (8 samples, 0.14%)</title><rect x="122.6" y="643.0" width="1.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="125.6" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (11 samples, 0.20%)</title><rect x="124.3" y="643.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="127.3" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (11 samples, 0.20%)</title><rect x="126.7" y="643.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="129.7" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.13%)</title><rect x="129.0" y="659.0" width="1.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="132.0" y="670.0"></text>
</g>
<g>
<title>system_call_after_swapgs (7 samples, 0.13%)</title><rect x="129.0" y="643.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="132.0" y="654.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.05%)</title><rect x="130.5" y="659.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="133.5" y="670.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (10 samples, 0.18%)</title><rect x="131.1" y="659.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="134.1" y="670.0"></text>
</g>
<g>
<title>send (10 samples, 0.18%)</title><rect x="133.3" y="659.0" width="2.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="136.3" y="670.0"></text>
</g>
<g>
<title>system_call_after_swapgs (10 samples, 0.18%)</title><rect x="133.3" y="643.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="136.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (11 samples, 0.20%)</title><rect x="135.4" y="707.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="138.4" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (8 samples, 0.14%)</title><rect x="136.0" y="691.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.0" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (8 samples, 0.14%)</title><rect x="136.0" y="675.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (134 samples, 2.42%)</title><rect x="137.7" y="707.0" width="28.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="140.7" y="718.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (104 samples, 1.88%)</title><rect x="144.1" y="691.0" width="22.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="147.1" y="702.0">j..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.04%)</title><rect x="166.8" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="169.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$66/1617814768.run (3,330 samples, 60.18%)</title><rect x="167.8" y="755.0" width="710.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.8" y="766.0">ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$66/1617814768.run</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$asyncExecute$4 (3,329 samples, 60.17%)</title><rect x="168.0" y="739.0" width="710.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.0" y="750.0">ru/mail/polis/service/httprest/HttpRestDemon.lambda$asyncExecute$4</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$104/874939749.submit (1,953 samples, 35.30%)</title><rect x="168.2" y="723.0" width="416.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="171.2" y="734.0">ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$104/..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$entity$1 (1,953 samples, 35.30%)</title><rect x="168.2" y="707.0" width="416.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="171.2" y="718.0">ru/mail/polis/service/httprest/HttpRestDemon.lambda$entit..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpController.upset (1,953 samples, 35.30%)</title><rect x="168.2" y="691.0" width="416.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.2" y="702.0">ru/mail/polis/service/httprest/HttpController.upset</text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.11%)</title><rect x="170.8" y="675.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="173.8" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.07%)</title><rect x="170.8" y="659.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.8" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="171.7" y="659.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="171.7" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="174.7" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="171.7" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.7" y="638.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="172.1" y="675.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="175.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.put (1,614 samples, 29.17%)</title><rect x="172.7" y="675.0" width="344.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="175.7" y="686.0">one/nio/http/HttpClient.put</text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (11 samples, 0.20%)</title><rect x="174.0" y="659.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="177.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.09%)</title><rect x="175.3" y="643.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="178.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.09%)</title><rect x="175.3" y="627.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.09%)</title><rect x="175.3" y="611.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.09%)</title><rect x="175.3" y="595.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.3" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,597 samples, 28.86%)</title><rect x="176.3" y="659.0" width="340.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.3" y="670.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.04%)</title><rect x="178.3" y="643.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="181.3" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="178.7" y="643.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="181.7" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1,584 samples, 28.63%)</title><rect x="179.1" y="643.0" width="337.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.1" y="654.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.11%)</title><rect x="182.1" y="627.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.07%)</title><rect x="182.5" y="611.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="185.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (393 samples, 7.10%)</title><rect x="183.4" y="627.0" width="83.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="186.4" y="638.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (348 samples, 6.29%)</title><rect x="192.8" y="611.0" width="74.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.8" y="622.0">one/nio/..</text>
</g>
<g>
<title>[unknown] (53 samples, 0.96%)</title><rect x="196.8" y="595.0" width="11.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="199.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.96%)</title><rect x="196.8" y="579.0" width="11.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="199.8" y="590.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (48 samples, 0.87%)</title><rect x="196.8" y="563.0" width="10.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="199.8" y="574.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.09%)</title><rect x="198.5" y="547.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="201.5" y="558.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (7 samples, 0.13%)</title><rect x="199.6" y="547.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="202.6" y="558.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="201.1" y="547.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="204.1" y="558.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.25%)</title><rect x="201.7" y="547.0" width="3.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="204.7" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (3 samples, 0.05%)</title><rect x="203.6" y="531.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="206.6" y="542.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="204.3" y="531.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="207.3" y="542.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (3 samples, 0.05%)</title><rect x="204.7" y="547.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="207.7" y="558.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (8 samples, 0.14%)</title><rect x="205.4" y="547.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="208.4" y="558.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.07%)</title><rect x="207.3" y="563.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="210.3" y="574.0"></text>
</g>
<g>
<title>__libc_recv (257 samples, 4.64%)</title><rect x="208.1" y="595.0" width="54.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="211.1" y="606.0">__lib..</text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.05%)</title><rect x="214.1" y="579.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="217.1" y="590.0"></text>
</g>
<g>
<title>auditsys (7 samples, 0.13%)</title><rect x="214.7" y="579.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="217.7" y="590.0"></text>
</g>
<g>
<title>__audit_syscall_entry (7 samples, 0.13%)</title><rect x="214.7" y="563.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="217.7" y="574.0"></text>
</g>
<g>
<title>sysret_audit (5 samples, 0.09%)</title><rect x="216.2" y="579.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="219.2" y="590.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.05%)</title><rect x="216.7" y="563.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="219.7" y="574.0"></text>
</g>
<g>
<title>sysret_signal (2 samples, 0.04%)</title><rect x="217.3" y="579.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="220.3" y="590.0"></text>
</g>
<g>
<title>system_call_fastpath (211 samples, 3.81%)</title><rect x="217.7" y="579.0" width="45.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="220.7" y="590.0">syst..</text>
</g>
<g>
<title>sys_recvfrom (209 samples, 3.78%)</title><rect x="218.1" y="563.0" width="44.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="221.1" y="574.0">sys_..</text>
</g>
<g>
<title>SYSC_recvfrom (207 samples, 3.74%)</title><rect x="218.1" y="547.0" width="44.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="221.1" y="558.0">SYSC..</text>
</g>
<g>
<title>fget_light (3 samples, 0.05%)</title><rect x="219.4" y="531.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="222.4" y="542.0"></text>
</g>
<g>
<title>fput (4 samples, 0.07%)</title><rect x="220.1" y="531.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="223.1" y="542.0"></text>
</g>
<g>
<title>sock_recvmsg (188 samples, 3.40%)</title><rect x="220.9" y="531.0" width="40.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="223.9" y="542.0">soc..</text>
</g>
<g>
<title>inet_recvmsg (168 samples, 3.04%)</title><rect x="221.6" y="515.0" width="35.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="224.6" y="526.0">ine..</text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.04%)</title><rect x="222.2" y="499.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="225.2" y="510.0"></text>
</g>
<g>
<title>tcp_recvmsg (163 samples, 2.95%)</title><rect x="222.6" y="499.0" width="34.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="225.6" y="510.0">tc..</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.04%)</title><rect x="223.5" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="226.5" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.07%)</title><rect x="223.9" y="483.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="226.9" y="494.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="224.8" y="483.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="227.8" y="494.0"></text>
</g>
<g>
<title>sk_wait_data (13 samples, 0.23%)</title><rect x="225.4" y="483.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="228.4" y="494.0"></text>
</g>
<g>
<title>prepare_to_wait (4 samples, 0.07%)</title><rect x="225.6" y="467.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="228.6" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="225.6" y="451.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="228.6" y="462.0"></text>
</g>
<g>
<title>schedule_timeout (6 samples, 0.11%)</title><rect x="226.7" y="467.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="229.7" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="227.1" y="451.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="230.1" y="462.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="227.5" y="451.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="230.5" y="462.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (6 samples, 0.11%)</title><rect x="228.2" y="483.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="231.2" y="494.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.04%)</title><rect x="228.6" y="467.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="231.6" y="478.0"></text>
</g>
<g>
<title>tcp_send_ack (2 samples, 0.04%)</title><rect x="229.0" y="467.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="232.0" y="478.0"></text>
</g>
<g>
<title>tcp_prequeue_process (127 samples, 2.30%)</title><rect x="229.5" y="483.0" width="27.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="232.5" y="494.0">t..</text>
</g>
<g>
<title>local_bh_enable (2 samples, 0.04%)</title><rect x="229.7" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="232.7" y="478.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="229.7" y="451.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="232.7" y="462.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (124 samples, 2.24%)</title><rect x="230.1" y="467.0" width="26.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="233.1" y="478.0">t..</text>
</g>
<g>
<title>kfree_skb_partial (2 samples, 0.04%)</title><rect x="230.5" y="451.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="233.5" y="462.0"></text>
</g>
<g>
<title>tcp_rcv_established (120 samples, 2.17%)</title><rect x="230.9" y="451.0" width="25.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="233.9" y="462.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (27 samples, 0.49%)</title><rect x="231.2" y="435.0" width="5.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="234.2" y="446.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.04%)</title><rect x="231.4" y="419.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="234.4" y="430.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (24 samples, 0.43%)</title><rect x="231.8" y="419.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="234.8" y="430.0"></text>
</g>
<g>
<title>sk_reset_timer (22 samples, 0.40%)</title><rect x="232.2" y="403.0" width="4.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="235.2" y="414.0"></text>
</g>
<g>
<title>mod_timer (20 samples, 0.36%)</title><rect x="232.6" y="387.0" width="4.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="235.6" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (18 samples, 0.33%)</title><rect x="233.1" y="371.0" width="3.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="236.1" y="382.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.05%)</title><rect x="236.9" y="435.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="239.9" y="446.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (3 samples, 0.05%)</title><rect x="237.6" y="435.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="240.6" y="446.0"></text>
</g>
<g>
<title>kfree_skb_partial (13 samples, 0.23%)</title><rect x="238.4" y="435.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="241.4" y="446.0"></text>
</g>
<g>
<title>skb_release_all (13 samples, 0.23%)</title><rect x="238.4" y="419.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="241.4" y="430.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.16%)</title><rect x="238.8" y="403.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="241.8" y="414.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="240.8" y="403.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="243.8" y="414.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.09%)</title><rect x="241.6" y="435.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="244.6" y="446.0"></text>
</g>
<g>
<title>tcp_ack (63 samples, 1.14%)</title><rect x="242.7" y="435.0" width="13.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="245.7" y="446.0"></text>
</g>
<g>
<title>__kfree_skb (22 samples, 0.40%)</title><rect x="248.9" y="419.0" width="4.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="251.9" y="430.0"></text>
</g>
<g>
<title>kfree_skbmem (6 samples, 0.11%)</title><rect x="248.9" y="403.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="251.9" y="414.0"></text>
</g>
<g>
<title>kmem_cache_free (6 samples, 0.11%)</title><rect x="248.9" y="387.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="251.9" y="398.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="249.7" y="371.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="252.7" y="382.0"></text>
</g>
<g>
<title>skb_release_all (15 samples, 0.27%)</title><rect x="250.1" y="403.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="253.1" y="414.0"></text>
</g>
<g>
<title>skb_release_data (15 samples, 0.27%)</title><rect x="250.1" y="387.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="253.1" y="398.0"></text>
</g>
<g>
<title>kfree (11 samples, 0.20%)</title><rect x="251.0" y="371.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="254.0" y="382.0"></text>
</g>
<g>
<title>__slab_free (6 samples, 0.11%)</title><rect x="252.1" y="355.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="255.1" y="366.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.04%)</title><rect x="253.5" y="419.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="256.5" y="430.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (2 samples, 0.04%)</title><rect x="254.0" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="257.0" y="430.0"></text>
</g>
<g>
<title>local_clock (2 samples, 0.04%)</title><rect x="254.4" y="419.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="257.4" y="430.0"></text>
</g>
<g>
<title>sched_clock (2 samples, 0.04%)</title><rect x="254.4" y="403.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="257.4" y="414.0"></text>
</g>
<g>
<title>vmware_sched_clock (2 samples, 0.04%)</title><rect x="254.4" y="387.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="257.4" y="398.0"></text>
</g>
<g>
<title>tcp_rearm_rto (5 samples, 0.09%)</title><rect x="254.8" y="419.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="257.8" y="430.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.07%)</title><rect x="256.5" y="483.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="259.5" y="494.0"></text>
</g>
<g>
<title>security_socket_recvmsg (15 samples, 0.27%)</title><rect x="257.4" y="515.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="260.4" y="526.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (15 samples, 0.27%)</title><rect x="257.4" y="499.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="260.4" y="510.0"></text>
</g>
<g>
<title>sock_has_perm (15 samples, 0.27%)</title><rect x="257.4" y="483.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="260.4" y="494.0"></text>
</g>
<g>
<title>avc_has_perm_flags (8 samples, 0.14%)</title><rect x="258.9" y="467.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="261.9" y="478.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.11%)</title><rect x="261.0" y="531.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="264.0" y="542.0"></text>
</g>
<g>
<title>fget_light (6 samples, 0.11%)</title><rect x="261.0" y="515.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="264.0" y="526.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (11 samples, 0.20%)</title><rect x="262.9" y="595.0" width="2.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="265.9" y="606.0"></text>
</g>
<g>
<title>send (8 samples, 0.14%)</title><rect x="265.3" y="595.0" width="1.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="268.3" y="606.0"></text>
</g>
<g>
<title>system_call_after_swapgs (8 samples, 0.14%)</title><rect x="265.3" y="579.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="268.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (86 samples, 1.55%)</title><rect x="267.2" y="627.0" width="18.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="270.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (12 samples, 0.22%)</title><rect x="268.1" y="611.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="269.3" y="595.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="269.8" y="595.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="272.8" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="270.0" y="579.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="273.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (45 samples, 0.81%)</title><rect x="270.8" y="611.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="273.8" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33 samples, 0.60%)</title><rect x="273.4" y="595.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="276.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (31 samples, 0.56%)</title><rect x="273.8" y="579.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.09%)</title><rect x="280.4" y="611.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.4" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="280.6" y="595.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="283.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.04%)</title><rect x="281.1" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="284.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (16 samples, 0.29%)</title><rect x="281.5" y="611.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.16%)</title><rect x="283.0" y="595.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (9 samples, 0.16%)</title><rect x="283.0" y="579.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (2 samples, 0.04%)</title><rect x="284.9" y="611.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.04%)</title><rect x="284.9" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.04%)</title><rect x="284.9" y="579.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (39 samples, 0.70%)</title><rect x="285.5" y="627.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.5" y="638.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (20 samples, 0.36%)</title><rect x="289.6" y="611.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="292.6" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (20 samples, 0.36%)</title><rect x="289.6" y="595.0" width="4.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.6" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (20 samples, 0.36%)</title><rect x="289.6" y="579.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.charAt (20 samples, 0.36%)</title><rect x="289.6" y="563.0" width="4.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="292.6" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="293.4" y="547.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="296.4" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (13 samples, 0.23%)</title><rect x="293.9" y="627.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="296.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (10 samples, 0.18%)</title><rect x="294.5" y="611.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="297.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.18%)</title><rect x="294.5" y="595.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.5" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="296.0" y="579.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="299.0" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.05%)</title><rect x="296.6" y="627.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.6" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (181 samples, 3.27%)</title><rect x="297.3" y="627.0" width="38.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="300.3" y="638.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (11 samples, 0.20%)</title><rect x="297.9" y="611.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="300.9" y="622.0"></text>
</g>
<g>
<title>__GI___setsockopt (150 samples, 2.71%)</title><rect x="300.3" y="611.0" width="31.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="303.3" y="622.0">__..</text>
</g>
<g>
<title>__audit_syscall_entry (4 samples, 0.07%)</title><rect x="305.2" y="595.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="308.2" y="606.0"></text>
</g>
<g>
<title>auditsys (7 samples, 0.13%)</title><rect x="306.0" y="595.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="309.0" y="606.0"></text>
</g>
<g>
<title>__audit_syscall_entry (6 samples, 0.11%)</title><rect x="306.2" y="579.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="309.2" y="590.0"></text>
</g>
<g>
<title>sys_setsockopt (4 samples, 0.07%)</title><rect x="307.5" y="595.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="310.5" y="606.0"></text>
</g>
<g>
<title>system_call_after_swapgs (15 samples, 0.27%)</title><rect x="308.6" y="595.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="311.6" y="606.0"></text>
</g>
<g>
<title>system_call_fastpath (94 samples, 1.70%)</title><rect x="311.8" y="595.0" width="20.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="314.8" y="606.0"></text>
</g>
<g>
<title>security_socket_setsockopt (3 samples, 0.05%)</title><rect x="312.0" y="579.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="315.0" y="590.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.04%)</title><rect x="312.6" y="579.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="315.6" y="590.0"></text>
</g>
<g>
<title>sys_setsockopt (88 samples, 1.59%)</title><rect x="313.1" y="579.0" width="18.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="316.1" y="590.0"></text>
</g>
<g>
<title>__get_user_4 (2 samples, 0.04%)</title><rect x="313.1" y="563.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="316.1" y="574.0"></text>
</g>
<g>
<title>security_socket_setsockopt (36 samples, 0.65%)</title><rect x="313.9" y="563.0" width="7.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="316.9" y="574.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (34 samples, 0.61%)</title><rect x="314.3" y="547.0" width="7.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="317.3" y="558.0"></text>
</g>
<g>
<title>sock_has_perm (26 samples, 0.47%)</title><rect x="316.0" y="531.0" width="5.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="319.0" y="542.0"></text>
</g>
<g>
<title>avc_has_perm_flags (14 samples, 0.25%)</title><rect x="318.6" y="515.0" width="3.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="321.6" y="526.0"></text>
</g>
<g>
<title>selinux_socket_setsockopt (3 samples, 0.05%)</title><rect x="321.6" y="563.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="324.6" y="574.0"></text>
</g>
<g>
<title>sock_set_timeout (2 samples, 0.04%)</title><rect x="322.2" y="563.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="325.2" y="574.0"></text>
</g>
<g>
<title>sock_setsockopt (30 samples, 0.54%)</title><rect x="322.6" y="563.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="325.6" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.09%)</title><rect x="323.9" y="547.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="326.9" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="325.2" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="328.2" y="558.0"></text>
</g>
<g>
<title>local_bh_enable (2 samples, 0.04%)</title><rect x="325.2" y="531.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="328.2" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="325.2" y="515.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="328.2" y="526.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.07%)</title><rect x="325.6" y="547.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="328.6" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="326.1" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="329.1" y="542.0"></text>
</g>
<g>
<title>sock_set_timeout (11 samples, 0.20%)</title><rect x="326.5" y="547.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="329.5" y="558.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.13%)</title><rect x="326.7" y="531.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="329.7" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.07%)</title><rect x="327.3" y="515.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="330.3" y="526.0"></text>
</g>
<g>
<title>static_key_enabled (2 samples, 0.04%)</title><rect x="328.4" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="331.4" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (13 samples, 0.23%)</title><rect x="329.0" y="563.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="332.0" y="574.0"></text>
</g>
<g>
<title>fget_light (13 samples, 0.23%)</title><rect x="329.0" y="547.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="332.0" y="558.0"></text>
</g>
<g>
<title>tracesys (2 samples, 0.04%)</title><rect x="331.8" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="334.8" y="606.0"></text>
</g>
<g>
<title>__libc_recv (9 samples, 0.16%)</title><rect x="332.2" y="611.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="335.2" y="622.0"></text>
</g>
<g>
<title>system_call_after_swapgs (9 samples, 0.16%)</title><rect x="332.2" y="595.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="335.2" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.11%)</title><rect x="334.2" y="611.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="337.2" y="622.0"></text>
</g>
<g>
<title>system_call_after_swapgs (6 samples, 0.11%)</title><rect x="334.2" y="595.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="337.2" y="606.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="335.4" y="611.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="338.4" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (835 samples, 15.09%)</title><rect x="335.9" y="627.0" width="178.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.9" y="638.0">one/nio/net/NativeSocke..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (31 samples, 0.56%)</title><rect x="340.3" y="611.0" width="6.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="343.3" y="622.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="341.4" y="595.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="344.4" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.04%)</title><rect x="341.8" y="595.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="344.8" y="606.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (5 samples, 0.09%)</title><rect x="342.3" y="595.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="345.3" y="606.0"></text>
</g>
<g>
<title>_init (3 samples, 0.05%)</title><rect x="343.3" y="595.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="346.3" y="606.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.22%)</title><rect x="344.0" y="595.0" width="2.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="347.0" y="606.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="344.4" y="579.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="347.4" y="590.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.11%)</title><rect x="345.3" y="579.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="348.3" y="590.0"></text>
</g>
<g>
<title>__GI___setsockopt (20 samples, 0.36%)</title><rect x="347.0" y="611.0" width="4.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="350.0" y="622.0"></text>
</g>
<g>
<title>system_call_after_swapgs (20 samples, 0.36%)</title><rect x="347.0" y="595.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="350.0" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.09%)</title><rect x="351.2" y="611.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="354.2" y="622.0"></text>
</g>
<g>
<title>send (758 samples, 13.70%)</title><rect x="352.3" y="611.0" width="161.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="355.3" y="622.0">send</text>
</g>
<g>
<title>auditsys (3 samples, 0.05%)</title><rect x="355.9" y="595.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="358.9" y="606.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.05%)</title><rect x="355.9" y="579.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="358.9" y="590.0"></text>
</g>
<g>
<title>sys_sendto (2 samples, 0.04%)</title><rect x="356.6" y="595.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="359.6" y="606.0"></text>
</g>
<g>
<title>sysret_audit (7 samples, 0.13%)</title><rect x="357.0" y="595.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="360.0" y="606.0"></text>
</g>
<g>
<title>__audit_syscall_exit (7 samples, 0.13%)</title><rect x="357.0" y="579.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="360.0" y="590.0"></text>
</g>
<g>
<title>path_put (2 samples, 0.04%)</title><rect x="358.0" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="361.0" y="574.0"></text>
</g>
<g>
<title>system_call_fastpath (728 samples, 13.16%)</title><rect x="358.5" y="595.0" width="155.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="361.5" y="606.0">system_call_fastpath</text>
</g>
<g>
<title>sys_sendto (728 samples, 13.16%)</title><rect x="358.5" y="579.0" width="155.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="361.5" y="590.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (726 samples, 13.12%)</title><rect x="358.7" y="563.0" width="154.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="361.7" y="574.0">SYSC_sendto</text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="359.3" y="547.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="362.3" y="558.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.04%)</title><rect x="359.8" y="547.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="362.8" y="558.0"></text>
</g>
<g>
<title>sock_sendmsg (717 samples, 12.96%)</title><rect x="360.2" y="547.0" width="152.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="363.2" y="558.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (707 samples, 12.78%)</title><rect x="360.6" y="531.0" width="150.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="363.6" y="542.0">inet_sendmsg</text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.04%)</title><rect x="361.0" y="515.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="364.0" y="526.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.04%)</title><rect x="361.7" y="515.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="364.7" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg (696 samples, 12.58%)</title><rect x="362.1" y="515.0" width="148.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="365.1" y="526.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (7 samples, 0.13%)</title><rect x="363.2" y="499.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="366.2" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.07%)</title><rect x="363.8" y="483.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="366.8" y="494.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (20 samples, 0.36%)</title><rect x="365.5" y="499.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="368.5" y="510.0"></text>
</g>
<g>
<title>__alloc_skb (18 samples, 0.33%)</title><rect x="365.7" y="483.0" width="3.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="368.7" y="494.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.32 (4 samples, 0.07%)</title><rect x="365.9" y="467.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="368.9" y="478.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.05%)</title><rect x="365.9" y="451.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="368.9" y="462.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (9 samples, 0.16%)</title><rect x="366.8" y="467.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="369.8" y="478.0"></text>
</g>
<g>
<title>ksize (4 samples, 0.07%)</title><rect x="368.7" y="467.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="371.7" y="478.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.07%)</title><rect x="369.8" y="499.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="372.8" y="510.0"></text>
</g>
<g>
<title>tcp_push (639 samples, 11.55%)</title><rect x="370.6" y="499.0" width="136.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="373.6" y="510.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (637 samples, 11.51%)</title><rect x="370.6" y="483.0" width="135.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="373.6" y="494.0">__tcp_push_pendin..</text>
</g>
<g>
<title>tcp_write_xmit (636 samples, 11.49%)</title><rect x="370.8" y="467.0" width="135.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="373.8" y="478.0">tcp_write_xmit</text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.05%)</title><rect x="373.8" y="451.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="376.8" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="374.0" y="435.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="377.0" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="374.0" y="419.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="377.0" y="430.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="374.0" y="403.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="377.0" y="414.0"></text>
</g>
<g>
<title>tcp_transmit_skb (617 samples, 11.15%)</title><rect x="374.9" y="451.0" width="131.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="377.9" y="462.0">tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (604 samples, 10.92%)</title><rect x="376.0" y="435.0" width="128.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="379.0" y="446.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out_sk (2 samples, 0.04%)</title><rect x="376.6" y="419.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="379.6" y="430.0"></text>
</g>
<g>
<title>ip_local_out_sk (597 samples, 10.79%)</title><rect x="377.0" y="419.0" width="127.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="380.0" y="430.0">ip_local_out_sk</text>
</g>
<g>
<title>__ip_local_out_sk (141 samples, 2.55%)</title><rect x="377.0" y="403.0" width="30.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="380.0" y="414.0">__..</text>
</g>
<g>
<title>nf_hook_slow (140 samples, 2.53%)</title><rect x="377.0" y="387.0" width="29.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="380.0" y="398.0">nf..</text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (2 samples, 0.04%)</title><rect x="377.5" y="371.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="380.5" y="382.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (2 samples, 0.04%)</title><rect x="377.9" y="371.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="380.9" y="382.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (2 samples, 0.04%)</title><rect x="378.3" y="371.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="381.3" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.04%)</title><rect x="378.7" y="371.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="381.7" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (2 samples, 0.04%)</title><rect x="379.2" y="371.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="382.2" y="382.0"></text>
</g>
<g>
<title>nf_iterate (127 samples, 2.30%)</title><rect x="379.6" y="371.0" width="27.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="382.6" y="382.0">n..</text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (5 samples, 0.09%)</title><rect x="383.0" y="355.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="386.0" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.09%)</title><rect x="383.0" y="339.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="386.0" y="350.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (11 samples, 0.20%)</title><rect x="384.1" y="355.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="387.1" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.18%)</title><rect x="384.3" y="339.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="387.3" y="350.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (2 samples, 0.04%)</title><rect x="386.4" y="355.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="389.4" y="366.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="386.4" y="339.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="389.4" y="350.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (27 samples, 0.49%)</title><rect x="386.8" y="355.0" width="5.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="389.8" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (26 samples, 0.47%)</title><rect x="387.1" y="339.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="390.1" y="350.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (10 samples, 0.18%)</title><rect x="392.6" y="355.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="395.6" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.18%)</title><rect x="392.6" y="339.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="395.6" y="350.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (51 samples, 0.92%)</title><rect x="394.7" y="355.0" width="10.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="397.7" y="366.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find	[nf_conntrack] (7 samples, 0.13%)</title><rect x="394.9" y="339.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="397.9" y="350.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (2 samples, 0.04%)</title><rect x="396.4" y="339.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="399.4" y="350.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (37 samples, 0.67%)</title><rect x="396.9" y="339.0" width="7.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="399.9" y="350.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (11 samples, 0.20%)</title><rect x="397.5" y="323.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="400.5" y="334.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple	[nf_conntrack_ipv4] (2 samples, 0.04%)</title><rect x="400.5" y="323.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="403.5" y="334.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (4 samples, 0.07%)</title><rect x="401.1" y="323.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="404.1" y="334.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple	[nf_conntrack_ipv4] (2 samples, 0.04%)</title><rect x="401.3" y="307.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="404.3" y="318.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (10 samples, 0.18%)</title><rect x="402.4" y="323.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="405.4" y="334.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (2 samples, 0.04%)</title><rect x="404.1" y="307.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="407.1" y="318.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (3 samples, 0.05%)</title><rect x="405.0" y="339.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="408.0" y="350.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="406.0" y="355.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="409.0" y="366.0"></text>
</g>
<g>
<title>ip_output (456 samples, 8.24%)</title><rect x="407.1" y="403.0" width="97.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="410.1" y="414.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (426 samples, 7.70%)</title><rect x="407.7" y="387.0" width="90.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="410.7" y="398.0">ip_finish_..</text>
</g>
<g>
<title>dev_queue_xmit (23 samples, 0.42%)</title><rect x="411.2" y="371.0" width="4.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="414.2" y="382.0"></text>
</g>
<g>
<title>__dev_queue_xmit (21 samples, 0.38%)</title><rect x="411.2" y="355.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="414.2" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (14 samples, 0.25%)</title><rect x="412.0" y="339.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="415.0" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.05%)</title><rect x="412.9" y="323.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="415.9" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.09%)</title><rect x="413.5" y="323.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="416.5" y="334.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.05%)</title><rect x="413.9" y="307.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="416.9" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.05%)</title><rect x="413.9" y="291.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="416.9" y="302.0"></text>
</g>
<g>
<title>ktime_get_real (2 samples, 0.04%)</title><rect x="414.1" y="275.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="417.1" y="286.0"></text>
</g>
<g>
<title>getnstimeofday64 (2 samples, 0.04%)</title><rect x="414.1" y="259.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="417.1" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.04%)</title><rect x="414.6" y="323.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="417.6" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb.isra.109.part.110 (2 samples, 0.04%)</title><rect x="415.2" y="339.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="418.2" y="350.0"></text>
</g>
<g>
<title>local_bh_enable (386 samples, 6.98%)</title><rect x="416.3" y="371.0" width="82.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="419.3" y="382.0">local_bh_..</text>
</g>
<g>
<title>__local_bh_enable_ip (386 samples, 6.98%)</title><rect x="416.3" y="355.0" width="82.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="419.3" y="366.0">__local_b..</text>
</g>
<g>
<title>do_softirq (383 samples, 6.92%)</title><rect x="416.9" y="339.0" width="81.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="419.9" y="350.0">do_softirq</text>
</g>
<g>
<title>call_softirq (376 samples, 6.80%)</title><rect x="418.4" y="323.0" width="80.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="421.4" y="334.0">call_soft..</text>
</g>
<g>
<title>__do_softirq (376 samples, 6.80%)</title><rect x="418.4" y="307.0" width="80.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="421.4" y="318.0">__do_soft..</text>
</g>
<g>
<title>net_rx_action (369 samples, 6.67%)</title><rect x="419.9" y="291.0" width="78.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="422.9" y="302.0">net_rx_ac..</text>
</g>
<g>
<title>process_backlog (364 samples, 6.58%)</title><rect x="421.0" y="275.0" width="77.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="424.0" y="286.0">process_b..</text>
</g>
<g>
<title>__netif_receive_skb (358 samples, 6.47%)</title><rect x="422.2" y="259.0" width="76.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="425.2" y="270.0">__netif_..</text>
</g>
<g>
<title>__netif_receive_skb_core (356 samples, 6.43%)</title><rect x="422.2" y="243.0" width="76.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="425.2" y="254.0">__netif_..</text>
</g>
<g>
<title>ip_rcv (353 samples, 6.38%)</title><rect x="422.9" y="227.0" width="75.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="425.9" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.04%)</title><rect x="424.4" y="211.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="427.4" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (321 samples, 5.80%)</title><rect x="424.8" y="211.0" width="68.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="427.8" y="222.0">ip_rcv_..</text>
</g>
<g>
<title>ip_local_deliver (319 samples, 5.77%)</title><rect x="424.8" y="195.0" width="68.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="427.8" y="206.0">ip_loca..</text>
</g>
<g>
<title>ip_local_deliver_finish (276 samples, 4.99%)</title><rect x="425.0" y="179.0" width="58.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="428.0" y="190.0">ip_loc..</text>
</g>
<g>
<title>tcp_v4_rcv (273 samples, 4.93%)</title><rect x="425.7" y="163.0" width="58.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="428.7" y="174.0">tcp_v4..</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.18%)</title><rect x="426.7" y="147.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="429.7" y="158.0"></text>
</g>
<g>
<title>tcp_filter (4 samples, 0.07%)</title><rect x="429.5" y="147.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="432.5" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.05%)</title><rect x="429.7" y="131.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="432.7" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.04%)</title><rect x="429.9" y="115.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="432.9" y="126.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.04%)</title><rect x="429.9" y="99.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="432.9" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (250 samples, 4.52%)</title><rect x="430.6" y="147.0" width="53.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="433.6" y="158.0">tcp_v..</text>
</g>
<g>
<title>tcp_rcv_established (248 samples, 4.48%)</title><rect x="431.0" y="131.0" width="52.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="434.0" y="142.0">tcp_r..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.11%)</title><rect x="431.6" y="115.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="434.6" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.11%)</title><rect x="431.6" y="99.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="434.6" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.09%)</title><rect x="431.8" y="83.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="434.8" y="94.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.07%)</title><rect x="432.1" y="67.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="435.1" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="432.1" y="51.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="435.1" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.04%)</title><rect x="433.8" y="115.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="436.8" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.04%)</title><rect x="433.8" y="99.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="436.8" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="433.8" y="83.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="436.8" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="433.8" y="67.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="436.8" y="78.0"></text>
</g>
<g>
<title>tcp_ack (31 samples, 0.56%)</title><rect x="434.2" y="115.0" width="6.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="437.2" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (14 samples, 0.25%)</title><rect x="437.0" y="99.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="440.0" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="437.0" y="83.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="440.0" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="437.2" y="67.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="440.2" y="78.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.20%)</title><rect x="437.6" y="83.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="440.6" y="94.0"></text>
</g>
<g>
<title>skb_release_data (10 samples, 0.18%)</title><rect x="437.6" y="67.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="440.6" y="78.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.11%)</title><rect x="438.5" y="51.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="441.5" y="62.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="440.4" y="99.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="443.4" y="110.0"></text>
</g>
<g>
<title>tcp_check_space (8 samples, 0.14%)</title><rect x="440.8" y="115.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="443.8" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (192 samples, 3.47%)</title><rect x="442.5" y="115.0" width="41.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="445.5" y="126.0">tcp..</text>
</g>
<g>
<title>sock_def_readable (175 samples, 3.16%)</title><rect x="444.6" y="99.0" width="37.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="447.6" y="110.0">soc..</text>
</g>
<g>
<title>__wake_up_sync_key (168 samples, 3.04%)</title><rect x="446.1" y="83.0" width="35.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="449.1" y="94.0">__w..</text>
</g>
<g>
<title>__wake_up_common_lock (168 samples, 3.04%)</title><rect x="446.1" y="67.0" width="35.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="449.1" y="78.0">__w..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (166 samples, 3.00%)</title><rect x="446.6" y="51.0" width="35.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="449.6" y="62.0">_ra..</text>
</g>
<g>
<title>tcp_event_data_recv (5 samples, 0.09%)</title><rect x="482.0" y="99.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="485.0" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.04%)</title><rect x="483.0" y="99.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="486.0" y="110.0"></text>
</g>
<g>
<title>nf_hook_slow (40 samples, 0.72%)</title><rect x="483.9" y="179.0" width="8.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="486.9" y="190.0"></text>
</g>
<g>
<title>nf_iterate (36 samples, 0.65%)</title><rect x="484.7" y="163.0" width="7.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="487.7" y="174.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (23 samples, 0.42%)</title><rect x="485.2" y="147.0" width="4.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="488.2" y="158.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (18 samples, 0.33%)</title><rect x="485.6" y="131.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="488.6" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (5 samples, 0.09%)</title><rect x="487.5" y="115.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="490.5" y="126.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (4 samples, 0.07%)</title><rect x="487.7" y="99.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="490.7" y="110.0"></text>
</g>
<g>
<title>tcp_mt (4 samples, 0.07%)</title><rect x="488.6" y="115.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="491.6" y="126.0"></text>
</g>
<g>
<title>tcp_mt (3 samples, 0.05%)</title><rect x="489.4" y="131.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="492.4" y="142.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.05%)</title><rect x="490.1" y="147.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="493.1" y="158.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.05%)</title><rect x="490.1" y="131.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="493.1" y="142.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (7 samples, 0.13%)</title><rect x="490.9" y="147.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="493.9" y="158.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.13%)</title><rect x="490.9" y="131.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="493.9" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.04%)</title><rect x="492.4" y="179.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="495.4" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (23 samples, 0.42%)</title><rect x="493.3" y="211.0" width="4.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="496.3" y="222.0"></text>
</g>
<g>
<title>nf_iterate (21 samples, 0.38%)</title><rect x="493.7" y="195.0" width="4.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="496.7" y="206.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.07%)</title><rect x="494.1" y="179.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="497.1" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.07%)</title><rect x="494.1" y="163.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="497.1" y="174.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (13 samples, 0.23%)</title><rect x="495.2" y="179.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="498.2" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (13 samples, 0.23%)</title><rect x="495.2" y="163.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="498.2" y="174.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.04%)</title><rect x="498.2" y="243.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="501.2" y="254.0"></text>
</g>
<g>
<title>local_bh_enable (2 samples, 0.04%)</title><rect x="498.8" y="387.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="501.8" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (24 samples, 0.43%)</title><rect x="499.2" y="387.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="502.2" y="398.0"></text>
</g>
<g>
<title>nf_iterate (19 samples, 0.34%)</title><rect x="499.7" y="371.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="502.7" y="382.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (4 samples, 0.07%)</title><rect x="500.9" y="355.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="503.9" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.07%)</title><rect x="500.9" y="339.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="503.9" y="350.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (6 samples, 0.11%)</title><rect x="502.4" y="355.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="505.4" y="366.0"></text>
</g>
<g>
<title>selinux_ip_postroute (6 samples, 0.11%)</title><rect x="502.4" y="339.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="505.4" y="350.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (3 samples, 0.05%)</title><rect x="503.7" y="371.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="506.7" y="382.0"></text>
</g>
<g>
<title>local_clock (3 samples, 0.05%)</title><rect x="504.8" y="435.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="507.8" y="446.0"></text>
</g>
<g>
<title>vmware_sched_clock (2 samples, 0.04%)</title><rect x="505.0" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="508.0" y="430.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.05%)</title><rect x="505.4" y="435.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="508.4" y="446.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.04%)</title><rect x="506.1" y="435.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="509.1" y="446.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.04%)</title><rect x="506.5" y="483.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="509.5" y="494.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.04%)</title><rect x="506.9" y="499.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="509.9" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (15 samples, 0.27%)</title><rect x="507.3" y="499.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="510.3" y="510.0"></text>
</g>
<g>
<title>tcp_current_mss (13 samples, 0.23%)</title><rect x="507.8" y="483.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="510.8" y="494.0"></text>
</g>
<g>
<title>tcp_established_options (4 samples, 0.07%)</title><rect x="509.3" y="467.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="512.3" y="478.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (2 samples, 0.04%)</title><rect x="509.7" y="451.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="512.7" y="462.0"></text>
</g>
<g>
<title>tcp_v4_md5_lookup (2 samples, 0.04%)</title><rect x="510.1" y="467.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="513.1" y="478.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.07%)</title><rect x="510.5" y="515.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="513.5" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.14%)</title><rect x="511.4" y="531.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="514.4" y="542.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (5 samples, 0.09%)</title><rect x="512.0" y="515.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="515.0" y="526.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.09%)</title><rect x="512.0" y="499.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="515.0" y="510.0"></text>
</g>
<g>
<title>avc_has_perm_flags (2 samples, 0.04%)</title><rect x="512.7" y="483.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="515.7" y="494.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="513.1" y="547.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="516.1" y="558.0"></text>
</g>
<g>
<title>fget_light (2 samples, 0.04%)</title><rect x="513.1" y="531.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="516.1" y="542.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (11 samples, 0.20%)</title><rect x="513.9" y="627.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.9" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (7 samples, 0.13%)</title><rect x="514.8" y="611.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="517.8" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (7 samples, 0.13%)</title><rect x="514.8" y="595.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="517.8" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.05%)</title><rect x="515.7" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.7" y="590.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (3 samples, 0.05%)</title><rect x="516.3" y="627.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (17 samples, 0.31%)</title><rect x="516.9" y="675.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.20%)</title><rect x="518.2" y="659.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.20%)</title><rect x="518.2" y="643.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/LSMDao.upsert (266 samples, 4.81%)</title><rect x="520.6" y="675.0" width="56.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="523.6" y="686.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTablesPool.upsert (266 samples, 4.81%)</title><rect x="520.6" y="659.0" width="56.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="523.6" y="670.0">ru/mai..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (10 samples, 0.18%)</title><rect x="520.6" y="643.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="523.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (10 samples, 0.18%)</title><rect x="520.6" y="627.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (10 samples, 0.18%)</title><rect x="520.6" y="611.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.6" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="521.2" y="595.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="524.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.createRequest (5 samples, 0.09%)</title><rect x="521.6" y="595.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTable.upsert (254 samples, 4.59%)</title><rect x="522.7" y="643.0" width="54.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.7" y="654.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (202 samples, 3.65%)</title><rect x="522.7" y="627.0" width="43.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.7" y="638.0">java..</text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="523.3" y="611.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="526.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (197 samples, 3.56%)</title><rect x="523.8" y="611.0" width="42.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="526.8" y="622.0">java..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.11%)</title><rect x="530.2" y="595.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.09%)</title><rect x="530.4" y="579.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="533.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (8 samples, 0.14%)</title><rect x="531.6" y="595.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (147 samples, 2.66%)</title><rect x="533.8" y="595.0" width="31.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="536.8" y="606.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (145 samples, 2.62%)</title><rect x="534.2" y="579.0" width="30.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="537.2" y="590.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (143 samples, 2.58%)</title><rect x="534.6" y="563.0" width="30.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.6" y="574.0">ja..</text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.05%)</title><rect x="535.1" y="547.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="538.1" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (118 samples, 2.13%)</title><rect x="535.7" y="547.0" width="25.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="538.7" y="558.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (91 samples, 1.64%)</title><rect x="541.5" y="531.0" width="19.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="544.5" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (82 samples, 1.48%)</title><rect x="542.7" y="515.0" width="17.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.7" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (3 samples, 0.05%)</title><rect x="560.2" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="563.2" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (20 samples, 0.36%)</title><rect x="560.9" y="547.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.9" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (19 samples, 0.34%)</title><rect x="561.1" y="531.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="564.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (3 samples, 0.05%)</title><rect x="565.1" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Value.of (52 samples, 0.94%)</title><rect x="565.8" y="627.0" width="11.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (52 samples, 0.94%)</title><rect x="565.8" y="611.0" width="11.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.8" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (52 samples, 0.94%)</title><rect x="565.8" y="595.0" width="11.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.8" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (52 samples, 0.94%)</title><rect x="565.8" y="579.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.8" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (52 samples, 0.94%)</title><rect x="565.8" y="563.0" width="11.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (51 samples, 0.92%)</title><rect x="565.8" y="547.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (51 samples, 0.92%)</title><rect x="565.8" y="531.0" width="10.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="573.4" y="515.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="576.4" y="526.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="573.4" y="499.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="576.4" y="510.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.07%)</title><rect x="573.9" y="515.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="576.9" y="526.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.13%)</title><rect x="574.9" y="515.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="577.9" y="526.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.13%)</title><rect x="574.9" y="499.0" width="1.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="577.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTablesPool.enqueueFlush (2 samples, 0.04%)</title><rect x="576.9" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="579.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/Balancer.poolsNodes (35 samples, 0.63%)</title><rect x="577.3" y="675.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="580.3" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="578.1" y="659.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="581.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/Balancer.hashCreate (29 samples, 0.52%)</title><rect x="578.6" y="659.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="581.6" y="670.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (29 samples, 0.52%)</title><rect x="578.6" y="643.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="581.6" y="654.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (8 samples, 0.14%)</title><rect x="578.6" y="627.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.6" y="638.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (8 samples, 0.14%)</title><rect x="578.6" y="611.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="581.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (21 samples, 0.38%)</title><rect x="580.3" y="627.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.3" y="638.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (21 samples, 0.38%)</title><rect x="580.3" y="611.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="583.3" y="622.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (21 samples, 0.38%)</title><rect x="580.3" y="595.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.3" y="606.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (21 samples, 0.38%)</title><rect x="580.3" y="579.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.3" y="590.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (21 samples, 0.38%)</title><rect x="580.3" y="563.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.3" y="574.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implDigest (21 samples, 0.38%)</title><rect x="580.3" y="547.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.3" y="558.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig4 (6 samples, 0.11%)</title><rect x="580.3" y="531.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.3" y="542.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (15 samples, 0.27%)</title><rect x="581.6" y="531.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="584.6" y="542.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress0 (11 samples, 0.20%)</title><rect x="581.8" y="515.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.8" y="526.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompressCheck (3 samples, 0.05%)</title><rect x="584.1" y="515.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.1" y="526.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (3 samples, 0.05%)</title><rect x="584.1" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="587.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$ResponseUtils.sendResponse (1,375 samples, 24.85%)</title><rect x="584.8" y="723.0" width="293.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.8" y="734.0">ru/mail/polis/service/httprest/HttpRest..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,373 samples, 24.81%)</title><rect x="584.8" y="707.0" width="292.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.8" y="718.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (15 samples, 0.27%)</title><rect x="587.1" y="691.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (15 samples, 0.27%)</title><rect x="587.1" y="675.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="590.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (15 samples, 0.27%)</title><rect x="587.1" y="659.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.1" y="670.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.11%)</title><rect x="588.0" y="643.0" width="1.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="591.0" y="654.0"></text>
</g>
<g>
<title>_init (3 samples, 0.05%)</title><rect x="589.2" y="643.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="592.2" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="589.9" y="643.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="592.9" y="654.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="589.9" y="627.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="592.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,339 samples, 24.20%)</title><rect x="590.3" y="691.0" width="285.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.3" y="702.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (24 samples, 0.43%)</title><rect x="591.1" y="675.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="594.1" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (13 samples, 0.23%)</title><rect x="593.5" y="659.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.5" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.23%)</title><rect x="593.5" y="643.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.5" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (13 samples, 0.23%)</title><rect x="593.5" y="627.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.charAt (13 samples, 0.23%)</title><rect x="593.5" y="611.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="596.5" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,311 samples, 23.69%)</title><rect x="596.3" y="675.0" width="279.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="599.3" y="686.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,311 samples, 23.69%)</title><rect x="596.3" y="659.0" width="279.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.3" y="670.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.04%)</title><rect x="598.6" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="601.6" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,298 samples, 23.46%)</title><rect x="599.0" y="643.0" width="276.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.0" y="654.0">one/nio/net/Session$ArrayQueueItem.wr..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.09%)</title><rect x="600.5" y="627.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="603.5" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,286 samples, 23.24%)</title><rect x="601.6" y="627.0" width="274.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.6" y="638.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (13 samples, 0.23%)</title><rect x="606.9" y="611.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="609.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 1.10%)</title><rect x="609.7" y="611.0" width="13.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="612.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 1.10%)</title><rect x="609.7" y="595.0" width="13.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="612.7" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (49 samples, 0.89%)</title><rect x="609.7" y="579.0" width="10.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="612.7" y="590.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (6 samples, 0.11%)</title><rect x="611.4" y="563.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="614.4" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.04%)</title><rect x="612.7" y="563.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="615.7" y="574.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (6 samples, 0.11%)</title><rect x="613.1" y="563.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="616.1" y="574.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (21 samples, 0.38%)</title><rect x="614.8" y="563.0" width="4.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="617.8" y="574.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="615.7" y="547.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="618.7" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.09%)</title><rect x="616.1" y="547.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="619.1" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (7 samples, 0.13%)</title><rect x="617.2" y="547.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="620.2" y="558.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.05%)</title><rect x="618.7" y="547.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="621.7" y="558.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (4 samples, 0.07%)</title><rect x="619.3" y="563.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="622.3" y="574.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.04%)</title><rect x="620.2" y="579.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="623.2" y="590.0"></text>
</g>
<g>
<title>send (9 samples, 0.16%)</title><rect x="620.8" y="579.0" width="1.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="623.8" y="590.0"></text>
</g>
<g>
<title>__libc_recv (8 samples, 0.14%)</title><rect x="622.7" y="611.0" width="1.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="625.7" y="622.0"></text>
</g>
<g>
<title>system_call_after_swapgs (8 samples, 0.14%)</title><rect x="622.7" y="595.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="625.7" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (20 samples, 0.36%)</title><rect x="624.4" y="611.0" width="4.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="627.4" y="622.0"></text>
</g>
<g>
<title>system_call_after_swapgs (20 samples, 0.36%)</title><rect x="624.4" y="595.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="627.4" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.09%)</title><rect x="628.7" y="611.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="631.7" y="622.0"></text>
</g>
<g>
<title>send (1,154 samples, 20.86%)</title><rect x="629.8" y="611.0" width="246.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="632.8" y="622.0">send</text>
</g>
<g>
<title>__audit_syscall_entry (5 samples, 0.09%)</title><rect x="634.4" y="595.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="637.4" y="606.0"></text>
</g>
<g>
<title>auditsys (10 samples, 0.18%)</title><rect x="635.5" y="595.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="638.5" y="606.0"></text>
</g>
<g>
<title>__audit_syscall_entry (10 samples, 0.18%)</title><rect x="635.5" y="579.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="638.5" y="590.0"></text>
</g>
<g>
<title>sys_sendto (3 samples, 0.05%)</title><rect x="637.9" y="595.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="640.9" y="606.0"></text>
</g>
<g>
<title>sysret_audit (7 samples, 0.13%)</title><rect x="638.5" y="595.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="641.5" y="606.0"></text>
</g>
<g>
<title>__audit_syscall_exit (6 samples, 0.11%)</title><rect x="638.5" y="579.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="641.5" y="590.0"></text>
</g>
<g>
<title>unroll_tree_refs (2 samples, 0.04%)</title><rect x="639.3" y="563.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="642.3" y="574.0"></text>
</g>
<g>
<title>system_call_fastpath (1,104 samples, 19.95%)</title><rect x="640.0" y="595.0" width="235.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="643.0" y="606.0">system_call_fastpath</text>
</g>
<g>
<title>SYSC_sendto (2 samples, 0.04%)</title><rect x="640.2" y="579.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="643.2" y="590.0"></text>
</g>
<g>
<title>sys_sendto (1,101 samples, 19.90%)</title><rect x="640.6" y="579.0" width="234.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="643.6" y="590.0">sys_sendto</text>
</g>
<g>
<title>SYSC_sendto (1,099 samples, 19.86%)</title><rect x="640.6" y="563.0" width="234.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="643.6" y="574.0">SYSC_sendto</text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.04%)</title><rect x="641.7" y="547.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="644.7" y="558.0"></text>
</g>
<g>
<title>sock_sendmsg (1,073 samples, 19.39%)</title><rect x="642.1" y="547.0" width="228.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="645.1" y="558.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (1,039 samples, 18.78%)</title><rect x="642.8" y="531.0" width="221.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="645.8" y="542.0">inet_sendmsg</text>
</g>
<g>
<title>_copy_from_user (2 samples, 0.04%)</title><rect x="643.6" y="515.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="646.6" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.07%)</title><rect x="644.0" y="515.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="647.0" y="526.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.04%)</title><rect x="645.1" y="515.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="648.1" y="526.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.04%)</title><rect x="645.5" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="648.5" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,021 samples, 18.45%)</title><rect x="646.0" y="515.0" width="217.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="649.0" y="526.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (8 samples, 0.14%)</title><rect x="647.7" y="499.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="650.7" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.07%)</title><rect x="648.5" y="483.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="651.5" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="649.6" y="499.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="652.6" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="650.0" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="653.0" y="510.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.05%)</title><rect x="650.7" y="499.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="653.7" y="510.0"></text>
</g>
<g>
<title>release_sock (6 samples, 0.11%)</title><rect x="651.3" y="499.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="654.3" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.04%)</title><rect x="651.5" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="654.5" y="494.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="651.5" y="467.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="654.5" y="478.0"></text>
</g>
<g>
<title>tcp_release_cb (3 samples, 0.05%)</title><rect x="651.9" y="483.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="654.9" y="494.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (32 samples, 0.58%)</title><rect x="652.6" y="499.0" width="6.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="655.6" y="510.0"></text>
</g>
<g>
<title>__alloc_skb (29 samples, 0.52%)</title><rect x="652.6" y="483.0" width="6.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="655.6" y="494.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.32 (5 samples, 0.09%)</title><rect x="654.5" y="467.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="657.5" y="478.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.07%)</title><rect x="654.5" y="451.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="657.5" y="462.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (12 samples, 0.22%)</title><rect x="655.6" y="467.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="658.6" y="478.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.05%)</title><rect x="658.1" y="467.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="661.1" y="478.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.05%)</title><rect x="658.8" y="483.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="661.8" y="494.0"></text>
</g>
<g>
<title>static_key_enabled (2 samples, 0.04%)</title><rect x="659.6" y="499.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="662.6" y="510.0"></text>
</g>
<g>
<title>tcp_push (937 samples, 16.93%)</title><rect x="660.0" y="499.0" width="199.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="663.0" y="510.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (935 samples, 16.90%)</title><rect x="660.2" y="483.0" width="199.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="663.2" y="494.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (932 samples, 16.84%)</title><rect x="660.9" y="467.0" width="198.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="663.9" y="478.0">tcp_write_xmit</text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.04%)</title><rect x="662.2" y="451.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="665.2" y="462.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (12 samples, 0.22%)</title><rect x="663.0" y="451.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="666.0" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto (11 samples, 0.20%)</title><rect x="663.2" y="435.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="666.2" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (10 samples, 0.18%)</title><rect x="663.4" y="419.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="666.4" y="430.0"></text>
</g>
<g>
<title>mod_timer (10 samples, 0.18%)</title><rect x="663.4" y="403.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="666.4" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.14%)</title><rect x="663.9" y="387.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="666.9" y="398.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.04%)</title><rect x="665.6" y="451.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="668.6" y="462.0"></text>
</g>
<g>
<title>tcp_transmit_skb (904 samples, 16.34%)</title><rect x="666.0" y="451.0" width="192.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="669.0" y="462.0">tcp_transmit_skb</text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.04%)</title><rect x="668.4" y="435.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="671.4" y="446.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.04%)</title><rect x="668.8" y="435.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="671.8" y="446.0"></text>
</g>
<g>
<title>ip_queue_xmit (870 samples, 15.72%)</title><rect x="669.4" y="435.0" width="185.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="672.4" y="446.0">ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (6 samples, 0.11%)</title><rect x="670.3" y="419.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="673.3" y="430.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.05%)</title><rect x="670.9" y="403.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="673.9" y="414.0"></text>
</g>
<g>
<title>ip_local_out_sk (859 samples, 15.53%)</title><rect x="671.6" y="419.0" width="183.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="674.6" y="430.0">ip_local_out_sk</text>
</g>
<g>
<title>__ip_local_out_sk (253 samples, 4.57%)</title><rect x="671.8" y="403.0" width="53.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="674.8" y="414.0">__ip_..</text>
</g>
<g>
<title>nf_hook_slow (248 samples, 4.48%)</title><rect x="672.4" y="387.0" width="52.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="675.4" y="398.0">nf_ho..</text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (3 samples, 0.05%)</title><rect x="672.8" y="371.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="675.8" y="382.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (5 samples, 0.09%)</title><rect x="673.5" y="371.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="676.5" y="382.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (5 samples, 0.09%)</title><rect x="674.5" y="371.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="677.5" y="382.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (4 samples, 0.07%)</title><rect x="675.6" y="371.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="678.6" y="382.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (3 samples, 0.05%)</title><rect x="676.5" y="371.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="679.5" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (5 samples, 0.09%)</title><rect x="677.1" y="371.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="680.1" y="382.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (4 samples, 0.07%)</title><rect x="678.2" y="371.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="681.2" y="382.0"></text>
</g>
<g>
<title>nf_iterate (216 samples, 3.90%)</title><rect x="679.0" y="371.0" width="46.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="682.0" y="382.0">nf_i..</text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.07%)</title><rect x="685.8" y="355.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="688.8" y="366.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (9 samples, 0.16%)</title><rect x="686.7" y="355.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="689.7" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (9 samples, 0.16%)</title><rect x="686.7" y="339.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="689.7" y="350.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (16 samples, 0.29%)</title><rect x="688.6" y="355.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="691.6" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (14 samples, 0.25%)</title><rect x="689.0" y="339.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="692.0" y="350.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (5 samples, 0.09%)</title><rect x="692.0" y="355.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="695.0" y="366.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (5 samples, 0.09%)</title><rect x="692.0" y="339.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="695.0" y="350.0"></text>
</g>
<g>
<title>nf_ct_nat_ext_add	[nf_nat] (2 samples, 0.04%)</title><rect x="692.2" y="323.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="695.2" y="334.0"></text>
</g>
<g>
<title>nf_nat_ipv4_fn	[nf_nat_ipv4] (2 samples, 0.04%)</title><rect x="692.7" y="323.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="695.7" y="334.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (25 samples, 0.45%)</title><rect x="693.1" y="355.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="696.1" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (23 samples, 0.42%)</title><rect x="693.5" y="339.0" width="4.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="696.5" y="350.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (12 samples, 0.22%)</title><rect x="698.4" y="355.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="701.4" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (11 samples, 0.20%)</title><rect x="698.4" y="339.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="701.4" y="350.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (104 samples, 1.88%)</title><rect x="701.2" y="355.0" width="22.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="704.2" y="366.0">i..</text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (2 samples, 0.04%)</title><rect x="701.2" y="339.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="704.2" y="350.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find	[nf_conntrack] (9 samples, 0.16%)</title><rect x="701.6" y="339.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="704.6" y="350.0"></text>
</g>
<g>
<title>ipv4_get_l4proto	[nf_conntrack_ipv4] (2 samples, 0.04%)</title><rect x="704.0" y="339.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="707.0" y="350.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (78 samples, 1.41%)</title><rect x="704.4" y="339.0" width="16.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="707.4" y="350.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (15 samples, 0.27%)</title><rect x="707.0" y="323.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="710.0" y="334.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.05%)</title><rect x="710.8" y="323.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="713.8" y="334.0"></text>
</g>
<g>
<title>hash_conntrack_raw	[nf_conntrack] (2 samples, 0.04%)</title><rect x="711.4" y="323.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="714.4" y="334.0"></text>
</g>
<g>
<title>ipv4_get_l4proto	[nf_conntrack_ipv4] (2 samples, 0.04%)</title><rect x="711.9" y="323.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="714.9" y="334.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple	[nf_conntrack_ipv4] (2 samples, 0.04%)</title><rect x="712.3" y="323.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="715.3" y="334.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (2 samples, 0.04%)</title><rect x="712.7" y="323.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="715.7" y="334.0"></text>
</g>
<g>
<title>tcp_error	[nf_conntrack] (3 samples, 0.05%)</title><rect x="713.1" y="323.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="716.1" y="334.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (5 samples, 0.09%)</title><rect x="713.8" y="323.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="716.8" y="334.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (27 samples, 0.49%)</title><rect x="714.8" y="323.0" width="5.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="717.8" y="334.0"></text>
</g>
<g>
<title>nf_ct_seq_offset	[nf_conntrack] (5 samples, 0.09%)</title><rect x="716.8" y="307.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="719.8" y="318.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (13 samples, 0.23%)</title><rect x="717.8" y="307.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="720.8" y="318.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple	[nf_conntrack] (2 samples, 0.04%)</title><rect x="720.6" y="323.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="723.6" y="334.0"></text>
</g>
<g>
<title>tcp_error	[nf_conntrack] (4 samples, 0.07%)</title><rect x="721.2" y="339.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="724.2" y="350.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (5 samples, 0.09%)</title><rect x="722.3" y="339.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="725.3" y="350.0"></text>
</g>
<g>
<title>netlbl_enabled (2 samples, 0.04%)</title><rect x="723.4" y="355.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="726.4" y="366.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (5 samples, 0.09%)</title><rect x="723.8" y="355.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="726.8" y="366.0"></text>
</g>
<g>
<title>nf_iterate (2 samples, 0.04%)</title><rect x="725.3" y="387.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="728.3" y="398.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.04%)</title><rect x="725.7" y="403.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="728.7" y="414.0"></text>
</g>
<g>
<title>ip_output (602 samples, 10.88%)</title><rect x="726.1" y="403.0" width="128.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="729.1" y="414.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (567 samples, 10.25%)</title><rect x="727.2" y="387.0" width="120.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="730.2" y="398.0">ip_finish_output</text>
</g>
<g>
<title>dev_queue_xmit (41 samples, 0.74%)</title><rect x="731.9" y="371.0" width="8.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="734.9" y="382.0"></text>
</g>
<g>
<title>__dev_queue_xmit (38 samples, 0.69%)</title><rect x="731.9" y="355.0" width="8.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="734.9" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (22 samples, 0.40%)</title><rect x="733.8" y="339.0" width="4.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="736.8" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (19 samples, 0.34%)</title><rect x="734.3" y="323.0" width="4.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="737.3" y="334.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.07%)</title><rect x="734.3" y="307.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="737.3" y="318.0"></text>
</g>
<g>
<title>netif_rx (10 samples, 0.18%)</title><rect x="735.1" y="307.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="738.1" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (10 samples, 0.18%)</title><rect x="735.1" y="291.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="738.1" y="302.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.07%)</title><rect x="735.3" y="275.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="738.3" y="286.0"></text>
</g>
<g>
<title>ktime_get_real (5 samples, 0.09%)</title><rect x="736.2" y="275.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="739.2" y="286.0"></text>
</g>
<g>
<title>getnstimeofday64 (5 samples, 0.09%)</title><rect x="736.2" y="259.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="739.2" y="270.0"></text>
</g>
<g>
<title>__getnstimeofday64 (5 samples, 0.09%)</title><rect x="736.2" y="243.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="739.2" y="254.0"></text>
</g>
<g>
<title>sock_wfree (2 samples, 0.04%)</title><rect x="737.2" y="307.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="740.2" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (3 samples, 0.05%)</title><rect x="737.7" y="307.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="740.7" y="318.0"></text>
</g>
<g>
<title>sock_wfree (3 samples, 0.05%)</title><rect x="737.7" y="291.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="740.7" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb.isra.109.part.110 (5 samples, 0.09%)</title><rect x="738.9" y="339.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="741.9" y="350.0"></text>
</g>
<g>
<title>netif_skb_features (4 samples, 0.07%)</title><rect x="738.9" y="323.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="741.9" y="334.0"></text>
</g>
<g>
<title>local_bh_enable (503 samples, 9.09%)</title><rect x="740.9" y="371.0" width="107.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="743.9" y="382.0">local_bh_enable</text>
</g>
<g>
<title>__local_bh_enable_ip (502 samples, 9.07%)</title><rect x="740.9" y="355.0" width="107.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="743.9" y="366.0">__local_bh_en..</text>
</g>
<g>
<title>do_softirq (501 samples, 9.05%)</title><rect x="741.1" y="339.0" width="106.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="744.1" y="350.0">do_softirq</text>
</g>
<g>
<title>call_softirq (495 samples, 8.95%)</title><rect x="742.4" y="323.0" width="105.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="745.4" y="334.0">call_softirq</text>
</g>
<g>
<title>__do_softirq (489 samples, 8.84%)</title><rect x="742.4" y="307.0" width="104.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="745.4" y="318.0">__do_softirq</text>
</g>
<g>
<title>net_rx_action (484 samples, 8.75%)</title><rect x="743.4" y="291.0" width="103.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="746.4" y="302.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (479 samples, 8.66%)</title><rect x="744.5" y="275.0" width="102.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="747.5" y="286.0">process_back..</text>
</g>
<g>
<title>__netif_receive_skb (476 samples, 8.60%)</title><rect x="745.1" y="259.0" width="101.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="748.1" y="270.0">__netif_rece..</text>
</g>
<g>
<title>__netif_receive_skb_core (471 samples, 8.51%)</title><rect x="745.3" y="243.0" width="100.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="748.3" y="254.0">__netif_rece..</text>
</g>
<g>
<title>ip_rcv (457 samples, 8.26%)</title><rect x="748.3" y="227.0" width="97.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="751.3" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.05%)</title><rect x="749.2" y="211.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="752.2" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (410 samples, 7.41%)</title><rect x="749.8" y="211.0" width="87.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="752.8" y="222.0">ip_rcv_fin..</text>
</g>
<g>
<title>ip_local_deliver (410 samples, 7.41%)</title><rect x="749.8" y="195.0" width="87.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="752.8" y="206.0">ip_local_d..</text>
</g>
<g>
<title>ip_local_deliver_finish (353 samples, 6.38%)</title><rect x="750.7" y="179.0" width="75.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="753.7" y="190.0">ip_local..</text>
</g>
<g>
<title>_raw_qspin_lock (2 samples, 0.04%)</title><rect x="752.0" y="163.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="755.0" y="174.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.04%)</title><rect x="752.4" y="163.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="755.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (342 samples, 6.18%)</title><rect x="753.0" y="163.0" width="73.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="756.0" y="174.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (15 samples, 0.27%)</title><rect x="753.7" y="147.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="756.7" y="158.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.04%)</title><rect x="757.1" y="147.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="760.1" y="158.0"></text>
</g>
<g>
<title>tcp_filter (5 samples, 0.09%)</title><rect x="757.7" y="147.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="760.7" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.09%)</title><rect x="757.7" y="131.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="760.7" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.04%)</title><rect x="757.9" y="115.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="760.9" y="126.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.04%)</title><rect x="758.3" y="115.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="761.3" y="126.0"></text>
</g>
<g>
<title>tcp_prequeue (219 samples, 3.96%)</title><rect x="758.8" y="147.0" width="46.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="761.8" y="158.0">tcp_..</text>
</g>
<g>
<title>__wake_up_sync_key (199 samples, 3.60%)</title><rect x="759.8" y="131.0" width="42.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="762.8" y="142.0">__wa..</text>
</g>
<g>
<title>__wake_up_common_lock (199 samples, 3.60%)</title><rect x="759.8" y="115.0" width="42.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="762.8" y="126.0">__wa..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (197 samples, 3.56%)</title><rect x="760.3" y="99.0" width="42.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="763.3" y="110.0">_raw..</text>
</g>
<g>
<title>sk_reset_timer (15 samples, 0.27%)</title><rect x="802.3" y="131.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="805.3" y="142.0"></text>
</g>
<g>
<title>mod_timer (15 samples, 0.27%)</title><rect x="802.3" y="115.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="805.3" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.23%)</title><rect x="802.7" y="99.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="805.7" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (96 samples, 1.74%)</title><rect x="805.5" y="147.0" width="20.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="808.5" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (96 samples, 1.74%)</title><rect x="805.5" y="131.0" width="20.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="808.5" y="142.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.05%)</title><rect x="805.9" y="115.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="808.9" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.05%)</title><rect x="805.9" y="99.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="808.9" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.05%)</title><rect x="805.9" y="83.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="808.9" y="94.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.05%)</title><rect x="805.9" y="67.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="808.9" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="805.9" y="51.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="808.9" y="62.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.22%)</title><rect x="806.8" y="115.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="809.8" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.09%)</title><rect x="807.8" y="99.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="810.8" y="110.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.09%)</title><rect x="807.8" y="83.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="810.8" y="94.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.09%)</title><rect x="807.8" y="67.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="810.8" y="78.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.07%)</title><rect x="808.0" y="51.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="811.0" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="808.5" y="35.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="811.5" y="46.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="808.9" y="99.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="811.9" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (78 samples, 1.41%)</title><rect x="809.3" y="115.0" width="16.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="812.3" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (71 samples, 1.28%)</title><rect x="810.4" y="99.0" width="15.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="813.4" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (71 samples, 1.28%)</title><rect x="810.4" y="83.0" width="15.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="813.4" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (71 samples, 1.28%)</title><rect x="810.4" y="67.0" width="15.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="813.4" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (71 samples, 1.28%)</title><rect x="810.4" y="51.0" width="15.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="813.4" y="62.0"></text>
</g>
<g>
<title>nf_hook_slow (50 samples, 0.90%)</title><rect x="826.0" y="179.0" width="10.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="829.0" y="190.0"></text>
</g>
<g>
<title>nf_iterate (46 samples, 0.83%)</title><rect x="826.8" y="163.0" width="9.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="829.8" y="174.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (28 samples, 0.51%)</title><rect x="828.7" y="147.0" width="6.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="831.7" y="158.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (3 samples, 0.05%)</title><rect x="828.9" y="131.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="831.9" y="142.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (18 samples, 0.33%)</title><rect x="829.6" y="131.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="832.6" y="142.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (5 samples, 0.09%)</title><rect x="831.5" y="115.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="834.5" y="126.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (5 samples, 0.09%)</title><rect x="831.5" y="99.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="834.5" y="110.0"></text>
</g>
<g>
<title>tcp_mt (3 samples, 0.05%)</title><rect x="832.8" y="115.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="835.8" y="126.0"></text>
</g>
<g>
<title>tcp_mt (6 samples, 0.11%)</title><rect x="833.4" y="131.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="836.4" y="142.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (3 samples, 0.05%)</title><rect x="834.7" y="147.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="837.7" y="158.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.05%)</title><rect x="834.7" y="131.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="837.7" y="142.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (4 samples, 0.07%)</title><rect x="835.6" y="147.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="838.6" y="158.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (4 samples, 0.07%)</title><rect x="835.6" y="131.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="838.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.04%)</title><rect x="836.8" y="179.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="839.8" y="190.0"></text>
</g>
<g>
<title>nf_hook_slow (40 samples, 0.72%)</title><rect x="837.3" y="211.0" width="8.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="840.3" y="222.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.04%)</title><rect x="837.5" y="195.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="840.5" y="206.0"></text>
</g>
<g>
<title>nf_iterate (34 samples, 0.61%)</title><rect x="838.5" y="195.0" width="7.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="841.5" y="206.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.04%)</title><rect x="839.2" y="179.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="842.2" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.04%)</title><rect x="839.2" y="163.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="842.2" y="174.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_in	[iptable_nat] (3 samples, 0.05%)</title><rect x="839.6" y="179.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="842.6" y="190.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="839.6" y="163.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="842.6" y="174.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (21 samples, 0.38%)</title><rect x="840.2" y="179.0" width="4.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="843.2" y="190.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (21 samples, 0.38%)</title><rect x="840.2" y="163.0" width="4.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="843.2" y="174.0"></text>
</g>
<g>
<title>nf_nat_ipv4_in	[nf_nat_ipv4] (4 samples, 0.07%)</title><rect x="844.9" y="179.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="847.9" y="190.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.07%)</title><rect x="845.8" y="243.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="848.8" y="254.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.07%)</title><rect x="846.6" y="307.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="849.6" y="318.0"></text>
</g>
<g>
<title>rcu_bh_qs (2 samples, 0.04%)</title><rect x="847.5" y="307.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="850.5" y="318.0"></text>
</g>
<g>
<title>nf_hook_slow (29 samples, 0.52%)</title><rect x="848.3" y="387.0" width="6.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="851.3" y="398.0"></text>
</g>
<g>
<title>ipv4_helper	[nf_conntrack_ipv4] (2 samples, 0.04%)</title><rect x="848.6" y="371.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="851.6" y="382.0"></text>
</g>
<g>
<title>nf_iterate (26 samples, 0.47%)</title><rect x="849.0" y="371.0" width="5.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="852.0" y="382.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (8 samples, 0.14%)</title><rect x="850.9" y="355.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="853.9" y="366.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.13%)</title><rect x="851.1" y="339.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="854.1" y="350.0"></text>
</g>
<g>
<title>local_bh_enable (2 samples, 0.04%)</title><rect x="852.2" y="323.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="855.2" y="334.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out	[iptable_nat] (4 samples, 0.07%)</title><rect x="852.6" y="355.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="855.6" y="366.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat_ipv4] (3 samples, 0.05%)</title><rect x="852.8" y="339.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="855.8" y="350.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.04%)</title><rect x="853.9" y="355.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="856.9" y="366.0"></text>
</g>
<g>
<title>local_clock (11 samples, 0.20%)</title><rect x="855.0" y="435.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="858.0" y="446.0"></text>
</g>
<g>
<title>sched_clock (5 samples, 0.09%)</title><rect x="855.0" y="419.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="858.0" y="430.0"></text>
</g>
<g>
<title>vmware_sched_clock (5 samples, 0.09%)</title><rect x="855.0" y="403.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="858.0" y="414.0"></text>
</g>
<g>
<title>vmware_sched_clock (6 samples, 0.11%)</title><rect x="856.0" y="419.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="859.0" y="430.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.04%)</title><rect x="857.3" y="435.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="860.3" y="446.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.04%)</title><rect x="857.3" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="860.3" y="430.0"></text>
</g>
<g>
<title>tcp_established_options (3 samples, 0.05%)</title><rect x="857.9" y="435.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="860.9" y="446.0"></text>
</g>
<g>
<title>tcp_v4_send_check (4 samples, 0.07%)</title><rect x="858.8" y="451.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="861.8" y="462.0"></text>
</g>
<g>
<title>tcp_send_mss (17 samples, 0.31%)</title><rect x="860.1" y="499.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="863.1" y="510.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.05%)</title><rect x="860.3" y="483.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="863.3" y="494.0"></text>
</g>
<g>
<title>tcp_current_mss (13 samples, 0.23%)</title><rect x="860.9" y="483.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="863.9" y="494.0"></text>
</g>
<g>
<title>tcp_established_options (4 samples, 0.07%)</title><rect x="862.9" y="467.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="865.9" y="478.0"></text>
</g>
<g>
<title>tcp_md5_do_lookup (2 samples, 0.04%)</title><rect x="863.3" y="451.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="866.3" y="462.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.05%)</title><rect x="863.7" y="515.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="866.7" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (30 samples, 0.54%)</title><rect x="864.3" y="531.0" width="6.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="867.3" y="542.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (28 samples, 0.51%)</title><rect x="864.8" y="515.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="867.8" y="526.0"></text>
</g>
<g>
<title>sock_has_perm (28 samples, 0.51%)</title><rect x="864.8" y="499.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="867.8" y="510.0"></text>
</g>
<g>
<title>avc_has_perm_flags (14 samples, 0.25%)</title><rect x="867.8" y="483.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="870.8" y="494.0"></text>
</g>
<g>
<title>sockfd_lookup_light (19 samples, 0.34%)</title><rect x="871.0" y="547.0" width="4.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="874.0" y="558.0"></text>
</g>
<g>
<title>fget_light (19 samples, 0.34%)</title><rect x="871.0" y="531.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="874.0" y="542.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="875.0" y="563.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="878.0" y="574.0"></text>
</g>
<g>
<title>tracesys (2 samples, 0.04%)</title><rect x="875.4" y="595.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="878.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.14%)</title><rect x="875.9" y="691.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="878.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.07%)</title><rect x="876.7" y="675.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="879.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.07%)</title><rect x="876.7" y="659.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="879.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$104/874939749.submit (2 samples, 0.04%)</title><rect x="877.6" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="880.6" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,289 samples, 23.30%)</title><rect x="878.0" y="803.0" width="274.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="881.0" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>[vdso] (6 samples, 0.11%)</title><rect x="879.5" y="787.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="882.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3 samples, 0.05%)</title><rect x="881.0" y="787.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.0" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.07%)</title><rect x="881.6" y="787.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.6" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.04%)</title><rect x="882.0" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="885.0" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.04%)</title><rect x="882.0" y="755.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.0" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (219 samples, 3.96%)</title><rect x="882.5" y="787.0" width="46.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="885.5" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.04%)</title><rect x="883.5" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="886.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.04%)</title><rect x="883.5" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.5" y="766.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (212 samples, 3.83%)</title><rect x="884.0" y="771.0" width="45.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="887.0" y="782.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (9 samples, 0.16%)</title><rect x="896.8" y="755.0" width="1.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="899.8" y="766.0"></text>
</g>
<g>
<title>[vdso] (9 samples, 0.16%)</title><rect x="898.7" y="755.0" width="1.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="901.7" y="766.0"></text>
</g>
<g>
<title>__GI_epoll_wait (67 samples, 1.21%)</title><rect x="900.6" y="755.0" width="14.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="903.6" y="766.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.04%)</title><rect x="903.8" y="739.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="906.8" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.04%)</title><rect x="903.8" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="906.8" y="734.0"></text>
</g>
<g>
<title>system_call_fastpath (49 samples, 0.89%)</title><rect x="904.4" y="739.0" width="10.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="907.4" y="750.0"></text>
</g>
<g>
<title>sys_epoll_wait (49 samples, 0.89%)</title><rect x="904.4" y="723.0" width="10.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="907.4" y="734.0"></text>
</g>
<g>
<title>ep_poll (38 samples, 0.69%)</title><rect x="904.9" y="707.0" width="8.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="907.9" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="905.3" y="691.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="908.3" y="702.0"></text>
</g>
<g>
<title>ep_scan_ready_list.isra.7 (25 samples, 0.45%)</title><rect x="905.9" y="691.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="908.9" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.11%)</title><rect x="905.9" y="675.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="908.9" y="686.0"></text>
</g>
<g>
<title>ep_send_events_proc (17 samples, 0.31%)</title><rect x="907.2" y="675.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="910.2" y="686.0"></text>
</g>
<g>
<title>sock_poll (12 samples, 0.22%)</title><rect x="908.1" y="659.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="911.1" y="670.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.05%)</title><rect x="909.3" y="643.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="912.3" y="654.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.05%)</title><rect x="910.0" y="643.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="913.0" y="654.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (8 samples, 0.14%)</title><rect x="911.3" y="691.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="914.3" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (8 samples, 0.14%)</title><rect x="911.3" y="675.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="914.3" y="686.0"></text>
</g>
<g>
<title>schedule (7 samples, 0.13%)</title><rect x="911.5" y="659.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="914.5" y="670.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.09%)</title><rect x="911.9" y="643.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="914.9" y="654.0"></text>
</g>
<g>
<title>fget_light (9 samples, 0.16%)</title><rect x="913.0" y="707.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="916.0" y="718.0"></text>
</g>
<g>
<title>__clock_gettime (34 samples, 0.61%)</title><rect x="914.9" y="755.0" width="7.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="917.9" y="766.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="921.5" y="739.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="924.5" y="750.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="922.1" y="755.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="925.1" y="766.0"></text>
</g>
<g>
<title>__libc_recv (2 samples, 0.04%)</title><rect x="923.0" y="755.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="926.0" y="766.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.04%)</title><rect x="923.0" y="739.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="926.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (24 samples, 0.43%)</title><rect x="923.4" y="755.0" width="5.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="926.4" y="766.0"></text>
</g>
<g>
<title>system_call_after_swapgs (24 samples, 0.43%)</title><rect x="923.4" y="739.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="926.4" y="750.0"></text>
</g>
<g>
<title>_init (3 samples, 0.05%)</title><rect x="928.5" y="755.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="931.5" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,045 samples, 18.89%)</title><rect x="929.2" y="787.0" width="222.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="932.2" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,038 samples, 18.76%)</title><rect x="930.7" y="771.0" width="221.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="933.7" y="782.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (686 samples, 12.40%)</title><rect x="932.8" y="755.0" width="146.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="935.8" y="766.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (589 samples, 10.65%)</title><rect x="936.9" y="739.0" width="125.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="939.9" y="750.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (571 samples, 10.32%)</title><rect x="938.3" y="723.0" width="121.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="941.3" y="734.0">one/nio/http/Ht..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (534 samples, 9.65%)</title><rect x="940.1" y="707.0" width="113.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="943.1" y="718.0">RequestHandler..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (23 samples, 0.42%)</title><rect x="940.3" y="691.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.14%)</title><rect x="942.2" y="675.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.14%)</title><rect x="942.2" y="659.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.2" y="670.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.07%)</title><rect x="943.0" y="643.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="946.0" y="654.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.09%)</title><rect x="944.1" y="675.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="947.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="944.7" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="944.7" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.7" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="944.7" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.entity (510 samples, 9.22%)</title><rect x="945.2" y="691.0" width="108.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="948.2" y="702.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.asyncExecute (506 samples, 9.15%)</title><rect x="946.0" y="675.0" width="107.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="949.0" y="686.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (506 samples, 9.15%)</title><rect x="946.0" y="659.0" width="107.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="949.0" y="670.0">one/nio/serve..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (506 samples, 9.15%)</title><rect x="946.0" y="643.0" width="107.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.0" y="654.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (5 samples, 0.09%)</title><rect x="946.5" y="627.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="949.5" y="638.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (499 samples, 9.02%)</title><rect x="947.5" y="627.0" width="106.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="950.5" y="638.0">one/nio/serve..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (499 samples, 9.02%)</title><rect x="947.5" y="611.0" width="106.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="950.5" y="622.0">one/nio/serve..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (499 samples, 9.02%)</title><rect x="947.5" y="595.0" width="106.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="950.5" y="606.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (486 samples, 8.78%)</title><rect x="950.3" y="579.0" width="103.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="953.3" y="590.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (463 samples, 8.37%)</title><rect x="952.2" y="563.0" width="98.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="955.2" y="574.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (462 samples, 8.35%)</title><rect x="952.4" y="547.0" width="98.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="955.4" y="558.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (457 samples, 8.26%)</title><rect x="953.5" y="531.0" width="97.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.5" y="542.0">jdk/interna..</text>
</g>
<g>
<title>Parker::unpark() (5 samples, 0.09%)</title><rect x="954.3" y="515.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="957.3" y="526.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="955.8" y="515.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="958.8" y="526.0"></text>
</g>
<g>
<title>Unsafe_Unpark (88 samples, 1.59%)</title><rect x="956.7" y="515.0" width="18.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="959.7" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.09%)</title><rect x="961.2" y="499.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="964.2" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (7 samples, 0.13%)</title><rect x="962.2" y="499.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="965.2" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="963.7" y="499.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="966.7" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (11 samples, 0.20%)</title><rect x="964.2" y="499.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="967.2" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (3 samples, 0.05%)</title><rect x="966.5" y="499.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="969.5" y="510.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (4 samples, 0.07%)</title><rect x="967.1" y="499.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="970.1" y="510.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (6 samples, 0.11%)</title><rect x="968.2" y="499.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="971.2" y="510.0"></text>
</g>
<g>
<title>_init (3 samples, 0.05%)</title><rect x="969.5" y="499.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="972.5" y="510.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (6 samples, 0.11%)</title><rect x="970.3" y="499.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="973.3" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_lock (13 samples, 0.23%)</title><rect x="971.8" y="499.0" width="2.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="974.8" y="510.0"></text>
</g>
<g>
<title>update_get_addr (4 samples, 0.07%)</title><rect x="974.6" y="499.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="977.6" y="510.0"></text>
</g>
<g>
<title>__libc_recv (16 samples, 0.29%)</title><rect x="975.5" y="515.0" width="3.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="978.5" y="526.0"></text>
</g>
<g>
<title>system_call_after_swapgs (16 samples, 0.29%)</title><rect x="975.5" y="499.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="978.5" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (332 samples, 6.00%)</title><rect x="978.9" y="515.0" width="70.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="981.9" y="526.0">__pthrea..</text>
</g>
<g>
<title>auditsys (6 samples, 0.11%)</title><rect x="982.9" y="499.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="985.9" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_entry (6 samples, 0.11%)</title><rect x="982.9" y="483.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="985.9" y="494.0"></text>
</g>
<g>
<title>sysret_audit (4 samples, 0.07%)</title><rect x="984.4" y="499.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="987.4" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.05%)</title><rect x="984.4" y="483.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="987.4" y="494.0"></text>
</g>
<g>
<title>sysret_signal (2 samples, 0.04%)</title><rect x="985.3" y="499.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="988.3" y="510.0"></text>
</g>
<g>
<title>system_call_fastpath (300 samples, 5.42%)</title><rect x="985.7" y="499.0" width="64.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="988.7" y="510.0">system_..</text>
</g>
<g>
<title>sys_futex (297 samples, 5.37%)</title><rect x="986.3" y="483.0" width="63.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="989.3" y="494.0">sys_futex</text>
</g>
<g>
<title>do_futex (297 samples, 5.37%)</title><rect x="986.3" y="467.0" width="63.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="989.3" y="478.0">do_futex</text>
</g>
<g>
<title>_raw_qspin_lock (10 samples, 0.18%)</title><rect x="988.0" y="451.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="991.0" y="462.0"></text>
</g>
<g>
<title>futex_wake_op (273 samples, 4.93%)</title><rect x="990.4" y="451.0" width="58.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="993.4" y="462.0">futex_..</text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="992.1" y="435.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="995.1" y="446.0"></text>
</g>
<g>
<title>mark_wake_futex (11 samples, 0.20%)</title><rect x="992.5" y="435.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="995.5" y="446.0"></text>
</g>
<g>
<title>__unqueue_futex (4 samples, 0.07%)</title><rect x="993.8" y="419.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="996.8" y="430.0"></text>
</g>
<g>
<title>wake_up_q (252 samples, 4.55%)</title><rect x="994.9" y="435.0" width="53.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="997.9" y="446.0">wake_..</text>
</g>
<g>
<title>try_to_wake_up (252 samples, 4.55%)</title><rect x="994.9" y="419.0" width="53.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="997.9" y="430.0">try_t..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (252 samples, 4.55%)</title><rect x="994.9" y="403.0" width="53.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="997.9" y="414.0">_raw_..</text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="1048.6" y="451.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1051.6" y="462.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.04%)</title><rect x="1049.0" y="451.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1052.0" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="1049.7" y="515.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1052.7" y="526.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="1050.3" y="515.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1053.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (2 samples, 0.04%)</title><rect x="1051.0" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1054.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (5 samples, 0.09%)</title><rect x="1051.4" y="563.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1054.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.09%)</title><rect x="1051.4" y="547.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1054.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.09%)</title><rect x="1051.4" y="531.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1054.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (7 samples, 0.13%)</title><rect x="1052.4" y="563.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1055.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1053.5" y="547.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1056.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (29 samples, 0.52%)</title><rect x="1053.9" y="707.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1056.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.get (29 samples, 0.52%)</title><rect x="1053.9" y="691.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1056.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (21 samples, 0.38%)</title><rect x="1053.9" y="675.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1056.9" y="686.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (7 samples, 0.13%)</title><rect x="1053.9" y="659.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1056.9" y="670.0"></text>
</g>
<g>
<title>itable stub (14 samples, 0.25%)</title><rect x="1055.4" y="659.0" width="3.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1058.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.14%)</title><rect x="1058.4" y="675.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1061.4" y="686.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (8 samples, 0.14%)</title><rect x="1058.4" y="659.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.4" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (8 samples, 0.14%)</title><rect x="1058.4" y="643.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.4" y="654.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="1059.7" y="627.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1062.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.20%)</title><rect x="1060.1" y="723.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1063.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (38 samples, 0.69%)</title><rect x="1062.5" y="739.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1065.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.07%)</title><rect x="1064.6" y="723.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1067.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.07%)</title><rect x="1064.6" y="707.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1067.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.07%)</title><rect x="1064.6" y="691.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1067.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.07%)</title><rect x="1064.6" y="675.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1067.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.31%)</title><rect x="1065.5" y="723.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1068.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (14 samples, 0.25%)</title><rect x="1066.1" y="707.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1069.1" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (7 samples, 0.13%)</title><rect x="1069.1" y="723.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1072.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (17 samples, 0.31%)</title><rect x="1070.6" y="739.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.25%)</title><rect x="1071.2" y="723.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1074.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (14 samples, 0.25%)</title><rect x="1071.2" y="707.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1074.2" y="718.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="1072.9" y="691.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1075.9" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.07%)</title><rect x="1073.3" y="691.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1076.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23 samples, 0.42%)</title><rect x="1074.2" y="739.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1077.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.05%)</title><rect x="1074.8" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1077.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 0.31%)</title><rect x="1075.5" y="723.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1078.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.11%)</title><rect x="1079.1" y="755.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1082.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (336 samples, 6.07%)</title><rect x="1080.4" y="755.0" width="71.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1083.4" y="766.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.05%)</title><rect x="1084.4" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1087.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (283 samples, 5.11%)</title><rect x="1085.1" y="739.0" width="60.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1088.1" y="750.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.04%)</title><rect x="1091.3" y="723.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1094.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.61%)</title><rect x="1091.7" y="723.0" width="19.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1094.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.61%)</title><rect x="1091.7" y="707.0" width="19.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1094.7" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (67 samples, 1.21%)</title><rect x="1091.7" y="691.0" width="14.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1094.7" y="702.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (10 samples, 0.18%)</title><rect x="1092.8" y="675.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1095.8" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (4 samples, 0.07%)</title><rect x="1094.9" y="675.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1097.9" y="686.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (15 samples, 0.27%)</title><rect x="1095.7" y="675.0" width="3.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1098.7" y="686.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="1098.9" y="675.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1101.9" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (27 samples, 0.49%)</title><rect x="1099.4" y="675.0" width="5.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1102.4" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="1101.1" y="659.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1104.1" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (6 samples, 0.11%)</title><rect x="1101.9" y="659.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1104.9" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (9 samples, 0.16%)</title><rect x="1103.2" y="659.0" width="1.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1106.2" y="670.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (6 samples, 0.11%)</title><rect x="1103.8" y="643.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1106.8" y="654.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.05%)</title><rect x="1105.3" y="675.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1108.3" y="686.0"></text>
</g>
<g>
<title>__libc_recv (13 samples, 0.23%)</title><rect x="1106.0" y="691.0" width="2.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1109.0" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.14%)</title><rect x="1109.0" y="691.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1112.0" y="702.0"></text>
</g>
<g>
<title>__GI_epoll_wait (25 samples, 0.45%)</title><rect x="1110.7" y="723.0" width="5.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1113.7" y="734.0"></text>
</g>
<g>
<title>system_call_after_swapgs (25 samples, 0.45%)</title><rect x="1110.7" y="707.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1113.7" y="718.0"></text>
</g>
<g>
<title>__libc_recv (136 samples, 2.46%)</title><rect x="1116.0" y="723.0" width="29.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1119.0" y="734.0">__..</text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.05%)</title><rect x="1119.2" y="707.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1122.2" y="718.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.04%)</title><rect x="1119.8" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1122.8" y="718.0"></text>
</g>
<g>
<title>auditsys (4 samples, 0.07%)</title><rect x="1120.3" y="707.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1123.3" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_entry (4 samples, 0.07%)</title><rect x="1120.3" y="691.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1123.3" y="702.0"></text>
</g>
<g>
<title>system_call_fastpath (110 samples, 1.99%)</title><rect x="1121.5" y="707.0" width="23.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1124.5" y="718.0">s..</text>
</g>
<g>
<title>sys_recvfrom (109 samples, 1.97%)</title><rect x="1121.8" y="691.0" width="23.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1124.8" y="702.0">s..</text>
</g>
<g>
<title>SYSC_recvfrom (109 samples, 1.97%)</title><rect x="1121.8" y="675.0" width="23.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1124.8" y="686.0">S..</text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.05%)</title><rect x="1122.6" y="659.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1125.6" y="670.0"></text>
</g>
<g>
<title>sock_recvmsg (82 samples, 1.48%)</title><rect x="1123.2" y="659.0" width="17.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1126.2" y="670.0"></text>
</g>
<g>
<title>inet_recvmsg (58 samples, 1.05%)</title><rect x="1123.9" y="643.0" width="12.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1126.9" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (57 samples, 1.03%)</title><rect x="1124.1" y="627.0" width="12.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1127.1" y="638.0"></text>
</g>
<g>
<title>__kfree_skb (15 samples, 0.27%)</title><rect x="1126.0" y="611.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1129.0" y="622.0"></text>
</g>
<g>
<title>kfree_skbmem (4 samples, 0.07%)</title><rect x="1126.0" y="595.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1129.0" y="606.0"></text>
</g>
<g>
<title>skb_release_all (11 samples, 0.20%)</title><rect x="1126.9" y="595.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1129.9" y="606.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.09%)</title><rect x="1127.1" y="579.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1130.1" y="590.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.05%)</title><rect x="1128.2" y="579.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1131.2" y="590.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.05%)</title><rect x="1128.2" y="563.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1131.2" y="574.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.04%)</title><rect x="1128.8" y="579.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1131.8" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="1129.6" y="611.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1132.6" y="622.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.07%)</title><rect x="1130.1" y="611.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1133.1" y="622.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (24 samples, 0.43%)</title><rect x="1130.9" y="611.0" width="5.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1133.9" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.05%)</title><rect x="1130.9" y="595.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1133.9" y="606.0"></text>
</g>
<g>
<title>memcpy_toiovec (21 samples, 0.38%)</title><rect x="1131.6" y="595.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1134.6" y="606.0"></text>
</g>
<g>
<title>__check_object_size (19 samples, 0.34%)</title><rect x="1132.0" y="579.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1135.0" y="590.0"></text>
</g>
<g>
<title>__check_heap_object (7 samples, 0.13%)</title><rect x="1133.9" y="563.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1136.9" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.05%)</title><rect x="1135.4" y="563.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1138.4" y="574.0"></text>
</g>
<g>
<title>security_socket_recvmsg (17 samples, 0.31%)</title><rect x="1136.3" y="643.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1139.3" y="654.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (17 samples, 0.31%)</title><rect x="1136.3" y="627.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1139.3" y="638.0"></text>
</g>
<g>
<title>sock_has_perm (17 samples, 0.31%)</title><rect x="1136.3" y="611.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1139.3" y="622.0"></text>
</g>
<g>
<title>avc_has_perm_flags (7 samples, 0.13%)</title><rect x="1138.4" y="595.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1141.4" y="606.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (3 samples, 0.05%)</title><rect x="1139.9" y="643.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1142.9" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (20 samples, 0.36%)</title><rect x="1140.7" y="659.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1143.7" y="670.0"></text>
</g>
<g>
<title>fget_light (20 samples, 0.36%)</title><rect x="1140.7" y="643.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1143.7" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.04%)</title><rect x="1145.0" y="723.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1148.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (31 samples, 0.56%)</title><rect x="1145.4" y="739.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1148.4" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.07%)</title><rect x="1152.0" y="787.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.0" y="798.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="1152.3" y="771.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1155.3" y="782.0"></text>
</g>
<g>
<title>start_thread (173 samples, 3.13%)</title><rect x="1153.1" y="803.0" width="36.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1156.1" y="814.0">sta..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (173 samples, 3.13%)</title><rect x="1153.1" y="787.0" width="36.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1156.1" y="798.0">thr..</text>
</g>
<g>
<title>Thread::call_run() (173 samples, 3.13%)</title><rect x="1153.1" y="771.0" width="36.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.1" y="782.0">Thr..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (3 samples, 0.05%)</title><rect x="1153.1" y="755.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.1" y="766.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (3 samples, 0.05%)</title><rect x="1153.1" y="739.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.1" y="750.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (3 samples, 0.05%)</title><rect x="1153.1" y="723.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.1" y="734.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (3 samples, 0.05%)</title><rect x="1153.1" y="707.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.1" y="718.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (2 samples, 0.04%)</title><rect x="1153.1" y="691.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1156.1" y="702.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (2 samples, 0.04%)</title><rect x="1153.1" y="675.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1156.1" y="686.0"></text>
</g>
<g>
<title>GangWorker::loop() (123 samples, 2.22%)</title><rect x="1153.7" y="755.0" width="26.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.7" y="766.0">G..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (115 samples, 2.08%)</title><rect x="1153.7" y="739.0" width="24.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.7" y="750.0">G..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (14 samples, 0.25%)</title><rect x="1153.7" y="723.0" width="3.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1156.7" y="734.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (11 samples, 0.20%)</title><rect x="1154.0" y="707.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1157.0" y="718.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (9 samples, 0.16%)</title><rect x="1154.4" y="691.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.4" y="702.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.05%)</title><rect x="1155.7" y="675.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.7" y="686.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (98 samples, 1.77%)</title><rect x="1156.7" y="723.0" width="20.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.7" y="734.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (98 samples, 1.77%)</title><rect x="1156.7" y="707.0" width="20.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.7" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (98 samples, 1.77%)</title><rect x="1156.7" y="691.0" width="20.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1159.7" y="702.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (98 samples, 1.77%)</title><rect x="1156.7" y="675.0" width="20.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1159.7" y="686.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (97 samples, 1.75%)</title><rect x="1156.9" y="659.0" width="20.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1159.9" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (51 samples, 0.92%)</title><rect x="1157.2" y="643.0" width="10.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1160.2" y="654.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (34 samples, 0.61%)</title><rect x="1160.6" y="627.0" width="7.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1163.6" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (14 samples, 0.25%)</title><rect x="1164.8" y="611.0" width="3.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1167.8" y="622.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (45 samples, 0.81%)</title><rect x="1168.0" y="643.0" width="9.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.0" y="654.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (43 samples, 0.78%)</title><rect x="1168.0" y="627.0" width="9.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.0" y="638.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (11 samples, 0.20%)</title><rect x="1170.0" y="611.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.0" y="622.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (7 samples, 0.13%)</title><rect x="1170.8" y="595.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.8" y="606.0"></text>
</g>
<g>
<title>OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::push(StarTask) [clone .constprop.520] (2 samples, 0.04%)</title><rect x="1172.5" y="611.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.5" y="622.0"></text>
</g>
<g>
<title>oopDesc::size() (5 samples, 0.09%)</title><rect x="1172.9" y="611.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.9" y="622.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (9 samples, 0.16%)</title><rect x="1174.2" y="611.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.2" y="622.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (5 samples, 0.09%)</title><rect x="1176.1" y="611.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.1" y="622.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.04%)</title><rect x="1177.6" y="723.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.6" y="734.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.04%)</title><rect x="1177.6" y="707.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.6" y="718.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.04%)</title><rect x="1177.6" y="691.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.6" y="702.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (5 samples, 0.09%)</title><rect x="1178.3" y="739.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.3" y="750.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (5 samples, 0.09%)</title><rect x="1178.3" y="723.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.3" y="734.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.64] (3 samples, 0.05%)</title><rect x="1178.7" y="707.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.7" y="718.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.05%)</title><rect x="1178.7" y="691.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.7" y="702.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::worker_wait_for_task() (2 samples, 0.04%)</title><rect x="1179.3" y="739.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.3" y="750.0"></text>
</g>
<g>
<title>JavaThread::run() (40 samples, 0.72%)</title><rect x="1180.0" y="755.0" width="8.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.0" y="766.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (40 samples, 0.72%)</title><rect x="1180.0" y="739.0" width="8.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.0" y="750.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (40 samples, 0.72%)</title><rect x="1180.0" y="723.0" width="8.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.0" y="734.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (40 samples, 0.72%)</title><rect x="1180.0" y="707.0" width="8.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.0" y="718.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (36 samples, 0.65%)</title><rect x="1180.0" y="691.0" width="7.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.0" y="702.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (36 samples, 0.65%)</title><rect x="1180.0" y="675.0" width="7.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.0" y="686.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (26 samples, 0.47%)</title><rect x="1180.0" y="659.0" width="5.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.0" y="670.0"></text>
</g>
<g>
<title>Compile::Output() (3 samples, 0.05%)</title><rect x="1180.0" y="643.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.0" y="654.0"></text>
</g>
<g>
<title>Matcher::match() (5 samples, 0.09%)</title><rect x="1180.6" y="643.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.6" y="654.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (4 samples, 0.07%)</title><rect x="1180.8" y="627.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.8" y="638.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.04%)</title><rect x="1181.3" y="611.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.3" y="622.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.04%)</title><rect x="1181.7" y="643.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.7" y="654.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.04%)</title><rect x="1181.7" y="627.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.7" y="638.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (16 samples, 0.29%)</title><rect x="1182.1" y="643.0" width="3.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.1" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.04%)</title><rect x="1182.3" y="627.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.3" y="638.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (5 samples, 0.09%)</title><rect x="1182.7" y="627.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.7" y="638.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.04%)</title><rect x="1183.0" y="611.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.0" y="622.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (2 samples, 0.04%)</title><rect x="1183.4" y="611.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.4" y="622.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.04%)</title><rect x="1183.4" y="595.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.4" y="606.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.04%)</title><rect x="1184.2" y="627.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.2" y="638.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (2 samples, 0.04%)</title><rect x="1185.1" y="627.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.1" y="638.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 0.09%)</title><rect x="1185.5" y="659.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.5" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (4 samples, 0.07%)</title><rect x="1185.7" y="643.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.7" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1186.6" y="659.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.6" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.07%)</title><rect x="1186.6" y="643.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.6" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.07%)</title><rect x="1186.6" y="627.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.6" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.07%)</title><rect x="1186.6" y="611.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.6" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.07%)</title><rect x="1186.6" y="595.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.6" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.07%)</title><rect x="1186.6" y="579.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.6" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1186.6" y="563.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.6" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.07%)</title><rect x="1186.6" y="547.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.6" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.07%)</title><rect x="1186.6" y="531.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.6" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.07%)</title><rect x="1186.6" y="515.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.6" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.07%)</title><rect x="1186.6" y="499.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.6" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.07%)</title><rect x="1186.6" y="483.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.6" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1186.8" y="467.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.8" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1186.8" y="451.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.8" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1186.8" y="435.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.8" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1186.8" y="419.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.8" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1186.8" y="403.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.8" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1186.8" y="387.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.8" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1187.0" y="371.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.0" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1187.0" y="355.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.0" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1187.0" y="339.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.0" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1187.0" y="323.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.0" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1187.0" y="307.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.0" y="318.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 0.07%)</title><rect x="1187.7" y="691.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.7" y="702.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (4 samples, 0.07%)</title><rect x="1187.7" y="675.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.7" y="686.0"></text>
</g>
<g>
<title>Compilation::compile_method() (4 samples, 0.07%)</title><rect x="1187.7" y="659.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.7" y="670.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (4 samples, 0.07%)</title><rect x="1187.7" y="643.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.7" y="654.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (3 samples, 0.05%)</title><rect x="1187.9" y="627.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.9" y="638.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (3 samples, 0.05%)</title><rect x="1187.9" y="611.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.9" y="622.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.07%)</title><rect x="1188.5" y="755.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.5" y="766.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.07%)</title><rect x="1188.5" y="739.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.5" y="750.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (3 samples, 0.05%)</title><rect x="1188.7" y="723.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.7" y="734.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.05%)</title><rect x="1188.7" y="707.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.7" y="718.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (3 samples, 0.05%)</title><rect x="1188.7" y="691.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.7" y="702.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (3 samples, 0.05%)</title><rect x="1188.7" y="675.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.7" y="686.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.05%)</title><rect x="1189.4" y="755.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.4" y="766.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (3 samples, 0.05%)</title><rect x="1189.4" y="739.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="750.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 0.05%)</title><rect x="1189.4" y="723.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.4" y="734.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.04%)</title><rect x="1189.4" y="707.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.4" y="718.0"></text>
</g>
</g>
</svg>
