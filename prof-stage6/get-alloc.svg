<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (125,775 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (73,062 samples, 58.09%)</title><rect x="10.0" y="691.0" width="685.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (73,062 samples, 58.09%)</title><rect x="10.0" y="675.0" width="685.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (73,062 samples, 58.09%)</title><rect x="10.0" y="659.0" width="685.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (23,246 samples, 18.48%)</title><rect x="10.0" y="643.0" width="218.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (23,246 samples, 18.48%)</title><rect x="10.0" y="627.0" width="218.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (23,246 samples, 18.48%)</title><rect x="10.0" y="611.0" width="218.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (99 samples, 0.08%)</title><rect x="10.0" y="595.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$153/1249503175.apply (23,147 samples, 18.40%)</title><rect x="11.0" y="595.0" width="217.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.0" y="606.0">jdk/internal/net/http/MultiEx..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (23,147 samples, 18.40%)</title><rect x="11.0" y="579.0" width="217.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.0" y="590.0">jdk/internal/net/http/MultiEx..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (23,147 samples, 18.40%)</title><rect x="11.0" y="563.0" width="217.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.0" y="574.0">jdk/internal/net/http/MultiEx..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (140 samples, 0.11%)</title><rect x="11.0" y="547.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (140 samples, 0.11%)</title><rect x="11.0" y="531.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$289/1016523658.get$Lambda (82 samples, 0.07%)</title><rect x="11.0" y="515.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$289 (82 samples, 0.07%)</title><rect x="11.0" y="499.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="14.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$290/877098177.get$Lambda (58 samples, 0.05%)</title><rect x="11.7" y="515.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$290 (58 samples, 0.05%)</title><rect x="11.7" y="499.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="14.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (213 samples, 0.17%)</title><rect x="12.3" y="547.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (213 samples, 0.17%)</title><rect x="12.3" y="531.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (118 samples, 0.09%)</title><rect x="12.3" y="515.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="15.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (95 samples, 0.08%)</title><rect x="13.4" y="515.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (95 samples, 0.08%)</title><rect x="13.4" y="499.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (95 samples, 0.08%)</title><rect x="13.4" y="483.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="16.4" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (529 samples, 0.42%)</title><rect x="14.3" y="547.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (529 samples, 0.42%)</title><rect x="14.3" y="531.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (296 samples, 0.24%)</title><rect x="14.3" y="515.0" width="2.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="17.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (233 samples, 0.19%)</title><rect x="17.1" y="515.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (233 samples, 0.19%)</title><rect x="17.1" y="499.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (233 samples, 0.19%)</title><rect x="17.1" y="483.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="20.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (21,781 samples, 17.32%)</title><rect x="19.2" y="547.0" width="204.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="22.2" y="558.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (21,781 samples, 17.32%)</title><rect x="19.2" y="531.0" width="204.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.2" y="542.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (21,781 samples, 17.32%)</title><rect x="19.2" y="515.0" width="204.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.2" y="526.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (198 samples, 0.16%)</title><rect x="19.2" y="499.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (198 samples, 0.16%)</title><rect x="19.2" y="483.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/1850087782.get$Lambda (50 samples, 0.04%)</title><rect x="19.2" y="467.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="22.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$166 (50 samples, 0.04%)</title><rect x="19.2" y="451.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="22.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$170/678742413.get$Lambda (71 samples, 0.06%)</title><rect x="19.7" y="467.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$170 (71 samples, 0.06%)</title><rect x="19.7" y="451.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="22.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$245/351709695.get$Lambda (77 samples, 0.06%)</title><rect x="20.4" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$245 (77 samples, 0.06%)</title><rect x="20.4" y="451.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="23.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (13,806 samples, 10.98%)</title><rect x="21.1" y="499.0" width="129.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.1" y="510.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (13,806 samples, 10.98%)</title><rect x="21.1" y="483.0" width="129.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.1" y="494.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (13,686 samples, 10.88%)</title><rect x="21.1" y="467.0" width="128.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.1" y="478.0">java/util/concur..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$245/351709695.apply (13,686 samples, 10.88%)</title><rect x="21.1" y="451.0" width="128.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.1" y="462.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (13,686 samples, 10.88%)</title><rect x="21.1" y="435.0" width="128.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.1" y="446.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (13,686 samples, 10.88%)</title><rect x="21.1" y="419.0" width="128.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.1" y="430.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$170/678742413.apply (13,686 samples, 10.88%)</title><rect x="21.1" y="403.0" width="128.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.1" y="414.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (13,686 samples, 10.88%)</title><rect x="21.1" y="387.0" width="128.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.1" y="398.0">jdk/internal/net..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (90 samples, 0.07%)</title><rect x="21.1" y="371.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.1" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.07%)</title><rect x="21.1" y="355.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$288/1871228320.get$Lambda (90 samples, 0.07%)</title><rect x="21.1" y="339.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$288 (90 samples, 0.07%)</title><rect x="21.1" y="323.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="24.1" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (271 samples, 0.22%)</title><rect x="21.9" y="371.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (271 samples, 0.22%)</title><rect x="21.9" y="355.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="24.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (142 samples, 0.11%)</title><rect x="21.9" y="339.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="24.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.08%)</title><rect x="23.5" y="339.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.08%)</title><rect x="23.5" y="323.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (106 samples, 0.08%)</title><rect x="23.5" y="307.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="26.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (231 samples, 0.18%)</title><rect x="24.5" y="371.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (231 samples, 0.18%)</title><rect x="24.5" y="355.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (116 samples, 0.09%)</title><rect x="24.5" y="339.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="27.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (112 samples, 0.09%)</title><rect x="25.6" y="339.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (112 samples, 0.09%)</title><rect x="25.6" y="323.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (112 samples, 0.09%)</title><rect x="25.6" y="307.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="28.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (13,094 samples, 10.41%)</title><rect x="26.7" y="371.0" width="122.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.7" y="382.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (89 samples, 0.07%)</title><rect x="26.7" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (89 samples, 0.07%)</title><rect x="26.7" y="339.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="29.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$281/1002612192.get$Lambda (54 samples, 0.04%)</title><rect x="26.7" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$281 (54 samples, 0.04%)</title><rect x="26.7" y="307.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="29.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$283/831434866.get$Lambda (35 samples, 0.03%)</title><rect x="27.2" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$283 (35 samples, 0.03%)</title><rect x="27.2" y="307.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="30.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (11,213 samples, 8.92%)</title><rect x="27.5" y="355.0" width="105.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.5" y="366.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (11,213 samples, 8.92%)</title><rect x="27.5" y="339.0" width="105.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="30.5" y="350.0">java/util/con..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (132 samples, 0.10%)</title><rect x="27.5" y="323.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="30.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$281/1002612192.apply (10,844 samples, 8.62%)</title><rect x="28.7" y="323.0" width="101.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.7" y="334.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (10,844 samples, 8.62%)</title><rect x="28.7" y="307.0" width="101.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="31.7" y="318.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.04%)</title><rect x="28.7" y="291.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.04%)</title><rect x="28.7" y="275.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$303/245067707.get$Lambda (48 samples, 0.04%)</title><rect x="28.7" y="259.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="31.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$303 (48 samples, 0.04%)</title><rect x="28.7" y="243.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="31.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (248 samples, 0.20%)</title><rect x="29.2" y="291.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (248 samples, 0.20%)</title><rect x="29.2" y="275.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="32.2" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (129 samples, 0.10%)</title><rect x="29.2" y="259.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="32.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (119 samples, 0.09%)</title><rect x="30.4" y="259.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="33.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (119 samples, 0.09%)</title><rect x="30.4" y="243.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="33.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (119 samples, 0.09%)</title><rect x="30.4" y="227.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="33.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (113 samples, 0.09%)</title><rect x="31.5" y="291.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="34.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (173 samples, 0.14%)</title><rect x="32.6" y="291.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (71 samples, 0.06%)</title><rect x="32.6" y="275.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="35.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (102 samples, 0.08%)</title><rect x="33.2" y="275.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="36.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (84 samples, 0.07%)</title><rect x="33.2" y="259.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="36.2" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (84 samples, 0.07%)</title><rect x="33.2" y="243.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (84 samples, 0.07%)</title><rect x="33.2" y="227.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="36.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (84 samples, 0.07%)</title><rect x="33.2" y="211.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="36.2" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (84 samples, 0.07%)</title><rect x="33.2" y="195.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="36.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (270 samples, 0.21%)</title><rect x="34.2" y="291.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="37.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (270 samples, 0.21%)</title><rect x="34.2" y="275.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (84 samples, 0.07%)</title><rect x="34.2" y="259.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="37.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (84 samples, 0.07%)</title><rect x="34.2" y="243.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (84 samples, 0.07%)</title><rect x="34.2" y="227.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (84 samples, 0.07%)</title><rect x="34.2" y="211.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="37.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (186 samples, 0.15%)</title><rect x="35.0" y="259.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (186 samples, 0.15%)</title><rect x="35.0" y="243.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="38.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (135 samples, 0.11%)</title><rect x="35.0" y="227.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="38.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (51 samples, 0.04%)</title><rect x="36.2" y="227.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="39.2" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (51 samples, 0.04%)</title><rect x="36.2" y="211.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="39.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (9,992 samples, 7.94%)</title><rect x="36.7" y="291.0" width="93.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="39.7" y="302.0">jdk/interna..</text>
</g>
<g>
<title>java.lang.StringBuilder (92 samples, 0.07%)</title><rect x="36.7" y="275.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="39.7" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (968 samples, 0.77%)</title><rect x="37.6" y="275.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.6" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (968 samples, 0.77%)</title><rect x="37.6" y="259.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.6" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (968 samples, 0.77%)</title><rect x="37.6" y="243.0" width="9.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.6" y="254.0"></text>
</g>
<g>
<title>byte[] (959 samples, 0.76%)</title><rect x="37.6" y="227.0" width="9.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="40.6" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (271 samples, 0.22%)</title><rect x="46.7" y="275.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="49.7" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (271 samples, 0.22%)</title><rect x="46.7" y="259.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.7" y="270.0"></text>
</g>
<g>
<title>byte[] (271 samples, 0.22%)</title><rect x="46.7" y="243.0" width="2.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="49.7" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,028 samples, 0.82%)</title><rect x="49.2" y="275.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,028 samples, 0.82%)</title><rect x="49.2" y="259.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.2" y="270.0"></text>
</g>
<g>
<title>java.lang.String (81 samples, 0.06%)</title><rect x="49.2" y="243.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="52.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (947 samples, 0.75%)</title><rect x="50.0" y="243.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.0" y="254.0"></text>
</g>
<g>
<title>byte[] (942 samples, 0.75%)</title><rect x="50.0" y="227.0" width="8.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="53.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (175 samples, 0.14%)</title><rect x="58.9" y="275.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.9" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (175 samples, 0.14%)</title><rect x="58.9" y="259.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.9" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (175 samples, 0.14%)</title><rect x="58.9" y="243.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="61.9" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (85 samples, 0.07%)</title><rect x="60.5" y="275.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.5" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (85 samples, 0.07%)</title><rect x="60.5" y="259.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="63.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (6,256 samples, 4.97%)</title><rect x="61.3" y="275.0" width="58.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.3" y="286.0">jdk/in..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (83 samples, 0.07%)</title><rect x="61.3" y="259.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (83 samples, 0.07%)</title><rect x="61.3" y="243.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (83 samples, 0.07%)</title><rect x="61.3" y="227.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.3" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$307/2143406581.get$Lambda (83 samples, 0.07%)</title><rect x="61.3" y="211.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.3" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$307 (83 samples, 0.07%)</title><rect x="61.3" y="195.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="64.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (2,848 samples, 2.26%)</title><rect x="62.1" y="259.0" width="26.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.1" y="270.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,415 samples, 1.13%)</title><rect x="62.1" y="243.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.1" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,415 samples, 1.13%)</title><rect x="62.1" y="227.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.1" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,415 samples, 1.13%)</title><rect x="62.1" y="211.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.1" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,415 samples, 1.13%)</title><rect x="62.1" y="195.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.1" y="206.0"></text>
</g>
<g>
<title>byte[] (1,414 samples, 1.12%)</title><rect x="62.1" y="179.0" width="13.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="65.1" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (216 samples, 0.17%)</title><rect x="75.3" y="243.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.3" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (216 samples, 0.17%)</title><rect x="75.3" y="227.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (216 samples, 0.17%)</title><rect x="75.3" y="211.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (216 samples, 0.17%)</title><rect x="75.3" y="195.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="78.3" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (212 samples, 0.17%)</title><rect x="77.4" y="243.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.4" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (121 samples, 0.10%)</title><rect x="77.4" y="227.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="80.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (91 samples, 0.07%)</title><rect x="78.5" y="227.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.5" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (91 samples, 0.07%)</title><rect x="78.5" y="211.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="81.5" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$307/2143406581.test (1,005 samples, 0.80%)</title><rect x="79.4" y="243.0" width="9.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.4" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1,005 samples, 0.80%)</title><rect x="79.4" y="227.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/2089016471.test (1,005 samples, 0.80%)</title><rect x="79.4" y="211.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1,005 samples, 0.80%)</title><rect x="79.4" y="195.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.4" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$67/2082351774.test (1,005 samples, 0.80%)</title><rect x="79.4" y="179.0" width="9.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.4" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1,005 samples, 0.80%)</title><rect x="79.4" y="163.0" width="9.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.4" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/961160488.test (1,005 samples, 0.80%)</title><rect x="79.4" y="147.0" width="9.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.4" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1,005 samples, 0.80%)</title><rect x="79.4" y="131.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.4" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,005 samples, 0.80%)</title><rect x="79.4" y="115.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.4" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,005 samples, 0.80%)</title><rect x="79.4" y="99.0" width="9.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String (500 samples, 0.40%)</title><rect x="79.4" y="83.0" width="4.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="82.4" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (505 samples, 0.40%)</title><rect x="84.1" y="83.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.1" y="94.0"></text>
</g>
<g>
<title>byte[] (505 samples, 0.40%)</title><rect x="84.1" y="67.0" width="4.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="87.1" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (3,325 samples, 2.64%)</title><rect x="88.8" y="259.0" width="31.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.8" y="270.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3,325 samples, 2.64%)</title><rect x="88.8" y="243.0" width="31.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.8" y="254.0">ja..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3,325 samples, 2.64%)</title><rect x="88.8" y="227.0" width="31.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.8" y="238.0">ja..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (48 samples, 0.04%)</title><rect x="88.8" y="211.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="91.8" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (79 samples, 0.06%)</title><rect x="89.2" y="211.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="92.2" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (192 samples, 0.15%)</title><rect x="90.0" y="211.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="93.0" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (51 samples, 0.04%)</title><rect x="91.8" y="211.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="94.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (122 samples, 0.10%)</title><rect x="92.3" y="211.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (122 samples, 0.10%)</title><rect x="92.3" y="195.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.3" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.get$Lambda (122 samples, 0.10%)</title><rect x="92.3" y="179.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="95.3" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$134 (122 samples, 0.10%)</title><rect x="92.3" y="163.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="95.3" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (91 samples, 0.07%)</title><rect x="93.4" y="211.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.4" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (91 samples, 0.07%)</title><rect x="93.4" y="195.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="96.4" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2,568 samples, 2.04%)</title><rect x="94.3" y="211.0" width="24.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.3" y="222.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (2,568 samples, 2.04%)</title><rect x="94.3" y="195.0" width="24.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.3" y="206.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,568 samples, 2.04%)</title><rect x="94.3" y="179.0" width="24.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="97.3" y="190.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (527 samples, 0.42%)</title><rect x="94.3" y="163.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (527 samples, 0.42%)</title><rect x="94.3" y="147.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.3" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.get$Lambda (527 samples, 0.42%)</title><rect x="94.3" y="131.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.3" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$136 (527 samples, 0.42%)</title><rect x="94.3" y="115.0" width="4.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="97.3" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (205 samples, 0.16%)</title><rect x="99.2" y="163.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.2" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (205 samples, 0.16%)</title><rect x="99.2" y="147.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.2" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (205 samples, 0.16%)</title><rect x="99.2" y="131.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.2" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (205 samples, 0.16%)</title><rect x="99.2" y="115.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="102.2" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (205 samples, 0.16%)</title><rect x="99.2" y="99.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.2" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (205 samples, 0.16%)</title><rect x="99.2" y="83.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.2" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (205 samples, 0.16%)</title><rect x="99.2" y="67.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.2" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (205 samples, 0.16%)</title><rect x="99.2" y="51.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.2" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (205 samples, 0.16%)</title><rect x="99.2" y="35.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="102.2" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (980 samples, 0.78%)</title><rect x="101.1" y="163.0" width="9.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.1" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (980 samples, 0.78%)</title><rect x="101.1" y="147.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.1" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (503 samples, 0.40%)</title><rect x="101.1" y="131.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="104.1" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (503 samples, 0.40%)</title><rect x="101.1" y="115.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.1" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (503 samples, 0.40%)</title><rect x="101.1" y="99.0" width="4.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="104.1" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (477 samples, 0.38%)</title><rect x="105.8" y="131.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="108.8" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (477 samples, 0.38%)</title><rect x="105.8" y="115.0" width="4.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="108.8" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (856 samples, 0.68%)</title><rect x="110.3" y="163.0" width="8.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="113.3" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (856 samples, 0.68%)</title><rect x="110.3" y="147.0" width="8.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="113.3" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (174 samples, 0.14%)</title><rect x="118.4" y="211.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.4" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (174 samples, 0.14%)</title><rect x="118.4" y="195.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="121.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (299 samples, 0.24%)</title><rect x="120.0" y="275.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.0" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (87 samples, 0.07%)</title><rect x="120.0" y="259.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="123.0" y="270.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.07%)</title><rect x="120.0" y="243.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="123.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (212 samples, 0.17%)</title><rect x="120.8" y="259.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="123.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (212 samples, 0.17%)</title><rect x="120.8" y="243.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="123.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1667148529.invoke (212 samples, 0.17%)</title><rect x="120.8" y="227.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (212 samples, 0.17%)</title><rect x="120.8" y="211.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="123.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (93 samples, 0.07%)</title><rect x="120.8" y="195.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.8" y="206.0"></text>
</g>
<g>
<title>java.lang.String (93 samples, 0.07%)</title><rect x="120.8" y="179.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="123.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (119 samples, 0.09%)</title><rect x="121.7" y="195.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (119 samples, 0.09%)</title><rect x="121.7" y="179.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.7" y="190.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.09%)</title><rect x="121.7" y="163.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="124.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (236 samples, 0.19%)</title><rect x="122.8" y="275.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (236 samples, 0.19%)</title><rect x="122.8" y="259.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (236 samples, 0.19%)</title><rect x="122.8" y="243.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="125.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (236 samples, 0.19%)</title><rect x="122.8" y="227.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1667148529.invoke (236 samples, 0.19%)</title><rect x="122.8" y="211.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (236 samples, 0.19%)</title><rect x="122.8" y="195.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (88 samples, 0.07%)</title><rect x="122.8" y="179.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (88 samples, 0.07%)</title><rect x="122.8" y="163.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="125.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (148 samples, 0.12%)</title><rect x="123.6" y="179.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (148 samples, 0.12%)</title><rect x="123.6" y="163.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.6" y="174.0"></text>
</g>
<g>
<title>byte[] (148 samples, 0.12%)</title><rect x="123.6" y="147.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="126.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (582 samples, 0.46%)</title><rect x="125.0" y="275.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.0" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (157 samples, 0.12%)</title><rect x="125.0" y="259.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="128.0" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (149 samples, 0.12%)</title><rect x="126.5" y="259.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.5" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (149 samples, 0.12%)</title><rect x="126.5" y="243.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="129.5" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (276 samples, 0.22%)</title><rect x="127.9" y="259.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.9" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (276 samples, 0.22%)</title><rect x="127.9" y="243.0" width="2.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="130.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (237 samples, 0.19%)</title><rect x="130.5" y="323.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (237 samples, 0.19%)</title><rect x="130.5" y="307.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (237 samples, 0.19%)</title><rect x="130.5" y="291.0" width="2.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="133.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (289 samples, 0.23%)</title><rect x="132.7" y="355.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="135.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (107 samples, 0.09%)</title><rect x="135.4" y="355.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="138.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1,396 samples, 1.11%)</title><rect x="136.4" y="355.0" width="13.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (126 samples, 0.10%)</title><rect x="136.4" y="339.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="139.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (126 samples, 0.10%)</title><rect x="136.4" y="323.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="139.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$253/110061556.get$Lambda (67 samples, 0.05%)</title><rect x="136.4" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$253 (67 samples, 0.05%)</title><rect x="136.4" y="291.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="139.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/1261770073.get$Lambda (59 samples, 0.05%)</title><rect x="137.0" y="307.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$254 (59 samples, 0.05%)</title><rect x="137.0" y="291.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="140.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (137 samples, 0.11%)</title><rect x="137.6" y="339.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="140.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (99 samples, 0.08%)</title><rect x="138.9" y="339.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="141.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (147 samples, 0.12%)</title><rect x="139.8" y="339.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="142.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (416 samples, 0.33%)</title><rect x="141.2" y="339.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (416 samples, 0.33%)</title><rect x="141.2" y="323.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (416 samples, 0.33%)</title><rect x="141.2" y="307.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (416 samples, 0.33%)</title><rect x="141.2" y="291.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (416 samples, 0.33%)</title><rect x="141.2" y="275.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (416 samples, 0.33%)</title><rect x="141.2" y="259.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$236/621309814.run (416 samples, 0.33%)</title><rect x="141.2" y="243.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (416 samples, 0.33%)</title><rect x="141.2" y="227.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (416 samples, 0.33%)</title><rect x="141.2" y="211.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.2" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (124 samples, 0.10%)</title><rect x="141.2" y="195.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.2" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (124 samples, 0.10%)</title><rect x="141.2" y="179.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$261/1453282749.get$Lambda (42 samples, 0.03%)</title><rect x="141.2" y="163.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$261 (42 samples, 0.03%)</title><rect x="141.2" y="147.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="144.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$265/904072682.get$Lambda (82 samples, 0.07%)</title><rect x="141.6" y="163.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="144.6" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$265 (82 samples, 0.07%)</title><rect x="141.6" y="147.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="144.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (137 samples, 0.11%)</title><rect x="142.3" y="195.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="145.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (155 samples, 0.12%)</title><rect x="143.6" y="195.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (155 samples, 0.12%)</title><rect x="143.6" y="179.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (61 samples, 0.05%)</title><rect x="143.6" y="163.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="146.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (94 samples, 0.07%)</title><rect x="144.2" y="163.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.2" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (94 samples, 0.07%)</title><rect x="144.2" y="147.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="147.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (364 samples, 0.29%)</title><rect x="145.1" y="339.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.1" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (74 samples, 0.06%)</title><rect x="145.1" y="323.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="148.1" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (178 samples, 0.14%)</title><rect x="145.8" y="323.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="148.8" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (112 samples, 0.09%)</title><rect x="147.4" y="323.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="150.4" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (112 samples, 0.09%)</title><rect x="147.4" y="307.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.4" y="318.0"></text>
</g>
<g>
<title>byte[] (112 samples, 0.09%)</title><rect x="147.4" y="291.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="150.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (107 samples, 0.09%)</title><rect x="148.5" y="339.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="151.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (107 samples, 0.09%)</title><rect x="148.5" y="323.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="151.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (120 samples, 0.10%)</title><rect x="149.5" y="467.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (120 samples, 0.10%)</title><rect x="149.5" y="451.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (120 samples, 0.10%)</title><rect x="149.5" y="435.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="152.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (217 samples, 0.17%)</title><rect x="150.6" y="499.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (217 samples, 0.17%)</title><rect x="150.6" y="483.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="153.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (127 samples, 0.10%)</title><rect x="150.6" y="467.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="153.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (90 samples, 0.07%)</title><rect x="151.8" y="467.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (90 samples, 0.07%)</title><rect x="151.8" y="451.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (90 samples, 0.07%)</title><rect x="151.8" y="435.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="154.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (7,560 samples, 6.01%)</title><rect x="152.7" y="499.0" width="70.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.7" y="510.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (141 samples, 0.11%)</title><rect x="152.7" y="483.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="155.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (141 samples, 0.11%)</title><rect x="152.7" y="467.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$241/1630528551.get$Lambda (70 samples, 0.06%)</title><rect x="152.7" y="451.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$241 (70 samples, 0.06%)</title><rect x="152.7" y="435.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="155.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$243/1828731342.get$Lambda (71 samples, 0.06%)</title><rect x="153.3" y="451.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$243 (71 samples, 0.06%)</title><rect x="153.3" y="435.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="156.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (206 samples, 0.16%)</title><rect x="154.0" y="483.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (206 samples, 0.16%)</title><rect x="154.0" y="467.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$243/1828731342.apply (101 samples, 0.08%)</title><rect x="154.0" y="451.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="157.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (101 samples, 0.08%)</title><rect x="154.0" y="435.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="157.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (101 samples, 0.08%)</title><rect x="154.0" y="419.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (101 samples, 0.08%)</title><rect x="154.0" y="403.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="157.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (105 samples, 0.08%)</title><rect x="154.9" y="451.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (105 samples, 0.08%)</title><rect x="154.9" y="435.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (105 samples, 0.08%)</title><rect x="154.9" y="419.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="157.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (121 samples, 0.10%)</title><rect x="155.9" y="483.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (121 samples, 0.10%)</title><rect x="155.9" y="467.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="158.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (121 samples, 0.10%)</title><rect x="155.9" y="451.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (121 samples, 0.10%)</title><rect x="155.9" y="435.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (121 samples, 0.10%)</title><rect x="155.9" y="419.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="158.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (7,092 samples, 5.64%)</title><rect x="157.1" y="483.0" width="66.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.1" y="494.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (106 samples, 0.08%)</title><rect x="157.1" y="467.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (106 samples, 0.08%)</title><rect x="157.1" y="451.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="160.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$176/978711598.get$Lambda (106 samples, 0.08%)</title><rect x="157.1" y="435.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$176 (106 samples, 0.08%)</title><rect x="157.1" y="419.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="160.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (6,514 samples, 5.18%)</title><rect x="158.0" y="467.0" width="61.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.0" y="478.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (6,514 samples, 5.18%)</title><rect x="158.0" y="451.0" width="61.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.0" y="462.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6,405 samples, 5.09%)</title><rect x="158.0" y="435.0" width="60.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.0" y="446.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$176/978711598.apply (6,405 samples, 5.09%)</title><rect x="158.0" y="419.0" width="60.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="161.0" y="430.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (6,405 samples, 5.09%)</title><rect x="158.0" y="403.0" width="60.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="161.0" y="414.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (6,405 samples, 5.09%)</title><rect x="158.0" y="387.0" width="60.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="161.0" y="398.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.04%)</title><rect x="158.0" y="371.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="161.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.04%)</title><rect x="158.0" y="355.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="161.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$239/1587750339.get$Lambda (48 samples, 0.04%)</title><rect x="158.0" y="339.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$239 (48 samples, 0.04%)</title><rect x="158.0" y="323.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="161.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2,477 samples, 1.97%)</title><rect x="158.5" y="371.0" width="23.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.5" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2,477 samples, 1.97%)</title><rect x="158.5" y="355.0" width="23.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="161.5" y="366.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2,477 samples, 1.97%)</title><rect x="158.5" y="339.0" width="23.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.5" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$239/1587750339.apply (2,360 samples, 1.88%)</title><rect x="158.5" y="323.0" width="22.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.5" y="334.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (2,360 samples, 1.88%)</title><rect x="158.5" y="307.0" width="22.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.5" y="318.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (2,360 samples, 1.88%)</title><rect x="158.5" y="291.0" width="22.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="161.5" y="302.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (2,360 samples, 1.88%)</title><rect x="158.5" y="275.0" width="22.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="161.5" y="286.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (1,418 samples, 1.13%)</title><rect x="158.5" y="259.0" width="13.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.5" y="270.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (438 samples, 0.35%)</title><rect x="158.5" y="243.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.5" y="254.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.06%)</title><rect x="158.5" y="227.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="161.5" y="238.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (177 samples, 0.14%)</title><rect x="159.2" y="227.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.2" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (177 samples, 0.14%)</title><rect x="159.2" y="211.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.2" y="222.0"></text>
</g>
<g>
<title>byte[] (177 samples, 0.14%)</title><rect x="159.2" y="195.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="162.2" y="206.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (183 samples, 0.15%)</title><rect x="160.9" y="227.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="163.9" y="238.0"></text>
</g>
<g>
<title>byte[] (183 samples, 0.15%)</title><rect x="160.9" y="211.0" width="1.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="163.9" y="222.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (72 samples, 0.06%)</title><rect x="162.6" y="243.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="165.6" y="254.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (72 samples, 0.06%)</title><rect x="162.6" y="227.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="165.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (727 samples, 0.58%)</title><rect x="163.3" y="243.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="166.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (602 samples, 0.48%)</title><rect x="163.3" y="227.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (602 samples, 0.48%)</title><rect x="163.3" y="211.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/815320891.linkToTargetMethod (428 samples, 0.34%)</title><rect x="163.3" y="195.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (428 samples, 0.34%)</title><rect x="163.3" y="179.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/1778629809.get$Lambda (428 samples, 0.34%)</title><rect x="163.3" y="163.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.3" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$62 (428 samples, 0.34%)</title><rect x="163.3" y="147.0" width="4.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="166.3" y="158.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (174 samples, 0.14%)</title><rect x="167.3" y="195.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/1778629809.run (174 samples, 0.14%)</title><rect x="167.3" y="179.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (174 samples, 0.14%)</title><rect x="167.3" y="163.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="170.3" y="174.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (174 samples, 0.14%)</title><rect x="167.3" y="147.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.3" y="158.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (174 samples, 0.14%)</title><rect x="167.3" y="131.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.3" y="142.0"></text>
</g>
<g>
<title>java.lang.Integer (174 samples, 0.14%)</title><rect x="167.3" y="115.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="170.3" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (125 samples, 0.10%)</title><rect x="168.9" y="227.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="171.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (125 samples, 0.10%)</title><rect x="168.9" y="211.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.9" y="222.0"></text>
</g>
<g>
<title>int[] (125 samples, 0.10%)</title><rect x="168.9" y="195.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="171.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (181 samples, 0.14%)</title><rect x="170.1" y="243.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="173.1" y="254.0"></text>
</g>
<g>
<title>byte[] (181 samples, 0.14%)</title><rect x="170.1" y="227.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="173.1" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (942 samples, 0.75%)</title><rect x="171.8" y="259.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="174.8" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (266 samples, 0.21%)</title><rect x="171.8" y="243.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="174.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (270 samples, 0.21%)</title><rect x="174.3" y="243.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="177.3" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (270 samples, 0.21%)</title><rect x="174.3" y="227.0" width="2.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="177.3" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (406 samples, 0.32%)</title><rect x="176.8" y="243.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="179.8" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (406 samples, 0.32%)</title><rect x="176.8" y="227.0" width="3.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="179.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (117 samples, 0.09%)</title><rect x="180.6" y="323.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="183.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (117 samples, 0.09%)</title><rect x="180.6" y="307.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="183.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (117 samples, 0.09%)</title><rect x="180.6" y="291.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="183.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (3,880 samples, 3.08%)</title><rect x="181.7" y="371.0" width="36.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="184.7" y="382.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (318 samples, 0.25%)</title><rect x="181.7" y="355.0" width="3.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="184.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (3,445 samples, 2.74%)</title><rect x="184.7" y="355.0" width="32.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="187.7" y="366.0">jd..</text>
</g>
<g>
<title>java.lang.Object (65 samples, 0.05%)</title><rect x="184.7" y="339.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="187.7" y="350.0"></text>
</g>
<g>
<title>java.util.LinkedList (115 samples, 0.09%)</title><rect x="185.3" y="339.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="188.3" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (86 samples, 0.07%)</title><rect x="186.4" y="339.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="189.4" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (168 samples, 0.13%)</title><rect x="187.2" y="339.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.2" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (168 samples, 0.13%)</title><rect x="187.2" y="323.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.2" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (168 samples, 0.13%)</title><rect x="187.2" y="307.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="190.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (77 samples, 0.06%)</title><rect x="188.8" y="339.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (77 samples, 0.06%)</title><rect x="188.8" y="323.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="191.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (281 samples, 0.22%)</title><rect x="189.5" y="339.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="192.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (146 samples, 0.12%)</title><rect x="192.1" y="339.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="195.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (208 samples, 0.17%)</title><rect x="193.5" y="339.0" width="2.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="196.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (231 samples, 0.18%)</title><rect x="195.5" y="339.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="198.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (1,033 samples, 0.82%)</title><rect x="197.6" y="339.0" width="9.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (87 samples, 0.07%)</title><rect x="197.6" y="323.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="200.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (53 samples, 0.04%)</title><rect x="198.5" y="323.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="201.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (99 samples, 0.08%)</title><rect x="199.0" y="323.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="202.0" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (50 samples, 0.04%)</title><rect x="199.9" y="323.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="202.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.04%)</title><rect x="200.3" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="203.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.04%)</title><rect x="200.3" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="203.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$236/621309814.get$Lambda (53 samples, 0.04%)</title><rect x="200.3" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$236 (53 samples, 0.04%)</title><rect x="200.3" y="275.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="203.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (99 samples, 0.08%)</title><rect x="200.8" y="323.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (99 samples, 0.08%)</title><rect x="200.8" y="307.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="203.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (74 samples, 0.06%)</title><rect x="201.8" y="323.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="204.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (98 samples, 0.08%)</title><rect x="202.5" y="323.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="205.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (420 samples, 0.33%)</title><rect x="203.4" y="323.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.4" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (87 samples, 0.07%)</title><rect x="203.4" y="307.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="206.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (100 samples, 0.08%)</title><rect x="204.2" y="307.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="207.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (56 samples, 0.04%)</title><rect x="205.1" y="307.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="208.1" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (56 samples, 0.04%)</title><rect x="205.1" y="291.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="208.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (177 samples, 0.14%)</title><rect x="205.7" y="307.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.7" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (51 samples, 0.04%)</title><rect x="205.7" y="291.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="208.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (57 samples, 0.05%)</title><rect x="206.1" y="291.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="209.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (69 samples, 0.05%)</title><rect x="206.7" y="291.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="209.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (659 samples, 0.52%)</title><rect x="207.3" y="339.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (48 samples, 0.04%)</title><rect x="207.3" y="323.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="210.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (70 samples, 0.06%)</title><rect x="207.8" y="323.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="210.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (51 samples, 0.04%)</title><rect x="208.4" y="323.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="211.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (81 samples, 0.06%)</title><rect x="208.9" y="323.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.9" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (81 samples, 0.06%)</title><rect x="208.9" y="307.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="211.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (409 samples, 0.33%)</title><rect x="209.7" y="323.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="212.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (87 samples, 0.07%)</title><rect x="209.7" y="307.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="212.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (99 samples, 0.08%)</title><rect x="210.5" y="307.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="213.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (52 samples, 0.04%)</title><rect x="211.4" y="307.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="214.4" y="318.0"></text>
</g>
<g>
<title>java.lang.Object (52 samples, 0.04%)</title><rect x="211.4" y="291.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="214.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (171 samples, 0.14%)</title><rect x="211.9" y="307.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (63 samples, 0.05%)</title><rect x="211.9" y="291.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="214.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (53 samples, 0.04%)</title><rect x="212.5" y="291.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="215.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (55 samples, 0.04%)</title><rect x="213.0" y="291.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="216.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (78 samples, 0.06%)</title><rect x="213.5" y="339.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="216.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (78 samples, 0.06%)</title><rect x="213.5" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (78 samples, 0.06%)</title><rect x="213.5" y="307.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="216.5" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap.get (78 samples, 0.06%)</title><rect x="213.5" y="291.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="216.5" y="302.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (78 samples, 0.06%)</title><rect x="213.5" y="275.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (78 samples, 0.06%)</title><rect x="213.5" y="259.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.5" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (78 samples, 0.06%)</title><rect x="213.5" y="243.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="216.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (298 samples, 0.24%)</title><rect x="214.2" y="339.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="217.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/815320891.linkToTargetMethod (82 samples, 0.07%)</title><rect x="214.2" y="323.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="217.2" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.07%)</title><rect x="214.2" y="307.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="217.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$184/548214908.get$Lambda (82 samples, 0.07%)</title><rect x="214.2" y="291.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="217.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$184 (82 samples, 0.07%)</title><rect x="214.2" y="275.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="217.2" y="286.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (216 samples, 0.17%)</title><rect x="215.0" y="323.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$184/548214908.run (216 samples, 0.17%)</title><rect x="215.0" y="307.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="218.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (216 samples, 0.17%)</title><rect x="215.0" y="291.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="218.0" y="302.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (59 samples, 0.05%)</title><rect x="215.0" y="275.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="218.0" y="286.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (157 samples, 0.12%)</title><rect x="215.6" y="275.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.6" y="286.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (78 samples, 0.06%)</title><rect x="215.6" y="259.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="218.6" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (79 samples, 0.06%)</title><rect x="216.3" y="259.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.3" y="270.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (79 samples, 0.06%)</title><rect x="216.3" y="243.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="219.3" y="254.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (79 samples, 0.06%)</title><rect x="216.3" y="227.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.3" y="238.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (79 samples, 0.06%)</title><rect x="216.3" y="211.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="219.3" y="222.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (79 samples, 0.06%)</title><rect x="216.3" y="195.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="219.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (117 samples, 0.09%)</title><rect x="217.0" y="355.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (117 samples, 0.09%)</title><rect x="217.0" y="339.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="220.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.09%)</title><rect x="218.1" y="435.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="221.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.09%)</title><rect x="218.1" y="419.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="221.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (109 samples, 0.09%)</title><rect x="218.1" y="403.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="221.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (123 samples, 0.10%)</title><rect x="219.2" y="467.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (123 samples, 0.10%)</title><rect x="219.2" y="451.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (123 samples, 0.10%)</title><rect x="219.2" y="435.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (123 samples, 0.10%)</title><rect x="219.2" y="419.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="222.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (123 samples, 0.10%)</title><rect x="219.2" y="403.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="222.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (349 samples, 0.28%)</title><rect x="220.3" y="467.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="223.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (233 samples, 0.19%)</title><rect x="220.3" y="451.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (233 samples, 0.19%)</title><rect x="220.3" y="435.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="223.3" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2043317551.linkToTargetMethod (233 samples, 0.19%)</title><rect x="220.3" y="419.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="223.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/369852026.invoke (233 samples, 0.19%)</title><rect x="220.3" y="403.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="223.3" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1977335334.invoke (233 samples, 0.19%)</title><rect x="220.3" y="387.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="223.3" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (233 samples, 0.19%)</title><rect x="220.3" y="371.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="223.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (88 samples, 0.07%)</title><rect x="220.3" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="223.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (88 samples, 0.07%)</title><rect x="220.3" y="339.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="223.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (145 samples, 0.12%)</title><rect x="221.1" y="355.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (145 samples, 0.12%)</title><rect x="221.1" y="339.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="224.1" y="350.0"></text>
</g>
<g>
<title>byte[] (145 samples, 0.12%)</title><rect x="221.1" y="323.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="224.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (116 samples, 0.09%)</title><rect x="222.5" y="451.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (116 samples, 0.09%)</title><rect x="222.5" y="435.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="225.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (145 samples, 0.12%)</title><rect x="223.6" y="547.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="226.6" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (145 samples, 0.12%)</title><rect x="223.6" y="531.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="226.6" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (145 samples, 0.12%)</title><rect x="223.6" y="515.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="226.6" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (145 samples, 0.12%)</title><rect x="223.6" y="499.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="226.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (339 samples, 0.27%)</title><rect x="224.9" y="547.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (257 samples, 0.20%)</title><rect x="224.9" y="531.0" width="2.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="227.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (82 samples, 0.07%)</title><rect x="227.4" y="531.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (82 samples, 0.07%)</title><rect x="227.4" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.4" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (82 samples, 0.07%)</title><rect x="227.4" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.4" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (82 samples, 0.07%)</title><rect x="227.4" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.4" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (82 samples, 0.07%)</title><rect x="227.4" y="467.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.4" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (82 samples, 0.07%)</title><rect x="227.4" y="451.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.4" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (82 samples, 0.07%)</title><rect x="227.4" y="435.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.4" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (82 samples, 0.07%)</title><rect x="227.4" y="419.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="230.4" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (82 samples, 0.07%)</title><rect x="227.4" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.4" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (82 samples, 0.07%)</title><rect x="227.4" y="387.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="230.4" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (82 samples, 0.07%)</title><rect x="227.4" y="371.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="230.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,253 samples, 1.00%)</title><rect x="228.1" y="643.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (656 samples, 0.52%)</title><rect x="228.1" y="627.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="231.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (656 samples, 0.52%)</title><rect x="228.1" y="611.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="231.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (656 samples, 0.52%)</title><rect x="228.1" y="595.0" width="6.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (656 samples, 0.52%)</title><rect x="228.1" y="579.0" width="6.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="231.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (597 samples, 0.47%)</title><rect x="234.3" y="627.0" width="5.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (597 samples, 0.47%)</title><rect x="234.3" y="611.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (597 samples, 0.47%)</title><rect x="234.3" y="595.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (597 samples, 0.47%)</title><rect x="234.3" y="579.0" width="5.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="237.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$309/1651102379.run (2,286 samples, 1.82%)</title><rect x="239.9" y="643.0" width="21.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.9" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2,286 samples, 1.82%)</title><rect x="239.9" y="627.0" width="21.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.9" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2,286 samples, 1.82%)</title><rect x="239.9" y="611.0" width="21.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.9" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (2,286 samples, 1.82%)</title><rect x="239.9" y="595.0" width="21.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="242.9" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,286 samples, 1.82%)</title><rect x="239.9" y="579.0" width="21.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.9" y="590.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2,286 samples, 1.82%)</title><rect x="239.9" y="563.0" width="21.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.9" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,286 samples, 1.82%)</title><rect x="239.9" y="547.0" width="21.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.9" y="558.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,286 samples, 1.82%)</title><rect x="239.9" y="531.0" width="21.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.9" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,286 samples, 1.82%)</title><rect x="239.9" y="515.0" width="21.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="242.9" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,285 samples, 1.82%)</title><rect x="239.9" y="499.0" width="21.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.9" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2,285 samples, 1.82%)</title><rect x="239.9" y="483.0" width="21.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.9" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (2,079 samples, 1.65%)</title><rect x="239.9" y="467.0" width="19.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (396 samples, 0.31%)</title><rect x="239.9" y="451.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (396 samples, 0.31%)</title><rect x="239.9" y="435.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$311/10799099.get$Lambda (332 samples, 0.26%)</title><rect x="239.9" y="419.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="242.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$311 (332 samples, 0.26%)</title><rect x="239.9" y="403.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="242.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$321/369272078.get$Lambda (64 samples, 0.05%)</title><rect x="243.0" y="419.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="246.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$321 (64 samples, 0.05%)</title><rect x="243.0" y="403.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="246.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,683 samples, 1.34%)</title><rect x="243.6" y="451.0" width="15.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="246.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (168 samples, 0.13%)</title><rect x="243.6" y="435.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="246.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,515 samples, 1.20%)</title><rect x="245.2" y="435.0" width="14.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="248.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,515 samples, 1.20%)</title><rect x="245.2" y="419.0" width="14.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="248.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,515 samples, 1.20%)</title><rect x="245.2" y="403.0" width="14.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (580 samples, 0.46%)</title><rect x="245.2" y="387.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (226 samples, 0.18%)</title><rect x="245.2" y="371.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="248.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$313/446652366.apply (354 samples, 0.28%)</title><rect x="247.3" y="371.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="250.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (354 samples, 0.28%)</title><rect x="247.3" y="355.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (354 samples, 0.28%)</title><rect x="247.3" y="339.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="250.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (83 samples, 0.07%)</title><rect x="247.3" y="323.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.3" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (83 samples, 0.07%)</title><rect x="247.3" y="307.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.3" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (83 samples, 0.07%)</title><rect x="247.3" y="291.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="250.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (271 samples, 0.22%)</title><rect x="248.1" y="323.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.04%)</title><rect x="248.1" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.04%)</title><rect x="248.1" y="291.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$324/669883057.get$Lambda (53 samples, 0.04%)</title><rect x="248.1" y="275.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="251.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$324 (53 samples, 0.04%)</title><rect x="248.1" y="259.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="251.1" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (218 samples, 0.17%)</title><rect x="248.6" y="307.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="251.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (218 samples, 0.17%)</title><rect x="248.6" y="291.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="251.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (116 samples, 0.09%)</title><rect x="248.6" y="275.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="251.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (102 samples, 0.08%)</title><rect x="249.7" y="275.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (102 samples, 0.08%)</title><rect x="249.7" y="259.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (102 samples, 0.08%)</title><rect x="249.7" y="243.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="252.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (935 samples, 0.74%)</title><rect x="250.6" y="387.0" width="8.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="253.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (935 samples, 0.74%)</title><rect x="250.6" y="371.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="253.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$288/1871228320.apply (935 samples, 0.74%)</title><rect x="250.6" y="355.0" width="8.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="253.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (935 samples, 0.74%)</title><rect x="250.6" y="339.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="253.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (935 samples, 0.74%)</title><rect x="250.6" y="323.0" width="8.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="253.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/1850087782.apply (935 samples, 0.74%)</title><rect x="250.6" y="307.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (935 samples, 0.74%)</title><rect x="250.6" y="291.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (56 samples, 0.04%)</title><rect x="250.6" y="275.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="253.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.04%)</title><rect x="250.6" y="259.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="253.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$313/446652366.get$Lambda (56 samples, 0.04%)</title><rect x="250.6" y="243.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="253.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$313 (56 samples, 0.04%)</title><rect x="250.6" y="227.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="253.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (242 samples, 0.19%)</title><rect x="251.1" y="275.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="254.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (242 samples, 0.19%)</title><rect x="251.1" y="259.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="254.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (134 samples, 0.11%)</title><rect x="251.1" y="243.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="254.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.09%)</title><rect x="252.4" y="243.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (108 samples, 0.09%)</title><rect x="252.4" y="227.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (108 samples, 0.09%)</title><rect x="252.4" y="211.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="255.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (286 samples, 0.23%)</title><rect x="253.4" y="275.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.4" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.05%)</title><rect x="253.4" y="259.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.4" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.05%)</title><rect x="253.4" y="243.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$315/1008916601.get$Lambda (58 samples, 0.05%)</title><rect x="253.4" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="256.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$315 (58 samples, 0.05%)</title><rect x="253.4" y="211.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="256.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (228 samples, 0.18%)</title><rect x="254.0" y="259.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (228 samples, 0.18%)</title><rect x="254.0" y="243.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="257.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (134 samples, 0.11%)</title><rect x="254.0" y="227.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="257.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (94 samples, 0.07%)</title><rect x="255.2" y="227.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="258.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (94 samples, 0.07%)</title><rect x="255.2" y="211.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.2" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (94 samples, 0.07%)</title><rect x="255.2" y="195.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="258.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (351 samples, 0.28%)</title><rect x="256.1" y="275.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="259.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (193 samples, 0.15%)</title><rect x="256.1" y="259.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="259.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (91 samples, 0.07%)</title><rect x="256.1" y="243.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="259.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (102 samples, 0.08%)</title><rect x="256.9" y="243.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (102 samples, 0.08%)</title><rect x="256.9" y="227.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (102 samples, 0.08%)</title><rect x="256.9" y="211.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="259.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (158 samples, 0.13%)</title><rect x="257.9" y="259.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="260.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (87 samples, 0.07%)</title><rect x="257.9" y="243.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="260.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (71 samples, 0.06%)</title><rect x="258.7" y="243.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="261.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (71 samples, 0.06%)</title><rect x="258.7" y="227.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (71 samples, 0.06%)</title><rect x="258.7" y="211.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (71 samples, 0.06%)</title><rect x="258.7" y="195.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="261.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (71 samples, 0.06%)</title><rect x="258.7" y="179.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (71 samples, 0.06%)</title><rect x="258.7" y="163.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="261.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (206 samples, 0.16%)</title><rect x="259.4" y="467.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (206 samples, 0.16%)</title><rect x="259.4" y="451.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (206 samples, 0.16%)</title><rect x="259.4" y="435.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (206 samples, 0.16%)</title><rect x="259.4" y="419.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="262.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (206 samples, 0.16%)</title><rect x="259.4" y="403.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.4" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (206 samples, 0.16%)</title><rect x="259.4" y="387.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.4" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (95 samples, 0.08%)</title><rect x="259.4" y="371.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="262.4" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (95 samples, 0.08%)</title><rect x="259.4" y="355.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="262.4" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (111 samples, 0.09%)</title><rect x="260.3" y="371.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="263.3" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (111 samples, 0.09%)</title><rect x="260.3" y="355.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="263.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (14,244 samples, 11.32%)</title><rect x="261.3" y="643.0" width="133.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="264.3" y="654.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (14,244 samples, 11.32%)</title><rect x="261.3" y="627.0" width="133.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="264.3" y="638.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (12,139 samples, 9.65%)</title><rect x="261.3" y="611.0" width="113.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="264.3" y="622.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$236/621309814.run (12,139 samples, 9.65%)</title><rect x="261.3" y="595.0" width="113.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="264.3" y="606.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (12,139 samples, 9.65%)</title><rect x="261.3" y="579.0" width="113.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.3" y="590.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (322 samples, 0.26%)</title><rect x="261.3" y="563.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="264.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (322 samples, 0.26%)</title><rect x="261.3" y="547.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="264.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (322 samples, 0.26%)</title><rect x="261.3" y="531.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (322 samples, 0.26%)</title><rect x="261.3" y="515.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="264.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/20094719.linkToTargetMethod (129 samples, 0.10%)</title><rect x="261.3" y="499.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="264.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/324457684.invoke (129 samples, 0.10%)</title><rect x="261.3" y="483.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (129 samples, 0.10%)</title><rect x="261.3" y="467.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="264.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (129 samples, 0.10%)</title><rect x="261.3" y="451.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="264.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (129 samples, 0.10%)</title><rect x="261.3" y="435.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.3" y="446.0"></text>
</g>
<g>
<title>byte[] (129 samples, 0.10%)</title><rect x="261.3" y="419.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="264.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (193 samples, 0.15%)</title><rect x="262.5" y="499.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (193 samples, 0.15%)</title><rect x="262.5" y="483.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (193 samples, 0.15%)</title><rect x="262.5" y="467.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="265.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310/1092212478.get$Lambda (193 samples, 0.15%)</title><rect x="262.5" y="451.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="265.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310 (193 samples, 0.15%)</title><rect x="262.5" y="435.0" width="1.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="265.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (11,817 samples, 9.40%)</title><rect x="264.4" y="563.0" width="110.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="267.4" y="574.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (11,817 samples, 9.40%)</title><rect x="264.4" y="547.0" width="110.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.4" y="558.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (11,817 samples, 9.40%)</title><rect x="264.4" y="531.0" width="110.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.4" y="542.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (11,817 samples, 9.40%)</title><rect x="264.4" y="515.0" width="110.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="267.4" y="526.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5,598 samples, 4.45%)</title><rect x="264.4" y="499.0" width="52.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="267.4" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5,598 samples, 4.45%)</title><rect x="264.4" y="483.0" width="52.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.4" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5,598 samples, 4.45%)</title><rect x="264.4" y="467.0" width="52.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.4" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5,598 samples, 4.45%)</title><rect x="264.4" y="451.0" width="52.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="267.4" y="462.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5,598 samples, 4.45%)</title><rect x="264.4" y="435.0" width="52.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="267.4" y="446.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5,598 samples, 4.45%)</title><rect x="264.4" y="419.0" width="52.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.4" y="430.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5,598 samples, 4.45%)</title><rect x="264.4" y="403.0" width="52.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.4" y="414.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5,419 samples, 4.31%)</title><rect x="264.4" y="387.0" width="50.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="267.4" y="398.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5,419 samples, 4.31%)</title><rect x="264.4" y="371.0" width="50.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="267.4" y="382.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (5,303 samples, 4.22%)</title><rect x="264.4" y="355.0" width="49.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.4" y="366.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (103 samples, 0.08%)</title><rect x="264.4" y="339.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="267.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$315/1008916601.apply (119 samples, 0.09%)</title><rect x="265.3" y="339.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="268.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (119 samples, 0.09%)</title><rect x="265.3" y="323.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (119 samples, 0.09%)</title><rect x="265.3" y="307.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="268.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (119 samples, 0.09%)</title><rect x="265.3" y="291.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (119 samples, 0.09%)</title><rect x="265.3" y="275.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="268.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1961341944.apply (4,852 samples, 3.86%)</title><rect x="266.4" y="339.0" width="45.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.4" y="350.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (4,852 samples, 3.86%)</title><rect x="266.4" y="323.0" width="45.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.4" y="334.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (78 samples, 0.06%)</title><rect x="266.4" y="307.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="269.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (78 samples, 0.06%)</title><rect x="266.4" y="291.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="269.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$369/256809203.get$Lambda (78 samples, 0.06%)</title><rect x="266.4" y="275.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="269.4" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$369 (78 samples, 0.06%)</title><rect x="266.4" y="259.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="269.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (280 samples, 0.22%)</title><rect x="267.2" y="307.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="270.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (280 samples, 0.22%)</title><rect x="267.2" y="291.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (153 samples, 0.12%)</title><rect x="267.2" y="275.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="270.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (127 samples, 0.10%)</title><rect x="268.6" y="275.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (127 samples, 0.10%)</title><rect x="268.6" y="259.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (127 samples, 0.10%)</title><rect x="268.6" y="243.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="271.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (4,494 samples, 3.57%)</title><rect x="269.8" y="307.0" width="42.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.8" y="318.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.04%)</title><rect x="269.8" y="291.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.04%)</title><rect x="269.8" y="275.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$366/707873305.get$Lambda (55 samples, 0.04%)</title><rect x="269.8" y="259.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$366 (55 samples, 0.04%)</title><rect x="269.8" y="243.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="272.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (255 samples, 0.20%)</title><rect x="270.3" y="291.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (255 samples, 0.20%)</title><rect x="270.3" y="275.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (128 samples, 0.10%)</title><rect x="270.3" y="259.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="273.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (127 samples, 0.10%)</title><rect x="271.5" y="259.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (127 samples, 0.10%)</title><rect x="271.5" y="243.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (127 samples, 0.10%)</title><rect x="271.5" y="227.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="274.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (4,184 samples, 3.33%)</title><rect x="272.7" y="291.0" width="39.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="275.7" y="302.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$142/34186423.apply (296 samples, 0.24%)</title><rect x="272.7" y="275.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="275.7" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (296 samples, 0.24%)</title><rect x="272.7" y="259.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="275.7" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (296 samples, 0.24%)</title><rect x="272.7" y="243.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="275.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (118 samples, 0.09%)</title><rect x="272.7" y="227.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="275.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (178 samples, 0.14%)</title><rect x="273.8" y="227.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="276.8" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (71 samples, 0.06%)</title><rect x="273.8" y="211.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="276.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (107 samples, 0.09%)</title><rect x="274.5" y="211.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="277.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (3,888 samples, 3.09%)</title><rect x="275.5" y="275.0" width="36.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.5" y="286.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (120 samples, 0.10%)</title><rect x="275.5" y="259.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (120 samples, 0.10%)</title><rect x="275.5" y="243.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$361/609138659.get$Lambda (64 samples, 0.05%)</title><rect x="275.5" y="227.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$361 (64 samples, 0.05%)</title><rect x="275.5" y="211.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="278.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$363/637561343.get$Lambda (56 samples, 0.04%)</title><rect x="276.1" y="227.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="279.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$363 (56 samples, 0.04%)</title><rect x="276.1" y="211.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="279.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2141276233.linkToTargetMethod (124 samples, 0.10%)</title><rect x="276.6" y="259.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2131328504.invokeStatic (124 samples, 0.10%)</title><rect x="276.6" y="243.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="279.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$349/798535403.get$Lambda (124 samples, 0.10%)</title><rect x="276.6" y="227.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$349 (124 samples, 0.10%)</title><rect x="276.6" y="211.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="279.6" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (751 samples, 0.60%)</title><rect x="277.8" y="259.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.8" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (310 samples, 0.25%)</title><rect x="277.8" y="243.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.8" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (115 samples, 0.09%)</title><rect x="277.8" y="227.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.8" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (115 samples, 0.09%)</title><rect x="277.8" y="211.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="280.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (195 samples, 0.16%)</title><rect x="278.8" y="227.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.8" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (195 samples, 0.16%)</title><rect x="278.8" y="211.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="281.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (226 samples, 0.18%)</title><rect x="280.7" y="243.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="283.7" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (226 samples, 0.18%)</title><rect x="280.7" y="227.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="283.7" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (226 samples, 0.18%)</title><rect x="280.7" y="211.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (90 samples, 0.07%)</title><rect x="280.7" y="195.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="283.7" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (90 samples, 0.07%)</title><rect x="280.7" y="179.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="283.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (90 samples, 0.07%)</title><rect x="280.7" y="163.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.7" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (90 samples, 0.07%)</title><rect x="280.7" y="147.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="283.7" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$345/400287746.get (72 samples, 0.06%)</title><rect x="281.5" y="195.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.5" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (72 samples, 0.06%)</title><rect x="281.5" y="179.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="284.5" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (64 samples, 0.05%)</title><rect x="282.2" y="195.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (64 samples, 0.05%)</title><rect x="282.2" y="179.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="285.2" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (64 samples, 0.05%)</title><rect x="282.2" y="163.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.2" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (64 samples, 0.05%)</title><rect x="282.2" y="147.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="285.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (215 samples, 0.17%)</title><rect x="282.8" y="243.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.8" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (215 samples, 0.17%)</title><rect x="282.8" y="227.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="285.8" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (503 samples, 0.40%)</title><rect x="284.8" y="259.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="287.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (249 samples, 0.20%)</title><rect x="284.8" y="243.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="287.8" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (154 samples, 0.12%)</title><rect x="284.8" y="227.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="287.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (95 samples, 0.08%)</title><rect x="286.3" y="227.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (95 samples, 0.08%)</title><rect x="286.3" y="211.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.3" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (95 samples, 0.08%)</title><rect x="286.3" y="195.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="289.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (254 samples, 0.20%)</title><rect x="287.1" y="243.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (254 samples, 0.20%)</title><rect x="287.1" y="227.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.1" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (149 samples, 0.12%)</title><rect x="287.1" y="211.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="290.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (105 samples, 0.08%)</title><rect x="288.5" y="211.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="291.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (105 samples, 0.08%)</title><rect x="288.5" y="195.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.5" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (105 samples, 0.08%)</title><rect x="288.5" y="179.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="291.5" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (73 samples, 0.06%)</title><rect x="289.5" y="259.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="292.5" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (97 samples, 0.08%)</title><rect x="290.2" y="259.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="293.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (115 samples, 0.09%)</title><rect x="291.1" y="259.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="294.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (51 samples, 0.04%)</title><rect x="292.2" y="259.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (51 samples, 0.04%)</title><rect x="292.2" y="243.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="295.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,054 samples, 1.63%)</title><rect x="292.7" y="259.0" width="19.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$349/798535403.run (2,054 samples, 1.63%)</title><rect x="292.7" y="243.0" width="19.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (2,054 samples, 1.63%)</title><rect x="292.7" y="227.0" width="19.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (257 samples, 0.20%)</title><rect x="292.7" y="211.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="295.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (257 samples, 0.20%)</title><rect x="292.7" y="195.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="295.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$351/569771841.get$Lambda (43 samples, 0.03%)</title><rect x="292.7" y="179.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="295.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$351 (43 samples, 0.03%)</title><rect x="292.7" y="163.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="295.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$352/1607757290.get$Lambda (92 samples, 0.07%)</title><rect x="293.1" y="179.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="296.1" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$352 (92 samples, 0.07%)</title><rect x="293.1" y="163.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="296.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$356/1122728445.get$Lambda (122 samples, 0.10%)</title><rect x="294.0" y="179.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="297.0" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$356 (122 samples, 0.10%)</title><rect x="294.0" y="163.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="297.0" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (230 samples, 0.18%)</title><rect x="295.1" y="211.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (230 samples, 0.18%)</title><rect x="295.1" y="195.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (139 samples, 0.11%)</title><rect x="295.1" y="179.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="298.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (91 samples, 0.07%)</title><rect x="296.4" y="179.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="299.4" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (91 samples, 0.07%)</title><rect x="296.4" y="163.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="299.4" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (91 samples, 0.07%)</title><rect x="296.4" y="147.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="299.4" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (127 samples, 0.10%)</title><rect x="297.3" y="211.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="300.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (120 samples, 0.10%)</title><rect x="298.4" y="211.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="301.4" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (120 samples, 0.10%)</title><rect x="298.4" y="195.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="301.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (368 samples, 0.29%)</title><rect x="299.6" y="211.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="302.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (368 samples, 0.29%)</title><rect x="299.6" y="195.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (91 samples, 0.07%)</title><rect x="299.6" y="179.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="302.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (91 samples, 0.07%)</title><rect x="299.6" y="163.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$357/1715244547.get$Lambda (91 samples, 0.07%)</title><rect x="299.6" y="147.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="302.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$357 (91 samples, 0.07%)</title><rect x="299.6" y="131.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="302.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (277 samples, 0.22%)</title><rect x="300.4" y="179.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="303.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (277 samples, 0.22%)</title><rect x="300.4" y="163.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (277 samples, 0.22%)</title><rect x="300.4" y="147.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.4" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (138 samples, 0.11%)</title><rect x="300.4" y="131.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="303.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (139 samples, 0.11%)</title><rect x="301.7" y="131.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="304.7" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (139 samples, 0.11%)</title><rect x="301.7" y="115.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.7" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (139 samples, 0.11%)</title><rect x="301.7" y="99.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="304.7" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (332 samples, 0.26%)</title><rect x="303.0" y="211.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (332 samples, 0.26%)</title><rect x="303.0" y="195.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1327536153.invoke (332 samples, 0.26%)</title><rect x="303.0" y="179.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.0" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (332 samples, 0.26%)</title><rect x="303.0" y="163.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.0" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (71 samples, 0.06%)</title><rect x="303.0" y="147.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.0" y="158.0"></text>
</g>
<g>
<title>java.lang.String (71 samples, 0.06%)</title><rect x="303.0" y="131.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="306.0" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (261 samples, 0.21%)</title><rect x="303.7" y="147.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (261 samples, 0.21%)</title><rect x="303.7" y="131.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.7" y="142.0"></text>
</g>
<g>
<title>byte[] (261 samples, 0.21%)</title><rect x="303.7" y="115.0" width="2.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="306.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (620 samples, 0.49%)</title><rect x="306.1" y="211.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="309.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (165 samples, 0.13%)</title><rect x="306.1" y="195.0" width="1.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="309.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (455 samples, 0.36%)</title><rect x="307.7" y="195.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="310.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (455 samples, 0.36%)</title><rect x="307.7" y="179.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.03%)</title><rect x="307.7" y="163.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser$$Lambda$354/1049820653.get$Lambda (44 samples, 0.03%)</title><rect x="307.7" y="147.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="310.7" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser$$Lambda$354 (44 samples, 0.03%)</title><rect x="307.7" y="131.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="310.7" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1327536153.invoke (411 samples, 0.33%)</title><rect x="308.1" y="163.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.1" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (411 samples, 0.33%)</title><rect x="308.1" y="147.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.1" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (81 samples, 0.06%)</title><rect x="308.1" y="131.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.1" y="142.0"></text>
</g>
<g>
<title>java.lang.String (81 samples, 0.06%)</title><rect x="308.1" y="115.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="311.1" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (330 samples, 0.26%)</title><rect x="308.9" y="131.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (330 samples, 0.26%)</title><rect x="308.9" y="115.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.9" y="126.0"></text>
</g>
<g>
<title>byte[] (330 samples, 0.26%)</title><rect x="308.9" y="99.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="311.9" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$289/1016523658.apply (229 samples, 0.18%)</title><rect x="312.0" y="339.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (229 samples, 0.18%)</title><rect x="312.0" y="323.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (116 samples, 0.09%)</title><rect x="312.0" y="307.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="315.0" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (116 samples, 0.09%)</title><rect x="312.0" y="291.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="315.0" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (116 samples, 0.09%)</title><rect x="312.0" y="275.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.0" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (116 samples, 0.09%)</title><rect x="312.0" y="259.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="315.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (113 samples, 0.09%)</title><rect x="313.0" y="307.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (113 samples, 0.09%)</title><rect x="313.0" y="291.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="316.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (116 samples, 0.09%)</title><rect x="314.1" y="355.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (116 samples, 0.09%)</title><rect x="314.1" y="339.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$290/877098177.apply (116 samples, 0.09%)</title><rect x="314.1" y="323.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (116 samples, 0.09%)</title><rect x="314.1" y="307.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (116 samples, 0.09%)</title><rect x="314.1" y="291.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (116 samples, 0.09%)</title><rect x="314.1" y="275.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="317.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$324/669883057.apply (179 samples, 0.14%)</title><rect x="315.2" y="387.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="318.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (179 samples, 0.14%)</title><rect x="315.2" y="371.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="318.2" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (179 samples, 0.14%)</title><rect x="315.2" y="355.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="318.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (6,219 samples, 4.94%)</title><rect x="316.9" y="499.0" width="58.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.9" y="510.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (399 samples, 0.32%)</title><rect x="316.9" y="483.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="319.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (399 samples, 0.32%)</title><rect x="316.9" y="467.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="319.9" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (399 samples, 0.32%)</title><rect x="316.9" y="451.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="319.9" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (399 samples, 0.32%)</title><rect x="316.9" y="435.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="319.9" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (399 samples, 0.32%)</title><rect x="316.9" y="419.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="319.9" y="430.0"></text>
</g>
<g>
<title>byte[] (399 samples, 0.32%)</title><rect x="316.9" y="403.0" width="3.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="319.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (232 samples, 0.18%)</title><rect x="320.6" y="483.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.6" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (232 samples, 0.18%)</title><rect x="320.6" y="467.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="323.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (232 samples, 0.18%)</title><rect x="320.6" y="451.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="323.6" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (232 samples, 0.18%)</title><rect x="320.6" y="435.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="323.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (232 samples, 0.18%)</title><rect x="320.6" y="419.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="323.6" y="430.0"></text>
</g>
<g>
<title>byte[] (232 samples, 0.18%)</title><rect x="320.6" y="403.0" width="2.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="323.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (481 samples, 0.38%)</title><rect x="322.8" y="483.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.8" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (95 samples, 0.08%)</title><rect x="322.8" y="467.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="325.8" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (74 samples, 0.06%)</title><rect x="323.7" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (74 samples, 0.06%)</title><rect x="323.7" y="451.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (74 samples, 0.06%)</title><rect x="323.7" y="435.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.7" y="446.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.06%)</title><rect x="323.7" y="419.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="326.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (111 samples, 0.09%)</title><rect x="324.4" y="467.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="327.4" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (111 samples, 0.09%)</title><rect x="324.4" y="451.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="327.4" y="462.0"></text>
</g>
<g>
<title>byte[] (111 samples, 0.09%)</title><rect x="324.4" y="435.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="327.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (201 samples, 0.16%)</title><rect x="325.4" y="467.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.4" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (201 samples, 0.16%)</title><rect x="325.4" y="451.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="328.4" y="462.0"></text>
</g>
<g>
<title>java.lang.String (72 samples, 0.06%)</title><rect x="325.4" y="435.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="328.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (129 samples, 0.10%)</title><rect x="326.1" y="435.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.1" y="446.0"></text>
</g>
<g>
<title>byte[] (129 samples, 0.10%)</title><rect x="326.1" y="419.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="329.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1,672 samples, 1.33%)</title><rect x="327.3" y="483.0" width="15.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,672 samples, 1.33%)</title><rect x="327.3" y="467.0" width="15.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.3" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,672 samples, 1.33%)</title><rect x="327.3" y="451.0" width="15.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.3" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (62 samples, 0.05%)</title><rect x="327.3" y="435.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="330.3" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (80 samples, 0.06%)</title><rect x="327.9" y="435.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="330.9" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (165 samples, 0.13%)</title><rect x="328.6" y="435.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="331.6" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (61 samples, 0.05%)</title><rect x="330.2" y="435.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="333.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (110 samples, 0.09%)</title><rect x="330.8" y="435.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.8" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (110 samples, 0.09%)</title><rect x="330.8" y="419.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="333.8" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.get$Lambda (110 samples, 0.09%)</title><rect x="330.8" y="403.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="333.8" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$134 (110 samples, 0.09%)</title><rect x="330.8" y="387.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="333.8" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (121 samples, 0.10%)</title><rect x="331.8" y="435.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="334.8" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (121 samples, 0.10%)</title><rect x="331.8" y="419.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="334.8" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (910 samples, 0.72%)</title><rect x="332.9" y="435.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="335.9" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (910 samples, 0.72%)</title><rect x="332.9" y="419.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="335.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (910 samples, 0.72%)</title><rect x="332.9" y="403.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (154 samples, 0.12%)</title><rect x="332.9" y="387.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="335.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (154 samples, 0.12%)</title><rect x="332.9" y="371.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.get$Lambda (154 samples, 0.12%)</title><rect x="332.9" y="355.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.9" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$136 (154 samples, 0.12%)</title><rect x="332.9" y="339.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="335.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (171 samples, 0.14%)</title><rect x="334.4" y="387.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.4" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (171 samples, 0.14%)</title><rect x="334.4" y="371.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="337.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (171 samples, 0.14%)</title><rect x="334.4" y="355.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="337.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (171 samples, 0.14%)</title><rect x="334.4" y="339.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (171 samples, 0.14%)</title><rect x="334.4" y="323.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="337.4" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (171 samples, 0.14%)</title><rect x="334.4" y="307.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.4" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (171 samples, 0.14%)</title><rect x="334.4" y="291.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="337.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (171 samples, 0.14%)</title><rect x="334.4" y="275.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="337.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (171 samples, 0.14%)</title><rect x="334.4" y="259.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="337.4" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (316 samples, 0.25%)</title><rect x="336.0" y="387.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.0" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (316 samples, 0.25%)</title><rect x="336.0" y="371.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="339.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (153 samples, 0.12%)</title><rect x="336.0" y="355.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="339.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (153 samples, 0.12%)</title><rect x="336.0" y="339.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="339.0" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (153 samples, 0.12%)</title><rect x="336.0" y="323.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="339.0" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (163 samples, 0.13%)</title><rect x="337.4" y="355.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="340.4" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (163 samples, 0.13%)</title><rect x="337.4" y="339.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="340.4" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (269 samples, 0.21%)</title><rect x="338.9" y="387.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.9" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (269 samples, 0.21%)</title><rect x="338.9" y="371.0" width="2.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="341.9" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (163 samples, 0.13%)</title><rect x="341.5" y="435.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (163 samples, 0.13%)</title><rect x="341.5" y="419.0" width="1.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="344.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (3,435 samples, 2.73%)</title><rect x="343.0" y="483.0" width="32.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="346.0" y="494.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (143 samples, 0.11%)</title><rect x="343.0" y="467.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="346.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (235 samples, 0.19%)</title><rect x="344.3" y="467.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="347.3" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (235 samples, 0.19%)</title><rect x="344.3" y="451.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.3" y="462.0"></text>
</g>
<g>
<title>byte[] (235 samples, 0.19%)</title><rect x="344.3" y="435.0" width="2.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="347.3" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (439 samples, 0.35%)</title><rect x="346.5" y="467.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="349.5" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (439 samples, 0.35%)</title><rect x="346.5" y="451.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.5" y="462.0"></text>
</g>
<g>
<title>java.lang.String (178 samples, 0.14%)</title><rect x="346.5" y="435.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="349.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (261 samples, 0.21%)</title><rect x="348.2" y="435.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="351.2" y="446.0"></text>
</g>
<g>
<title>byte[] (261 samples, 0.21%)</title><rect x="348.2" y="419.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="351.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (2,618 samples, 2.08%)</title><rect x="350.7" y="467.0" width="24.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="353.7" y="478.0">j..</text>
</g>
<g>
<title>java/lang/String.substring (761 samples, 0.61%)</title><rect x="350.7" y="451.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="353.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (761 samples, 0.61%)</title><rect x="350.7" y="435.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="353.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (354 samples, 0.28%)</title><rect x="350.7" y="419.0" width="3.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="353.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (407 samples, 0.32%)</title><rect x="354.0" y="419.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="357.0" y="430.0"></text>
</g>
<g>
<title>byte[] (407 samples, 0.32%)</title><rect x="354.0" y="403.0" width="3.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="357.0" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (401 samples, 0.32%)</title><rect x="357.8" y="451.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="360.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (401 samples, 0.32%)</title><rect x="357.8" y="435.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="360.8" y="446.0"></text>
</g>
<g>
<title>byte[] (217 samples, 0.17%)</title><rect x="357.8" y="419.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="360.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (184 samples, 0.15%)</title><rect x="359.8" y="419.0" width="1.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="362.8" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (377 samples, 0.30%)</title><rect x="361.6" y="451.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (377 samples, 0.30%)</title><rect x="361.6" y="435.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (377 samples, 0.30%)</title><rect x="361.6" y="419.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="364.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (177 samples, 0.14%)</title><rect x="361.6" y="403.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="364.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (200 samples, 0.16%)</title><rect x="363.2" y="403.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="366.2" y="414.0"></text>
</g>
<g>
<title>byte[] (200 samples, 0.16%)</title><rect x="363.2" y="387.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="366.2" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (416 samples, 0.33%)</title><rect x="365.1" y="451.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="368.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (416 samples, 0.33%)</title><rect x="365.1" y="435.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="368.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (416 samples, 0.33%)</title><rect x="365.1" y="419.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="368.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (416 samples, 0.33%)</title><rect x="365.1" y="403.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="368.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (416 samples, 0.33%)</title><rect x="365.1" y="387.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="368.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (416 samples, 0.33%)</title><rect x="365.1" y="371.0" width="3.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="368.1" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (663 samples, 0.53%)</title><rect x="369.0" y="451.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.0" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (217 samples, 0.17%)</title><rect x="369.0" y="435.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.0" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (217 samples, 0.17%)</title><rect x="369.0" y="419.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="372.0" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (279 samples, 0.22%)</title><rect x="371.0" y="435.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="374.0" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (279 samples, 0.22%)</title><rect x="371.0" y="419.0" width="2.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="374.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$337/1009992811.apply (167 samples, 0.13%)</title><rect x="373.6" y="435.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="376.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (167 samples, 0.13%)</title><rect x="373.6" y="419.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.6" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (167 samples, 0.13%)</title><rect x="373.6" y="403.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="376.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2,105 samples, 1.67%)</title><rect x="375.2" y="611.0" width="19.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,105 samples, 1.67%)</title><rect x="375.2" y="595.0" width="19.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="378.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,105 samples, 1.67%)</title><rect x="375.2" y="579.0" width="19.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="378.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$236/621309814.run (2,105 samples, 1.67%)</title><rect x="375.2" y="563.0" width="19.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,105 samples, 1.67%)</title><rect x="375.2" y="547.0" width="19.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="378.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2,104 samples, 1.67%)</title><rect x="375.2" y="531.0" width="19.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="378.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (144 samples, 0.11%)</title><rect x="375.2" y="515.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (144 samples, 0.11%)</title><rect x="375.2" y="499.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="378.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$261/1453282749.get$Lambda (71 samples, 0.06%)</title><rect x="375.2" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="378.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$261 (71 samples, 0.06%)</title><rect x="375.2" y="467.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="378.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$265/904072682.get$Lambda (73 samples, 0.06%)</title><rect x="375.9" y="483.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$265 (73 samples, 0.06%)</title><rect x="375.9" y="467.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="378.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (124 samples, 0.10%)</title><rect x="376.6" y="515.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="379.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (132 samples, 0.10%)</title><rect x="377.7" y="515.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (132 samples, 0.10%)</title><rect x="377.7" y="499.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (52 samples, 0.04%)</title><rect x="377.7" y="483.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="380.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (80 samples, 0.06%)</title><rect x="378.2" y="483.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="381.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (80 samples, 0.06%)</title><rect x="378.2" y="467.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="381.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1,704 samples, 1.35%)</title><rect x="379.0" y="515.0" width="16.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1,704 samples, 1.35%)</title><rect x="379.0" y="499.0" width="16.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="382.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$351/569771841.run (1,417 samples, 1.13%)</title><rect x="379.0" y="483.0" width="13.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="382.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1,417 samples, 1.13%)</title><rect x="379.0" y="467.0" width="13.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1,417 samples, 1.13%)</title><rect x="379.0" y="451.0" width="13.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="382.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (460 samples, 0.37%)</title><rect x="379.0" y="435.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.0" y="446.0"></text>
</g>
<g>
<title>java/util/Collection.stream (292 samples, 0.23%)</title><rect x="379.0" y="419.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="382.0" y="430.0"></text>
</g>
<g>
<title>java/util/List.spliterator (98 samples, 0.08%)</title><rect x="379.0" y="403.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="382.0" y="414.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (98 samples, 0.08%)</title><rect x="379.0" y="387.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="382.0" y="398.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (194 samples, 0.15%)</title><rect x="379.9" y="403.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.9" y="414.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (194 samples, 0.15%)</title><rect x="379.9" y="387.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="382.9" y="398.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (168 samples, 0.13%)</title><rect x="381.7" y="419.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="384.7" y="430.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (168 samples, 0.13%)</title><rect x="381.7" y="403.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.7" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (168 samples, 0.13%)</title><rect x="381.7" y="387.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.7" y="398.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$53/1847637306.get (100 samples, 0.08%)</title><rect x="381.7" y="371.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.7" y="382.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (100 samples, 0.08%)</title><rect x="381.7" y="355.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="384.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (68 samples, 0.05%)</title><rect x="382.6" y="371.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="385.6" y="382.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (68 samples, 0.05%)</title><rect x="382.6" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="385.6" y="366.0"></text>
</g>
<g>
<title>java/util/Optional.of (68 samples, 0.05%)</title><rect x="382.6" y="339.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.6" y="350.0"></text>
</g>
<g>
<title>java.util.Optional (68 samples, 0.05%)</title><rect x="382.6" y="323.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="385.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (957 samples, 0.76%)</title><rect x="383.3" y="435.0" width="9.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.3" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.now (75 samples, 0.06%)</title><rect x="383.3" y="419.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.3" y="430.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (75 samples, 0.06%)</title><rect x="383.3" y="403.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.3" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (75 samples, 0.06%)</title><rect x="383.3" y="387.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.3" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.create (75 samples, 0.06%)</title><rect x="383.3" y="371.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.3" y="382.0"></text>
</g>
<g>
<title>java.time.Instant (75 samples, 0.06%)</title><rect x="383.3" y="355.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="386.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (882 samples, 0.70%)</title><rect x="384.0" y="419.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (355 samples, 0.28%)</title><rect x="384.0" y="403.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.0" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.plus (83 samples, 0.07%)</title><rect x="384.0" y="387.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.0" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (83 samples, 0.07%)</title><rect x="384.0" y="371.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.0" y="382.0"></text>
</g>
<g>
<title>java/time/Instant.plus (83 samples, 0.07%)</title><rect x="384.0" y="355.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.0" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (83 samples, 0.07%)</title><rect x="384.0" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="387.0" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (83 samples, 0.07%)</title><rect x="384.0" y="323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="387.0" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (83 samples, 0.07%)</title><rect x="384.0" y="307.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="387.0" y="318.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (103 samples, 0.08%)</title><rect x="384.8" y="387.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="387.8" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (103 samples, 0.08%)</title><rect x="384.8" y="371.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="387.8" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (103 samples, 0.08%)</title><rect x="384.8" y="355.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="387.8" y="366.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (91 samples, 0.07%)</title><rect x="385.8" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="388.8" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (91 samples, 0.07%)</title><rect x="385.8" y="371.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.8" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (91 samples, 0.07%)</title><rect x="385.8" y="355.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="388.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (76 samples, 0.06%)</title><rect x="386.6" y="387.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="389.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (181 samples, 0.14%)</title><rect x="387.3" y="403.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.3" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (74 samples, 0.06%)</title><rect x="387.3" y="387.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="390.3" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (74 samples, 0.06%)</title><rect x="387.3" y="371.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="390.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (74 samples, 0.06%)</title><rect x="387.3" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (74 samples, 0.06%)</title><rect x="387.3" y="339.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="390.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (107 samples, 0.09%)</title><rect x="388.0" y="387.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.0" y="398.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (107 samples, 0.09%)</title><rect x="388.0" y="371.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.0" y="382.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (107 samples, 0.09%)</title><rect x="388.0" y="355.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="391.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (346 samples, 0.28%)</title><rect x="389.0" y="403.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="392.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (86 samples, 0.07%)</title><rect x="389.0" y="387.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="392.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (260 samples, 0.21%)</title><rect x="389.8" y="387.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="392.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (81 samples, 0.06%)</title><rect x="389.8" y="371.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (81 samples, 0.06%)</title><rect x="389.8" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="392.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (81 samples, 0.06%)</title><rect x="389.8" y="339.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (81 samples, 0.06%)</title><rect x="389.8" y="323.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="392.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (179 samples, 0.14%)</title><rect x="390.6" y="371.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="393.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (179 samples, 0.14%)</title><rect x="390.6" y="355.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="393.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (129 samples, 0.10%)</title><rect x="390.6" y="339.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="393.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (50 samples, 0.04%)</title><rect x="391.8" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="394.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (50 samples, 0.04%)</title><rect x="391.8" y="323.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="394.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (287 samples, 0.23%)</title><rect x="392.3" y="483.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (287 samples, 0.23%)</title><rect x="392.3" y="467.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (287 samples, 0.23%)</title><rect x="392.3" y="451.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (232 samples, 0.18%)</title><rect x="392.3" y="435.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (232 samples, 0.18%)</title><rect x="392.3" y="419.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (232 samples, 0.18%)</title><rect x="392.3" y="403.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (232 samples, 0.18%)</title><rect x="392.3" y="387.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$361/609138659.accept (232 samples, 0.18%)</title><rect x="392.3" y="371.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (232 samples, 0.18%)</title><rect x="392.3" y="355.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (232 samples, 0.18%)</title><rect x="392.3" y="339.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="395.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (232 samples, 0.18%)</title><rect x="392.3" y="323.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="395.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (232 samples, 0.18%)</title><rect x="392.3" y="307.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$369/256809203.apply (232 samples, 0.18%)</title><rect x="392.3" y="291.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="395.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (232 samples, 0.18%)</title><rect x="392.3" y="275.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (232 samples, 0.18%)</title><rect x="392.3" y="259.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="395.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (55 samples, 0.04%)</title><rect x="394.4" y="435.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.4" y="446.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.04%)</title><rect x="394.4" y="419.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="397.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$113/1746272309.run (32,033 samples, 25.47%)</title><rect x="395.0" y="643.0" width="300.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="398.0" y="654.0">ru/mail/polis/service/httprest/HttpRestD..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$asyncExecute$4 (32,033 samples, 25.47%)</title><rect x="395.0" y="627.0" width="300.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.0" y="638.0">ru/mail/polis/service/httprest/HttpRestD..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$112/1725035167.submit (28,231 samples, 22.45%)</title><rect x="395.0" y="611.0" width="264.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="398.0" y="622.0">ru/mail/polis/service/httprest/Http..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$entity$0 (28,231 samples, 22.45%)</title><rect x="395.0" y="595.0" width="264.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="398.0" y="606.0">ru/mail/polis/service/httprest/Http..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpController.get (28,231 samples, 22.45%)</title><rect x="395.0" y="579.0" width="264.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.0" y="590.0">ru/mail/polis/service/httprest/Http..</text>
</g>
<g>
<title>java.util.ArrayList (28 samples, 0.02%)</title><rect x="395.0" y="563.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="398.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (35 samples, 0.03%)</title><rect x="395.2" y="563.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="398.2" y="574.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (930 samples, 0.74%)</title><rect x="395.6" y="563.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="398.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (930 samples, 0.74%)</title><rect x="395.6" y="547.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (930 samples, 0.74%)</title><rect x="395.6" y="531.0" width="8.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="398.6" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (930 samples, 0.74%)</title><rect x="395.6" y="515.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.6" y="526.0"></text>
</g>
<g>
<title>byte[] (930 samples, 0.74%)</title><rect x="395.6" y="499.0" width="8.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="398.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (281 samples, 0.22%)</title><rect x="404.3" y="563.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (281 samples, 0.22%)</title><rect x="404.3" y="547.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1667148529.invoke (281 samples, 0.22%)</title><rect x="404.3" y="531.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (281 samples, 0.22%)</title><rect x="404.3" y="515.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="407.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (80 samples, 0.06%)</title><rect x="404.3" y="499.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="407.3" y="510.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.06%)</title><rect x="404.3" y="483.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="407.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (201 samples, 0.16%)</title><rect x="405.0" y="499.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="408.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (201 samples, 0.16%)</title><rect x="405.0" y="483.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="408.0" y="494.0"></text>
</g>
<g>
<title>byte[] (201 samples, 0.16%)</title><rect x="405.0" y="467.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="408.0" y="478.0"></text>
</g>
<g>
<title>java/net/URI.create (1,216 samples, 0.97%)</title><rect x="406.9" y="563.0" width="11.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.9" y="574.0"></text>
</g>
<g>
<title>java.net.URI (249 samples, 0.20%)</title><rect x="406.9" y="547.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="409.9" y="558.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (967 samples, 0.77%)</title><rect x="409.3" y="547.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="412.3" y="558.0"></text>
</g>
<g>
<title>java.net.URI$Parser (96 samples, 0.08%)</title><rect x="409.3" y="531.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="412.3" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (871 samples, 0.69%)</title><rect x="410.2" y="531.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.2" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (170 samples, 0.14%)</title><rect x="410.2" y="515.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.2" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (170 samples, 0.14%)</title><rect x="410.2" y="499.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String (90 samples, 0.07%)</title><rect x="410.2" y="483.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="413.2" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (80 samples, 0.06%)</title><rect x="411.0" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="414.0" y="494.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.06%)</title><rect x="411.0" y="467.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="414.0" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (701 samples, 0.56%)</title><rect x="411.7" y="515.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="414.7" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (339 samples, 0.27%)</title><rect x="411.7" y="499.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="414.7" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (339 samples, 0.27%)</title><rect x="411.7" y="483.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="414.7" y="494.0"></text>
</g>
<g>
<title>java.lang.String (160 samples, 0.13%)</title><rect x="411.7" y="467.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="414.7" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (179 samples, 0.14%)</title><rect x="413.2" y="467.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.2" y="478.0"></text>
</g>
<g>
<title>byte[] (179 samples, 0.14%)</title><rect x="413.2" y="451.0" width="1.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="416.2" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (362 samples, 0.29%)</title><rect x="414.9" y="499.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.9" y="510.0"></text>
</g>
<g>
<title>java/lang/String.substring (192 samples, 0.15%)</title><rect x="414.9" y="483.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (192 samples, 0.15%)</title><rect x="414.9" y="467.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.9" y="478.0"></text>
</g>
<g>
<title>java.lang.String (81 samples, 0.06%)</title><rect x="414.9" y="451.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="417.9" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (111 samples, 0.09%)</title><rect x="415.7" y="451.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.7" y="462.0"></text>
</g>
<g>
<title>byte[] (111 samples, 0.09%)</title><rect x="415.7" y="435.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="418.7" y="446.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (170 samples, 0.14%)</title><rect x="416.7" y="483.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="419.7" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (170 samples, 0.14%)</title><rect x="416.7" y="467.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="419.7" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (170 samples, 0.14%)</title><rect x="416.7" y="451.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="419.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (170 samples, 0.14%)</title><rect x="416.7" y="435.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.7" y="446.0"></text>
</g>
<g>
<title>java.lang.String (73 samples, 0.06%)</title><rect x="416.7" y="419.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="419.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (97 samples, 0.08%)</title><rect x="417.4" y="419.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="420.4" y="430.0"></text>
</g>
<g>
<title>byte[] (97 samples, 0.08%)</title><rect x="417.4" y="403.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="420.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (479 samples, 0.38%)</title><rect x="418.3" y="563.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="421.3" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (404 samples, 0.32%)</title><rect x="418.3" y="547.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="421.3" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (223 samples, 0.18%)</title><rect x="418.3" y="531.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.3" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (223 samples, 0.18%)</title><rect x="418.3" y="515.0" width="2.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="421.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (181 samples, 0.14%)</title><rect x="420.4" y="531.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.4" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (181 samples, 0.14%)</title><rect x="420.4" y="515.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="423.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (75 samples, 0.06%)</title><rect x="422.1" y="547.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="425.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (75 samples, 0.06%)</title><rect x="422.1" y="531.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="425.1" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (75 samples, 0.06%)</title><rect x="422.1" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.1" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$53/1847637306.get (75 samples, 0.06%)</title><rect x="422.1" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.1" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (75 samples, 0.06%)</title><rect x="422.1" y="483.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="425.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (363 samples, 0.29%)</title><rect x="422.8" y="563.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (135 samples, 0.11%)</title><rect x="422.8" y="547.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="425.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (228 samples, 0.18%)</title><rect x="424.1" y="547.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="427.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (61 samples, 0.05%)</title><rect x="424.1" y="531.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="427.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (167 samples, 0.13%)</title><rect x="424.7" y="531.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.7" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (167 samples, 0.13%)</title><rect x="424.7" y="515.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="427.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (933 samples, 0.74%)</title><rect x="426.2" y="563.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (933 samples, 0.74%)</title><rect x="426.2" y="547.0" width="8.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.2" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (933 samples, 0.74%)</title><rect x="426.2" y="531.0" width="8.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="429.2" y="542.0"></text>
</g>
<g>
<title>java/time/Duration.ofMillis (63 samples, 0.05%)</title><rect x="435.0" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="438.0" y="574.0"></text>
</g>
<g>
<title>java/time/Duration.create (63 samples, 0.05%)</title><rect x="435.0" y="547.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="438.0" y="558.0"></text>
</g>
<g>
<title>java.time.Duration (63 samples, 0.05%)</title><rect x="435.0" y="531.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="438.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (85 samples, 0.07%)</title><rect x="435.6" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.6" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (85 samples, 0.07%)</title><rect x="435.6" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="438.6" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (85 samples, 0.07%)</title><rect x="435.6" y="531.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (85 samples, 0.07%)</title><rect x="435.6" y="515.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="438.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (85 samples, 0.07%)</title><rect x="435.6" y="499.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="438.6" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (85 samples, 0.07%)</title><rect x="435.6" y="483.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="438.6" y="494.0"></text>
</g>
<g>
<title>java/util/Collection.stream (146 samples, 0.12%)</title><rect x="436.4" y="563.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.4" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.spliterator (49 samples, 0.04%)</title><rect x="436.4" y="547.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="439.4" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList$ArrayListSpliterator (49 samples, 0.04%)</title><rect x="436.4" y="531.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="439.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (97 samples, 0.08%)</title><rect x="436.8" y="547.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.8" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (97 samples, 0.08%)</title><rect x="436.8" y="531.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="439.8" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (27 samples, 0.02%)</title><rect x="437.7" y="563.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.02%)</title><rect x="437.7" y="547.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="440.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.02%)</title><rect x="437.7" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.7" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$384/1834450823.get$Lambda (27 samples, 0.02%)</title><rect x="437.7" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.7" y="526.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$384 (27 samples, 0.02%)</title><rect x="437.7" y="499.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="440.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (158 samples, 0.13%)</title><rect x="438.0" y="563.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="441.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (158 samples, 0.13%)</title><rect x="438.0" y="547.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="441.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (158 samples, 0.13%)</title><rect x="438.0" y="531.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="441.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (487 samples, 0.39%)</title><rect x="439.5" y="563.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="442.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (487 samples, 0.39%)</title><rect x="439.5" y="547.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (107 samples, 0.09%)</title><rect x="439.5" y="531.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="442.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (255 samples, 0.20%)</title><rect x="440.5" y="531.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="443.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (193 samples, 0.15%)</title><rect x="440.5" y="515.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="443.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (193 samples, 0.15%)</title><rect x="440.5" y="499.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="443.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (193 samples, 0.15%)</title><rect x="440.5" y="483.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="443.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpController$$Lambda$379/1199486187.apply (62 samples, 0.05%)</title><rect x="442.3" y="515.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="445.3" y="526.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (62 samples, 0.05%)</title><rect x="442.3" y="499.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Integer (62 samples, 0.05%)</title><rect x="442.3" y="483.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="445.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (125 samples, 0.10%)</title><rect x="442.9" y="531.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (125 samples, 0.10%)</title><rect x="442.9" y="515.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="445.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (125 samples, 0.10%)</title><rect x="442.9" y="499.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="445.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (92 samples, 0.07%)</title><rect x="444.0" y="563.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.0" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (92 samples, 0.07%)</title><rect x="444.0" y="547.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="447.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (151 samples, 0.12%)</title><rect x="444.9" y="563.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="447.9" y="574.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (28 samples, 0.02%)</title><rect x="444.9" y="547.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="447.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.02%)</title><rect x="444.9" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="447.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.02%)</title><rect x="444.9" y="515.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="447.9" y="526.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$386/1977792489.get$Lambda (28 samples, 0.02%)</title><rect x="444.9" y="499.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="447.9" y="510.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$386 (28 samples, 0.02%)</title><rect x="444.9" y="483.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="447.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (123 samples, 0.10%)</title><rect x="445.2" y="547.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="448.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (85 samples, 0.07%)</title><rect x="445.2" y="531.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="448.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (85 samples, 0.07%)</title><rect x="445.2" y="515.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="448.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (33 samples, 0.03%)</title><rect x="445.4" y="499.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="448.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (33 samples, 0.03%)</title><rect x="445.4" y="483.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.4" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (33 samples, 0.03%)</title><rect x="445.4" y="467.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="448.4" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (38 samples, 0.03%)</title><rect x="446.0" y="531.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.0" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (38 samples, 0.03%)</title><rect x="446.0" y="515.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="449.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (6,899 samples, 5.49%)</title><rect x="446.3" y="563.0" width="64.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="449.3" y="574.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (6,899 samples, 5.49%)</title><rect x="446.3" y="547.0" width="64.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="449.3" y="558.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (6,899 samples, 5.49%)</title><rect x="446.3" y="531.0" width="64.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="449.3" y="542.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (6,899 samples, 5.49%)</title><rect x="446.3" y="515.0" width="64.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="449.3" y="526.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (60 samples, 0.05%)</title><rect x="446.3" y="499.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.05%)</title><rect x="446.3" y="483.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$162/1256959182.get$Lambda (60 samples, 0.05%)</title><rect x="446.3" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="449.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$162 (60 samples, 0.05%)</title><rect x="446.3" y="451.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="449.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (230 samples, 0.18%)</title><rect x="446.9" y="499.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (230 samples, 0.18%)</title><rect x="446.9" y="483.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="449.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (129 samples, 0.10%)</title><rect x="446.9" y="467.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="449.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (101 samples, 0.08%)</title><rect x="448.1" y="467.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="451.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (101 samples, 0.08%)</title><rect x="448.1" y="451.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (101 samples, 0.08%)</title><rect x="448.1" y="435.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="451.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (252 samples, 0.20%)</title><rect x="449.0" y="499.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.0" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (252 samples, 0.20%)</title><rect x="449.0" y="483.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="452.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (139 samples, 0.11%)</title><rect x="449.0" y="467.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="452.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (113 samples, 0.09%)</title><rect x="450.3" y="467.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (113 samples, 0.09%)</title><rect x="450.3" y="451.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (113 samples, 0.09%)</title><rect x="450.3" y="435.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="453.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (183 samples, 0.15%)</title><rect x="451.4" y="499.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="454.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (355 samples, 0.28%)</title><rect x="453.1" y="499.0" width="3.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="456.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (3,429 samples, 2.73%)</title><rect x="456.5" y="499.0" width="32.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="459.5" y="510.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (363 samples, 0.29%)</title><rect x="456.5" y="483.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.5" y="494.0"></text>
</g>
<g>
<title>java/util/Collection.stream (290 samples, 0.23%)</title><rect x="456.5" y="467.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="459.5" y="478.0"></text>
</g>
<g>
<title>java/util/List.spliterator (108 samples, 0.09%)</title><rect x="456.5" y="451.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.5" y="462.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (108 samples, 0.09%)</title><rect x="456.5" y="435.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="459.5" y="446.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (182 samples, 0.14%)</title><rect x="457.5" y="451.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="460.5" y="462.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (182 samples, 0.14%)</title><rect x="457.5" y="435.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="460.5" y="446.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (73 samples, 0.06%)</title><rect x="459.2" y="467.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (73 samples, 0.06%)</title><rect x="459.2" y="451.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.2" y="462.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (73 samples, 0.06%)</title><rect x="459.2" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.2" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$53/1847637306.get (73 samples, 0.06%)</title><rect x="459.2" y="419.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.2" y="430.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (73 samples, 0.06%)</title><rect x="459.2" y="403.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="462.2" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,340 samples, 1.07%)</title><rect x="459.9" y="483.0" width="12.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,340 samples, 1.07%)</title><rect x="459.9" y="467.0" width="12.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.9" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (56 samples, 0.04%)</title><rect x="459.9" y="451.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="462.9" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (70 samples, 0.06%)</title><rect x="460.4" y="451.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="463.4" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (161 samples, 0.13%)</title><rect x="461.0" y="451.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="464.0" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (44 samples, 0.03%)</title><rect x="462.6" y="451.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="465.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (109 samples, 0.09%)</title><rect x="463.0" y="451.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="466.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (109 samples, 0.09%)</title><rect x="463.0" y="435.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="466.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.get$Lambda (109 samples, 0.09%)</title><rect x="463.0" y="419.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="466.0" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$134 (109 samples, 0.09%)</title><rect x="463.0" y="403.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="466.0" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (638 samples, 0.51%)</title><rect x="464.0" y="451.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.0" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (638 samples, 0.51%)</title><rect x="464.0" y="435.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (638 samples, 0.51%)</title><rect x="464.0" y="419.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="467.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (638 samples, 0.51%)</title><rect x="464.0" y="403.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.0" y="414.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (262 samples, 0.21%)</title><rect x="464.0" y="387.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="467.0" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (169 samples, 0.13%)</title><rect x="464.0" y="371.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="467.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (169 samples, 0.13%)</title><rect x="464.0" y="355.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="467.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (169 samples, 0.13%)</title><rect x="464.0" y="339.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (169 samples, 0.13%)</title><rect x="464.0" y="323.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.0" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (169 samples, 0.13%)</title><rect x="464.0" y="307.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.0" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (169 samples, 0.13%)</title><rect x="464.0" y="291.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.0" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (169 samples, 0.13%)</title><rect x="464.0" y="275.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="467.0" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (169 samples, 0.13%)</title><rect x="464.0" y="259.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="467.0" y="270.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (93 samples, 0.07%)</title><rect x="465.6" y="371.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.6" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (93 samples, 0.07%)</title><rect x="465.6" y="355.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="468.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (79 samples, 0.06%)</title><rect x="466.4" y="387.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (79 samples, 0.06%)</title><rect x="466.4" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.get$Lambda (79 samples, 0.06%)</title><rect x="466.4" y="355.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="469.4" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$136 (79 samples, 0.06%)</title><rect x="466.4" y="339.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="469.4" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (159 samples, 0.13%)</title><rect x="467.2" y="387.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.2" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (159 samples, 0.13%)</title><rect x="467.2" y="371.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="470.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (71 samples, 0.06%)</title><rect x="467.2" y="355.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.2" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (71 samples, 0.06%)</title><rect x="467.2" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.2" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (71 samples, 0.06%)</title><rect x="467.2" y="323.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="470.2" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (88 samples, 0.07%)</title><rect x="467.9" y="355.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.9" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (88 samples, 0.07%)</title><rect x="467.9" y="339.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="470.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (138 samples, 0.11%)</title><rect x="468.7" y="387.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="471.7" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (138 samples, 0.11%)</title><rect x="468.7" y="371.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="471.7" y="382.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (123 samples, 0.10%)</title><rect x="470.0" y="451.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.0" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (123 samples, 0.10%)</title><rect x="470.0" y="435.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="473.0" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (139 samples, 0.11%)</title><rect x="471.1" y="451.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="474.1" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (139 samples, 0.11%)</title><rect x="471.1" y="435.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="474.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (50 samples, 0.04%)</title><rect x="472.4" y="483.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="475.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1,198 samples, 0.95%)</title><rect x="472.9" y="483.0" width="11.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.9" y="494.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (1,198 samples, 0.95%)</title><rect x="472.9" y="467.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.9" y="478.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,109 samples, 0.88%)</title><rect x="472.9" y="451.0" width="10.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.9" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,109 samples, 0.88%)</title><rect x="472.9" y="435.0" width="10.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.9" y="446.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,109 samples, 0.88%)</title><rect x="472.9" y="419.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="475.9" y="430.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (240 samples, 0.19%)</title><rect x="472.9" y="403.0" width="2.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="475.9" y="414.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (321 samples, 0.26%)</title><rect x="475.2" y="403.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="478.2" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (321 samples, 0.26%)</title><rect x="475.2" y="387.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="478.2" y="398.0"></text>
</g>
<g>
<title>byte[] (321 samples, 0.26%)</title><rect x="475.2" y="371.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="478.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (548 samples, 0.44%)</title><rect x="478.2" y="403.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="481.2" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (548 samples, 0.44%)</title><rect x="478.2" y="387.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.2" y="398.0"></text>
</g>
<g>
<title>java.lang.String (224 samples, 0.18%)</title><rect x="478.2" y="371.0" width="2.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="481.2" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (324 samples, 0.26%)</title><rect x="480.3" y="371.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="483.3" y="382.0"></text>
</g>
<g>
<title>byte[] (324 samples, 0.26%)</title><rect x="480.3" y="355.0" width="3.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="483.3" y="366.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (89 samples, 0.07%)</title><rect x="483.3" y="451.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="486.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (184 samples, 0.15%)</title><rect x="484.1" y="483.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.1" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap (184 samples, 0.15%)</title><rect x="484.1" y="467.0" width="1.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="487.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (294 samples, 0.23%)</title><rect x="485.9" y="483.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="488.9" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (84 samples, 0.07%)</title><rect x="485.9" y="467.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="488.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (93 samples, 0.07%)</title><rect x="486.7" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (93 samples, 0.07%)</title><rect x="486.7" y="451.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="489.7" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (117 samples, 0.09%)</title><rect x="487.5" y="467.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="490.5" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (117 samples, 0.09%)</title><rect x="487.5" y="451.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="490.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1,544 samples, 1.23%)</title><rect x="488.6" y="499.0" width="14.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (56 samples, 0.04%)</title><rect x="488.6" y="483.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="491.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (259 samples, 0.21%)</title><rect x="489.1" y="483.0" width="2.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="492.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (52 samples, 0.04%)</title><rect x="491.6" y="483.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (52 samples, 0.04%)</title><rect x="491.6" y="467.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="494.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1,177 samples, 0.94%)</title><rect x="492.1" y="483.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1,177 samples, 0.94%)</title><rect x="492.1" y="467.0" width="11.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="495.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Class[] (111 samples, 0.09%)</title><rect x="492.1" y="451.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="495.1" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (120 samples, 0.10%)</title><rect x="493.1" y="451.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="496.1" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (97 samples, 0.08%)</title><rect x="494.2" y="451.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="497.2" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (534 samples, 0.42%)</title><rect x="495.1" y="451.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="498.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (534 samples, 0.42%)</title><rect x="495.1" y="435.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="498.1" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (534 samples, 0.42%)</title><rect x="495.1" y="419.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="498.1" y="430.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (534 samples, 0.42%)</title><rect x="495.1" y="403.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="498.1" y="414.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (534 samples, 0.42%)</title><rect x="495.1" y="387.0" width="5.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="498.1" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (182 samples, 0.14%)</title><rect x="500.2" y="451.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="503.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (182 samples, 0.14%)</title><rect x="500.2" y="435.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (123 samples, 0.10%)</title><rect x="500.2" y="419.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="503.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (123 samples, 0.10%)</title><rect x="500.2" y="403.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="503.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (59 samples, 0.05%)</title><rect x="501.3" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (59 samples, 0.05%)</title><rect x="501.3" y="403.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="504.3" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (133 samples, 0.11%)</title><rect x="501.9" y="451.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="504.9" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (133 samples, 0.11%)</title><rect x="501.9" y="435.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.9" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (133 samples, 0.11%)</title><rect x="501.9" y="419.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="504.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (846 samples, 0.67%)</title><rect x="503.1" y="499.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (178 samples, 0.14%)</title><rect x="503.1" y="483.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (81 samples, 0.06%)</title><rect x="503.1" y="467.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="506.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (97 samples, 0.08%)</title><rect x="503.9" y="467.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (97 samples, 0.08%)</title><rect x="503.9" y="451.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (97 samples, 0.08%)</title><rect x="503.9" y="435.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (97 samples, 0.08%)</title><rect x="503.9" y="419.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (97 samples, 0.08%)</title><rect x="503.9" y="403.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="506.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (103 samples, 0.08%)</title><rect x="504.8" y="483.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="507.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (565 samples, 0.45%)</title><rect x="505.7" y="483.0" width="5.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (106 samples, 0.08%)</title><rect x="505.7" y="467.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (106 samples, 0.08%)</title><rect x="505.7" y="451.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="508.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$153/1249503175.get$Lambda (51 samples, 0.04%)</title><rect x="505.7" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$153 (51 samples, 0.04%)</title><rect x="505.7" y="419.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="508.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1961341944.get$Lambda (55 samples, 0.04%)</title><rect x="506.2" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$158 (55 samples, 0.04%)</title><rect x="506.2" y="419.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="509.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (459 samples, 0.36%)</title><rect x="506.7" y="467.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (459 samples, 0.36%)</title><rect x="506.7" y="451.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="509.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (254 samples, 0.20%)</title><rect x="506.7" y="435.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="509.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (205 samples, 0.16%)</title><rect x="509.1" y="435.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (205 samples, 0.16%)</title><rect x="509.1" y="419.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (205 samples, 0.16%)</title><rect x="509.1" y="403.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="512.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (1,477 samples, 1.17%)</title><rect x="511.0" y="563.0" width="13.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="514.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (135 samples, 0.11%)</title><rect x="511.0" y="547.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="514.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (1,342 samples, 1.07%)</title><rect x="512.3" y="547.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,285 samples, 1.02%)</title><rect x="512.3" y="531.0" width="12.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.3" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,285 samples, 1.02%)</title><rect x="512.3" y="515.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.3" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (63 samples, 0.05%)</title><rect x="512.3" y="499.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="515.3" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (67 samples, 0.05%)</title><rect x="512.9" y="499.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="515.9" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (149 samples, 0.12%)</title><rect x="513.5" y="499.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="516.5" y="510.0"></text>
</g>
<g>
<title>java.util.TreeSet (62 samples, 0.05%)</title><rect x="514.9" y="499.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="517.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (122 samples, 0.10%)</title><rect x="515.5" y="499.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (122 samples, 0.10%)</title><rect x="515.5" y="483.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.get$Lambda (122 samples, 0.10%)</title><rect x="515.5" y="467.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="518.5" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$134 (122 samples, 0.10%)</title><rect x="515.5" y="451.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="518.5" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (97 samples, 0.08%)</title><rect x="516.7" y="499.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="519.7" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (97 samples, 0.08%)</title><rect x="516.7" y="483.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="519.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (575 samples, 0.46%)</title><rect x="517.6" y="499.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.6" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (575 samples, 0.46%)</title><rect x="517.6" y="483.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.6" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (575 samples, 0.46%)</title><rect x="517.6" y="467.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="520.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (88 samples, 0.07%)</title><rect x="517.6" y="451.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (88 samples, 0.07%)</title><rect x="517.6" y="435.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="520.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.get$Lambda (88 samples, 0.07%)</title><rect x="517.6" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.6" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$136 (88 samples, 0.07%)</title><rect x="517.6" y="403.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="520.6" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (175 samples, 0.14%)</title><rect x="518.4" y="451.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.4" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (175 samples, 0.14%)</title><rect x="518.4" y="435.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="521.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (175 samples, 0.14%)</title><rect x="518.4" y="419.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="521.4" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (175 samples, 0.14%)</title><rect x="518.4" y="403.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.4" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (175 samples, 0.14%)</title><rect x="518.4" y="387.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (175 samples, 0.14%)</title><rect x="518.4" y="371.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (175 samples, 0.14%)</title><rect x="518.4" y="355.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (175 samples, 0.14%)</title><rect x="518.4" y="339.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="521.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (175 samples, 0.14%)</title><rect x="518.4" y="323.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="521.4" y="334.0"></text>
</g>
<g>
<title>java/util/List.copyOf (171 samples, 0.14%)</title><rect x="520.0" y="451.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="523.0" y="462.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (171 samples, 0.14%)</title><rect x="520.0" y="435.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.0" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (84 samples, 0.07%)</title><rect x="520.0" y="419.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="523.0" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (84 samples, 0.07%)</title><rect x="520.0" y="403.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.0" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (84 samples, 0.07%)</title><rect x="520.0" y="387.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="523.0" y="398.0"></text>
</g>
<g>
<title>java/util/List.of (87 samples, 0.07%)</title><rect x="520.8" y="419.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.8" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (87 samples, 0.07%)</title><rect x="520.8" y="403.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="523.8" y="414.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (141 samples, 0.11%)</title><rect x="521.6" y="451.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="524.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (141 samples, 0.11%)</title><rect x="521.6" y="435.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="524.6" y="446.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (150 samples, 0.12%)</title><rect x="523.0" y="499.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="526.0" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (150 samples, 0.12%)</title><rect x="523.0" y="483.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="526.0" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (57 samples, 0.05%)</title><rect x="524.4" y="531.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="527.4" y="542.0"></text>
</g>
<g>
<title>java/util/Optional.of (57 samples, 0.05%)</title><rect x="524.4" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="527.4" y="526.0"></text>
</g>
<g>
<title>java.util.Optional (57 samples, 0.05%)</title><rect x="524.4" y="499.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="527.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (287 samples, 0.23%)</title><rect x="524.9" y="563.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="527.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (287 samples, 0.23%)</title><rect x="524.9" y="547.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="527.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (287 samples, 0.23%)</title><rect x="524.9" y="531.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.9" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (81 samples, 0.06%)</title><rect x="524.9" y="515.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="527.9" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (67 samples, 0.05%)</title><rect x="525.7" y="515.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="528.7" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (67 samples, 0.05%)</title><rect x="525.7" y="499.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="528.7" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (139 samples, 0.11%)</title><rect x="526.3" y="515.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="529.3" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (139 samples, 0.11%)</title><rect x="526.3" y="499.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="529.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (671 samples, 0.53%)</title><rect x="527.6" y="563.0" width="6.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (671 samples, 0.53%)</title><rect x="527.6" y="547.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="530.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (671 samples, 0.53%)</title><rect x="527.6" y="531.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (341 samples, 0.27%)</title><rect x="527.6" y="515.0" width="3.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="530.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (330 samples, 0.26%)</title><rect x="530.8" y="515.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.8" y="526.0"></text>
</g>
<g>
<title>byte[] (330 samples, 0.26%)</title><rect x="530.8" y="499.0" width="3.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="533.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/LSMDao.lastIterator (9,971 samples, 7.93%)</title><rect x="533.9" y="563.0" width="93.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.9" y="574.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/IteratorsTool.lastIterator (9,971 samples, 7.93%)</title><rect x="533.9" y="547.0" width="93.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="536.9" y="558.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,693 samples, 1.35%)</title><rect x="533.9" y="531.0" width="15.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="536.9" y="542.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (240 samples, 0.19%)</title><rect x="533.9" y="515.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="536.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,453 samples, 1.16%)</title><rect x="536.1" y="515.0" width="13.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="539.1" y="526.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (437 samples, 0.35%)</title><rect x="536.1" y="499.0" width="4.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="539.1" y="510.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (590 samples, 0.47%)</title><rect x="540.2" y="499.0" width="5.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="543.2" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (426 samples, 0.34%)</title><rect x="545.8" y="499.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="548.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (426 samples, 0.34%)</title><rect x="545.8" y="483.0" width="4.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="548.8" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (340 samples, 0.27%)</title><rect x="549.8" y="531.0" width="3.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="552.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (983 samples, 0.78%)</title><rect x="553.0" y="531.0" width="9.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (983 samples, 0.78%)</title><rect x="553.0" y="515.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="556.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (983 samples, 0.78%)</title><rect x="553.0" y="499.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="556.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (983 samples, 0.78%)</title><rect x="553.0" y="483.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="556.0" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (983 samples, 0.78%)</title><rect x="553.0" y="467.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="556.0" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (937 samples, 0.74%)</title><rect x="553.0" y="451.0" width="8.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="556.0" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (46 samples, 0.04%)</title><rect x="561.8" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.8" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.04%)</title><rect x="561.8" y="435.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="564.8" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTablesPool.iterator (6,932 samples, 5.51%)</title><rect x="562.4" y="531.0" width="65.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.4" y="542.0">ru/mail..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,889 samples, 1.50%)</title><rect x="562.4" y="515.0" width="17.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="565.4" y="526.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (292 samples, 0.23%)</title><rect x="562.4" y="499.0" width="2.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="565.4" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,597 samples, 1.27%)</title><rect x="565.1" y="499.0" width="15.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.1" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (484 samples, 0.38%)</title><rect x="565.1" y="483.0" width="4.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="568.1" y="494.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (761 samples, 0.61%)</title><rect x="569.7" y="483.0" width="7.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="572.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (352 samples, 0.28%)</title><rect x="576.8" y="483.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="579.8" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (352 samples, 0.28%)</title><rect x="576.8" y="467.0" width="3.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="579.8" y="478.0"></text>
</g>
<g>
<title>java.util.ArrayList (474 samples, 0.38%)</title><rect x="580.1" y="515.0" width="4.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="583.1" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (712 samples, 0.57%)</title><rect x="584.6" y="515.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.6" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (699 samples, 0.56%)</title><rect x="584.7" y="499.0" width="6.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.7" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (699 samples, 0.56%)</title><rect x="584.7" y="483.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.7" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (699 samples, 0.56%)</title><rect x="584.7" y="467.0" width="6.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="587.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (363 samples, 0.29%)</title><rect x="591.3" y="515.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (363 samples, 0.29%)</title><rect x="591.3" y="499.0" width="3.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="594.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (426 samples, 0.34%)</title><rect x="594.7" y="515.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.7" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (426 samples, 0.34%)</title><rect x="594.7" y="499.0" width="4.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="597.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTable.iterator (3,062 samples, 2.43%)</title><rect x="598.7" y="515.0" width="28.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.7" y="526.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (340 samples, 0.27%)</title><rect x="598.7" y="499.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.7" y="510.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (340 samples, 0.27%)</title><rect x="598.7" y="483.0" width="3.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="601.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (248 samples, 0.20%)</title><rect x="601.9" y="499.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.9" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (248 samples, 0.20%)</title><rect x="601.9" y="483.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTable$$Lambda$115/855074155.get$Lambda (248 samples, 0.20%)</title><rect x="601.9" y="467.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="604.9" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nadenokk.MemTable$$Lambda$115 (248 samples, 0.20%)</title><rect x="601.9" y="451.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="604.9" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (987 samples, 0.78%)</title><rect x="604.2" y="499.0" width="9.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.2" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 (362 samples, 0.29%)</title><rect x="604.2" y="483.0" width="3.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="607.2" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (625 samples, 0.50%)</title><rect x="607.6" y="483.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (625 samples, 0.50%)</title><rect x="607.6" y="467.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (625 samples, 0.50%)</title><rect x="607.6" y="451.0" width="5.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="610.6" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (579 samples, 0.46%)</title><rect x="613.5" y="499.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.5" y="510.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (270 samples, 0.21%)</title><rect x="613.5" y="483.0" width="2.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="616.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (309 samples, 0.25%)</title><rect x="616.0" y="483.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="619.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (309 samples, 0.25%)</title><rect x="616.0" y="467.0" width="2.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="619.0" y="478.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSortedMap.tailMap (908 samples, 0.72%)</title><rect x="618.9" y="499.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (899 samples, 0.71%)</title><rect x="619.0" y="483.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="622.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (899 samples, 0.71%)</title><rect x="619.0" y="467.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (899 samples, 0.71%)</title><rect x="619.0" y="451.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="622.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (899 samples, 0.71%)</title><rect x="619.0" y="435.0" width="8.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="622.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/Balancer.poolsNodes (1,305 samples, 1.04%)</title><rect x="627.4" y="563.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (39 samples, 0.03%)</title><rect x="627.4" y="547.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="630.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/Balancer.hashCreate (1,266 samples, 1.01%)</title><rect x="627.8" y="547.0" width="11.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.8" y="558.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (1,264 samples, 1.00%)</title><rect x="627.8" y="531.0" width="11.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="630.8" y="542.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (1,184 samples, 0.94%)</title><rect x="627.8" y="515.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="630.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (1,184 samples, 0.94%)</title><rect x="627.8" y="499.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.8" y="510.0"></text>
</g>
<g>
<title>com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher (56 samples, 0.04%)</title><rect x="627.8" y="483.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="630.8" y="494.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (135 samples, 0.11%)</title><rect x="628.3" y="483.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (135 samples, 0.11%)</title><rect x="628.3" y="467.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.3" y="478.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.&lt;init&gt; (135 samples, 0.11%)</title><rect x="628.3" y="451.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.3" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (135 samples, 0.11%)</title><rect x="628.3" y="435.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="631.3" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (92 samples, 0.07%)</title><rect x="628.3" y="419.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="631.3" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (43 samples, 0.03%)</title><rect x="629.2" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="632.2" y="430.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.03%)</title><rect x="629.2" y="403.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="632.2" y="414.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.clone (993 samples, 0.79%)</title><rect x="629.6" y="483.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.6" y="494.0"></text>
</g>
<g>
<title>java.security.MessageDigest$Delegate (51 samples, 0.04%)</title><rect x="629.6" y="467.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="632.6" y="478.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.clone (942 samples, 0.75%)</title><rect x="630.1" y="467.0" width="8.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.1" y="478.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.clone (942 samples, 0.75%)</title><rect x="630.1" y="451.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="633.1" y="462.0"></text>
</g>
<g>
<title>int[] (696 samples, 0.55%)</title><rect x="630.1" y="435.0" width="6.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="633.1" y="446.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.clone (246 samples, 0.20%)</title><rect x="636.6" y="435.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.6" y="446.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.10%)</title><rect x="636.6" y="419.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="639.6" y="430.0"></text>
</g>
<g>
<title>java/security/MessageDigestSpi.clone (116 samples, 0.09%)</title><rect x="637.8" y="419.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.8" y="430.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (113 samples, 0.09%)</title><rect x="637.9" y="403.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="640.9" y="414.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (80 samples, 0.06%)</title><rect x="638.9" y="515.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.9" y="526.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (76 samples, 0.06%)</title><rect x="638.9" y="499.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="641.9" y="510.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (76 samples, 0.06%)</title><rect x="638.9" y="483.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="641.9" y="494.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (76 samples, 0.06%)</title><rect x="638.9" y="467.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.9" y="478.0"></text>
</g>
<g>
<title>byte[] (76 samples, 0.06%)</title><rect x="638.9" y="451.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="641.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/ResponseTools.createResponse (2,056 samples, 1.63%)</title><rect x="639.7" y="563.0" width="19.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.7" y="574.0"></text>
</g>
<g>
<title>one.nio.http.Response (396 samples, 0.31%)</title><rect x="639.7" y="547.0" width="3.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="642.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,660 samples, 1.32%)</title><rect x="643.4" y="547.0" width="15.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="646.4" y="558.0"></text>
</g>
<g>
<title>byte[] (668 samples, 0.53%)</title><rect x="643.4" y="531.0" width="6.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="646.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (549 samples, 0.44%)</title><rect x="649.7" y="531.0" width="5.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="652.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (443 samples, 0.35%)</title><rect x="654.8" y="531.0" width="4.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="657.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/ResponseTools.getDataFromResponseAsync (91 samples, 0.07%)</title><rect x="659.0" y="563.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Value.removed (91 samples, 0.07%)</title><rect x="659.0" y="547.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="662.0" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nadenokk.Value (91 samples, 0.07%)</title><rect x="659.0" y="531.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="662.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$ResponseUtils.sendResponse (3,802 samples, 3.02%)</title><rect x="659.8" y="611.0" width="35.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.8" y="622.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3,802 samples, 3.02%)</title><rect x="659.8" y="595.0" width="35.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="662.8" y="606.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,810 samples, 2.23%)</title><rect x="659.8" y="579.0" width="26.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.8" y="590.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2,118 samples, 1.68%)</title><rect x="659.8" y="563.0" width="19.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.8" y="574.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2,118 samples, 1.68%)</title><rect x="659.8" y="547.0" width="19.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.8" y="558.0"></text>
</g>
<g>
<title>byte[] (2,116 samples, 1.68%)</title><rect x="659.8" y="531.0" width="19.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="662.8" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (692 samples, 0.55%)</title><rect x="679.7" y="563.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="682.7" y="574.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (692 samples, 0.55%)</title><rect x="679.7" y="547.0" width="6.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="682.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (992 samples, 0.79%)</title><rect x="686.2" y="579.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (992 samples, 0.79%)</title><rect x="686.2" y="563.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="689.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (992 samples, 0.79%)</title><rect x="686.2" y="547.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (394 samples, 0.31%)</title><rect x="686.2" y="531.0" width="3.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="689.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (598 samples, 0.48%)</title><rect x="689.9" y="531.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.9" y="542.0"></text>
</g>
<g>
<title>byte[] (598 samples, 0.48%)</title><rect x="689.9" y="515.0" width="5.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="692.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (4,520 samples, 3.59%)</title><rect x="695.5" y="691.0" width="42.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.5" y="702.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (83 samples, 0.07%)</title><rect x="695.5" y="675.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (83 samples, 0.07%)</title><rect x="695.5" y="659.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$296/1256460069.get$Lambda (40 samples, 0.03%)</title><rect x="695.5" y="643.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.5" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$296 (40 samples, 0.03%)</title><rect x="695.5" y="627.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="698.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$304/1190025450.get$Lambda (43 samples, 0.03%)</title><rect x="695.9" y="643.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="698.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$304 (43 samples, 0.03%)</title><rect x="695.9" y="627.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="698.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/815320891.linkToTargetMethod (80 samples, 0.06%)</title><rect x="696.3" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.06%)</title><rect x="696.3" y="659.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$297/469379447.get$Lambda (80 samples, 0.06%)</title><rect x="696.3" y="643.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.3" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$297 (80 samples, 0.06%)</title><rect x="696.3" y="627.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="699.3" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (696 samples, 0.55%)</title><rect x="697.0" y="675.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$298/737367661.accept (582 samples, 0.46%)</title><rect x="697.0" y="659.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (582 samples, 0.46%)</title><rect x="697.0" y="643.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="700.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (582 samples, 0.46%)</title><rect x="697.0" y="627.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="700.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (582 samples, 0.46%)</title><rect x="697.0" y="611.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="700.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (582 samples, 0.46%)</title><rect x="697.0" y="595.0" width="5.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (582 samples, 0.46%)</title><rect x="697.0" y="579.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (582 samples, 0.46%)</title><rect x="697.0" y="563.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (582 samples, 0.46%)</title><rect x="697.0" y="547.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (582 samples, 0.46%)</title><rect x="697.0" y="531.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="700.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (582 samples, 0.46%)</title><rect x="697.0" y="515.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="700.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200/49147543.run (582 samples, 0.46%)</title><rect x="697.0" y="499.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="700.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (582 samples, 0.46%)</title><rect x="697.0" y="483.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (170 samples, 0.14%)</title><rect x="697.0" y="467.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (170 samples, 0.14%)</title><rect x="697.0" y="451.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (170 samples, 0.14%)</title><rect x="697.0" y="435.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (71 samples, 0.06%)</title><rect x="697.0" y="419.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (71 samples, 0.06%)</title><rect x="697.0" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (71 samples, 0.06%)</title><rect x="697.0" y="387.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="700.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (71 samples, 0.06%)</title><rect x="697.0" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (71 samples, 0.06%)</title><rect x="697.0" y="355.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="700.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (99 samples, 0.08%)</title><rect x="697.7" y="419.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="700.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (99 samples, 0.08%)</title><rect x="697.7" y="403.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (99 samples, 0.08%)</title><rect x="697.7" y="387.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (99 samples, 0.08%)</title><rect x="697.7" y="371.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (99 samples, 0.08%)</title><rect x="697.7" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (99 samples, 0.08%)</title><rect x="697.7" y="339.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="700.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (99 samples, 0.08%)</title><rect x="697.7" y="323.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="700.7" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (99 samples, 0.08%)</title><rect x="697.7" y="307.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="700.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (46 samples, 0.04%)</title><rect x="698.6" y="467.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="701.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (46 samples, 0.04%)</title><rect x="698.6" y="451.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="701.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (46 samples, 0.04%)</title><rect x="698.6" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310/1092212478.get$Lambda (46 samples, 0.04%)</title><rect x="698.6" y="419.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="701.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310 (46 samples, 0.04%)</title><rect x="698.6" y="403.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="701.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (366 samples, 0.29%)</title><rect x="699.0" y="467.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (174 samples, 0.14%)</title><rect x="699.0" y="451.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="702.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (121 samples, 0.10%)</title><rect x="699.0" y="435.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="702.0" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (121 samples, 0.10%)</title><rect x="699.0" y="419.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="702.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (53 samples, 0.04%)</title><rect x="700.2" y="435.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="703.2" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (53 samples, 0.04%)</title><rect x="700.2" y="419.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="703.2" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (53 samples, 0.04%)</title><rect x="700.2" y="403.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="703.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (192 samples, 0.15%)</title><rect x="700.7" y="451.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="703.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$196/2074774400.get (192 samples, 0.15%)</title><rect x="700.7" y="435.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (192 samples, 0.15%)</title><rect x="700.7" y="419.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="703.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (192 samples, 0.15%)</title><rect x="700.7" y="403.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="703.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (190 samples, 0.15%)</title><rect x="700.7" y="387.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.7" y="398.0"></text>
</g>
<g>
<title>byte[] (182 samples, 0.14%)</title><rect x="700.8" y="371.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="703.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$305/1347119101.accept (114 samples, 0.09%)</title><rect x="702.5" y="659.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (114 samples, 0.09%)</title><rect x="702.5" y="643.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$297/469379447.run (114 samples, 0.09%)</title><rect x="702.5" y="627.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (114 samples, 0.09%)</title><rect x="702.5" y="611.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (114 samples, 0.09%)</title><rect x="702.5" y="595.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.5" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (114 samples, 0.09%)</title><rect x="702.5" y="579.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.5" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (114 samples, 0.09%)</title><rect x="702.5" y="563.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.5" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (114 samples, 0.09%)</title><rect x="702.5" y="547.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="705.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (404 samples, 0.32%)</title><rect x="703.6" y="675.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="706.6" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (404 samples, 0.32%)</title><rect x="703.6" y="659.0" width="3.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="706.6" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (134 samples, 0.11%)</title><rect x="707.3" y="675.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (69 samples, 0.05%)</title><rect x="707.3" y="659.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (69 samples, 0.05%)</title><rect x="707.3" y="643.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (69 samples, 0.05%)</title><rect x="707.3" y="627.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (69 samples, 0.05%)</title><rect x="707.3" y="611.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (69 samples, 0.05%)</title><rect x="707.3" y="595.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.3" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (69 samples, 0.05%)</title><rect x="707.3" y="579.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.3" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (69 samples, 0.05%)</title><rect x="707.3" y="563.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="710.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (65 samples, 0.05%)</title><rect x="708.0" y="659.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.0" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (65 samples, 0.05%)</title><rect x="708.0" y="643.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="711.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (515 samples, 0.41%)</title><rect x="708.6" y="675.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="711.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$210/1218021122.run (239 samples, 0.19%)</title><rect x="708.6" y="659.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="711.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (239 samples, 0.19%)</title><rect x="708.6" y="643.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (239 samples, 0.19%)</title><rect x="708.6" y="627.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (239 samples, 0.19%)</title><rect x="708.6" y="611.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (239 samples, 0.19%)</title><rect x="708.6" y="595.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (239 samples, 0.19%)</title><rect x="708.6" y="579.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200/49147543.run (239 samples, 0.19%)</title><rect x="708.6" y="563.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (239 samples, 0.19%)</title><rect x="708.6" y="547.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (239 samples, 0.19%)</title><rect x="708.6" y="531.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (239 samples, 0.19%)</title><rect x="708.6" y="515.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (151 samples, 0.12%)</title><rect x="708.6" y="499.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (151 samples, 0.12%)</title><rect x="708.6" y="483.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (151 samples, 0.12%)</title><rect x="708.6" y="467.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/20094719.linkToTargetMethod (113 samples, 0.09%)</title><rect x="708.6" y="451.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="711.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/324457684.invoke (113 samples, 0.09%)</title><rect x="708.6" y="435.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (113 samples, 0.09%)</title><rect x="708.6" y="419.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="711.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (113 samples, 0.09%)</title><rect x="708.6" y="403.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (113 samples, 0.09%)</title><rect x="708.6" y="387.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.6" y="398.0"></text>
</g>
<g>
<title>byte[] (113 samples, 0.09%)</title><rect x="708.6" y="371.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="711.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (38 samples, 0.03%)</title><rect x="709.7" y="451.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.03%)</title><rect x="709.7" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.03%)</title><rect x="709.7" y="419.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310/1092212478.get$Lambda (38 samples, 0.03%)</title><rect x="709.7" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310 (38 samples, 0.03%)</title><rect x="709.7" y="387.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="712.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (88 samples, 0.07%)</title><rect x="710.0" y="499.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (88 samples, 0.07%)</title><rect x="710.0" y="483.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="713.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (88 samples, 0.07%)</title><rect x="710.0" y="467.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="713.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (88 samples, 0.07%)</title><rect x="710.0" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (88 samples, 0.07%)</title><rect x="710.0" y="435.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (88 samples, 0.07%)</title><rect x="710.0" y="419.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (88 samples, 0.07%)</title><rect x="710.0" y="403.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="713.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (88 samples, 0.07%)</title><rect x="710.0" y="387.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="713.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (88 samples, 0.07%)</title><rect x="710.0" y="371.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="713.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$222/223200854.run (276 samples, 0.22%)</title><rect x="710.8" y="659.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="713.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (276 samples, 0.22%)</title><rect x="710.8" y="643.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="713.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (105 samples, 0.08%)</title><rect x="710.8" y="627.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (105 samples, 0.08%)</title><rect x="710.8" y="611.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="713.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$309/1651102379.get$Lambda (105 samples, 0.08%)</title><rect x="710.8" y="595.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="713.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$309 (105 samples, 0.08%)</title><rect x="710.8" y="579.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="713.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (171 samples, 0.14%)</title><rect x="711.8" y="627.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (171 samples, 0.14%)</title><rect x="711.8" y="611.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (171 samples, 0.14%)</title><rect x="711.8" y="595.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (171 samples, 0.14%)</title><rect x="711.8" y="579.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (171 samples, 0.14%)</title><rect x="711.8" y="563.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (171 samples, 0.14%)</title><rect x="711.8" y="547.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="714.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,031 samples, 0.82%)</title><rect x="713.4" y="675.0" width="9.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="716.4" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (247 samples, 0.20%)</title><rect x="713.4" y="659.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.4" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (247 samples, 0.20%)</title><rect x="713.4" y="643.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.4" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (247 samples, 0.20%)</title><rect x="713.4" y="627.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="716.4" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (247 samples, 0.20%)</title><rect x="713.4" y="611.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="716.4" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (247 samples, 0.20%)</title><rect x="713.4" y="595.0" width="2.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="716.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (784 samples, 0.62%)</title><rect x="715.7" y="659.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="718.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (172 samples, 0.14%)</title><rect x="715.7" y="643.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (172 samples, 0.14%)</title><rect x="715.7" y="627.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$374/1912734131.get$Lambda (172 samples, 0.14%)</title><rect x="715.7" y="611.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$374 (172 samples, 0.14%)</title><rect x="715.7" y="595.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="718.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (612 samples, 0.49%)</title><rect x="717.4" y="643.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="720.4" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (260 samples, 0.21%)</title><rect x="717.4" y="627.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="720.4" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (352 samples, 0.28%)</title><rect x="719.8" y="627.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.8" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (352 samples, 0.28%)</title><rect x="719.8" y="611.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.8" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (352 samples, 0.28%)</title><rect x="719.8" y="595.0" width="3.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="722.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (478 samples, 0.38%)</title><rect x="723.1" y="675.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.03%)</title><rect x="723.1" y="659.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="726.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.03%)</title><rect x="723.1" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="726.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$294/1857314804.get$Lambda (41 samples, 0.03%)</title><rect x="723.1" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="726.1" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$294 (41 samples, 0.03%)</title><rect x="723.1" y="611.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="726.1" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (258 samples, 0.21%)</title><rect x="723.5" y="659.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="726.5" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (119 samples, 0.09%)</title><rect x="723.5" y="643.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.5" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (119 samples, 0.09%)</title><rect x="723.5" y="627.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="726.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (139 samples, 0.11%)</title><rect x="724.6" y="643.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.6" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (139 samples, 0.11%)</title><rect x="724.6" y="627.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="727.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (179 samples, 0.14%)</title><rect x="725.9" y="659.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.9" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (179 samples, 0.14%)</title><rect x="725.9" y="643.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="728.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (895 samples, 0.71%)</title><rect x="727.6" y="675.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.6" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (401 samples, 0.32%)</title><rect x="727.6" y="659.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.6" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (401 samples, 0.32%)</title><rect x="727.6" y="643.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.6" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (401 samples, 0.32%)</title><rect x="727.6" y="627.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.6" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (401 samples, 0.32%)</title><rect x="727.6" y="611.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.6" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (401 samples, 0.32%)</title><rect x="727.6" y="595.0" width="3.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="730.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (494 samples, 0.39%)</title><rect x="731.4" y="659.0" width="4.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="734.4" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (494 samples, 0.39%)</title><rect x="731.4" y="643.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="734.4" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (494 samples, 0.39%)</title><rect x="731.4" y="627.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.4" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (494 samples, 0.39%)</title><rect x="731.4" y="611.0" width="4.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="734.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (107 samples, 0.09%)</title><rect x="736.0" y="675.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (107 samples, 0.09%)</title><rect x="736.0" y="659.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="739.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (107 samples, 0.09%)</title><rect x="736.0" y="643.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (107 samples, 0.09%)</title><rect x="736.0" y="627.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (107 samples, 0.09%)</title><rect x="736.0" y="611.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (107 samples, 0.09%)</title><rect x="736.0" y="595.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.0" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (107 samples, 0.09%)</title><rect x="736.0" y="579.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="739.0" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (107 samples, 0.09%)</title><rect x="736.0" y="563.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="739.0" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (107 samples, 0.09%)</title><rect x="736.0" y="547.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="739.0" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (107 samples, 0.09%)</title><rect x="736.0" y="531.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="739.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (97 samples, 0.08%)</title><rect x="737.0" y="675.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (97 samples, 0.08%)</title><rect x="737.0" y="659.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (97 samples, 0.08%)</title><rect x="737.0" y="643.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.0" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (97 samples, 0.08%)</title><rect x="737.0" y="627.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="740.0" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (48,189 samples, 38.31%)</title><rect x="737.9" y="691.0" width="452.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="740.9" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,709 samples, 1.36%)</title><rect x="737.9" y="675.0" width="16.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="740.9" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,709 samples, 1.36%)</title><rect x="737.9" y="659.0" width="16.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="740.9" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (46,480 samples, 36.95%)</title><rect x="753.9" y="675.0" width="436.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.9" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (46,480 samples, 36.95%)</title><rect x="753.9" y="659.0" width="436.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.9" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (46,478 samples, 36.95%)</title><rect x="753.9" y="643.0" width="436.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.9" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (8,608 samples, 6.84%)</title><rect x="753.9" y="627.0" width="80.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.9" y="638.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (8,608 samples, 6.84%)</title><rect x="753.9" y="611.0" width="80.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.9" y="622.0">one/nio/h..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (5,727 samples, 4.55%)</title><rect x="753.9" y="595.0" width="53.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.9" y="606.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1,510 samples, 1.20%)</title><rect x="753.9" y="579.0" width="14.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,510 samples, 1.20%)</title><rect x="753.9" y="563.0" width="14.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,510 samples, 1.20%)</title><rect x="753.9" y="547.0" width="14.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="756.9" y="558.0"></text>
</g>
<g>
<title>java.lang.String (1,109 samples, 0.88%)</title><rect x="753.9" y="531.0" width="10.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="756.9" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (401 samples, 0.32%)</title><rect x="764.3" y="531.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.3" y="542.0"></text>
</g>
<g>
<title>byte[] (401 samples, 0.32%)</title><rect x="764.3" y="515.0" width="3.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="767.3" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.entity (4,217 samples, 3.35%)</title><rect x="768.1" y="579.0" width="39.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.1" y="590.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,160 samples, 0.92%)</title><rect x="768.1" y="563.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="771.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,160 samples, 0.92%)</title><rect x="768.1" y="547.0" width="10.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$112/1725035167.get$Lambda (1,160 samples, 0.92%)</title><rect x="768.1" y="531.0" width="10.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="771.1" y="542.0"></text>
</g>
<g>
<title>ru.mail.polis.service.httprest.HttpRestDemon$$Lambda$112 (1,160 samples, 0.92%)</title><rect x="768.1" y="515.0" width="10.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="771.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.asyncExecute (2,403 samples, 1.91%)</title><rect x="779.0" y="563.0" width="22.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.0" y="574.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,079 samples, 0.86%)</title><rect x="779.0" y="547.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,079 samples, 0.86%)</title><rect x="779.0" y="531.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$113/1746272309.get$Lambda (1,079 samples, 0.86%)</title><rect x="779.0" y="515.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.0" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.httprest.HttpRestDemon$$Lambda$113 (1,079 samples, 0.86%)</title><rect x="779.0" y="499.0" width="10.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="782.0" y="510.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (1,324 samples, 1.05%)</title><rect x="789.1" y="547.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,324 samples, 1.05%)</title><rect x="789.1" y="531.0" width="12.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="792.1" y="542.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1,324 samples, 1.05%)</title><rect x="789.1" y="515.0" width="12.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.1" y="526.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1,324 samples, 1.05%)</title><rect x="789.1" y="499.0" width="12.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="792.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1,324 samples, 1.05%)</title><rect x="789.1" y="483.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="792.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1,324 samples, 1.05%)</title><rect x="789.1" y="467.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.1" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1,324 samples, 1.05%)</title><rect x="789.1" y="451.0" width="12.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1,324 samples, 1.05%)</title><rect x="789.1" y="435.0" width="12.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="792.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/utils/RF.of (654 samples, 0.52%)</title><rect x="801.5" y="563.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.5" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.httprest.utils.RF (654 samples, 0.52%)</title><rect x="801.5" y="547.0" width="6.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="804.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,881 samples, 2.29%)</title><rect x="807.7" y="595.0" width="27.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="810.7" y="606.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (2,881 samples, 2.29%)</title><rect x="807.7" y="579.0" width="27.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="810.7" y="590.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,881 samples, 2.29%)</title><rect x="807.7" y="563.0" width="27.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="810.7" y="574.0">j..</text>
</g>
<g>
<title>java.lang.String (1,166 samples, 0.93%)</title><rect x="807.7" y="547.0" width="10.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="810.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,715 samples, 1.36%)</title><rect x="818.6" y="547.0" width="16.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.6" y="558.0"></text>
</g>
<g>
<title>byte[] (1,715 samples, 1.36%)</title><rect x="818.6" y="531.0" width="16.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="821.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11,096 samples, 8.82%)</title><rect x="834.7" y="627.0" width="104.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.7" y="638.0">one/nio/http..</text>
</g>
<g>
<title>one.nio.http.Request (1,903 samples, 1.51%)</title><rect x="834.7" y="611.0" width="17.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="837.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3,718 samples, 2.96%)</title><rect x="852.5" y="611.0" width="34.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="855.5" y="622.0">on..</text>
</g>
<g>
<title>java.lang.String[] (2,851 samples, 2.27%)</title><rect x="852.5" y="595.0" width="26.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="855.5" y="606.0">j..</text>
</g>
<g>
<title>java.lang.String[] (867 samples, 0.69%)</title><rect x="879.3" y="595.0" width="8.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="882.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,475 samples, 4.35%)</title><rect x="887.4" y="611.0" width="51.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="890.4" y="622.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,475 samples, 4.35%)</title><rect x="887.4" y="595.0" width="51.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.4" y="606.0">one/n..</text>
</g>
<g>
<title>char[] (2,524 samples, 2.01%)</title><rect x="887.4" y="579.0" width="23.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="890.4" y="590.0">c..</text>
</g>
<g>
<title>char[] (65 samples, 0.05%)</title><rect x="911.1" y="579.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="914.1" y="590.0"></text>
</g>
<g>
<title>java.lang.String (735 samples, 0.58%)</title><rect x="911.7" y="579.0" width="6.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="914.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,151 samples, 1.71%)</title><rect x="918.6" y="579.0" width="20.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="921.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,151 samples, 1.71%)</title><rect x="918.6" y="563.0" width="20.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="921.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,151 samples, 1.71%)</title><rect x="918.6" y="547.0" width="20.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="921.6" y="558.0"></text>
</g>
<g>
<title>byte[] (2,151 samples, 1.71%)</title><rect x="918.6" y="531.0" width="20.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="921.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (492 samples, 0.39%)</title><rect x="938.8" y="627.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="941.8" y="638.0"></text>
</g>
<g>
<title>byte[] (492 samples, 0.39%)</title><rect x="938.8" y="611.0" width="4.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="941.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,081 samples, 0.86%)</title><rect x="943.4" y="627.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="946.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,081 samples, 0.86%)</title><rect x="943.4" y="611.0" width="10.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="946.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,081 samples, 0.86%)</title><rect x="943.4" y="595.0" width="10.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="946.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String (472 samples, 0.38%)</title><rect x="943.4" y="579.0" width="4.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="946.4" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (609 samples, 0.48%)</title><rect x="947.8" y="579.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="950.8" y="590.0"></text>
</g>
<g>
<title>byte[] (609 samples, 0.48%)</title><rect x="947.8" y="563.0" width="5.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="950.8" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25,201 samples, 20.04%)</title><rect x="953.5" y="627.0" width="236.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="956.5" y="638.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (25,201 samples, 20.04%)</title><rect x="953.5" y="611.0" width="236.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="956.5" y="622.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (12,926 samples, 10.28%)</title><rect x="953.5" y="595.0" width="121.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="956.5" y="606.0">char[]</text>
</g>
<g>
<title>char[] (839 samples, 0.67%)</title><rect x="1074.8" y="595.0" width="7.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1077.8" y="606.0"></text>
</g>
<g>
<title>java.lang.String (4,835 samples, 3.84%)</title><rect x="1082.7" y="595.0" width="45.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1085.7" y="606.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,601 samples, 5.25%)</title><rect x="1128.1" y="595.0" width="61.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1131.1" y="606.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6,601 samples, 5.25%)</title><rect x="1128.1" y="579.0" width="61.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.1" y="590.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6,601 samples, 5.25%)</title><rect x="1128.1" y="563.0" width="61.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1131.1" y="574.0">java/l..</text>
</g>
<g>
<title>byte[] (6,601 samples, 5.25%)</title><rect x="1128.1" y="547.0" width="61.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1131.1" y="558.0">byte[]</text>
</g>
</g>
</svg>
