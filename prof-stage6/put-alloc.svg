<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (163,999 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (93,214 samples, 56.84%)</title><rect x="10.0" y="803.0" width="670.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (93,214 samples, 56.84%)</title><rect x="10.0" y="787.0" width="670.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (93,214 samples, 56.84%)</title><rect x="10.0" y="771.0" width="670.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (25,507 samples, 15.55%)</title><rect x="10.0" y="755.0" width="183.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (25,507 samples, 15.55%)</title><rect x="10.0" y="739.0" width="183.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (25,507 samples, 15.55%)</title><rect x="10.0" y="723.0" width="183.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/concurrent/Com..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (101 samples, 0.06%)</title><rect x="10.0" y="707.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$153/1249503175.apply (25,406 samples, 15.49%)</title><rect x="10.8" y="707.0" width="182.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.8" y="718.0">jdk/internal/net/http/Mu..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (25,406 samples, 15.49%)</title><rect x="10.8" y="691.0" width="182.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.8" y="702.0">jdk/internal/net/http/Mu..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (25,406 samples, 15.49%)</title><rect x="10.8" y="675.0" width="182.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.8" y="686.0">jdk/internal/net/http/Mu..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (131 samples, 0.08%)</title><rect x="10.8" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (131 samples, 0.08%)</title><rect x="10.8" y="643.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$289/1016523658.get$Lambda (82 samples, 0.05%)</title><rect x="10.8" y="627.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$289 (82 samples, 0.05%)</title><rect x="10.8" y="611.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="13.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$290/877098177.get$Lambda (49 samples, 0.03%)</title><rect x="11.4" y="627.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$290 (49 samples, 0.03%)</title><rect x="11.4" y="611.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="14.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (256 samples, 0.16%)</title><rect x="11.7" y="659.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (256 samples, 0.16%)</title><rect x="11.7" y="643.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.7" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (146 samples, 0.09%)</title><rect x="11.7" y="627.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="14.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (110 samples, 0.07%)</title><rect x="12.8" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (110 samples, 0.07%)</title><rect x="12.8" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (110 samples, 0.07%)</title><rect x="12.8" y="595.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="15.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (542 samples, 0.33%)</title><rect x="13.5" y="659.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (542 samples, 0.33%)</title><rect x="13.5" y="643.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="16.5" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (301 samples, 0.18%)</title><rect x="13.5" y="627.0" width="2.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="16.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (241 samples, 0.15%)</title><rect x="15.7" y="627.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="18.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (241 samples, 0.15%)</title><rect x="15.7" y="611.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (241 samples, 0.15%)</title><rect x="15.7" y="595.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="18.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (23,831 samples, 14.53%)</title><rect x="17.4" y="659.0" width="171.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.4" y="670.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (23,831 samples, 14.53%)</title><rect x="17.4" y="643.0" width="171.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.4" y="654.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (23,831 samples, 14.53%)</title><rect x="17.4" y="627.0" width="171.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.4" y="638.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (226 samples, 0.14%)</title><rect x="17.4" y="611.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="20.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (226 samples, 0.14%)</title><rect x="17.4" y="595.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/1850087782.get$Lambda (59 samples, 0.04%)</title><rect x="17.4" y="579.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$166 (59 samples, 0.04%)</title><rect x="17.4" y="563.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="20.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$170/678742413.get$Lambda (79 samples, 0.05%)</title><rect x="17.9" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$170 (79 samples, 0.05%)</title><rect x="17.9" y="563.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="20.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$245/351709695.get$Lambda (88 samples, 0.05%)</title><rect x="18.4" y="579.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$245 (88 samples, 0.05%)</title><rect x="18.4" y="563.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="21.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (15,247 samples, 9.30%)</title><rect x="19.1" y="611.0" width="109.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.1" y="622.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (15,247 samples, 9.30%)</title><rect x="19.1" y="595.0" width="109.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.1" y="606.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (15,134 samples, 9.23%)</title><rect x="19.1" y="579.0" width="108.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="22.1" y="590.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$245/351709695.apply (15,134 samples, 9.23%)</title><rect x="19.1" y="563.0" width="108.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.1" y="574.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (15,134 samples, 9.23%)</title><rect x="19.1" y="547.0" width="108.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.1" y="558.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (15,134 samples, 9.23%)</title><rect x="19.1" y="531.0" width="108.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.1" y="542.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$170/678742413.apply (15,134 samples, 9.23%)</title><rect x="19.1" y="515.0" width="108.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.1" y="526.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (15,134 samples, 9.23%)</title><rect x="19.1" y="499.0" width="108.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.1" y="510.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (100 samples, 0.06%)</title><rect x="19.1" y="483.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (100 samples, 0.06%)</title><rect x="19.1" y="467.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$288/1871228320.get$Lambda (100 samples, 0.06%)</title><rect x="19.1" y="451.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$288 (100 samples, 0.06%)</title><rect x="19.1" y="435.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="22.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (468 samples, 0.29%)</title><rect x="19.8" y="483.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (468 samples, 0.29%)</title><rect x="19.8" y="467.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (156 samples, 0.10%)</title><rect x="19.8" y="451.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="22.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (191 samples, 0.12%)</title><rect x="20.9" y="451.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$288/1871228320.apply (191 samples, 0.12%)</title><rect x="20.9" y="435.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (191 samples, 0.12%)</title><rect x="20.9" y="419.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (191 samples, 0.12%)</title><rect x="20.9" y="403.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/1850087782.apply (191 samples, 0.12%)</title><rect x="20.9" y="387.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (191 samples, 0.12%)</title><rect x="20.9" y="371.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (126 samples, 0.08%)</title><rect x="21.4" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (71 samples, 0.04%)</title><rect x="21.8" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (59 samples, 0.04%)</title><rect x="21.9" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (38 samples, 0.02%)</title><rect x="22.0" y="307.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="25.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (121 samples, 0.07%)</title><rect x="22.3" y="451.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (121 samples, 0.07%)</title><rect x="22.3" y="435.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="25.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (121 samples, 0.07%)</title><rect x="22.3" y="419.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="25.3" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (257 samples, 0.16%)</title><rect x="23.2" y="483.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (257 samples, 0.16%)</title><rect x="23.2" y="467.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (144 samples, 0.09%)</title><rect x="23.2" y="451.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="26.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.06%)</title><rect x="24.2" y="451.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="27.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.06%)</title><rect x="24.2" y="435.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="27.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (106 samples, 0.06%)</title><rect x="24.2" y="419.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="27.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (14,309 samples, 8.73%)</title><rect x="25.0" y="483.0" width="103.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="28.0" y="494.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (116 samples, 0.07%)</title><rect x="25.0" y="467.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="28.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (116 samples, 0.07%)</title><rect x="25.0" y="451.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="28.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$281/1002612192.get$Lambda (49 samples, 0.03%)</title><rect x="25.0" y="435.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="28.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$281 (49 samples, 0.03%)</title><rect x="25.0" y="419.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="28.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$283/831434866.get$Lambda (67 samples, 0.04%)</title><rect x="25.4" y="435.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="28.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$283 (67 samples, 0.04%)</title><rect x="25.4" y="419.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="28.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (12,252 samples, 7.47%)</title><rect x="25.8" y="467.0" width="88.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.8" y="478.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (12,252 samples, 7.47%)</title><rect x="25.8" y="451.0" width="88.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="28.8" y="462.0">java/util/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (109 samples, 0.07%)</title><rect x="25.8" y="435.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="28.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$281/1002612192.apply (11,889 samples, 7.25%)</title><rect x="26.6" y="435.0" width="85.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="29.6" y="446.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (11,889 samples, 7.25%)</title><rect x="26.6" y="419.0" width="85.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.6" y="430.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.03%)</title><rect x="26.6" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.6" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.03%)</title><rect x="26.6" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$303/245067707.get$Lambda (44 samples, 0.03%)</title><rect x="26.6" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="29.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$303 (44 samples, 0.03%)</title><rect x="26.6" y="355.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="29.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (261 samples, 0.16%)</title><rect x="26.9" y="403.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (261 samples, 0.16%)</title><rect x="26.9" y="387.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.9" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (145 samples, 0.09%)</title><rect x="26.9" y="371.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="29.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (116 samples, 0.07%)</title><rect x="28.0" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (116 samples, 0.07%)</title><rect x="28.0" y="355.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (116 samples, 0.07%)</title><rect x="28.0" y="339.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="31.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (129 samples, 0.08%)</title><rect x="28.8" y="403.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="31.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (226 samples, 0.14%)</title><rect x="29.8" y="403.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (87 samples, 0.05%)</title><rect x="29.8" y="387.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="32.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (139 samples, 0.08%)</title><rect x="30.4" y="387.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (93 samples, 0.06%)</title><rect x="30.4" y="371.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (93 samples, 0.06%)</title><rect x="30.4" y="355.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="33.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (93 samples, 0.06%)</title><rect x="30.4" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="33.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (93 samples, 0.06%)</title><rect x="30.4" y="323.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="33.4" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (93 samples, 0.06%)</title><rect x="30.4" y="307.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="33.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.03%)</title><rect x="31.0" y="371.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.03%)</title><rect x="31.0" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="34.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (46 samples, 0.03%)</title><rect x="31.0" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (46 samples, 0.03%)</title><rect x="31.0" y="323.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (46 samples, 0.03%)</title><rect x="31.0" y="307.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="34.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (46 samples, 0.03%)</title><rect x="31.0" y="291.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (257 samples, 0.16%)</title><rect x="31.4" y="403.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (257 samples, 0.16%)</title><rect x="31.4" y="387.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (78 samples, 0.05%)</title><rect x="31.4" y="371.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (78 samples, 0.05%)</title><rect x="31.4" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="34.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (78 samples, 0.05%)</title><rect x="31.4" y="339.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (78 samples, 0.05%)</title><rect x="31.4" y="323.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="34.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (179 samples, 0.11%)</title><rect x="31.9" y="371.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (179 samples, 0.11%)</title><rect x="31.9" y="355.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (132 samples, 0.08%)</title><rect x="31.9" y="339.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="34.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (47 samples, 0.03%)</title><rect x="32.9" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="35.9" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (47 samples, 0.03%)</title><rect x="32.9" y="323.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="35.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (10,972 samples, 6.69%)</title><rect x="33.2" y="403.0" width="79.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="36.2" y="414.0">jdk/inter..</text>
</g>
<g>
<title>java.lang.StringBuilder (80 samples, 0.05%)</title><rect x="33.2" y="387.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="36.2" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (185 samples, 0.11%)</title><rect x="33.8" y="387.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.8" y="398.0"></text>
</g>
<g>
<title>byte[] (100 samples, 0.06%)</title><rect x="33.8" y="371.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="36.8" y="382.0"></text>
</g>
<g>
<title>java.lang.String (85 samples, 0.05%)</title><rect x="34.5" y="371.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="37.5" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1,060 samples, 0.65%)</title><rect x="35.1" y="387.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="38.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,060 samples, 0.65%)</title><rect x="35.1" y="371.0" width="7.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (1,060 samples, 0.65%)</title><rect x="35.1" y="355.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.1" y="366.0"></text>
</g>
<g>
<title>byte[] (980 samples, 0.60%)</title><rect x="35.1" y="339.0" width="7.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="38.1" y="350.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.05%)</title><rect x="42.2" y="339.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="45.2" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (275 samples, 0.17%)</title><rect x="42.8" y="387.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.8" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (275 samples, 0.17%)</title><rect x="42.8" y="371.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.8" y="382.0"></text>
</g>
<g>
<title>byte[] (274 samples, 0.17%)</title><rect x="42.8" y="355.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="45.8" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1,047 samples, 0.64%)</title><rect x="44.7" y="387.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="47.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,047 samples, 0.64%)</title><rect x="44.7" y="371.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.7" y="382.0"></text>
</g>
<g>
<title>java.lang.String (98 samples, 0.06%)</title><rect x="44.7" y="355.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="47.7" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (949 samples, 0.58%)</title><rect x="45.4" y="355.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.4" y="366.0"></text>
</g>
<g>
<title>byte[] (916 samples, 0.56%)</title><rect x="45.4" y="339.0" width="6.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="48.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (177 samples, 0.11%)</title><rect x="52.3" y="387.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="55.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (177 samples, 0.11%)</title><rect x="52.3" y="371.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.3" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (177 samples, 0.11%)</title><rect x="52.3" y="355.0" width="1.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="55.3" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (87 samples, 0.05%)</title><rect x="53.5" y="387.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.5" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (87 samples, 0.05%)</title><rect x="53.5" y="371.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="56.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (6,857 samples, 4.18%)</title><rect x="54.2" y="387.0" width="49.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.2" y="398.0">jdk/i..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (101 samples, 0.06%)</title><rect x="54.2" y="371.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (101 samples, 0.06%)</title><rect x="54.2" y="355.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (101 samples, 0.06%)</title><rect x="54.2" y="339.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.2" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$307/2143406581.get$Lambda (101 samples, 0.06%)</title><rect x="54.2" y="323.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.2" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$307 (101 samples, 0.06%)</title><rect x="54.2" y="307.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="57.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (3,178 samples, 1.94%)</title><rect x="54.9" y="371.0" width="22.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.9" y="382.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (1,583 samples, 0.97%)</title><rect x="54.9" y="355.0" width="11.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="57.9" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1,583 samples, 0.97%)</title><rect x="54.9" y="339.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.9" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1,583 samples, 0.97%)</title><rect x="54.9" y="323.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.9" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,583 samples, 0.97%)</title><rect x="54.9" y="307.0" width="11.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.9" y="318.0"></text>
</g>
<g>
<title>byte[] (1,521 samples, 0.93%)</title><rect x="54.9" y="291.0" width="10.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="57.9" y="302.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.04%)</title><rect x="65.8" y="291.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="68.8" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (238 samples, 0.15%)</title><rect x="66.3" y="355.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.3" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (238 samples, 0.15%)</title><rect x="66.3" y="339.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (238 samples, 0.15%)</title><rect x="66.3" y="323.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (238 samples, 0.15%)</title><rect x="66.3" y="307.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="69.3" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (250 samples, 0.15%)</title><rect x="68.0" y="355.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.0" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (117 samples, 0.07%)</title><rect x="68.0" y="339.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="71.0" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (133 samples, 0.08%)</title><rect x="68.8" y="339.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.8" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (133 samples, 0.08%)</title><rect x="68.8" y="323.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="71.8" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$307/2143406581.test (1,107 samples, 0.68%)</title><rect x="69.8" y="355.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.8" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1,107 samples, 0.68%)</title><rect x="69.8" y="339.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/2089016471.test (1,107 samples, 0.68%)</title><rect x="69.8" y="323.0" width="8.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1,107 samples, 0.68%)</title><rect x="69.8" y="307.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.8" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$67/2082351774.test (1,107 samples, 0.68%)</title><rect x="69.8" y="291.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.8" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1,107 samples, 0.68%)</title><rect x="69.8" y="275.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/961160488.test (1,107 samples, 0.68%)</title><rect x="69.8" y="259.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1,107 samples, 0.68%)</title><rect x="69.8" y="243.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.8" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,107 samples, 0.68%)</title><rect x="69.8" y="227.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.8" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,107 samples, 0.68%)</title><rect x="69.8" y="211.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="72.8" y="222.0"></text>
</g>
<g>
<title>java.lang.String (559 samples, 0.34%)</title><rect x="69.8" y="195.0" width="4.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="72.8" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (548 samples, 0.33%)</title><rect x="73.8" y="195.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.8" y="206.0"></text>
</g>
<g>
<title>byte[] (548 samples, 0.33%)</title><rect x="73.8" y="179.0" width="4.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="76.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (3,578 samples, 2.18%)</title><rect x="77.8" y="371.0" width="25.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.8" y="382.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3,578 samples, 2.18%)</title><rect x="77.8" y="355.0" width="25.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.8" y="366.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3,578 samples, 2.18%)</title><rect x="77.8" y="339.0" width="25.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.8" y="350.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (49 samples, 0.03%)</title><rect x="77.8" y="323.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="80.8" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (97 samples, 0.06%)</title><rect x="78.1" y="323.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="81.1" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (179 samples, 0.11%)</title><rect x="78.8" y="323.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="81.8" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (56 samples, 0.03%)</title><rect x="80.1" y="323.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="83.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (107 samples, 0.07%)</title><rect x="80.5" y="323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (107 samples, 0.07%)</title><rect x="80.5" y="307.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.5" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.get$Lambda (107 samples, 0.07%)</title><rect x="80.5" y="291.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.5" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$134 (107 samples, 0.07%)</title><rect x="80.5" y="275.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="83.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (125 samples, 0.08%)</title><rect x="81.3" y="323.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.3" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (125 samples, 0.08%)</title><rect x="81.3" y="307.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="84.3" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2,785 samples, 1.70%)</title><rect x="82.2" y="323.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.2" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (2,785 samples, 1.70%)</title><rect x="82.2" y="307.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.2" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2,785 samples, 1.70%)</title><rect x="82.2" y="291.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (532 samples, 0.32%)</title><rect x="82.2" y="275.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (532 samples, 0.32%)</title><rect x="82.2" y="259.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="85.2" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.get$Lambda (532 samples, 0.32%)</title><rect x="82.2" y="243.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.2" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$136 (532 samples, 0.32%)</title><rect x="82.2" y="227.0" width="3.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="85.2" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (215 samples, 0.13%)</title><rect x="86.0" y="275.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="89.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (215 samples, 0.13%)</title><rect x="86.0" y="259.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (215 samples, 0.13%)</title><rect x="86.0" y="243.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (215 samples, 0.13%)</title><rect x="86.0" y="227.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.0" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (215 samples, 0.13%)</title><rect x="86.0" y="211.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.0" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (215 samples, 0.13%)</title><rect x="86.0" y="195.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.0" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (215 samples, 0.13%)</title><rect x="86.0" y="179.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (215 samples, 0.13%)</title><rect x="86.0" y="163.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="89.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (215 samples, 0.13%)</title><rect x="86.0" y="147.0" width="1.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="89.0" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1,139 samples, 0.69%)</title><rect x="87.5" y="275.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.5" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1,139 samples, 0.69%)</title><rect x="87.5" y="259.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (577 samples, 0.35%)</title><rect x="87.5" y="243.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.5" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (577 samples, 0.35%)</title><rect x="87.5" y="227.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.5" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (577 samples, 0.35%)</title><rect x="87.5" y="211.0" width="4.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="90.5" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (562 samples, 0.34%)</title><rect x="91.7" y="243.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.7" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (562 samples, 0.34%)</title><rect x="91.7" y="227.0" width="4.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="94.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (899 samples, 0.55%)</title><rect x="95.7" y="275.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="98.7" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (899 samples, 0.55%)</title><rect x="95.7" y="259.0" width="6.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="98.7" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (180 samples, 0.11%)</title><rect x="102.2" y="323.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="105.2" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (180 samples, 0.11%)</title><rect x="102.2" y="307.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="105.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (309 samples, 0.19%)</title><rect x="103.5" y="387.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (90 samples, 0.05%)</title><rect x="103.5" y="371.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.5" y="382.0"></text>
</g>
<g>
<title>byte[] (90 samples, 0.05%)</title><rect x="103.5" y="355.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="106.5" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (219 samples, 0.13%)</title><rect x="104.2" y="371.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="107.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (219 samples, 0.13%)</title><rect x="104.2" y="355.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1667148529.invoke (219 samples, 0.13%)</title><rect x="104.2" y="339.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="107.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (219 samples, 0.13%)</title><rect x="104.2" y="323.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (100 samples, 0.06%)</title><rect x="104.2" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="107.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (100 samples, 0.06%)</title><rect x="104.2" y="291.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="107.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (119 samples, 0.07%)</title><rect x="104.9" y="307.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (119 samples, 0.07%)</title><rect x="104.9" y="291.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.9" y="302.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.07%)</title><rect x="104.9" y="275.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="107.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (230 samples, 0.14%)</title><rect x="105.7" y="387.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (230 samples, 0.14%)</title><rect x="105.7" y="371.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (230 samples, 0.14%)</title><rect x="105.7" y="355.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (230 samples, 0.14%)</title><rect x="105.7" y="339.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1667148529.invoke (230 samples, 0.14%)</title><rect x="105.7" y="323.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (230 samples, 0.14%)</title><rect x="105.7" y="307.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (88 samples, 0.05%)</title><rect x="105.7" y="291.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="108.7" y="302.0"></text>
</g>
<g>
<title>java.lang.String (88 samples, 0.05%)</title><rect x="105.7" y="275.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="108.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (142 samples, 0.09%)</title><rect x="106.4" y="291.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (142 samples, 0.09%)</title><rect x="106.4" y="275.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.4" y="286.0"></text>
</g>
<g>
<title>byte[] (142 samples, 0.09%)</title><rect x="106.4" y="259.0" width="1.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="109.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (665 samples, 0.41%)</title><rect x="107.4" y="387.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.4" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (192 samples, 0.12%)</title><rect x="107.4" y="371.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="110.4" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (155 samples, 0.09%)</title><rect x="108.8" y="371.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.8" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (155 samples, 0.09%)</title><rect x="108.8" y="355.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="111.8" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (318 samples, 0.19%)</title><rect x="109.9" y="371.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.9" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (318 samples, 0.19%)</title><rect x="109.9" y="355.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="112.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (254 samples, 0.15%)</title><rect x="112.2" y="435.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (254 samples, 0.15%)</title><rect x="112.2" y="419.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="115.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (254 samples, 0.15%)</title><rect x="112.2" y="403.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="115.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (339 samples, 0.21%)</title><rect x="114.0" y="467.0" width="2.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="117.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (147 samples, 0.09%)</title><rect x="116.5" y="467.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="119.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1,450 samples, 0.88%)</title><rect x="117.5" y="467.0" width="10.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="120.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (118 samples, 0.07%)</title><rect x="117.5" y="451.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (118 samples, 0.07%)</title><rect x="117.5" y="435.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$253/110061556.get$Lambda (57 samples, 0.03%)</title><rect x="117.5" y="419.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$253 (57 samples, 0.03%)</title><rect x="117.5" y="403.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="120.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/1261770073.get$Lambda (61 samples, 0.04%)</title><rect x="117.9" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="120.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$254 (61 samples, 0.04%)</title><rect x="117.9" y="403.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="120.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (152 samples, 0.09%)</title><rect x="118.4" y="451.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="121.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (98 samples, 0.06%)</title><rect x="119.5" y="451.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="122.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (154 samples, 0.09%)</title><rect x="120.2" y="451.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="123.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (431 samples, 0.26%)</title><rect x="121.3" y="451.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (431 samples, 0.26%)</title><rect x="121.3" y="435.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (431 samples, 0.26%)</title><rect x="121.3" y="419.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (431 samples, 0.26%)</title><rect x="121.3" y="403.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (431 samples, 0.26%)</title><rect x="121.3" y="387.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (431 samples, 0.26%)</title><rect x="121.3" y="371.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$236/621309814.run (431 samples, 0.26%)</title><rect x="121.3" y="355.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (431 samples, 0.26%)</title><rect x="121.3" y="339.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="124.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (431 samples, 0.26%)</title><rect x="121.3" y="323.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (146 samples, 0.09%)</title><rect x="121.3" y="307.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (146 samples, 0.09%)</title><rect x="121.3" y="291.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$261/1453282749.get$Lambda (48 samples, 0.03%)</title><rect x="121.3" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$261 (48 samples, 0.03%)</title><rect x="121.3" y="259.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="124.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$265/904072682.get$Lambda (98 samples, 0.06%)</title><rect x="121.6" y="275.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$265 (98 samples, 0.06%)</title><rect x="121.6" y="259.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="124.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (128 samples, 0.08%)</title><rect x="122.3" y="307.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="125.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (157 samples, 0.10%)</title><rect x="123.3" y="307.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (157 samples, 0.10%)</title><rect x="123.3" y="291.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (71 samples, 0.04%)</title><rect x="123.3" y="275.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="126.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (86 samples, 0.05%)</title><rect x="123.8" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.8" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (86 samples, 0.05%)</title><rect x="123.8" y="259.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="126.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (380 samples, 0.23%)</title><rect x="124.4" y="451.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.4" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (77 samples, 0.05%)</title><rect x="124.4" y="435.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="127.4" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (185 samples, 0.11%)</title><rect x="124.9" y="435.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="127.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (118 samples, 0.07%)</title><rect x="126.3" y="435.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.3" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (118 samples, 0.07%)</title><rect x="126.3" y="419.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.3" y="430.0"></text>
</g>
<g>
<title>byte[] (118 samples, 0.07%)</title><rect x="126.3" y="403.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="129.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (117 samples, 0.07%)</title><rect x="127.1" y="451.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (117 samples, 0.07%)</title><rect x="127.1" y="435.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="130.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (113 samples, 0.07%)</title><rect x="128.0" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (113 samples, 0.07%)</title><rect x="128.0" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (113 samples, 0.07%)</title><rect x="128.0" y="547.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="131.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (226 samples, 0.14%)</title><rect x="128.8" y="611.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (226 samples, 0.14%)</title><rect x="128.8" y="595.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (111 samples, 0.07%)</title><rect x="128.8" y="579.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="131.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (115 samples, 0.07%)</title><rect x="129.6" y="579.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (115 samples, 0.07%)</title><rect x="129.6" y="563.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (115 samples, 0.07%)</title><rect x="129.6" y="547.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="132.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (8,132 samples, 4.96%)</title><rect x="130.4" y="611.0" width="58.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="133.4" y="622.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (148 samples, 0.09%)</title><rect x="130.4" y="595.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (148 samples, 0.09%)</title><rect x="130.4" y="579.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$241/1630528551.get$Lambda (89 samples, 0.05%)</title><rect x="130.4" y="563.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$241 (89 samples, 0.05%)</title><rect x="130.4" y="547.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="133.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$243/1828731342.get$Lambda (59 samples, 0.04%)</title><rect x="131.0" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$243 (59 samples, 0.04%)</title><rect x="131.0" y="547.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="134.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (253 samples, 0.15%)</title><rect x="131.5" y="595.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (253 samples, 0.15%)</title><rect x="131.5" y="579.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$243/1828731342.apply (128 samples, 0.08%)</title><rect x="131.5" y="563.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="134.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (128 samples, 0.08%)</title><rect x="131.5" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (128 samples, 0.08%)</title><rect x="131.5" y="531.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="134.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (128 samples, 0.08%)</title><rect x="131.5" y="515.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="134.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (125 samples, 0.08%)</title><rect x="132.4" y="563.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (125 samples, 0.08%)</title><rect x="132.4" y="547.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (125 samples, 0.08%)</title><rect x="132.4" y="531.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="135.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (119 samples, 0.07%)</title><rect x="133.3" y="595.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (119 samples, 0.07%)</title><rect x="133.3" y="579.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (119 samples, 0.07%)</title><rect x="133.3" y="563.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (119 samples, 0.07%)</title><rect x="133.3" y="547.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="136.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (119 samples, 0.07%)</title><rect x="133.3" y="531.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="136.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (7,612 samples, 4.64%)</title><rect x="134.1" y="595.0" width="54.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="137.1" y="606.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (98 samples, 0.06%)</title><rect x="134.1" y="579.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="137.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (98 samples, 0.06%)</title><rect x="134.1" y="563.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$176/978711598.get$Lambda (98 samples, 0.06%)</title><rect x="134.1" y="547.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$176 (98 samples, 0.06%)</title><rect x="134.1" y="531.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="137.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (7,036 samples, 4.29%)</title><rect x="134.9" y="579.0" width="50.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.9" y="590.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (7,036 samples, 4.29%)</title><rect x="134.9" y="563.0" width="50.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.9" y="574.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6,926 samples, 4.22%)</title><rect x="134.9" y="547.0" width="49.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="137.9" y="558.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$176/978711598.apply (6,926 samples, 4.22%)</title><rect x="134.9" y="531.0" width="49.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.9" y="542.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (6,926 samples, 4.22%)</title><rect x="134.9" y="515.0" width="49.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="137.9" y="526.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (6,926 samples, 4.22%)</title><rect x="134.9" y="499.0" width="49.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="137.9" y="510.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (66 samples, 0.04%)</title><rect x="134.9" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (66 samples, 0.04%)</title><rect x="134.9" y="467.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$239/1587750339.get$Lambda (66 samples, 0.04%)</title><rect x="134.9" y="451.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ExchangeImpl$$Lambda$239 (66 samples, 0.04%)</title><rect x="134.9" y="435.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="137.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2,715 samples, 1.66%)</title><rect x="135.3" y="483.0" width="19.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="138.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2,715 samples, 1.66%)</title><rect x="135.3" y="467.0" width="19.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="138.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2,715 samples, 1.66%)</title><rect x="135.3" y="451.0" width="19.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$239/1587750339.apply (2,603 samples, 1.59%)</title><rect x="135.3" y="435.0" width="18.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (2,603 samples, 1.59%)</title><rect x="135.3" y="419.0" width="18.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="138.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (2,603 samples, 1.59%)</title><rect x="135.3" y="403.0" width="18.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (2,603 samples, 1.59%)</title><rect x="135.3" y="387.0" width="18.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (1,571 samples, 0.96%)</title><rect x="135.3" y="371.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.3" y="382.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (551 samples, 0.34%)</title><rect x="135.3" y="355.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="138.3" y="366.0"></text>
</g>
<g>
<title>java.lang.String (89 samples, 0.05%)</title><rect x="135.3" y="339.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="138.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (246 samples, 0.15%)</title><rect x="136.0" y="339.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.0" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (246 samples, 0.15%)</title><rect x="136.0" y="323.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="139.0" y="334.0"></text>
</g>
<g>
<title>byte[] (246 samples, 0.15%)</title><rect x="136.0" y="307.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="139.0" y="318.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (216 samples, 0.13%)</title><rect x="137.7" y="339.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.7" y="350.0"></text>
</g>
<g>
<title>byte[] (214 samples, 0.13%)</title><rect x="137.7" y="323.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="140.7" y="334.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (92 samples, 0.06%)</title><rect x="139.3" y="355.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.3" y="366.0"></text>
</g>
<g>
<title>java.util.Base64$Encoder (92 samples, 0.06%)</title><rect x="139.3" y="339.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="142.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (768 samples, 0.47%)</title><rect x="140.0" y="355.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (622 samples, 0.38%)</title><rect x="140.0" y="339.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (622 samples, 0.38%)</title><rect x="140.0" y="323.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/815320891.linkToTargetMethod (447 samples, 0.27%)</title><rect x="140.0" y="307.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (447 samples, 0.27%)</title><rect x="140.0" y="291.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/1778629809.get$Lambda (447 samples, 0.27%)</title><rect x="140.0" y="275.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.0" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Utils$$Lambda$62 (447 samples, 0.27%)</title><rect x="140.0" y="259.0" width="3.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="143.0" y="270.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (175 samples, 0.11%)</title><rect x="143.2" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/1778629809.run (175 samples, 0.11%)</title><rect x="143.2" y="291.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (175 samples, 0.11%)</title><rect x="143.2" y="275.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.2" y="286.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (175 samples, 0.11%)</title><rect x="143.2" y="259.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.2" y="270.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (175 samples, 0.11%)</title><rect x="143.2" y="243.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.2" y="254.0"></text>
</g>
<g>
<title>java.lang.Integer (175 samples, 0.11%)</title><rect x="143.2" y="227.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="146.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (146 samples, 0.09%)</title><rect x="144.4" y="339.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="147.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (146 samples, 0.09%)</title><rect x="144.4" y="323.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.4" y="334.0"></text>
</g>
<g>
<title>int[] (146 samples, 0.09%)</title><rect x="144.4" y="307.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="147.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (160 samples, 0.10%)</title><rect x="145.5" y="355.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.5" y="366.0"></text>
</g>
<g>
<title>byte[] (160 samples, 0.10%)</title><rect x="145.5" y="339.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="148.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1,032 samples, 0.63%)</title><rect x="146.6" y="371.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.6" y="382.0"></text>
</g>
<g>
<title>java.util.ArrayList (267 samples, 0.16%)</title><rect x="146.6" y="355.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="149.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (293 samples, 0.18%)</title><rect x="148.6" y="355.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (293 samples, 0.18%)</title><rect x="148.6" y="339.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="151.6" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (472 samples, 0.29%)</title><rect x="150.7" y="355.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.7" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (472 samples, 0.29%)</title><rect x="150.7" y="339.0" width="3.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="153.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (112 samples, 0.07%)</title><rect x="154.1" y="435.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="157.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (112 samples, 0.07%)</title><rect x="154.1" y="419.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (112 samples, 0.07%)</title><rect x="154.1" y="403.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="157.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (4,145 samples, 2.53%)</title><rect x="154.9" y="483.0" width="29.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="157.9" y="494.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (346 samples, 0.21%)</title><rect x="154.9" y="467.0" width="2.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="157.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (3,699 samples, 2.26%)</title><rect x="157.4" y="467.0" width="26.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.4" y="478.0">j..</text>
</g>
<g>
<title>java.lang.Object (68 samples, 0.04%)</title><rect x="157.4" y="451.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="160.4" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (116 samples, 0.07%)</title><rect x="157.9" y="451.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="160.9" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (94 samples, 0.06%)</title><rect x="158.7" y="451.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="161.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (188 samples, 0.11%)</title><rect x="159.4" y="451.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.4" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (188 samples, 0.11%)</title><rect x="159.4" y="435.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.4" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (188 samples, 0.11%)</title><rect x="159.4" y="419.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="162.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (94 samples, 0.06%)</title><rect x="160.7" y="451.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (94 samples, 0.06%)</title><rect x="160.7" y="435.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="163.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (280 samples, 0.17%)</title><rect x="161.4" y="451.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="164.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (166 samples, 0.10%)</title><rect x="163.4" y="451.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="166.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (206 samples, 0.13%)</title><rect x="164.6" y="451.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="167.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (238 samples, 0.15%)</title><rect x="166.1" y="451.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="169.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (1,088 samples, 0.66%)</title><rect x="167.8" y="451.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (85 samples, 0.05%)</title><rect x="167.8" y="435.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="170.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (54 samples, 0.03%)</title><rect x="168.4" y="435.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="171.4" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (90 samples, 0.05%)</title><rect x="168.8" y="435.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="171.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (56 samples, 0.03%)</title><rect x="169.5" y="435.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="172.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (64 samples, 0.04%)</title><rect x="169.9" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (64 samples, 0.04%)</title><rect x="169.9" y="419.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="172.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$236/621309814.get$Lambda (64 samples, 0.04%)</title><rect x="169.9" y="403.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="172.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$236 (64 samples, 0.04%)</title><rect x="169.9" y="387.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="172.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (94 samples, 0.06%)</title><rect x="170.3" y="435.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="173.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (94 samples, 0.06%)</title><rect x="170.3" y="419.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="173.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (80 samples, 0.05%)</title><rect x="171.0" y="435.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="174.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (112 samples, 0.07%)</title><rect x="171.6" y="435.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="174.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (453 samples, 0.28%)</title><rect x="172.4" y="435.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (87 samples, 0.05%)</title><rect x="172.4" y="419.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="175.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (127 samples, 0.08%)</title><rect x="173.0" y="419.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="176.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (67 samples, 0.04%)</title><rect x="173.9" y="419.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="176.9" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (67 samples, 0.04%)</title><rect x="173.9" y="403.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="176.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (172 samples, 0.10%)</title><rect x="174.4" y="419.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (58 samples, 0.04%)</title><rect x="174.4" y="403.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="177.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (60 samples, 0.04%)</title><rect x="174.8" y="403.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="177.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (54 samples, 0.03%)</title><rect x="175.3" y="403.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="178.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (703 samples, 0.43%)</title><rect x="175.6" y="451.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="178.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (63 samples, 0.04%)</title><rect x="175.6" y="435.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="178.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (59 samples, 0.04%)</title><rect x="176.1" y="435.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="179.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (64 samples, 0.04%)</title><rect x="176.5" y="435.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="179.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (90 samples, 0.05%)</title><rect x="177.0" y="435.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="180.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (90 samples, 0.05%)</title><rect x="177.0" y="419.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="180.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (427 samples, 0.26%)</title><rect x="177.6" y="435.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (89 samples, 0.05%)</title><rect x="177.6" y="419.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="180.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (106 samples, 0.06%)</title><rect x="178.3" y="419.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="181.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (46 samples, 0.03%)</title><rect x="179.0" y="419.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="182.0" y="430.0"></text>
</g>
<g>
<title>java.lang.Object (46 samples, 0.03%)</title><rect x="179.0" y="403.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="182.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (186 samples, 0.11%)</title><rect x="179.4" y="419.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="182.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (63 samples, 0.04%)</title><rect x="179.4" y="403.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="182.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (56 samples, 0.03%)</title><rect x="179.8" y="403.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="182.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (67 samples, 0.04%)</title><rect x="180.2" y="403.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="183.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (104 samples, 0.06%)</title><rect x="180.7" y="451.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="183.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (104 samples, 0.06%)</title><rect x="180.7" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="183.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (104 samples, 0.06%)</title><rect x="180.7" y="419.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.7" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.get (104 samples, 0.06%)</title><rect x="180.7" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.7" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (104 samples, 0.06%)</title><rect x="180.7" y="387.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (104 samples, 0.06%)</title><rect x="180.7" y="371.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.7" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (104 samples, 0.06%)</title><rect x="180.7" y="355.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="183.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (353 samples, 0.22%)</title><rect x="181.5" y="451.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="184.5" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/815320891.linkToTargetMethod (103 samples, 0.06%)</title><rect x="181.5" y="435.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="184.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (103 samples, 0.06%)</title><rect x="181.5" y="419.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="184.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$184/548214908.get$Lambda (103 samples, 0.06%)</title><rect x="181.5" y="403.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="184.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$184 (103 samples, 0.06%)</title><rect x="181.5" y="387.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="184.5" y="398.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (250 samples, 0.15%)</title><rect x="182.2" y="435.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$184/548214908.run (250 samples, 0.15%)</title><rect x="182.2" y="419.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (250 samples, 0.15%)</title><rect x="182.2" y="403.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.2" y="414.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (64 samples, 0.04%)</title><rect x="182.2" y="387.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="185.2" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (186 samples, 0.11%)</title><rect x="182.7" y="387.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.7" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (90 samples, 0.05%)</title><rect x="182.7" y="371.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="185.7" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (96 samples, 0.06%)</title><rect x="183.3" y="371.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.3" y="382.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (96 samples, 0.06%)</title><rect x="183.3" y="355.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.3" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (96 samples, 0.06%)</title><rect x="183.3" y="339.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.3" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (96 samples, 0.06%)</title><rect x="183.3" y="323.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.3" y="334.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (96 samples, 0.06%)</title><rect x="183.3" y="307.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="186.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (96 samples, 0.06%)</title><rect x="184.0" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="187.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (96 samples, 0.06%)</title><rect x="184.0" y="451.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="187.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (110 samples, 0.07%)</title><rect x="184.7" y="547.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (110 samples, 0.07%)</title><rect x="184.7" y="531.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (110 samples, 0.07%)</title><rect x="184.7" y="515.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="187.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (109 samples, 0.07%)</title><rect x="185.5" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="188.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (109 samples, 0.07%)</title><rect x="185.5" y="563.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="188.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.07%)</title><rect x="185.5" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="188.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (109 samples, 0.07%)</title><rect x="185.5" y="531.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (109 samples, 0.07%)</title><rect x="185.5" y="515.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="188.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (369 samples, 0.23%)</title><rect x="186.3" y="579.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="189.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (249 samples, 0.15%)</title><rect x="186.3" y="563.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="189.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (249 samples, 0.15%)</title><rect x="186.3" y="547.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="189.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2043317551.linkToTargetMethod (249 samples, 0.15%)</title><rect x="186.3" y="531.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="189.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/369852026.invoke (249 samples, 0.15%)</title><rect x="186.3" y="515.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.3" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1977335334.invoke (249 samples, 0.15%)</title><rect x="186.3" y="499.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (249 samples, 0.15%)</title><rect x="186.3" y="483.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="189.3" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (81 samples, 0.05%)</title><rect x="186.3" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="189.3" y="478.0"></text>
</g>
<g>
<title>java.lang.String (81 samples, 0.05%)</title><rect x="186.3" y="451.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="189.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (168 samples, 0.10%)</title><rect x="186.8" y="467.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (168 samples, 0.10%)</title><rect x="186.8" y="451.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.8" y="462.0"></text>
</g>
<g>
<title>byte[] (168 samples, 0.10%)</title><rect x="186.8" y="435.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="189.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (120 samples, 0.07%)</title><rect x="188.1" y="563.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (120 samples, 0.07%)</title><rect x="188.1" y="547.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="191.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (167 samples, 0.10%)</title><rect x="188.9" y="659.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="191.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (167 samples, 0.10%)</title><rect x="188.9" y="643.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.9" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (167 samples, 0.10%)</title><rect x="188.9" y="627.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.9" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (167 samples, 0.10%)</title><rect x="188.9" y="611.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="191.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (479 samples, 0.29%)</title><rect x="190.1" y="659.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.1" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (377 samples, 0.23%)</title><rect x="190.1" y="643.0" width="2.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="193.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (102 samples, 0.06%)</title><rect x="192.8" y="643.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (102 samples, 0.06%)</title><rect x="192.8" y="627.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.8" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plus (102 samples, 0.06%)</title><rect x="192.8" y="611.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="195.8" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (102 samples, 0.06%)</title><rect x="192.8" y="595.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.8" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (102 samples, 0.06%)</title><rect x="192.8" y="579.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.8" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (102 samples, 0.06%)</title><rect x="192.8" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.8" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (102 samples, 0.06%)</title><rect x="192.8" y="547.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.8" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (102 samples, 0.06%)</title><rect x="192.8" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.8" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (102 samples, 0.06%)</title><rect x="192.8" y="515.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (102 samples, 0.06%)</title><rect x="192.8" y="499.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="195.8" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (102 samples, 0.06%)</title><rect x="192.8" y="483.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="195.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,703 samples, 1.65%)</title><rect x="193.6" y="755.0" width="19.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="196.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (644 samples, 0.39%)</title><rect x="193.6" y="739.0" width="4.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="196.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (644 samples, 0.39%)</title><rect x="193.6" y="723.0" width="4.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (644 samples, 0.39%)</title><rect x="193.6" y="707.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (644 samples, 0.39%)</title><rect x="193.6" y="691.0" width="4.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="196.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (2,059 samples, 1.26%)</title><rect x="198.2" y="739.0" width="14.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2,059 samples, 1.26%)</title><rect x="198.2" y="723.0" width="14.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2,059 samples, 1.26%)</title><rect x="198.2" y="707.0" width="14.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.2" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (2,059 samples, 1.26%)</title><rect x="198.2" y="691.0" width="14.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="201.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$309/1651102379.run (5,029 samples, 3.07%)</title><rect x="213.0" y="755.0" width="36.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="216.0" y="766.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (5,029 samples, 3.07%)</title><rect x="213.0" y="739.0" width="36.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="216.0" y="750.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (5,029 samples, 3.07%)</title><rect x="213.0" y="723.0" width="36.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="216.0" y="734.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (5,029 samples, 3.07%)</title><rect x="213.0" y="707.0" width="36.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.0" y="718.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5,029 samples, 3.07%)</title><rect x="213.0" y="691.0" width="36.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="216.0" y="702.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5,029 samples, 3.07%)</title><rect x="213.0" y="675.0" width="36.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="216.0" y="686.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5,029 samples, 3.07%)</title><rect x="213.0" y="659.0" width="36.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="216.0" y="670.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5,029 samples, 3.07%)</title><rect x="213.0" y="643.0" width="36.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="216.0" y="654.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5,029 samples, 3.07%)</title><rect x="213.0" y="627.0" width="36.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="216.0" y="638.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,029 samples, 3.07%)</title><rect x="213.0" y="611.0" width="36.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.0" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (5,029 samples, 3.07%)</title><rect x="213.0" y="595.0" width="36.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="216.0" y="606.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (4,608 samples, 2.81%)</title><rect x="213.0" y="579.0" width="33.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.0" y="590.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (489 samples, 0.30%)</title><rect x="213.0" y="563.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (489 samples, 0.30%)</title><rect x="213.0" y="547.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$311/10799099.get$Lambda (358 samples, 0.22%)</title><rect x="213.0" y="531.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="216.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$311 (358 samples, 0.22%)</title><rect x="213.0" y="515.0" width="2.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="216.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$321/369272078.get$Lambda (72 samples, 0.04%)</title><rect x="215.6" y="531.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="218.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$321 (72 samples, 0.04%)</title><rect x="215.6" y="515.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="218.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$409/168925968.get$Lambda (59 samples, 0.04%)</title><rect x="216.1" y="531.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="219.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$409 (59 samples, 0.04%)</title><rect x="216.1" y="515.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="219.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (4,119 samples, 2.51%)</title><rect x="216.5" y="563.0" width="29.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="219.5" y="574.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (177 samples, 0.11%)</title><rect x="216.5" y="547.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="219.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,942 samples, 2.40%)</title><rect x="217.8" y="547.0" width="28.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.8" y="558.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (3,942 samples, 2.40%)</title><rect x="217.8" y="531.0" width="28.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="220.8" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,942 samples, 2.40%)</title><rect x="217.8" y="515.0" width="28.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.8" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (643 samples, 0.39%)</title><rect x="217.8" y="499.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (242 samples, 0.15%)</title><rect x="217.8" y="483.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="220.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$313/446652366.apply (401 samples, 0.24%)</title><rect x="219.6" y="483.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (401 samples, 0.24%)</title><rect x="219.6" y="467.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (401 samples, 0.24%)</title><rect x="219.6" y="451.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.6" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (95 samples, 0.06%)</title><rect x="219.6" y="435.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.6" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (95 samples, 0.06%)</title><rect x="219.6" y="419.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.6" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (95 samples, 0.06%)</title><rect x="219.6" y="403.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="222.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (306 samples, 0.19%)</title><rect x="220.2" y="435.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="223.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.03%)</title><rect x="220.2" y="419.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="223.2" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.03%)</title><rect x="220.2" y="403.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$324/669883057.get$Lambda (55 samples, 0.03%)</title><rect x="220.2" y="387.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.2" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$324 (55 samples, 0.03%)</title><rect x="220.2" y="371.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="223.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (251 samples, 0.15%)</title><rect x="220.6" y="419.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="223.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (251 samples, 0.15%)</title><rect x="220.6" y="403.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.6" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (140 samples, 0.09%)</title><rect x="220.6" y="387.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="223.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (111 samples, 0.07%)</title><rect x="221.6" y="387.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (111 samples, 0.07%)</title><rect x="221.6" y="371.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="224.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (111 samples, 0.07%)</title><rect x="221.6" y="355.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="224.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3,299 samples, 2.01%)</title><rect x="222.4" y="499.0" width="23.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="225.4" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,299 samples, 2.01%)</title><rect x="222.4" y="483.0" width="23.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.4" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$288/1871228320.apply (3,299 samples, 2.01%)</title><rect x="222.4" y="467.0" width="23.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="225.4" y="478.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (3,299 samples, 2.01%)</title><rect x="222.4" y="451.0" width="23.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.4" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3,299 samples, 2.01%)</title><rect x="222.4" y="435.0" width="23.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="225.4" y="446.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/1850087782.apply (3,299 samples, 2.01%)</title><rect x="222.4" y="419.0" width="23.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.4" y="430.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (3,299 samples, 2.01%)</title><rect x="222.4" y="403.0" width="23.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="225.4" y="414.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (48 samples, 0.03%)</title><rect x="222.4" y="387.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (48 samples, 0.03%)</title><rect x="222.4" y="371.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="225.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$313/446652366.get$Lambda (48 samples, 0.03%)</title><rect x="222.4" y="355.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="225.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$313 (48 samples, 0.03%)</title><rect x="222.4" y="339.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="225.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (255 samples, 0.16%)</title><rect x="222.8" y="387.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (255 samples, 0.16%)</title><rect x="222.8" y="371.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="225.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (148 samples, 0.09%)</title><rect x="222.8" y="355.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="225.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (107 samples, 0.07%)</title><rect x="223.8" y="355.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="226.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (107 samples, 0.07%)</title><rect x="223.8" y="339.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="226.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (107 samples, 0.07%)</title><rect x="223.8" y="323.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="226.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.wrapForUpgrade (317 samples, 0.19%)</title><rect x="224.6" y="387.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.6" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.03%)</title><rect x="224.6" y="371.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="227.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.03%)</title><rect x="224.6" y="355.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$315/1008916601.get$Lambda (57 samples, 0.03%)</title><rect x="224.6" y="339.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$315 (57 samples, 0.03%)</title><rect x="224.6" y="323.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="227.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (260 samples, 0.16%)</title><rect x="225.0" y="371.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (260 samples, 0.16%)</title><rect x="225.0" y="355.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (135 samples, 0.08%)</title><rect x="225.0" y="339.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="228.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (125 samples, 0.08%)</title><rect x="226.0" y="339.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="229.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (125 samples, 0.08%)</title><rect x="226.0" y="323.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="229.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (125 samples, 0.08%)</title><rect x="226.0" y="307.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="229.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (2,679 samples, 1.63%)</title><rect x="226.9" y="387.0" width="19.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="229.9" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (90 samples, 0.05%)</title><rect x="226.9" y="371.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="229.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (90 samples, 0.05%)</title><rect x="226.9" y="355.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$397/1023310560.get$Lambda (43 samples, 0.03%)</title><rect x="226.9" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="229.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$397 (43 samples, 0.03%)</title><rect x="226.9" y="323.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="229.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$405/121739781.get$Lambda (47 samples, 0.03%)</title><rect x="227.2" y="339.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$405 (47 samples, 0.03%)</title><rect x="227.2" y="323.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="230.2" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (986 samples, 0.60%)</title><rect x="227.5" y="371.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (986 samples, 0.60%)</title><rect x="227.5" y="355.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (986 samples, 0.60%)</title><rect x="227.5" y="339.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$397/1023310560.accept (325 samples, 0.20%)</title><rect x="227.5" y="323.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (325 samples, 0.20%)</title><rect x="227.5" y="307.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="230.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (325 samples, 0.20%)</title><rect x="227.5" y="291.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (74 samples, 0.05%)</title><rect x="227.5" y="275.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (74 samples, 0.05%)</title><rect x="227.5" y="259.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$401/58592946.get$Lambda (74 samples, 0.05%)</title><rect x="227.5" y="243.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$401 (74 samples, 0.05%)</title><rect x="227.5" y="227.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="230.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (251 samples, 0.15%)</title><rect x="228.1" y="275.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="231.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (251 samples, 0.15%)</title><rect x="228.1" y="259.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="231.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (145 samples, 0.09%)</title><rect x="228.1" y="243.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="231.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.06%)</title><rect x="229.1" y="243.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="232.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.06%)</title><rect x="229.1" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (106 samples, 0.06%)</title><rect x="229.1" y="211.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="232.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$405/121739781.accept (424 samples, 0.26%)</title><rect x="229.9" y="323.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (424 samples, 0.26%)</title><rect x="229.9" y="307.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (424 samples, 0.26%)</title><rect x="229.9" y="291.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="232.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (424 samples, 0.26%)</title><rect x="229.9" y="275.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (424 samples, 0.26%)</title><rect x="229.9" y="259.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (424 samples, 0.26%)</title><rect x="229.9" y="243.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="232.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (424 samples, 0.26%)</title><rect x="229.9" y="227.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (424 samples, 0.26%)</title><rect x="229.9" y="211.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (424 samples, 0.26%)</title><rect x="229.9" y="195.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (424 samples, 0.26%)</title><rect x="229.9" y="179.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (175 samples, 0.11%)</title><rect x="229.9" y="163.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (175 samples, 0.11%)</title><rect x="229.9" y="147.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.9" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (93 samples, 0.06%)</title><rect x="229.9" y="131.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="232.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (82 samples, 0.05%)</title><rect x="230.6" y="131.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="233.6" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (82 samples, 0.05%)</title><rect x="230.6" y="115.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.6" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (82 samples, 0.05%)</title><rect x="230.6" y="99.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.6" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (82 samples, 0.05%)</title><rect x="230.6" y="83.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (82 samples, 0.05%)</title><rect x="230.6" y="67.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="233.6" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (82 samples, 0.05%)</title><rect x="230.6" y="51.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="233.6" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (249 samples, 0.15%)</title><rect x="231.1" y="163.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (249 samples, 0.15%)</title><rect x="231.1" y="147.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="234.1" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (75 samples, 0.05%)</title><rect x="231.1" y="131.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="234.1" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (75 samples, 0.05%)</title><rect x="231.1" y="115.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="234.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (174 samples, 0.11%)</title><rect x="231.7" y="131.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="234.7" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (86 samples, 0.05%)</title><rect x="231.7" y="115.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="234.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (88 samples, 0.05%)</title><rect x="232.3" y="115.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (88 samples, 0.05%)</title><rect x="232.3" y="99.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (88 samples, 0.05%)</title><rect x="232.3" y="83.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (88 samples, 0.05%)</title><rect x="232.3" y="67.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.3" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (88 samples, 0.05%)</title><rect x="232.3" y="51.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="235.3" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (88 samples, 0.05%)</title><rect x="232.3" y="35.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="235.3" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (237 samples, 0.14%)</title><rect x="232.9" y="323.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="235.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (237 samples, 0.14%)</title><rect x="232.9" y="307.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (237 samples, 0.14%)</title><rect x="232.9" y="291.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="235.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (1,603 samples, 0.98%)</title><rect x="234.6" y="371.0" width="11.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="237.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (130 samples, 0.08%)</title><rect x="234.6" y="355.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="237.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (100 samples, 0.06%)</title><rect x="235.6" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (100 samples, 0.06%)</title><rect x="235.6" y="339.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="238.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (100 samples, 0.06%)</title><rect x="235.6" y="323.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="238.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1,373 samples, 0.84%)</title><rect x="236.3" y="355.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="239.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (87 samples, 0.05%)</title><rect x="236.3" y="339.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="239.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (751 samples, 0.46%)</title><rect x="236.9" y="339.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="239.9" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (93 samples, 0.06%)</title><rect x="236.9" y="323.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="239.9" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (93 samples, 0.06%)</title><rect x="236.9" y="307.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="239.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (154 samples, 0.09%)</title><rect x="237.6" y="323.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="240.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (504 samples, 0.31%)</title><rect x="238.7" y="323.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="241.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (60 samples, 0.04%)</title><rect x="238.7" y="307.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="241.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (74 samples, 0.05%)</title><rect x="239.1" y="307.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="242.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (124 samples, 0.08%)</title><rect x="239.7" y="307.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="242.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (81 samples, 0.05%)</title><rect x="240.6" y="307.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="243.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (81 samples, 0.05%)</title><rect x="240.6" y="291.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="243.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (165 samples, 0.10%)</title><rect x="241.1" y="307.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="244.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (54 samples, 0.03%)</title><rect x="241.1" y="291.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="244.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (58 samples, 0.04%)</title><rect x="241.5" y="291.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="244.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (53 samples, 0.03%)</title><rect x="241.9" y="291.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="244.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (535 samples, 0.33%)</title><rect x="242.3" y="339.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.3" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (81 samples, 0.05%)</title><rect x="242.3" y="323.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="245.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (255 samples, 0.16%)</title><rect x="242.9" y="323.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.9" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (161 samples, 0.10%)</title><rect x="242.9" y="307.0" width="1.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="245.9" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (94 samples, 0.06%)</title><rect x="244.1" y="307.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="247.1" y="318.0"></text>
</g>
<g>
<title>byte[] (94 samples, 0.06%)</title><rect x="244.1" y="291.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="247.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (199 samples, 0.12%)</title><rect x="244.7" y="323.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="247.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (199 samples, 0.12%)</title><rect x="244.7" y="307.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="247.7" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (199 samples, 0.12%)</title><rect x="244.7" y="291.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="247.7" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (199 samples, 0.12%)</title><rect x="244.7" y="275.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="247.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (199 samples, 0.12%)</title><rect x="244.7" y="259.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.7" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (199 samples, 0.12%)</title><rect x="244.7" y="243.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="247.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (421 samples, 0.26%)</title><rect x="246.2" y="579.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (421 samples, 0.26%)</title><rect x="246.2" y="563.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="249.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (421 samples, 0.26%)</title><rect x="246.2" y="547.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (421 samples, 0.26%)</title><rect x="246.2" y="531.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (421 samples, 0.26%)</title><rect x="246.2" y="515.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="249.2" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (420 samples, 0.26%)</title><rect x="246.2" y="499.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="249.2" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (171 samples, 0.10%)</title><rect x="246.2" y="483.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.2" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (171 samples, 0.10%)</title><rect x="246.2" y="467.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="249.2" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (249 samples, 0.15%)</title><rect x="247.4" y="483.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.4" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (249 samples, 0.15%)</title><rect x="247.4" y="467.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="250.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (18,179 samples, 11.08%)</title><rect x="249.2" y="755.0" width="130.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.2" y="766.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (18,179 samples, 11.08%)</title><rect x="249.2" y="739.0" width="130.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.2" y="750.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (15,635 samples, 9.53%)</title><rect x="249.2" y="723.0" width="112.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.2" y="734.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$236/621309814.run (15,635 samples, 9.53%)</title><rect x="249.2" y="707.0" width="112.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="252.2" y="718.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (15,635 samples, 9.53%)</title><rect x="249.2" y="691.0" width="112.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.2" y="702.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (382 samples, 0.23%)</title><rect x="249.2" y="675.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="252.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (382 samples, 0.23%)</title><rect x="249.2" y="659.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (382 samples, 0.23%)</title><rect x="249.2" y="643.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="252.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (382 samples, 0.23%)</title><rect x="249.2" y="627.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="252.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/20094719.linkToTargetMethod (175 samples, 0.11%)</title><rect x="249.2" y="611.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/324457684.invoke (175 samples, 0.11%)</title><rect x="249.2" y="595.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (175 samples, 0.11%)</title><rect x="249.2" y="579.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (175 samples, 0.11%)</title><rect x="249.2" y="563.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="252.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (175 samples, 0.11%)</title><rect x="249.2" y="547.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="252.2" y="558.0"></text>
</g>
<g>
<title>byte[] (175 samples, 0.11%)</title><rect x="249.2" y="531.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="252.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (207 samples, 0.13%)</title><rect x="250.5" y="611.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (207 samples, 0.13%)</title><rect x="250.5" y="595.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="253.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (207 samples, 0.13%)</title><rect x="250.5" y="579.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310/1092212478.get$Lambda (207 samples, 0.13%)</title><rect x="250.5" y="563.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="253.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310 (207 samples, 0.13%)</title><rect x="250.5" y="547.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="253.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (15,253 samples, 9.30%)</title><rect x="252.0" y="675.0" width="109.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="255.0" y="686.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (15,253 samples, 9.30%)</title><rect x="252.0" y="659.0" width="109.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.0" y="670.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (15,253 samples, 9.30%)</title><rect x="252.0" y="643.0" width="109.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="255.0" y="654.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (15,253 samples, 9.30%)</title><rect x="252.0" y="627.0" width="109.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.0" y="638.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8,586 samples, 5.24%)</title><rect x="252.0" y="611.0" width="61.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.0" y="622.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,586 samples, 5.24%)</title><rect x="252.0" y="595.0" width="61.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.0" y="606.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8,586 samples, 5.24%)</title><rect x="252.0" y="579.0" width="61.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="255.0" y="590.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8,586 samples, 5.24%)</title><rect x="252.0" y="563.0" width="61.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="255.0" y="574.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8,586 samples, 5.24%)</title><rect x="252.0" y="547.0" width="61.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.0" y="558.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (8,586 samples, 5.24%)</title><rect x="252.0" y="531.0" width="61.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.0" y="542.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8,586 samples, 5.24%)</title><rect x="252.0" y="515.0" width="61.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.0" y="526.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (8,413 samples, 5.13%)</title><rect x="252.0" y="499.0" width="60.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.0" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8,413 samples, 5.13%)</title><rect x="252.0" y="483.0" width="60.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.0" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8,296 samples, 5.06%)</title><rect x="252.0" y="467.0" width="59.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="255.0" y="478.0">java/u..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (143 samples, 0.09%)</title><rect x="252.0" y="451.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="255.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$315/1008916601.apply (111 samples, 0.07%)</title><rect x="253.0" y="451.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (111 samples, 0.07%)</title><rect x="253.0" y="435.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (111 samples, 0.07%)</title><rect x="253.0" y="419.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (111 samples, 0.07%)</title><rect x="253.0" y="403.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="256.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (111 samples, 0.07%)</title><rect x="253.0" y="387.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="256.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1961341944.apply (7,836 samples, 4.78%)</title><rect x="253.8" y="451.0" width="56.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.8" y="462.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (7,836 samples, 4.78%)</title><rect x="253.8" y="435.0" width="56.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.8" y="446.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.06%)</title><rect x="253.8" y="419.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.8" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.06%)</title><rect x="253.8" y="403.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$369/256809203.get$Lambda (92 samples, 0.06%)</title><rect x="253.8" y="387.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.8" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$369 (92 samples, 0.06%)</title><rect x="253.8" y="371.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="256.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (272 samples, 0.17%)</title><rect x="254.4" y="419.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="257.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (272 samples, 0.17%)</title><rect x="254.4" y="403.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.4" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (166 samples, 0.10%)</title><rect x="254.4" y="387.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="257.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.06%)</title><rect x="255.6" y="387.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.06%)</title><rect x="255.6" y="371.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="258.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (106 samples, 0.06%)</title><rect x="255.6" y="355.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="258.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (7,472 samples, 4.56%)</title><rect x="256.4" y="419.0" width="53.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="259.4" y="430.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.04%)</title><rect x="256.4" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="259.4" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.04%)</title><rect x="256.4" y="387.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="259.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$366/707873305.get$Lambda (63 samples, 0.04%)</title><rect x="256.4" y="371.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$366 (63 samples, 0.04%)</title><rect x="256.4" y="355.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="259.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (258 samples, 0.16%)</title><rect x="256.9" y="403.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="259.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (258 samples, 0.16%)</title><rect x="256.9" y="387.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="259.9" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (136 samples, 0.08%)</title><rect x="256.9" y="371.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="259.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (122 samples, 0.07%)</title><rect x="257.8" y="371.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="260.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (122 samples, 0.07%)</title><rect x="257.8" y="355.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="260.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (122 samples, 0.07%)</title><rect x="257.8" y="339.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="260.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (7,151 samples, 4.36%)</title><rect x="258.7" y="403.0" width="51.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.7" y="414.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$394/205305231.apply (2,908 samples, 1.77%)</title><rect x="258.7" y="387.0" width="20.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofString$13 (2,908 samples, 1.77%)</title><rect x="258.7" y="371.0" width="20.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="261.7" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofString (357 samples, 0.22%)</title><rect x="258.7" y="355.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="261.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (56 samples, 0.03%)</title><rect x="258.7" y="339.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="261.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.03%)</title><rect x="258.7" y="323.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.7" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers$$Lambda$415/1378676458.get$Lambda (56 samples, 0.03%)</title><rect x="258.7" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="261.7" y="318.0"></text>
</g>
<g>
<title>java.net.http.HttpResponse$BodySubscribers$$Lambda$415 (56 samples, 0.03%)</title><rect x="258.7" y="291.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="261.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (107 samples, 0.07%)</title><rect x="259.1" y="339.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="262.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (194 samples, 0.12%)</title><rect x="259.9" y="339.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.9" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (78 samples, 0.05%)</title><rect x="259.9" y="323.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="262.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (116 samples, 0.07%)</title><rect x="260.4" y="323.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="263.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.charsetFrom (2,551 samples, 1.56%)</title><rect x="261.3" y="355.0" width="18.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.3" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (185 samples, 0.11%)</title><rect x="261.3" y="339.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (185 samples, 0.11%)</title><rect x="261.3" y="323.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.3" y="334.0"></text>
</g>
<g>
<title>java.lang.String (91 samples, 0.06%)</title><rect x="261.3" y="307.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="264.3" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (94 samples, 0.06%)</title><rect x="261.9" y="307.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="264.9" y="318.0"></text>
</g>
<g>
<title>byte[] (94 samples, 0.06%)</title><rect x="261.9" y="291.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="264.9" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (416 samples, 0.25%)</title><rect x="262.6" y="339.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="265.6" y="350.0"></text>
</g>
<g>
<title>java/util/Collection.stream (339 samples, 0.21%)</title><rect x="262.6" y="323.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.6" y="334.0"></text>
</g>
<g>
<title>java/util/List.spliterator (96 samples, 0.06%)</title><rect x="262.6" y="307.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="265.6" y="318.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (96 samples, 0.06%)</title><rect x="262.6" y="291.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="265.6" y="302.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (243 samples, 0.15%)</title><rect x="263.3" y="307.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="266.3" y="318.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (243 samples, 0.15%)</title><rect x="263.3" y="291.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="266.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (77 samples, 0.05%)</title><rect x="265.0" y="323.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (77 samples, 0.05%)</title><rect x="265.0" y="307.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (77 samples, 0.05%)</title><rect x="265.0" y="291.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$53/1847637306.get (77 samples, 0.05%)</title><rect x="265.0" y="275.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.0" y="286.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (77 samples, 0.05%)</title><rect x="265.0" y="259.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="268.0" y="270.0"></text>
</g>
<g>
<title>sun.net.www.HeaderParser (116 samples, 0.07%)</title><rect x="265.6" y="339.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="268.6" y="350.0"></text>
</g>
<g>
<title>sun/net/www/HeaderParser.&lt;init&gt; (1,834 samples, 1.12%)</title><rect x="266.4" y="339.0" width="13.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.4" y="350.0"></text>
</g>
<g>
<title>java.lang.String[][] (204 samples, 0.12%)</title><rect x="266.4" y="323.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="269.4" y="334.0"></text>
</g>
<g>
<title>java.lang.String[] (876 samples, 0.53%)</title><rect x="267.9" y="323.0" width="6.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="270.9" y="334.0"></text>
</g>
<g>
<title>sun/net/www/HeaderParser.parse (754 samples, 0.46%)</title><rect x="274.2" y="323.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="277.2" y="334.0"></text>
</g>
<g>
<title>java.lang.String (186 samples, 0.11%)</title><rect x="274.2" y="307.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="277.2" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (171 samples, 0.10%)</title><rect x="275.5" y="307.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="278.5" y="318.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (171 samples, 0.10%)</title><rect x="275.5" y="291.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="278.5" y="302.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (171 samples, 0.10%)</title><rect x="275.5" y="275.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="278.5" y="286.0"></text>
</g>
<g>
<title>byte[] (171 samples, 0.10%)</title><rect x="275.5" y="259.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="278.5" y="270.0"></text>
</g>
<g>
<title>java/lang/String.toCharArray (181 samples, 0.11%)</title><rect x="276.8" y="307.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.8" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toChars (181 samples, 0.11%)</title><rect x="276.8" y="291.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="279.8" y="302.0"></text>
</g>
<g>
<title>char[] (181 samples, 0.11%)</title><rect x="276.8" y="275.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="279.8" y="286.0"></text>
</g>
<g>
<title>java/lang/String.trim (216 samples, 0.13%)</title><rect x="278.1" y="307.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.1" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (216 samples, 0.13%)</title><rect x="278.1" y="291.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.1" y="302.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (216 samples, 0.13%)</title><rect x="278.1" y="275.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.1" y="286.0"></text>
</g>
<g>
<title>java.lang.String (91 samples, 0.06%)</title><rect x="278.1" y="259.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="281.1" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (125 samples, 0.08%)</title><rect x="278.7" y="259.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.7" y="270.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.08%)</title><rect x="278.7" y="243.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="281.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (102 samples, 0.06%)</title><rect x="279.6" y="387.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="282.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (4,141 samples, 2.53%)</title><rect x="280.4" y="387.0" width="29.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="283.4" y="398.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (110 samples, 0.07%)</title><rect x="280.4" y="371.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (110 samples, 0.07%)</title><rect x="280.4" y="355.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="283.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$361/609138659.get$Lambda (65 samples, 0.04%)</title><rect x="280.4" y="339.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="283.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$361 (65 samples, 0.04%)</title><rect x="280.4" y="323.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="283.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$363/637561343.get$Lambda (45 samples, 0.03%)</title><rect x="280.8" y="339.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$363 (45 samples, 0.03%)</title><rect x="280.8" y="323.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="283.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2141276233.linkToTargetMethod (135 samples, 0.08%)</title><rect x="281.2" y="371.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2131328504.invokeStatic (135 samples, 0.08%)</title><rect x="281.2" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$349/798535403.get$Lambda (135 samples, 0.08%)</title><rect x="281.2" y="339.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$349 (135 samples, 0.08%)</title><rect x="281.2" y="323.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="284.2" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (869 samples, 0.53%)</title><rect x="282.1" y="371.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="285.1" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (336 samples, 0.20%)</title><rect x="282.1" y="355.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="285.1" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (141 samples, 0.09%)</title><rect x="282.1" y="339.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.1" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (141 samples, 0.09%)</title><rect x="282.1" y="323.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="285.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (195 samples, 0.12%)</title><rect x="283.1" y="339.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="286.1" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (193 samples, 0.12%)</title><rect x="283.1" y="323.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="286.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (283 samples, 0.17%)</title><rect x="284.5" y="355.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="287.5" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (283 samples, 0.17%)</title><rect x="284.5" y="339.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="287.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (283 samples, 0.17%)</title><rect x="284.5" y="323.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="287.5" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (90 samples, 0.05%)</title><rect x="284.5" y="307.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.5" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (90 samples, 0.05%)</title><rect x="284.5" y="291.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="287.5" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (90 samples, 0.05%)</title><rect x="284.5" y="275.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.5" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (90 samples, 0.05%)</title><rect x="284.5" y="259.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="287.5" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$345/400287746.get (112 samples, 0.07%)</title><rect x="285.2" y="307.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.2" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (112 samples, 0.07%)</title><rect x="285.2" y="291.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="288.2" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (81 samples, 0.05%)</title><rect x="286.0" y="307.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (81 samples, 0.05%)</title><rect x="286.0" y="291.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="289.0" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (81 samples, 0.05%)</title><rect x="286.0" y="275.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.0" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (81 samples, 0.05%)</title><rect x="286.0" y="259.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="289.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (250 samples, 0.15%)</title><rect x="286.6" y="355.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.6" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (248 samples, 0.15%)</title><rect x="286.6" y="339.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="289.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (498 samples, 0.30%)</title><rect x="288.4" y="371.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (269 samples, 0.16%)</title><rect x="288.4" y="355.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="291.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (151 samples, 0.09%)</title><rect x="288.4" y="339.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="291.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (118 samples, 0.07%)</title><rect x="289.5" y="339.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="292.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (118 samples, 0.07%)</title><rect x="289.5" y="323.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="292.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (118 samples, 0.07%)</title><rect x="289.5" y="307.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="292.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (229 samples, 0.14%)</title><rect x="290.3" y="355.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="293.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (229 samples, 0.14%)</title><rect x="290.3" y="339.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="293.3" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (123 samples, 0.08%)</title><rect x="290.3" y="323.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="293.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.06%)</title><rect x="291.2" y="323.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="294.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (106 samples, 0.06%)</title><rect x="291.2" y="307.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="294.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (106 samples, 0.06%)</title><rect x="291.2" y="291.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="294.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (75 samples, 0.05%)</title><rect x="292.0" y="371.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="295.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (103 samples, 0.06%)</title><rect x="292.5" y="371.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="295.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (115 samples, 0.07%)</title><rect x="293.2" y="371.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="296.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (55 samples, 0.03%)</title><rect x="294.1" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="297.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (55 samples, 0.03%)</title><rect x="294.1" y="355.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="297.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,181 samples, 1.33%)</title><rect x="294.5" y="371.0" width="15.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$349/798535403.run (2,181 samples, 1.33%)</title><rect x="294.5" y="355.0" width="15.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (2,181 samples, 1.33%)</title><rect x="294.5" y="339.0" width="15.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.5" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (285 samples, 0.17%)</title><rect x="294.5" y="323.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="297.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (285 samples, 0.17%)</title><rect x="294.5" y="307.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$351/569771841.get$Lambda (61 samples, 0.04%)</title><rect x="294.5" y="291.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$351 (61 samples, 0.04%)</title><rect x="294.5" y="275.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="297.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$352/1607757290.get$Lambda (91 samples, 0.06%)</title><rect x="294.9" y="291.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.9" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$352 (91 samples, 0.06%)</title><rect x="294.9" y="275.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="297.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$356/1122728445.get$Lambda (133 samples, 0.08%)</title><rect x="295.6" y="291.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$356 (133 samples, 0.08%)</title><rect x="295.6" y="275.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="298.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (296 samples, 0.18%)</title><rect x="296.5" y="323.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (296 samples, 0.18%)</title><rect x="296.5" y="307.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="299.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (163 samples, 0.10%)</title><rect x="296.5" y="291.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="299.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (133 samples, 0.08%)</title><rect x="297.7" y="291.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="300.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (133 samples, 0.08%)</title><rect x="297.7" y="275.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (133 samples, 0.08%)</title><rect x="297.7" y="259.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="300.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (135 samples, 0.08%)</title><rect x="298.6" y="323.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="301.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (114 samples, 0.07%)</title><rect x="299.6" y="323.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (114 samples, 0.07%)</title><rect x="299.6" y="307.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="302.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (367 samples, 0.22%)</title><rect x="300.4" y="323.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (367 samples, 0.22%)</title><rect x="300.4" y="307.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="303.4" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (107 samples, 0.07%)</title><rect x="300.4" y="291.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="303.4" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (107 samples, 0.07%)</title><rect x="300.4" y="275.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="303.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$357/1715244547.get$Lambda (107 samples, 0.07%)</title><rect x="300.4" y="259.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$357 (107 samples, 0.07%)</title><rect x="300.4" y="243.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="303.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (260 samples, 0.16%)</title><rect x="301.2" y="291.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (260 samples, 0.16%)</title><rect x="301.2" y="275.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (260 samples, 0.16%)</title><rect x="301.2" y="259.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (157 samples, 0.10%)</title><rect x="301.2" y="243.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="304.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (103 samples, 0.06%)</title><rect x="302.3" y="243.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="305.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (103 samples, 0.06%)</title><rect x="302.3" y="227.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="305.3" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (103 samples, 0.06%)</title><rect x="302.3" y="211.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="305.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (331 samples, 0.20%)</title><rect x="303.1" y="323.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (331 samples, 0.20%)</title><rect x="303.1" y="307.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1327536153.invoke (331 samples, 0.20%)</title><rect x="303.1" y="291.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (331 samples, 0.20%)</title><rect x="303.1" y="275.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (79 samples, 0.05%)</title><rect x="303.1" y="259.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="306.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String (79 samples, 0.05%)</title><rect x="303.1" y="243.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="306.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (252 samples, 0.15%)</title><rect x="303.6" y="259.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (252 samples, 0.15%)</title><rect x="303.6" y="243.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.6" y="254.0"></text>
</g>
<g>
<title>byte[] (251 samples, 0.15%)</title><rect x="303.6" y="227.0" width="1.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="306.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (653 samples, 0.40%)</title><rect x="305.5" y="323.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (221 samples, 0.13%)</title><rect x="305.5" y="307.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="308.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (432 samples, 0.26%)</title><rect x="307.1" y="307.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="310.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (432 samples, 0.26%)</title><rect x="307.1" y="291.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1327536153.invoke (432 samples, 0.26%)</title><rect x="307.1" y="275.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="310.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (432 samples, 0.26%)</title><rect x="307.1" y="259.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.1" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (115 samples, 0.07%)</title><rect x="307.1" y="243.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.1" y="254.0"></text>
</g>
<g>
<title>java.lang.String (115 samples, 0.07%)</title><rect x="307.1" y="227.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="310.1" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (317 samples, 0.19%)</title><rect x="307.9" y="243.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="310.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (317 samples, 0.19%)</title><rect x="307.9" y="227.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="310.9" y="238.0"></text>
</g>
<g>
<title>byte[] (307 samples, 0.19%)</title><rect x="307.9" y="211.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="310.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$289/1016523658.apply (206 samples, 0.13%)</title><rect x="310.2" y="451.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (206 samples, 0.13%)</title><rect x="310.2" y="435.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="313.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (111 samples, 0.07%)</title><rect x="310.2" y="419.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="313.2" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (111 samples, 0.07%)</title><rect x="310.2" y="403.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="313.2" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (111 samples, 0.07%)</title><rect x="310.2" y="387.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.2" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (111 samples, 0.07%)</title><rect x="310.2" y="371.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="313.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (95 samples, 0.06%)</title><rect x="311.0" y="419.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="314.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (95 samples, 0.06%)</title><rect x="311.0" y="403.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="314.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (117 samples, 0.07%)</title><rect x="311.6" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="314.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (117 samples, 0.07%)</title><rect x="311.6" y="451.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="314.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$290/877098177.apply (117 samples, 0.07%)</title><rect x="311.6" y="435.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="314.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (117 samples, 0.07%)</title><rect x="311.6" y="419.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (117 samples, 0.07%)</title><rect x="311.6" y="403.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="314.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (117 samples, 0.07%)</title><rect x="311.6" y="387.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="314.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$324/669883057.apply (173 samples, 0.11%)</title><rect x="312.5" y="499.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="315.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (173 samples, 0.11%)</title><rect x="312.5" y="483.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="315.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (173 samples, 0.11%)</title><rect x="312.5" y="467.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="315.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (6,667 samples, 4.07%)</title><rect x="313.7" y="611.0" width="48.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="316.7" y="622.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (413 samples, 0.25%)</title><rect x="313.7" y="595.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (413 samples, 0.25%)</title><rect x="313.7" y="579.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="316.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (413 samples, 0.25%)</title><rect x="313.7" y="563.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.7" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (413 samples, 0.25%)</title><rect x="313.7" y="547.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (413 samples, 0.25%)</title><rect x="313.7" y="531.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.7" y="542.0"></text>
</g>
<g>
<title>byte[] (410 samples, 0.25%)</title><rect x="313.7" y="515.0" width="3.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="316.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (252 samples, 0.15%)</title><rect x="316.7" y="595.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (252 samples, 0.15%)</title><rect x="316.7" y="579.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="319.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (252 samples, 0.15%)</title><rect x="316.7" y="563.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="319.7" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (252 samples, 0.15%)</title><rect x="316.7" y="547.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="319.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (252 samples, 0.15%)</title><rect x="316.7" y="531.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="319.7" y="542.0"></text>
</g>
<g>
<title>byte[] (252 samples, 0.15%)</title><rect x="316.7" y="515.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="319.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (541 samples, 0.33%)</title><rect x="318.5" y="595.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.5" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (103 samples, 0.06%)</title><rect x="318.5" y="579.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="321.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (94 samples, 0.06%)</title><rect x="319.3" y="579.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="322.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (94 samples, 0.06%)</title><rect x="319.3" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="322.3" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (94 samples, 0.06%)</title><rect x="319.3" y="547.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.3" y="558.0"></text>
</g>
<g>
<title>byte[] (94 samples, 0.06%)</title><rect x="319.3" y="531.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="322.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (115 samples, 0.07%)</title><rect x="319.9" y="579.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="322.9" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (115 samples, 0.07%)</title><rect x="319.9" y="563.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="322.9" y="574.0"></text>
</g>
<g>
<title>byte[] (115 samples, 0.07%)</title><rect x="319.9" y="547.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="322.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (229 samples, 0.14%)</title><rect x="320.8" y="579.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="323.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (229 samples, 0.14%)</title><rect x="320.8" y="563.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="323.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (72 samples, 0.04%)</title><rect x="320.8" y="547.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="323.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (157 samples, 0.10%)</title><rect x="321.3" y="547.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="324.3" y="558.0"></text>
</g>
<g>
<title>byte[] (157 samples, 0.10%)</title><rect x="321.3" y="531.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="324.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1,876 samples, 1.14%)</title><rect x="322.4" y="595.0" width="13.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="325.4" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,876 samples, 1.14%)</title><rect x="322.4" y="579.0" width="13.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.4" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,876 samples, 1.14%)</title><rect x="322.4" y="563.0" width="13.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.4" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (56 samples, 0.03%)</title><rect x="322.4" y="547.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="325.4" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (112 samples, 0.07%)</title><rect x="322.8" y="547.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="325.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (208 samples, 0.13%)</title><rect x="323.6" y="547.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="326.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (51 samples, 0.03%)</title><rect x="325.1" y="547.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="328.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (126 samples, 0.08%)</title><rect x="325.5" y="547.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="328.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (126 samples, 0.08%)</title><rect x="325.5" y="531.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="328.5" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.get$Lambda (126 samples, 0.08%)</title><rect x="325.5" y="515.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="328.5" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$134 (126 samples, 0.08%)</title><rect x="325.5" y="499.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="328.5" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (119 samples, 0.07%)</title><rect x="326.4" y="547.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.4" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (119 samples, 0.07%)</title><rect x="326.4" y="531.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="329.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (1,053 samples, 0.64%)</title><rect x="327.2" y="547.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.2" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (1,053 samples, 0.64%)</title><rect x="327.2" y="531.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.2" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,053 samples, 0.64%)</title><rect x="327.2" y="515.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="330.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (199 samples, 0.12%)</title><rect x="327.2" y="499.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (199 samples, 0.12%)</title><rect x="327.2" y="483.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.get$Lambda (199 samples, 0.12%)</title><rect x="327.2" y="467.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.2" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$136 (199 samples, 0.12%)</title><rect x="327.2" y="451.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="330.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (208 samples, 0.13%)</title><rect x="328.7" y="499.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (208 samples, 0.13%)</title><rect x="328.7" y="483.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (208 samples, 0.13%)</title><rect x="328.7" y="467.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (208 samples, 0.13%)</title><rect x="328.7" y="451.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (208 samples, 0.13%)</title><rect x="328.7" y="435.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (208 samples, 0.13%)</title><rect x="328.7" y="419.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="331.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (208 samples, 0.13%)</title><rect x="328.7" y="403.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (208 samples, 0.13%)</title><rect x="328.7" y="387.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (207 samples, 0.13%)</title><rect x="328.7" y="371.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="331.7" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (357 samples, 0.22%)</title><rect x="330.2" y="499.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.2" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (357 samples, 0.22%)</title><rect x="330.2" y="483.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (178 samples, 0.11%)</title><rect x="330.2" y="467.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (178 samples, 0.11%)</title><rect x="330.2" y="451.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.2" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (178 samples, 0.11%)</title><rect x="330.2" y="435.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="333.2" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (179 samples, 0.11%)</title><rect x="331.5" y="467.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="334.5" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (179 samples, 0.11%)</title><rect x="331.5" y="451.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="334.5" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (289 samples, 0.18%)</title><rect x="332.7" y="499.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.7" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (289 samples, 0.18%)</title><rect x="332.7" y="483.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="335.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (151 samples, 0.09%)</title><rect x="334.8" y="547.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.8" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (151 samples, 0.09%)</title><rect x="334.8" y="531.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="337.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (3,585 samples, 2.19%)</title><rect x="335.9" y="595.0" width="25.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.9" y="606.0">j..</text>
</g>
<g>
<title>java.lang.StringBuilder (166 samples, 0.10%)</title><rect x="335.9" y="579.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="338.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (249 samples, 0.15%)</title><rect x="337.1" y="579.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.1" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (249 samples, 0.15%)</title><rect x="337.1" y="563.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.1" y="574.0"></text>
</g>
<g>
<title>byte[] (249 samples, 0.15%)</title><rect x="337.1" y="547.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="340.1" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (469 samples, 0.29%)</title><rect x="338.9" y="579.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="341.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (469 samples, 0.29%)</title><rect x="338.9" y="563.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="341.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String (173 samples, 0.11%)</title><rect x="338.9" y="547.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="341.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (296 samples, 0.18%)</title><rect x="340.1" y="547.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="343.1" y="558.0"></text>
</g>
<g>
<title>byte[] (296 samples, 0.18%)</title><rect x="340.1" y="531.0" width="2.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="343.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (2,701 samples, 1.65%)</title><rect x="342.3" y="579.0" width="19.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (794 samples, 0.48%)</title><rect x="342.3" y="563.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="345.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (794 samples, 0.48%)</title><rect x="342.3" y="547.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="345.3" y="558.0"></text>
</g>
<g>
<title>java.lang.String (366 samples, 0.22%)</title><rect x="342.3" y="531.0" width="2.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="345.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (428 samples, 0.26%)</title><rect x="344.9" y="531.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.9" y="542.0"></text>
</g>
<g>
<title>byte[] (428 samples, 0.26%)</title><rect x="344.9" y="515.0" width="3.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="347.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (387 samples, 0.24%)</title><rect x="348.0" y="563.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (387 samples, 0.24%)</title><rect x="348.0" y="547.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="351.0" y="558.0"></text>
</g>
<g>
<title>byte[] (196 samples, 0.12%)</title><rect x="348.0" y="531.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="351.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (191 samples, 0.12%)</title><rect x="349.4" y="531.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="352.4" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (373 samples, 0.23%)</title><rect x="350.8" y="563.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (373 samples, 0.23%)</title><rect x="350.8" y="547.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="353.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (373 samples, 0.23%)</title><rect x="350.8" y="531.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="353.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (164 samples, 0.10%)</title><rect x="350.8" y="515.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="353.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (209 samples, 0.13%)</title><rect x="351.9" y="515.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="354.9" y="526.0"></text>
</g>
<g>
<title>byte[] (209 samples, 0.13%)</title><rect x="351.9" y="499.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="354.9" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (422 samples, 0.26%)</title><rect x="353.4" y="563.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="356.4" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (422 samples, 0.26%)</title><rect x="353.4" y="547.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="356.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (422 samples, 0.26%)</title><rect x="353.4" y="531.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (422 samples, 0.26%)</title><rect x="353.4" y="515.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (422 samples, 0.26%)</title><rect x="353.4" y="499.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="356.4" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (420 samples, 0.26%)</title><rect x="353.4" y="483.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="356.4" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (725 samples, 0.44%)</title><rect x="356.5" y="563.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="359.5" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (251 samples, 0.15%)</title><rect x="356.5" y="547.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.5" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (251 samples, 0.15%)</title><rect x="356.5" y="531.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="359.5" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (305 samples, 0.19%)</title><rect x="358.3" y="547.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="361.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (301 samples, 0.18%)</title><rect x="358.3" y="531.0" width="2.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="361.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$337/1009992811.apply (169 samples, 0.10%)</title><rect x="360.5" y="547.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="363.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (169 samples, 0.10%)</title><rect x="360.5" y="531.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="363.5" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (169 samples, 0.10%)</title><rect x="360.5" y="515.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="363.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2,544 samples, 1.55%)</title><rect x="361.7" y="723.0" width="18.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="364.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,544 samples, 1.55%)</title><rect x="361.7" y="707.0" width="18.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="364.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,544 samples, 1.55%)</title><rect x="361.7" y="691.0" width="18.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="364.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$236/621309814.run (2,544 samples, 1.55%)</title><rect x="361.7" y="675.0" width="18.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="364.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,544 samples, 1.55%)</title><rect x="361.7" y="659.0" width="18.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2,543 samples, 1.55%)</title><rect x="361.7" y="643.0" width="18.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (134 samples, 0.08%)</title><rect x="361.7" y="627.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="364.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (134 samples, 0.08%)</title><rect x="361.7" y="611.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="364.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$261/1453282749.get$Lambda (55 samples, 0.03%)</title><rect x="361.7" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="364.7" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$261 (55 samples, 0.03%)</title><rect x="361.7" y="579.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="364.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$265/904072682.get$Lambda (79 samples, 0.05%)</title><rect x="362.1" y="595.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$265 (79 samples, 0.05%)</title><rect x="362.1" y="579.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="365.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (134 samples, 0.08%)</title><rect x="362.7" y="627.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="365.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (158 samples, 0.10%)</title><rect x="363.6" y="627.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="366.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (158 samples, 0.10%)</title><rect x="363.6" y="611.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="366.6" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (73 samples, 0.04%)</title><rect x="363.6" y="595.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="366.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (85 samples, 0.05%)</title><rect x="364.2" y="595.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (85 samples, 0.05%)</title><rect x="364.2" y="579.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="367.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (2,117 samples, 1.29%)</title><rect x="364.8" y="627.0" width="15.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="367.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (2,117 samples, 1.29%)</title><rect x="364.8" y="611.0" width="15.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="367.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$351/569771841.run (1,679 samples, 1.02%)</title><rect x="364.8" y="595.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="367.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1,679 samples, 1.02%)</title><rect x="364.8" y="579.0" width="12.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1,679 samples, 1.02%)</title><rect x="364.8" y="563.0" width="12.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="367.8" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (514 samples, 0.31%)</title><rect x="364.8" y="547.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="367.8" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (343 samples, 0.21%)</title><rect x="364.8" y="531.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.8" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (128 samples, 0.08%)</title><rect x="364.8" y="515.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="367.8" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (128 samples, 0.08%)</title><rect x="364.8" y="499.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="367.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (215 samples, 0.13%)</title><rect x="365.7" y="515.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.7" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (215 samples, 0.13%)</title><rect x="365.7" y="499.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="368.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (171 samples, 0.10%)</title><rect x="367.2" y="531.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="370.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (171 samples, 0.10%)</title><rect x="367.2" y="515.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="370.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (171 samples, 0.10%)</title><rect x="367.2" y="499.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="370.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$53/1847637306.get (92 samples, 0.06%)</title><rect x="367.2" y="483.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.2" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (92 samples, 0.06%)</title><rect x="367.2" y="467.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="370.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (79 samples, 0.05%)</title><rect x="367.9" y="483.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (79 samples, 0.05%)</title><rect x="367.9" y="467.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.9" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (79 samples, 0.05%)</title><rect x="367.9" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.9" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (79 samples, 0.05%)</title><rect x="367.9" y="435.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="370.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,165 samples, 0.71%)</title><rect x="368.5" y="547.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="371.5" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (92 samples, 0.06%)</title><rect x="368.5" y="531.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="371.5" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (92 samples, 0.06%)</title><rect x="368.5" y="515.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (92 samples, 0.06%)</title><rect x="368.5" y="499.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="371.5" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (92 samples, 0.06%)</title><rect x="368.5" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="371.5" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (92 samples, 0.06%)</title><rect x="368.5" y="467.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="371.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1,073 samples, 0.65%)</title><rect x="369.1" y="531.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (497 samples, 0.30%)</title><rect x="369.1" y="515.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="372.1" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (100 samples, 0.06%)</title><rect x="369.1" y="499.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="372.1" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (100 samples, 0.06%)</title><rect x="369.1" y="483.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="372.1" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (100 samples, 0.06%)</title><rect x="369.1" y="467.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.1" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (100 samples, 0.06%)</title><rect x="369.1" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="372.1" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (100 samples, 0.06%)</title><rect x="369.1" y="435.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.1" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (100 samples, 0.06%)</title><rect x="369.1" y="419.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="372.1" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (106 samples, 0.06%)</title><rect x="369.8" y="499.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="372.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (106 samples, 0.06%)</title><rect x="369.8" y="483.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="372.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (106 samples, 0.06%)</title><rect x="369.8" y="467.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="372.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (106 samples, 0.06%)</title><rect x="369.8" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="372.8" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (106 samples, 0.06%)</title><rect x="369.8" y="435.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.8" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (106 samples, 0.06%)</title><rect x="369.8" y="419.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="372.8" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (130 samples, 0.08%)</title><rect x="370.6" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="373.6" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (130 samples, 0.08%)</title><rect x="370.6" y="483.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="373.6" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (130 samples, 0.08%)</title><rect x="370.6" y="467.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="373.6" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (84 samples, 0.05%)</title><rect x="371.5" y="499.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.5" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (84 samples, 0.05%)</title><rect x="371.5" y="483.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="374.5" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (84 samples, 0.05%)</title><rect x="371.5" y="467.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="374.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (77 samples, 0.05%)</title><rect x="372.1" y="499.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="375.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (187 samples, 0.11%)</title><rect x="372.7" y="515.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="375.7" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (88 samples, 0.05%)</title><rect x="372.7" y="499.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (88 samples, 0.05%)</title><rect x="372.7" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="375.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (88 samples, 0.05%)</title><rect x="372.7" y="467.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="375.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (88 samples, 0.05%)</title><rect x="372.7" y="451.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="375.7" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (99 samples, 0.06%)</title><rect x="373.3" y="499.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="376.3" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (99 samples, 0.06%)</title><rect x="373.3" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="376.3" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (99 samples, 0.06%)</title><rect x="373.3" y="467.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="376.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (389 samples, 0.24%)</title><rect x="374.0" y="515.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="377.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (69 samples, 0.04%)</title><rect x="374.0" y="499.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="377.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (320 samples, 0.20%)</title><rect x="374.5" y="499.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="377.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (89 samples, 0.05%)</title><rect x="374.5" y="483.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="377.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (89 samples, 0.05%)</title><rect x="374.5" y="467.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (89 samples, 0.05%)</title><rect x="374.5" y="451.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (89 samples, 0.05%)</title><rect x="374.5" y="435.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="377.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (231 samples, 0.14%)</title><rect x="375.2" y="483.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="378.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (231 samples, 0.14%)</title><rect x="375.2" y="467.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="378.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (168 samples, 0.10%)</title><rect x="375.2" y="451.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="378.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (63 samples, 0.04%)</title><rect x="376.4" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (63 samples, 0.04%)</title><rect x="376.4" y="435.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="379.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (438 samples, 0.27%)</title><rect x="376.8" y="595.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="379.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (438 samples, 0.27%)</title><rect x="376.8" y="579.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="379.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (438 samples, 0.27%)</title><rect x="376.8" y="563.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.8" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers$$Lambda$415/1378676458.apply (148 samples, 0.09%)</title><rect x="376.8" y="547.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="379.8" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.lambda$ofString$2 (148 samples, 0.09%)</title><rect x="376.8" y="531.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="379.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (89 samples, 0.05%)</title><rect x="376.8" y="515.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="379.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (59 samples, 0.04%)</title><rect x="377.5" y="515.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="380.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (59 samples, 0.04%)</title><rect x="377.5" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="380.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (59 samples, 0.04%)</title><rect x="377.5" y="483.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (59 samples, 0.04%)</title><rect x="377.5" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="380.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.04%)</title><rect x="377.5" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.5" y="462.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.04%)</title><rect x="377.5" y="435.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="380.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (223 samples, 0.14%)</title><rect x="377.9" y="547.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (223 samples, 0.14%)</title><rect x="377.9" y="531.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="380.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (223 samples, 0.14%)</title><rect x="377.9" y="515.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (223 samples, 0.14%)</title><rect x="377.9" y="499.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$361/609138659.accept (223 samples, 0.14%)</title><rect x="377.9" y="483.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (223 samples, 0.14%)</title><rect x="377.9" y="467.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="380.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (223 samples, 0.14%)</title><rect x="377.9" y="451.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (223 samples, 0.14%)</title><rect x="377.9" y="435.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (223 samples, 0.14%)</title><rect x="377.9" y="419.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$369/256809203.apply (223 samples, 0.14%)</title><rect x="377.9" y="403.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (223 samples, 0.14%)</title><rect x="377.9" y="387.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="380.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (216 samples, 0.13%)</title><rect x="377.9" y="371.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="380.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (67 samples, 0.04%)</title><rect x="379.5" y="547.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.5" y="558.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.04%)</title><rect x="379.5" y="531.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="382.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$113/1746272309.run (41,795 samples, 25.48%)</title><rect x="380.0" y="755.0" width="300.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="383.0" y="766.0">ru/mail/polis/service/httprest/HttpRestD..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$asyncExecute$4 (41,795 samples, 25.48%)</title><rect x="380.0" y="739.0" width="300.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="383.0" y="750.0">ru/mail/polis/service/httprest/HttpRestD..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$391/1150276494.submit (33,187 samples, 20.24%)</title><rect x="380.0" y="723.0" width="238.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="383.0" y="734.0">ru/mail/polis/service/httprest/H..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$entity$1 (33,187 samples, 20.24%)</title><rect x="380.0" y="707.0" width="238.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.0" y="718.0">ru/mail/polis/service/httprest/H..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpController.upset (33,187 samples, 20.24%)</title><rect x="380.0" y="691.0" width="238.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="383.0" y="702.0">ru/mail/polis/service/httprest/H..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (42 samples, 0.03%)</title><rect x="380.0" y="675.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="383.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2,394 samples, 1.46%)</title><rect x="380.3" y="675.0" width="17.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="383.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2,394 samples, 1.46%)</title><rect x="380.3" y="659.0" width="17.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="383.3" y="670.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2,394 samples, 1.46%)</title><rect x="380.3" y="643.0" width="17.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.3" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2,394 samples, 1.46%)</title><rect x="380.3" y="627.0" width="17.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="383.3" y="638.0"></text>
</g>
<g>
<title>byte[] (2,394 samples, 1.46%)</title><rect x="380.3" y="611.0" width="17.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="383.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (426 samples, 0.26%)</title><rect x="397.5" y="675.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="400.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (426 samples, 0.26%)</title><rect x="397.5" y="659.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="400.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/197892659.invoke (426 samples, 0.26%)</title><rect x="397.5" y="643.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (426 samples, 0.26%)</title><rect x="397.5" y="627.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.5" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (135 samples, 0.08%)</title><rect x="397.5" y="611.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.5" y="622.0"></text>
</g>
<g>
<title>java.lang.String (135 samples, 0.08%)</title><rect x="397.5" y="595.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="400.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (291 samples, 0.18%)</title><rect x="398.5" y="611.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="401.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (291 samples, 0.18%)</title><rect x="398.5" y="595.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="401.5" y="606.0"></text>
</g>
<g>
<title>byte[] (291 samples, 0.18%)</title><rect x="398.5" y="579.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="401.5" y="590.0"></text>
</g>
<g>
<title>java/net/URI.create (2,032 samples, 1.24%)</title><rect x="400.6" y="675.0" width="14.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.6" y="686.0"></text>
</g>
<g>
<title>java.net.URI (408 samples, 0.25%)</title><rect x="400.6" y="659.0" width="2.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="403.6" y="670.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1,624 samples, 0.99%)</title><rect x="403.5" y="659.0" width="11.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="406.5" y="670.0"></text>
</g>
<g>
<title>java.net.URI$Parser (176 samples, 0.11%)</title><rect x="403.5" y="643.0" width="1.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="406.5" y="654.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1,448 samples, 0.88%)</title><rect x="404.8" y="643.0" width="10.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (259 samples, 0.16%)</title><rect x="404.8" y="627.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="407.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (259 samples, 0.16%)</title><rect x="404.8" y="611.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="407.8" y="622.0"></text>
</g>
<g>
<title>java.lang.String (124 samples, 0.08%)</title><rect x="404.8" y="595.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="407.8" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (135 samples, 0.08%)</title><rect x="405.7" y="595.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="408.7" y="606.0"></text>
</g>
<g>
<title>byte[] (135 samples, 0.08%)</title><rect x="405.7" y="579.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="408.7" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (1,189 samples, 0.73%)</title><rect x="406.7" y="627.0" width="8.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="409.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (548 samples, 0.33%)</title><rect x="406.7" y="611.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.7" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (548 samples, 0.33%)</title><rect x="406.7" y="595.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="409.7" y="606.0"></text>
</g>
<g>
<title>java.lang.String (245 samples, 0.15%)</title><rect x="406.7" y="579.0" width="1.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="409.7" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (303 samples, 0.18%)</title><rect x="408.4" y="579.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.4" y="590.0"></text>
</g>
<g>
<title>byte[] (303 samples, 0.18%)</title><rect x="408.4" y="563.0" width="2.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="411.4" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (641 samples, 0.39%)</title><rect x="410.6" y="611.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="413.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (329 samples, 0.20%)</title><rect x="410.6" y="595.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="413.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (329 samples, 0.20%)</title><rect x="410.6" y="579.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="413.6" y="590.0"></text>
</g>
<g>
<title>java.lang.String (136 samples, 0.08%)</title><rect x="410.6" y="563.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="413.6" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (193 samples, 0.12%)</title><rect x="411.6" y="563.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.6" y="574.0"></text>
</g>
<g>
<title>byte[] (193 samples, 0.12%)</title><rect x="411.6" y="547.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="414.6" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (312 samples, 0.19%)</title><rect x="413.0" y="595.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="416.0" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (312 samples, 0.19%)</title><rect x="413.0" y="579.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="416.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (312 samples, 0.19%)</title><rect x="413.0" y="563.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="416.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (312 samples, 0.19%)</title><rect x="413.0" y="547.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="416.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (154 samples, 0.09%)</title><rect x="413.0" y="531.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="416.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (158 samples, 0.10%)</title><rect x="414.1" y="531.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.1" y="542.0"></text>
</g>
<g>
<title>byte[] (158 samples, 0.10%)</title><rect x="414.1" y="515.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="417.1" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (196 samples, 0.12%)</title><rect x="415.2" y="675.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.2" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (196 samples, 0.12%)</title><rect x="415.2" y="659.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="418.2" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (620 samples, 0.38%)</title><rect x="416.6" y="675.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="419.6" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (274 samples, 0.17%)</title><rect x="416.6" y="659.0" width="2.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="419.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (346 samples, 0.21%)</title><rect x="418.6" y="659.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="421.6" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (83 samples, 0.05%)</title><rect x="418.6" y="643.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="421.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (263 samples, 0.16%)</title><rect x="419.2" y="643.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.2" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap (263 samples, 0.16%)</title><rect x="419.2" y="627.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="422.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,515 samples, 0.92%)</title><rect x="421.1" y="675.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,515 samples, 0.92%)</title><rect x="421.1" y="659.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.1" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,515 samples, 0.92%)</title><rect x="421.1" y="643.0" width="10.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="424.1" y="654.0"></text>
</g>
<g>
<title>java/time/Duration.ofMillis (143 samples, 0.09%)</title><rect x="432.0" y="675.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="435.0" y="686.0"></text>
</g>
<g>
<title>java/time/Duration.create (143 samples, 0.09%)</title><rect x="432.0" y="659.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.0" y="670.0"></text>
</g>
<g>
<title>java.time.Duration (143 samples, 0.09%)</title><rect x="432.0" y="643.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="435.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (291 samples, 0.18%)</title><rect x="433.0" y="675.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="436.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (291 samples, 0.18%)</title><rect x="433.0" y="659.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="436.0" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$Signaller (291 samples, 0.18%)</title><rect x="433.0" y="643.0" width="2.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="436.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (410 samples, 0.25%)</title><rect x="435.1" y="675.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="438.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (410 samples, 0.25%)</title><rect x="435.1" y="659.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="438.1" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (219 samples, 0.13%)</title><rect x="435.1" y="643.0" width="1.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="438.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (191 samples, 0.12%)</title><rect x="436.7" y="643.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="439.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (191 samples, 0.12%)</title><rect x="436.7" y="627.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.7" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (191 samples, 0.12%)</title><rect x="436.7" y="611.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="439.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (11,307 samples, 6.89%)</title><rect x="438.1" y="675.0" width="81.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="441.1" y="686.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (11,307 samples, 6.89%)</title><rect x="438.1" y="659.0" width="81.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.1" y="670.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (11,307 samples, 6.89%)</title><rect x="438.1" y="643.0" width="81.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.1" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (11,307 samples, 6.89%)</title><rect x="438.1" y="627.0" width="81.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="441.1" y="638.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (91 samples, 0.06%)</title><rect x="438.1" y="611.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="441.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (91 samples, 0.06%)</title><rect x="438.1" y="595.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="441.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$162/1256959182.get$Lambda (91 samples, 0.06%)</title><rect x="438.1" y="579.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="441.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$162 (91 samples, 0.06%)</title><rect x="438.1" y="563.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="441.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (363 samples, 0.22%)</title><rect x="438.7" y="611.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="441.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (363 samples, 0.22%)</title><rect x="438.7" y="595.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.7" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (202 samples, 0.12%)</title><rect x="438.7" y="579.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="441.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (161 samples, 0.10%)</title><rect x="440.2" y="579.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="443.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (161 samples, 0.10%)</title><rect x="440.2" y="563.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="443.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (161 samples, 0.10%)</title><rect x="440.2" y="547.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="443.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (334 samples, 0.20%)</title><rect x="441.3" y="611.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="444.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (334 samples, 0.20%)</title><rect x="441.3" y="595.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="444.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (156 samples, 0.10%)</title><rect x="441.3" y="579.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="444.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (178 samples, 0.11%)</title><rect x="442.5" y="579.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (178 samples, 0.11%)</title><rect x="442.5" y="563.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (178 samples, 0.11%)</title><rect x="442.5" y="547.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="445.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (328 samples, 0.20%)</title><rect x="443.7" y="611.0" width="2.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="446.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (525 samples, 0.32%)</title><rect x="446.1" y="611.0" width="3.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="449.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (5,678 samples, 3.46%)</title><rect x="450.0" y="611.0" width="40.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.0" y="622.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (552 samples, 0.34%)</title><rect x="450.0" y="595.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.0" y="606.0"></text>
</g>
<g>
<title>java/util/Collection.stream (433 samples, 0.26%)</title><rect x="450.0" y="579.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.0" y="590.0"></text>
</g>
<g>
<title>java/util/List.spliterator (157 samples, 0.10%)</title><rect x="450.0" y="563.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.0" y="574.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (157 samples, 0.10%)</title><rect x="450.0" y="547.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="453.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (276 samples, 0.17%)</title><rect x="451.2" y="563.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.2" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (276 samples, 0.17%)</title><rect x="451.2" y="547.0" width="1.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="454.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (119 samples, 0.07%)</title><rect x="453.1" y="579.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="456.1" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (119 samples, 0.07%)</title><rect x="453.1" y="563.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.1" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (119 samples, 0.07%)</title><rect x="453.1" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.1" y="558.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$53/1847637306.get (119 samples, 0.07%)</title><rect x="453.1" y="531.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="456.1" y="542.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (119 samples, 0.07%)</title><rect x="453.1" y="515.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="456.1" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2,289 samples, 1.40%)</title><rect x="454.0" y="595.0" width="16.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="457.0" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2,289 samples, 1.40%)</title><rect x="454.0" y="579.0" width="16.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.0" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (82 samples, 0.05%)</title><rect x="454.0" y="563.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="457.0" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (130 samples, 0.08%)</title><rect x="454.6" y="563.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="457.6" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (243 samples, 0.15%)</title><rect x="455.5" y="563.0" width="1.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="458.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeSet (80 samples, 0.05%)</title><rect x="457.3" y="563.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="460.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (171 samples, 0.10%)</title><rect x="457.8" y="563.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (171 samples, 0.10%)</title><rect x="457.8" y="547.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="460.8" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.get$Lambda (171 samples, 0.10%)</title><rect x="457.8" y="531.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="460.8" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$134 (171 samples, 0.10%)</title><rect x="457.8" y="515.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="460.8" y="526.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1,127 samples, 0.69%)</title><rect x="459.1" y="563.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1,127 samples, 0.69%)</title><rect x="459.1" y="547.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.1" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (1,127 samples, 0.69%)</title><rect x="459.1" y="531.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1,127 samples, 0.69%)</title><rect x="459.1" y="515.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="462.1" y="526.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (469 samples, 0.29%)</title><rect x="459.1" y="499.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.1" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (306 samples, 0.19%)</title><rect x="459.1" y="483.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (306 samples, 0.19%)</title><rect x="459.1" y="467.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="462.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (306 samples, 0.19%)</title><rect x="459.1" y="451.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (306 samples, 0.19%)</title><rect x="459.1" y="435.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="462.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (306 samples, 0.19%)</title><rect x="459.1" y="419.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="462.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (306 samples, 0.19%)</title><rect x="459.1" y="403.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (306 samples, 0.19%)</title><rect x="459.1" y="387.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (300 samples, 0.18%)</title><rect x="459.1" y="371.0" width="2.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="462.1" y="382.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (163 samples, 0.10%)</title><rect x="461.3" y="483.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.3" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (163 samples, 0.10%)</title><rect x="461.3" y="467.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="464.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (125 samples, 0.08%)</title><rect x="462.5" y="499.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="465.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (125 samples, 0.08%)</title><rect x="462.5" y="483.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.5" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.get$Lambda (125 samples, 0.08%)</title><rect x="462.5" y="467.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.5" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$136 (125 samples, 0.08%)</title><rect x="462.5" y="451.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="465.5" y="462.0"></text>
</g>
<g>
<title>java/util/List.copyOf (315 samples, 0.19%)</title><rect x="463.4" y="499.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.4" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (315 samples, 0.19%)</title><rect x="463.4" y="483.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.4" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (183 samples, 0.11%)</title><rect x="463.4" y="467.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.4" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (183 samples, 0.11%)</title><rect x="463.4" y="451.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.4" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (183 samples, 0.11%)</title><rect x="463.4" y="435.0" width="1.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="466.4" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (132 samples, 0.08%)</title><rect x="464.7" y="467.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.7" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (132 samples, 0.08%)</title><rect x="464.7" y="451.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="467.7" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (218 samples, 0.13%)</title><rect x="465.6" y="499.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.6" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (218 samples, 0.13%)</title><rect x="465.6" y="483.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="468.6" y="494.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (183 samples, 0.11%)</title><rect x="467.2" y="563.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.2" y="574.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (183 samples, 0.11%)</title><rect x="467.2" y="547.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="470.2" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (273 samples, 0.17%)</title><rect x="468.5" y="563.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.5" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (273 samples, 0.17%)</title><rect x="468.5" y="547.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="471.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (91 samples, 0.06%)</title><rect x="470.5" y="595.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="473.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (2,025 samples, 1.23%)</title><rect x="471.1" y="595.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="474.1" y="606.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (2,025 samples, 1.23%)</title><rect x="471.1" y="579.0" width="14.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.1" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,831 samples, 1.12%)</title><rect x="471.1" y="563.0" width="13.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.1" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,831 samples, 1.12%)</title><rect x="471.1" y="547.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="474.1" y="558.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,831 samples, 1.12%)</title><rect x="471.1" y="531.0" width="13.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.1" y="542.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (373 samples, 0.23%)</title><rect x="471.1" y="515.0" width="2.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="474.1" y="526.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (511 samples, 0.31%)</title><rect x="473.8" y="515.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.8" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (511 samples, 0.31%)</title><rect x="473.8" y="499.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.8" y="510.0"></text>
</g>
<g>
<title>byte[] (511 samples, 0.31%)</title><rect x="473.8" y="483.0" width="3.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="476.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (947 samples, 0.58%)</title><rect x="477.5" y="515.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.5" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (947 samples, 0.58%)</title><rect x="477.5" y="499.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.5" y="510.0"></text>
</g>
<g>
<title>java.lang.String (439 samples, 0.27%)</title><rect x="477.5" y="483.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="480.5" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (508 samples, 0.31%)</title><rect x="480.6" y="483.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.6" y="494.0"></text>
</g>
<g>
<title>byte[] (508 samples, 0.31%)</title><rect x="480.6" y="467.0" width="3.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="483.6" y="478.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (194 samples, 0.12%)</title><rect x="484.3" y="563.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="487.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (257 samples, 0.16%)</title><rect x="485.7" y="595.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.7" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap (257 samples, 0.16%)</title><rect x="485.7" y="579.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="488.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (464 samples, 0.28%)</title><rect x="487.5" y="595.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.5" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (127 samples, 0.08%)</title><rect x="487.5" y="579.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="490.5" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (120 samples, 0.07%)</title><rect x="488.5" y="579.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.5" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (120 samples, 0.07%)</title><rect x="488.5" y="563.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="491.5" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (217 samples, 0.13%)</title><rect x="489.3" y="579.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.3" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (217 samples, 0.13%)</title><rect x="489.3" y="563.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="492.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (2,553 samples, 1.56%)</title><rect x="490.9" y="611.0" width="18.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="493.9" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (68 samples, 0.04%)</title><rect x="490.9" y="595.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="493.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (418 samples, 0.25%)</title><rect x="491.4" y="595.0" width="3.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="494.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (78 samples, 0.05%)</title><rect x="494.4" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="497.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (78 samples, 0.05%)</title><rect x="494.4" y="579.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="497.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1,983 samples, 1.21%)</title><rect x="495.0" y="595.0" width="14.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="498.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1,983 samples, 1.21%)</title><rect x="495.0" y="579.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.0" y="590.0"></text>
</g>
<g>
<title>java.lang.Class[] (220 samples, 0.13%)</title><rect x="495.0" y="563.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="498.0" y="574.0"></text>
</g>
<g>
<title>java.lang.Object[] (187 samples, 0.11%)</title><rect x="496.6" y="563.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="499.6" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (163 samples, 0.10%)</title><rect x="497.9" y="563.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="500.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (866 samples, 0.53%)</title><rect x="499.1" y="563.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="502.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (866 samples, 0.53%)</title><rect x="499.1" y="547.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="502.1" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (866 samples, 0.53%)</title><rect x="499.1" y="531.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.1" y="542.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (866 samples, 0.53%)</title><rect x="499.1" y="515.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="502.1" y="526.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (857 samples, 0.52%)</title><rect x="499.1" y="499.0" width="6.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="502.1" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (290 samples, 0.18%)</title><rect x="505.3" y="563.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (290 samples, 0.18%)</title><rect x="505.3" y="547.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="508.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (214 samples, 0.13%)</title><rect x="505.3" y="531.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (214 samples, 0.13%)</title><rect x="505.3" y="515.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="508.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (76 samples, 0.05%)</title><rect x="506.9" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (76 samples, 0.05%)</title><rect x="506.9" y="515.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="509.9" y="526.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (257 samples, 0.16%)</title><rect x="507.4" y="563.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="510.4" y="574.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (257 samples, 0.16%)</title><rect x="507.4" y="547.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="510.4" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (257 samples, 0.16%)</title><rect x="507.4" y="531.0" width="1.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="510.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (1,413 samples, 0.86%)</title><rect x="509.3" y="611.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (311 samples, 0.19%)</title><rect x="509.3" y="595.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="512.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (131 samples, 0.08%)</title><rect x="509.3" y="579.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="512.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (180 samples, 0.11%)</title><rect x="510.2" y="579.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="513.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (180 samples, 0.11%)</title><rect x="510.2" y="563.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="513.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (180 samples, 0.11%)</title><rect x="510.2" y="547.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (180 samples, 0.11%)</title><rect x="510.2" y="531.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (180 samples, 0.11%)</title><rect x="510.2" y="515.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="513.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (189 samples, 0.12%)</title><rect x="511.5" y="595.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="514.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (913 samples, 0.56%)</title><rect x="512.8" y="595.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (166 samples, 0.10%)</title><rect x="512.8" y="579.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (166 samples, 0.10%)</title><rect x="512.8" y="563.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$153/1249503175.get$Lambda (97 samples, 0.06%)</title><rect x="512.8" y="547.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$153 (97 samples, 0.06%)</title><rect x="512.8" y="531.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="515.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1961341944.get$Lambda (69 samples, 0.04%)</title><rect x="513.5" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$158 (69 samples, 0.04%)</title><rect x="513.5" y="531.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="516.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (747 samples, 0.46%)</title><rect x="514.0" y="579.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="517.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (747 samples, 0.46%)</title><rect x="514.0" y="563.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (419 samples, 0.26%)</title><rect x="514.0" y="547.0" width="3.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="517.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (328 samples, 0.20%)</title><rect x="517.1" y="547.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (328 samples, 0.20%)</title><rect x="517.1" y="531.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (328 samples, 0.20%)</title><rect x="517.1" y="515.0" width="2.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="520.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2,379 samples, 1.45%)</title><rect x="519.4" y="675.0" width="17.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.4" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (218 samples, 0.13%)</title><rect x="519.4" y="659.0" width="1.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="522.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2,161 samples, 1.32%)</title><rect x="521.0" y="659.0" width="15.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="524.0" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,990 samples, 1.21%)</title><rect x="521.0" y="643.0" width="14.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.0" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,990 samples, 1.21%)</title><rect x="521.0" y="627.0" width="14.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.0" y="638.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (100 samples, 0.06%)</title><rect x="521.0" y="611.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="524.0" y="622.0"></text>
</g>
<g>
<title>java.util.ArrayList (117 samples, 0.07%)</title><rect x="521.7" y="611.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="524.7" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (215 samples, 0.13%)</title><rect x="522.5" y="611.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="525.5" y="622.0"></text>
</g>
<g>
<title>java.util.TreeSet (77 samples, 0.05%)</title><rect x="524.1" y="611.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="527.1" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (186 samples, 0.11%)</title><rect x="524.6" y="611.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (186 samples, 0.11%)</title><rect x="524.6" y="595.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="527.6" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.get$Lambda (186 samples, 0.11%)</title><rect x="524.6" y="579.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="527.6" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$134 (186 samples, 0.11%)</title><rect x="524.6" y="563.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="527.6" y="574.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (196 samples, 0.12%)</title><rect x="526.0" y="611.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.0" y="622.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (196 samples, 0.12%)</title><rect x="526.0" y="595.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="529.0" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (868 samples, 0.53%)</title><rect x="527.4" y="611.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.4" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (868 samples, 0.53%)</title><rect x="527.4" y="595.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.4" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (868 samples, 0.53%)</title><rect x="527.4" y="579.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (108 samples, 0.07%)</title><rect x="527.4" y="563.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="530.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (108 samples, 0.07%)</title><rect x="527.4" y="547.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="530.4" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.get$Lambda (108 samples, 0.07%)</title><rect x="527.4" y="531.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="530.4" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$136 (108 samples, 0.07%)</title><rect x="527.4" y="515.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="530.4" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (296 samples, 0.18%)</title><rect x="528.2" y="563.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.2" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (296 samples, 0.18%)</title><rect x="528.2" y="547.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.2" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (296 samples, 0.18%)</title><rect x="528.2" y="531.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="531.2" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (296 samples, 0.18%)</title><rect x="528.2" y="515.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.2" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (296 samples, 0.18%)</title><rect x="528.2" y="499.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.2" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (296 samples, 0.18%)</title><rect x="528.2" y="483.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (296 samples, 0.18%)</title><rect x="528.2" y="467.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (296 samples, 0.18%)</title><rect x="528.2" y="451.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.2" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (296 samples, 0.18%)</title><rect x="528.2" y="435.0" width="2.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="531.2" y="446.0"></text>
</g>
<g>
<title>java/util/List.copyOf (268 samples, 0.16%)</title><rect x="530.3" y="563.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.3" y="574.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (268 samples, 0.16%)</title><rect x="530.3" y="547.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="533.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (133 samples, 0.08%)</title><rect x="530.3" y="531.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="533.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (133 samples, 0.08%)</title><rect x="530.3" y="515.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (133 samples, 0.08%)</title><rect x="530.3" y="499.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="533.3" y="510.0"></text>
</g>
<g>
<title>java/util/List.of (135 samples, 0.08%)</title><rect x="531.3" y="531.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="534.3" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (135 samples, 0.08%)</title><rect x="531.3" y="515.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="534.3" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (196 samples, 0.12%)</title><rect x="532.2" y="563.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="535.2" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (196 samples, 0.12%)</title><rect x="532.2" y="547.0" width="1.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="535.2" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (231 samples, 0.14%)</title><rect x="533.6" y="611.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="536.6" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (231 samples, 0.14%)</title><rect x="533.6" y="595.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="536.6" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (171 samples, 0.10%)</title><rect x="535.3" y="643.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.3" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (171 samples, 0.10%)</title><rect x="535.3" y="627.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.3" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (171 samples, 0.10%)</title><rect x="535.3" y="611.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="538.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (492 samples, 0.30%)</title><rect x="536.5" y="675.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (492 samples, 0.30%)</title><rect x="536.5" y="659.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="539.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (492 samples, 0.30%)</title><rect x="536.5" y="643.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.5" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (137 samples, 0.08%)</title><rect x="536.5" y="627.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="539.5" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (129 samples, 0.08%)</title><rect x="537.5" y="627.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.5" y="638.0"></text>
</g>
<g>
<title>java.lang.Object[] (129 samples, 0.08%)</title><rect x="537.5" y="611.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="540.5" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (226 samples, 0.14%)</title><rect x="538.4" y="627.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.4" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (226 samples, 0.14%)</title><rect x="538.4" y="611.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="541.4" y="622.0"></text>
</g>
<g>
<title>one.nio.http.Response (1,071 samples, 0.65%)</title><rect x="540.1" y="675.0" width="7.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="543.1" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1,249 samples, 0.76%)</title><rect x="547.8" y="675.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="550.8" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (1,249 samples, 0.76%)</title><rect x="547.8" y="659.0" width="9.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,249 samples, 0.76%)</title><rect x="547.8" y="643.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.8" y="654.0"></text>
</g>
<g>
<title>java.lang.String (692 samples, 0.42%)</title><rect x="547.8" y="627.0" width="5.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="550.8" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (557 samples, 0.34%)</title><rect x="552.8" y="627.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="555.8" y="638.0"></text>
</g>
<g>
<title>byte[] (557 samples, 0.34%)</title><rect x="552.8" y="611.0" width="4.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="555.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3,605 samples, 2.20%)</title><rect x="556.8" y="675.0" width="25.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="559.8" y="686.0">o..</text>
</g>
<g>
<title>byte[] (1,766 samples, 1.08%)</title><rect x="556.8" y="659.0" width="12.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="559.8" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (1,128 samples, 0.69%)</title><rect x="569.5" y="659.0" width="8.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="572.5" y="670.0"></text>
</g>
<g>
<title>java.lang.String (711 samples, 0.43%)</title><rect x="577.6" y="659.0" width="5.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="580.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/LSMDao.upsert (3,032 samples, 1.85%)</title><rect x="582.7" y="675.0" width="21.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.7" y="686.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTablesPool.upsert (3,032 samples, 1.85%)</title><rect x="582.7" y="659.0" width="21.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.7" y="670.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTable.upsert (3,004 samples, 1.83%)</title><rect x="582.9" y="643.0" width="21.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.9" y="654.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/Value.of (2,993 samples, 1.83%)</title><rect x="583.0" y="627.0" width="21.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="586.0" y="638.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,865 samples, 1.14%)</title><rect x="583.0" y="611.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="586.0" y="622.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,865 samples, 1.14%)</title><rect x="583.0" y="595.0" width="13.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="586.0" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nadenokk.Value (1,128 samples, 0.69%)</title><rect x="596.4" y="611.0" width="8.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="599.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/Balancer.poolsNodes (1,983 samples, 1.21%)</title><rect x="604.5" y="675.0" width="14.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.5" y="686.0"></text>
</g>
<g>
<title>java.lang.String[] (75 samples, 0.05%)</title><rect x="604.5" y="659.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="607.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/Balancer.hashCreate (1,908 samples, 1.16%)</title><rect x="605.1" y="659.0" width="13.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="608.1" y="670.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (1,908 samples, 1.16%)</title><rect x="605.1" y="643.0" width="13.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.1" y="654.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (1,795 samples, 1.09%)</title><rect x="605.1" y="627.0" width="12.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="608.1" y="638.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (1,795 samples, 1.09%)</title><rect x="605.1" y="611.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="608.1" y="622.0"></text>
</g>
<g>
<title>com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher (81 samples, 0.05%)</title><rect x="605.1" y="595.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="608.1" y="606.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (195 samples, 0.12%)</title><rect x="605.6" y="595.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (195 samples, 0.12%)</title><rect x="605.6" y="579.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="608.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.&lt;init&gt; (195 samples, 0.12%)</title><rect x="605.6" y="563.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.6" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (195 samples, 0.12%)</title><rect x="605.6" y="547.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.6" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (107 samples, 0.07%)</title><rect x="605.6" y="531.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="608.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (88 samples, 0.05%)</title><rect x="606.4" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.4" y="542.0"></text>
</g>
<g>
<title>byte[] (88 samples, 0.05%)</title><rect x="606.4" y="515.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="609.4" y="526.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.clone (1,519 samples, 0.93%)</title><rect x="607.0" y="595.0" width="11.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.0" y="606.0"></text>
</g>
<g>
<title>java.security.MessageDigest$Delegate (65 samples, 0.04%)</title><rect x="607.0" y="579.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="610.0" y="590.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.clone (1,454 samples, 0.89%)</title><rect x="607.5" y="579.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.5" y="590.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.clone (1,454 samples, 0.89%)</title><rect x="607.5" y="563.0" width="10.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="610.5" y="574.0"></text>
</g>
<g>
<title>int[] (1,008 samples, 0.61%)</title><rect x="607.5" y="547.0" width="7.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="610.5" y="558.0"></text>
</g>
<g>
<title>int[] (76 samples, 0.05%)</title><rect x="614.8" y="547.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="617.8" y="558.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.clone (370 samples, 0.23%)</title><rect x="615.3" y="547.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.3" y="558.0"></text>
</g>
<g>
<title>byte[] (201 samples, 0.12%)</title><rect x="615.3" y="531.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="618.3" y="542.0"></text>
</g>
<g>
<title>java/security/MessageDigestSpi.clone (169 samples, 0.10%)</title><rect x="616.8" y="531.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.8" y="542.0"></text>
</g>
<g>
<title>sun.security.provider.SHA2$SHA256 (167 samples, 0.10%)</title><rect x="616.8" y="515.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="619.8" y="526.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (113 samples, 0.07%)</title><rect x="618.0" y="627.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.0" y="638.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (113 samples, 0.07%)</title><rect x="618.0" y="611.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.0" y="622.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (113 samples, 0.07%)</title><rect x="618.0" y="595.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.0" y="606.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (113 samples, 0.07%)</title><rect x="618.0" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.0" y="590.0"></text>
</g>
<g>
<title>byte[] (113 samples, 0.07%)</title><rect x="618.0" y="563.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="621.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$ResponseUtils.sendResponse (8,608 samples, 5.25%)</title><rect x="618.8" y="723.0" width="61.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="621.8" y="734.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8,608 samples, 5.25%)</title><rect x="618.8" y="707.0" width="61.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.8" y="718.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6,298 samples, 3.84%)</title><rect x="618.8" y="691.0" width="45.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.8" y="702.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4,600 samples, 2.80%)</title><rect x="618.8" y="675.0" width="33.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="621.8" y="686.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4,600 samples, 2.80%)</title><rect x="618.8" y="659.0" width="33.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.8" y="670.0">on..</text>
</g>
<g>
<title>byte[] (3,396 samples, 2.07%)</title><rect x="618.8" y="643.0" width="24.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="621.8" y="654.0">b..</text>
</g>
<g>
<title>byte[] (1,204 samples, 0.73%)</title><rect x="643.2" y="643.0" width="8.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="646.2" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,698 samples, 1.04%)</title><rect x="651.9" y="675.0" width="12.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="654.9" y="686.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (1,698 samples, 1.04%)</title><rect x="651.9" y="659.0" width="12.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="654.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,310 samples, 1.41%)</title><rect x="664.1" y="691.0" width="16.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,310 samples, 1.41%)</title><rect x="664.1" y="675.0" width="16.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,310 samples, 1.41%)</title><rect x="664.1" y="659.0" width="16.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.1" y="670.0"></text>
</g>
<g>
<title>java.lang.String (740 samples, 0.45%)</title><rect x="664.1" y="643.0" width="5.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="667.1" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,570 samples, 0.96%)</title><rect x="669.4" y="643.0" width="11.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.4" y="654.0"></text>
</g>
<g>
<title>byte[] (1,570 samples, 0.96%)</title><rect x="669.4" y="627.0" width="11.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="672.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,259 samples, 0.77%)</title><rect x="680.7" y="803.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,259 samples, 0.77%)</title><rect x="680.7" y="787.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,257 samples, 0.77%)</title><rect x="680.7" y="771.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (1,255 samples, 0.77%)</title><rect x="680.7" y="755.0" width="9.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (1,255 samples, 0.77%)</title><rect x="680.7" y="739.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (1,255 samples, 0.77%)</title><rect x="680.7" y="723.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,255 samples, 0.77%)</title><rect x="680.7" y="707.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,255 samples, 0.77%)</title><rect x="680.7" y="691.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="683.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,255 samples, 0.77%)</title><rect x="680.7" y="675.0" width="9.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,255 samples, 0.77%)</title><rect x="680.7" y="659.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpController$$Lambda$396/1703933904.apply (1,255 samples, 0.77%)</title><rect x="680.7" y="643.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="683.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1,255 samples, 0.77%)</title><rect x="680.7" y="627.0" width="9.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="683.7" y="638.0"></text>
</g>
<g>
<title>java.lang.Integer (1,255 samples, 0.77%)</title><rect x="680.7" y="611.0" width="9.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="683.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (6,353 samples, 3.87%)</title><rect x="689.8" y="803.0" width="45.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.8" y="814.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (125 samples, 0.08%)</title><rect x="689.8" y="787.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (125 samples, 0.08%)</title><rect x="689.8" y="771.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="692.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$296/1256460069.get$Lambda (68 samples, 0.04%)</title><rect x="689.8" y="755.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="692.8" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$296 (68 samples, 0.04%)</title><rect x="689.8" y="739.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="692.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$304/1190025450.get$Lambda (57 samples, 0.03%)</title><rect x="690.3" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.3" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$304 (57 samples, 0.03%)</title><rect x="690.3" y="739.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="693.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/815320891.linkToTargetMethod (75 samples, 0.05%)</title><rect x="690.7" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.7" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.05%)</title><rect x="690.7" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$297/469379447.get$Lambda (75 samples, 0.05%)</title><rect x="690.7" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="693.7" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$297 (75 samples, 0.05%)</title><rect x="690.7" y="739.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="693.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (950 samples, 0.58%)</title><rect x="691.2" y="787.0" width="6.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$298/737367661.accept (794 samples, 0.48%)</title><rect x="691.2" y="771.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (794 samples, 0.48%)</title><rect x="691.2" y="755.0" width="5.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="694.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (794 samples, 0.48%)</title><rect x="691.2" y="739.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (794 samples, 0.48%)</title><rect x="691.2" y="723.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="694.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (794 samples, 0.48%)</title><rect x="691.2" y="707.0" width="5.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="694.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (794 samples, 0.48%)</title><rect x="691.2" y="691.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="694.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (794 samples, 0.48%)</title><rect x="691.2" y="675.0" width="5.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="694.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (794 samples, 0.48%)</title><rect x="691.2" y="659.0" width="5.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (794 samples, 0.48%)</title><rect x="691.2" y="643.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (794 samples, 0.48%)</title><rect x="691.2" y="627.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="694.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200/49147543.run (794 samples, 0.48%)</title><rect x="691.2" y="611.0" width="5.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (794 samples, 0.48%)</title><rect x="691.2" y="595.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="694.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (219 samples, 0.13%)</title><rect x="691.2" y="579.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="694.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (219 samples, 0.13%)</title><rect x="691.2" y="563.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (219 samples, 0.13%)</title><rect x="691.2" y="547.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (79 samples, 0.05%)</title><rect x="691.2" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="694.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (79 samples, 0.05%)</title><rect x="691.2" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="694.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (79 samples, 0.05%)</title><rect x="691.2" y="499.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="694.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (79 samples, 0.05%)</title><rect x="691.2" y="483.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="694.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (79 samples, 0.05%)</title><rect x="691.2" y="467.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="694.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (140 samples, 0.09%)</title><rect x="691.8" y="531.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (140 samples, 0.09%)</title><rect x="691.8" y="515.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (140 samples, 0.09%)</title><rect x="691.8" y="499.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (140 samples, 0.09%)</title><rect x="691.8" y="483.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (140 samples, 0.09%)</title><rect x="691.8" y="467.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="694.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (140 samples, 0.09%)</title><rect x="691.8" y="451.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (140 samples, 0.09%)</title><rect x="691.8" y="435.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="694.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (140 samples, 0.09%)</title><rect x="691.8" y="419.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="694.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (59 samples, 0.04%)</title><rect x="692.8" y="579.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.04%)</title><rect x="692.8" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.04%)</title><rect x="692.8" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310/1092212478.get$Lambda (59 samples, 0.04%)</title><rect x="692.8" y="531.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310 (59 samples, 0.04%)</title><rect x="692.8" y="515.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="695.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (516 samples, 0.31%)</title><rect x="693.2" y="579.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (263 samples, 0.16%)</title><rect x="693.2" y="563.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="696.2" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (177 samples, 0.11%)</title><rect x="693.2" y="547.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.2" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (177 samples, 0.11%)</title><rect x="693.2" y="531.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="696.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (86 samples, 0.05%)</title><rect x="694.5" y="547.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.5" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (86 samples, 0.05%)</title><rect x="694.5" y="531.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.5" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (86 samples, 0.05%)</title><rect x="694.5" y="515.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="697.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (253 samples, 0.15%)</title><rect x="695.1" y="563.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$196/2074774400.get (253 samples, 0.15%)</title><rect x="695.1" y="547.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="698.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (253 samples, 0.15%)</title><rect x="695.1" y="531.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="698.1" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (253 samples, 0.15%)</title><rect x="695.1" y="515.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.1" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (253 samples, 0.15%)</title><rect x="695.1" y="499.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.1" y="510.0"></text>
</g>
<g>
<title>byte[] (241 samples, 0.15%)</title><rect x="695.2" y="483.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="698.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$305/1347119101.accept (156 samples, 0.10%)</title><rect x="696.9" y="771.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (156 samples, 0.10%)</title><rect x="696.9" y="755.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$297/469379447.run (156 samples, 0.10%)</title><rect x="696.9" y="739.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (156 samples, 0.10%)</title><rect x="696.9" y="723.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (156 samples, 0.10%)</title><rect x="696.9" y="707.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="699.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (156 samples, 0.10%)</title><rect x="696.9" y="691.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="699.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (156 samples, 0.10%)</title><rect x="696.9" y="675.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.9" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (156 samples, 0.10%)</title><rect x="696.9" y="659.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="699.9" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (190 samples, 0.12%)</title><rect x="698.1" y="787.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="701.1" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (190 samples, 0.12%)</title><rect x="698.1" y="771.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="701.1" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (184 samples, 0.11%)</title><rect x="699.4" y="787.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (97 samples, 0.06%)</title><rect x="699.4" y="771.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (97 samples, 0.06%)</title><rect x="699.4" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="702.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (97 samples, 0.06%)</title><rect x="699.4" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (97 samples, 0.06%)</title><rect x="699.4" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (97 samples, 0.06%)</title><rect x="699.4" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (97 samples, 0.06%)</title><rect x="699.4" y="691.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.4" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (97 samples, 0.06%)</title><rect x="699.4" y="675.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="702.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (87 samples, 0.05%)</title><rect x="700.1" y="771.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="703.1" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (87 samples, 0.05%)</title><rect x="700.1" y="755.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="703.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (742 samples, 0.45%)</title><rect x="700.8" y="787.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$210/1218021122.run (352 samples, 0.21%)</title><rect x="700.8" y="771.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (352 samples, 0.21%)</title><rect x="700.8" y="755.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="703.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (352 samples, 0.21%)</title><rect x="700.8" y="739.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="703.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (352 samples, 0.21%)</title><rect x="700.8" y="723.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (352 samples, 0.21%)</title><rect x="700.8" y="707.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="703.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (352 samples, 0.21%)</title><rect x="700.8" y="691.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="703.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200/49147543.run (352 samples, 0.21%)</title><rect x="700.8" y="675.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="703.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (352 samples, 0.21%)</title><rect x="700.8" y="659.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="703.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (352 samples, 0.21%)</title><rect x="700.8" y="643.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (352 samples, 0.21%)</title><rect x="700.8" y="627.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (217 samples, 0.13%)</title><rect x="700.8" y="611.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (217 samples, 0.13%)</title><rect x="700.8" y="595.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (217 samples, 0.13%)</title><rect x="700.8" y="579.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="703.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/20094719.linkToTargetMethod (163 samples, 0.10%)</title><rect x="700.8" y="563.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="703.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/324457684.invoke (163 samples, 0.10%)</title><rect x="700.8" y="547.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (163 samples, 0.10%)</title><rect x="700.8" y="531.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="703.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (163 samples, 0.10%)</title><rect x="700.8" y="515.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (163 samples, 0.10%)</title><rect x="700.8" y="499.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="703.8" y="510.0"></text>
</g>
<g>
<title>byte[] (163 samples, 0.10%)</title><rect x="700.8" y="483.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="703.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (54 samples, 0.03%)</title><rect x="701.9" y="563.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.9" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.03%)</title><rect x="701.9" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="704.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.03%)</title><rect x="701.9" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310/1092212478.get$Lambda (54 samples, 0.03%)</title><rect x="701.9" y="515.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$310 (54 samples, 0.03%)</title><rect x="701.9" y="499.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="704.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (135 samples, 0.08%)</title><rect x="702.3" y="611.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (135 samples, 0.08%)</title><rect x="702.3" y="595.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (135 samples, 0.08%)</title><rect x="702.3" y="579.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (135 samples, 0.08%)</title><rect x="702.3" y="563.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (135 samples, 0.08%)</title><rect x="702.3" y="547.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="705.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (135 samples, 0.08%)</title><rect x="702.3" y="531.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (135 samples, 0.08%)</title><rect x="702.3" y="515.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (135 samples, 0.08%)</title><rect x="702.3" y="499.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.3" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (135 samples, 0.08%)</title><rect x="702.3" y="483.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="705.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$222/223200854.run (390 samples, 0.24%)</title><rect x="703.3" y="771.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (390 samples, 0.24%)</title><rect x="703.3" y="755.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (134 samples, 0.08%)</title><rect x="703.3" y="739.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="706.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (134 samples, 0.08%)</title><rect x="703.3" y="723.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="706.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$309/1651102379.get$Lambda (134 samples, 0.08%)</title><rect x="703.3" y="707.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.3" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$309 (134 samples, 0.08%)</title><rect x="703.3" y="691.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="706.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (256 samples, 0.16%)</title><rect x="704.2" y="739.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (256 samples, 0.16%)</title><rect x="704.2" y="723.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (256 samples, 0.16%)</title><rect x="704.2" y="707.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="707.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (256 samples, 0.16%)</title><rect x="704.2" y="691.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (256 samples, 0.16%)</title><rect x="704.2" y="675.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.2" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (256 samples, 0.16%)</title><rect x="704.2" y="659.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="707.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,686 samples, 1.03%)</title><rect x="706.1" y="787.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.1" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (429 samples, 0.26%)</title><rect x="706.1" y="771.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.1" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (429 samples, 0.26%)</title><rect x="706.1" y="755.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.1" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (429 samples, 0.26%)</title><rect x="706.1" y="739.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="709.1" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (429 samples, 0.26%)</title><rect x="706.1" y="723.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.1" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (429 samples, 0.26%)</title><rect x="706.1" y="707.0" width="3.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="709.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,257 samples, 0.77%)</title><rect x="709.2" y="771.0" width="9.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (279 samples, 0.17%)</title><rect x="709.2" y="755.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (279 samples, 0.17%)</title><rect x="709.2" y="739.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$374/1912734131.get$Lambda (279 samples, 0.17%)</title><rect x="709.2" y="723.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.2" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$374 (279 samples, 0.17%)</title><rect x="709.2" y="707.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="712.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (978 samples, 0.60%)</title><rect x="711.2" y="755.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.2" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (410 samples, 0.25%)</title><rect x="711.2" y="739.0" width="2.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="714.2" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (568 samples, 0.35%)</title><rect x="714.1" y="739.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.1" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (568 samples, 0.35%)</title><rect x="714.1" y="723.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.1" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (568 samples, 0.35%)</title><rect x="714.1" y="707.0" width="4.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="717.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (705 samples, 0.43%)</title><rect x="718.2" y="787.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="721.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.03%)</title><rect x="718.2" y="771.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.03%)</title><rect x="718.2" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$294/1857314804.get$Lambda (57 samples, 0.03%)</title><rect x="718.2" y="739.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.2" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$294 (57 samples, 0.03%)</title><rect x="718.2" y="723.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="721.2" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (379 samples, 0.23%)</title><rect x="718.6" y="771.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (155 samples, 0.09%)</title><rect x="718.6" y="755.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="721.6" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (155 samples, 0.09%)</title><rect x="718.6" y="739.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="721.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (224 samples, 0.14%)</title><rect x="719.7" y="755.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.7" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (224 samples, 0.14%)</title><rect x="719.7" y="739.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="722.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (269 samples, 0.16%)</title><rect x="721.4" y="771.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="724.4" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (269 samples, 0.16%)</title><rect x="721.4" y="755.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="724.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1,409 samples, 0.86%)</title><rect x="723.3" y="787.0" width="10.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="726.3" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (623 samples, 0.38%)</title><rect x="723.3" y="771.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.3" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (623 samples, 0.38%)</title><rect x="723.3" y="755.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.3" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (623 samples, 0.38%)</title><rect x="723.3" y="739.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="726.3" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (623 samples, 0.38%)</title><rect x="723.3" y="723.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="726.3" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (623 samples, 0.38%)</title><rect x="723.3" y="707.0" width="4.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="726.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (786 samples, 0.48%)</title><rect x="727.8" y="771.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.8" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (786 samples, 0.48%)</title><rect x="727.8" y="755.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.8" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (786 samples, 0.48%)</title><rect x="727.8" y="739.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.8" y="750.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (786 samples, 0.48%)</title><rect x="727.8" y="723.0" width="5.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="730.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (138 samples, 0.08%)</title><rect x="733.4" y="787.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (138 samples, 0.08%)</title><rect x="733.4" y="771.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="736.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (138 samples, 0.08%)</title><rect x="733.4" y="755.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="736.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (138 samples, 0.08%)</title><rect x="733.4" y="739.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="736.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (138 samples, 0.08%)</title><rect x="733.4" y="723.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.4" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (138 samples, 0.08%)</title><rect x="733.4" y="707.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (138 samples, 0.08%)</title><rect x="733.4" y="691.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="736.4" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (138 samples, 0.08%)</title><rect x="733.4" y="675.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="736.4" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (138 samples, 0.08%)</title><rect x="733.4" y="659.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="736.4" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (138 samples, 0.08%)</title><rect x="733.4" y="643.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="736.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (142 samples, 0.09%)</title><rect x="734.5" y="787.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="737.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (142 samples, 0.09%)</title><rect x="734.5" y="771.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="737.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (142 samples, 0.09%)</title><rect x="734.5" y="755.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.5" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (142 samples, 0.09%)</title><rect x="734.5" y="739.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="737.5" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (63,168 samples, 38.52%)</title><rect x="735.5" y="803.0" width="454.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="738.5" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3,039 samples, 1.85%)</title><rect x="735.5" y="787.0" width="21.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.5" y="798.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (3,039 samples, 1.85%)</title><rect x="735.5" y="771.0" width="21.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="738.5" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (60,129 samples, 36.66%)</title><rect x="757.4" y="787.0" width="432.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.4" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (60,129 samples, 36.66%)</title><rect x="757.4" y="771.0" width="432.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.4" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (60,128 samples, 36.66%)</title><rect x="757.4" y="755.0" width="432.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.4" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (10,095 samples, 6.16%)</title><rect x="757.4" y="739.0" width="72.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.4" y="750.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (10,095 samples, 6.16%)</title><rect x="757.4" y="723.0" width="72.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.4" y="734.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (7,125 samples, 4.34%)</title><rect x="757.4" y="707.0" width="51.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.4" y="718.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2,126 samples, 1.30%)</title><rect x="757.4" y="691.0" width="15.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,126 samples, 1.30%)</title><rect x="757.4" y="675.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="760.4" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,126 samples, 1.30%)</title><rect x="757.4" y="659.0" width="15.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.4" y="670.0"></text>
</g>
<g>
<title>java.lang.String (1,046 samples, 0.64%)</title><rect x="757.4" y="643.0" width="7.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="760.4" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,080 samples, 0.66%)</title><rect x="764.9" y="643.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="767.9" y="654.0"></text>
</g>
<g>
<title>byte[] (1,080 samples, 0.66%)</title><rect x="764.9" y="627.0" width="7.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="767.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.entity (4,999 samples, 3.05%)</title><rect x="772.7" y="691.0" width="35.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="775.7" y="702.0">ru/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,259 samples, 0.77%)</title><rect x="772.7" y="675.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="775.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,259 samples, 0.77%)</title><rect x="772.7" y="659.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$391/1150276494.get$Lambda (1,259 samples, 0.77%)</title><rect x="772.7" y="643.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.7" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.httprest.HttpRestDemon$$Lambda$391 (1,259 samples, 0.77%)</title><rect x="772.7" y="627.0" width="9.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="775.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.asyncExecute (2,856 samples, 1.74%)</title><rect x="781.7" y="675.0" width="20.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="784.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (881 samples, 0.54%)</title><rect x="781.7" y="659.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="784.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (881 samples, 0.54%)</title><rect x="781.7" y="643.0" width="6.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$113/1746272309.get$Lambda (881 samples, 0.54%)</title><rect x="781.7" y="627.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="784.7" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.httprest.HttpRestDemon$$Lambda$113 (881 samples, 0.54%)</title><rect x="781.7" y="611.0" width="6.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="784.7" y="622.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (1,975 samples, 1.20%)</title><rect x="788.1" y="659.0" width="14.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,975 samples, 1.20%)</title><rect x="788.1" y="643.0" width="14.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.1" y="654.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1,975 samples, 1.20%)</title><rect x="788.1" y="627.0" width="14.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.1" y="638.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (1,975 samples, 1.20%)</title><rect x="788.1" y="611.0" width="14.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="791.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (1,975 samples, 1.20%)</title><rect x="788.1" y="595.0" width="14.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1,975 samples, 1.20%)</title><rect x="788.1" y="579.0" width="14.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="791.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1,975 samples, 1.20%)</title><rect x="788.1" y="563.0" width="14.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (1,975 samples, 1.20%)</title><rect x="788.1" y="547.0" width="14.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="791.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/utils/RF.of (884 samples, 0.54%)</title><rect x="802.3" y="675.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.3" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.httprest.utils.RF (884 samples, 0.54%)</title><rect x="802.3" y="659.0" width="6.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="805.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,970 samples, 1.81%)</title><rect x="808.6" y="707.0" width="21.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.6" y="718.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (2,970 samples, 1.81%)</title><rect x="808.6" y="691.0" width="21.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="811.6" y="702.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,970 samples, 1.81%)</title><rect x="808.6" y="675.0" width="21.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="811.6" y="686.0">j..</text>
</g>
<g>
<title>java.lang.String (1,109 samples, 0.68%)</title><rect x="808.6" y="659.0" width="8.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="811.6" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,861 samples, 1.13%)</title><rect x="816.6" y="659.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.6" y="670.0"></text>
</g>
<g>
<title>byte[] (1,861 samples, 1.13%)</title><rect x="816.6" y="643.0" width="13.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="819.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13,495 samples, 8.23%)</title><rect x="830.0" y="739.0" width="97.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="833.0" y="750.0">one/nio/htt..</text>
</g>
<g>
<title>one.nio.http.Request (2,193 samples, 1.34%)</title><rect x="830.0" y="723.0" width="15.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="833.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4,533 samples, 2.76%)</title><rect x="845.8" y="723.0" width="32.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.8" y="734.0">on..</text>
</g>
<g>
<title>java.lang.String[] (3,506 samples, 2.14%)</title><rect x="845.8" y="707.0" width="25.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="848.8" y="718.0">j..</text>
</g>
<g>
<title>java.lang.String[] (1,027 samples, 0.63%)</title><rect x="871.0" y="707.0" width="7.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="874.0" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,769 samples, 4.13%)</title><rect x="878.4" y="723.0" width="48.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="881.4" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (6,769 samples, 4.13%)</title><rect x="878.4" y="707.0" width="48.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="881.4" y="718.0">one/..</text>
</g>
<g>
<title>char[] (3,916 samples, 2.39%)</title><rect x="878.4" y="691.0" width="28.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="881.4" y="702.0">ch..</text>
</g>
<g>
<title>char[] (44 samples, 0.03%)</title><rect x="906.6" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="909.6" y="702.0"></text>
</g>
<g>
<title>java.lang.String (976 samples, 0.60%)</title><rect x="906.9" y="691.0" width="7.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="909.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,833 samples, 1.12%)</title><rect x="913.9" y="691.0" width="13.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="916.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,833 samples, 1.12%)</title><rect x="913.9" y="675.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="916.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,833 samples, 1.12%)</title><rect x="913.9" y="659.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="916.9" y="670.0"></text>
</g>
<g>
<title>byte[] (1,833 samples, 1.12%)</title><rect x="913.9" y="643.0" width="13.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="916.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (880 samples, 0.54%)</title><rect x="927.1" y="739.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="930.1" y="750.0"></text>
</g>
<g>
<title>byte[] (880 samples, 0.54%)</title><rect x="927.1" y="723.0" width="6.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="930.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,485 samples, 1.52%)</title><rect x="933.4" y="739.0" width="17.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="936.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,485 samples, 1.52%)</title><rect x="933.4" y="723.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="936.4" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,485 samples, 1.52%)</title><rect x="933.4" y="707.0" width="17.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="936.4" y="718.0"></text>
</g>
<g>
<title>java.lang.String (1,417 samples, 0.86%)</title><rect x="933.4" y="691.0" width="10.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="936.4" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,068 samples, 0.65%)</title><rect x="943.6" y="691.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="946.6" y="702.0"></text>
</g>
<g>
<title>byte[] (1,068 samples, 0.65%)</title><rect x="943.6" y="675.0" width="7.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="946.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (33,173 samples, 20.23%)</title><rect x="951.3" y="739.0" width="238.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="954.3" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (33,173 samples, 20.23%)</title><rect x="951.3" y="723.0" width="238.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="954.3" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (15,802 samples, 9.64%)</title><rect x="951.3" y="707.0" width="113.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="954.3" y="718.0">char[]</text>
</g>
<g>
<title>char[] (1,348 samples, 0.82%)</title><rect x="1065.0" y="707.0" width="9.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1068.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String (5,564 samples, 3.39%)</title><rect x="1074.7" y="707.0" width="40.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1077.7" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10,459 samples, 6.38%)</title><rect x="1114.7" y="707.0" width="75.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1117.7" y="718.0">java/lan..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10,459 samples, 6.38%)</title><rect x="1114.7" y="691.0" width="75.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1117.7" y="702.0">java/lan..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (10,459 samples, 6.38%)</title><rect x="1114.7" y="675.0" width="75.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1117.7" y="686.0">java/lan..</text>
</g>
<g>
<title>byte[] (10,459 samples, 6.38%)</title><rect x="1114.7" y="659.0" width="75.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1117.7" y="670.0">byte[]</text>
</g>
</g>
</svg>
