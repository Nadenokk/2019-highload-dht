<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1077"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1077"> </text>
<g id="frames">
<g>
<title>all (7,237 samples, 100.00%)</title><rect x="10.0" y="1043.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1054.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (12 samples, 0.17%)</title><rect x="11.0" y="1027.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="14.0" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.03%)</title><rect x="11.1" y="1011.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.1" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="11.1" y="995.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.1" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="11.1" y="979.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.1" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="11.1" y="963.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.1" y="974.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.12%)</title><rect x="11.5" y="1011.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.5" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (8 samples, 0.11%)</title><rect x="11.6" y="995.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.6" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.10%)</title><rect x="11.6" y="979.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.6" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.06%)</title><rect x="12.0" y="963.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="15.0" y="974.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (3 samples, 0.04%)</title><rect x="12.0" y="947.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.0" y="958.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (2 samples, 0.03%)</title><rect x="12.1" y="931.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.1" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (9 samples, 0.12%)</title><rect x="12.9" y="1027.0" width="1.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.9" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.03%)</title><rect x="12.9" y="1011.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.9" y="1022.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (7 samples, 0.10%)</title><rect x="13.3" y="1011.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.3" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.10%)</title><rect x="13.3" y="995.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.3" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.10%)</title><rect x="13.3" y="979.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.3" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.04%)</title><rect x="13.9" y="963.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="16.9" y="974.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (3 samples, 0.04%)</title><rect x="13.9" y="947.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.9" y="958.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (3 samples, 0.04%)</title><rect x="13.9" y="931.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.9" y="942.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (3 samples, 0.04%)</title><rect x="13.9" y="915.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="16.9" y="926.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (2 samples, 0.03%)</title><rect x="13.9" y="899.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.9" y="910.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (2 samples, 0.03%)</title><rect x="13.9" y="883.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.9" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (15 samples, 0.21%)</title><rect x="14.4" y="1027.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.4" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (12 samples, 0.17%)</title><rect x="14.9" y="1011.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.9" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (12 samples, 0.17%)</title><rect x="14.9" y="995.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.9" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (11 samples, 0.15%)</title><rect x="14.9" y="979.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="17.9" y="990.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (2 samples, 0.03%)</title><rect x="15.2" y="963.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="18.2" y="974.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (3 samples, 0.04%)</title><rect x="15.5" y="963.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="18.5" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.04%)</title><rect x="16.0" y="963.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="19.0" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (63 samples, 0.87%)</title><rect x="17.0" y="1027.0" width="10.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.0" y="1038.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.03%)</title><rect x="17.8" y="1011.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.8" y="1022.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (56 samples, 0.77%)</title><rect x="18.2" y="1011.0" width="9.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="21.2" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.08%)</title><rect x="19.5" y="995.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="22.5" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (38 samples, 0.53%)</title><rect x="20.4" y="995.0" width="6.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="23.4" y="1006.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (7 samples, 0.10%)</title><rect x="21.6" y="979.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="24.6" y="990.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.03%)</title><rect x="22.1" y="963.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="25.1" y="974.0"></text>
</g>
<g>
<title>update_get_addr (2 samples, 0.03%)</title><rect x="22.4" y="963.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="25.4" y="974.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.03%)</title><rect x="22.7" y="979.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="25.7" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (19 samples, 0.26%)</title><rect x="23.0" y="979.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="26.0" y="990.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.04%)</title><rect x="23.4" y="963.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="26.4" y="974.0"></text>
</g>
<g>
<title>system_call_fastpath (2 samples, 0.03%)</title><rect x="23.5" y="947.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="26.5" y="958.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="23.5" y="931.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="26.5" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (12 samples, 0.17%)</title><rect x="23.9" y="963.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="26.9" y="974.0"></text>
</g>
<g>
<title>system_call_fastpath (11 samples, 0.15%)</title><rect x="24.0" y="947.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="27.0" y="958.0"></text>
</g>
<g>
<title>sys_futex (10 samples, 0.14%)</title><rect x="24.2" y="931.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="27.2" y="942.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="24.2" y="915.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="27.2" y="926.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.11%)</title><rect x="24.5" y="915.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="27.5" y="926.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.11%)</title><rect x="24.5" y="899.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="27.5" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.08%)</title><rect x="24.5" y="883.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="27.5" y="894.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (5 samples, 0.07%)</title><rect x="24.7" y="867.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="27.7" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.07%)</title><rect x="24.7" y="851.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="27.7" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.03%)</title><rect x="26.3" y="979.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="29.3" y="990.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.04%)</title><rect x="26.8" y="995.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="29.8" y="1006.0"></text>
</g>
<g>
<title>[not_walkable_Java] (9 samples, 0.12%)</title><rect x="27.6" y="1027.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="30.6" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="27.9" y="1011.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="30.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="29.1" y="1027.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="32.1" y="1038.0"></text>
</g>
<g>
<title>[unknown_Java] (20 samples, 0.28%)</title><rect x="29.6" y="1027.0" width="3.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="32.6" y="1038.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (4 samples, 0.06%)</title><rect x="32.2" y="1011.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="35.2" y="1022.0"></text>
</g>
<g>
<title>__GI_munmap (3 samples, 0.04%)</title><rect x="32.8" y="1027.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="35.8" y="1038.0"></text>
</g>
<g>
<title>system_call_fastpath (3 samples, 0.04%)</title><rect x="32.8" y="1011.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="35.8" y="1022.0"></text>
</g>
<g>
<title>sys_munmap (3 samples, 0.04%)</title><rect x="32.8" y="995.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="35.8" y="1006.0"></text>
</g>
<g>
<title>vm_munmap (3 samples, 0.04%)</title><rect x="32.8" y="979.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="35.8" y="990.0"></text>
</g>
<g>
<title>do_munmap (3 samples, 0.04%)</title><rect x="32.8" y="963.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="35.8" y="974.0"></text>
</g>
<g>
<title>unmap_region (3 samples, 0.04%)</title><rect x="32.8" y="947.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="35.8" y="958.0"></text>
</g>
<g>
<title>tlb_finish_mmu (2 samples, 0.03%)</title><rect x="33.0" y="931.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="36.0" y="942.0"></text>
</g>
<g>
<title>arch_tlb_finish_mmu (2 samples, 0.03%)</title><rect x="33.0" y="915.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="36.0" y="926.0"></text>
</g>
<g>
<title>tlb_flush_mmu_tlbonly (2 samples, 0.03%)</title><rect x="33.0" y="899.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="36.0" y="910.0"></text>
</g>
<g>
<title>flush_tlb_mm_range (2 samples, 0.03%)</title><rect x="33.0" y="883.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="36.0" y="894.0"></text>
</g>
<g>
<title>native_flush_tlb_others (2 samples, 0.03%)</title><rect x="33.0" y="867.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="36.0" y="878.0"></text>
</g>
<g>
<title>smp_call_function_many (2 samples, 0.03%)</title><rect x="33.0" y="851.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="36.0" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,186 samples, 57.84%)</title><rect x="33.8" y="1027.0" width="682.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="36.8" y="1038.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,186 samples, 57.84%)</title><rect x="33.8" y="1011.0" width="682.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.8" y="1022.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,186 samples, 57.84%)</title><rect x="33.8" y="995.0" width="682.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.8" y="1006.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (6 samples, 0.08%)</title><rect x="38.5" y="979.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.5" y="990.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.10%)</title><rect x="39.5" y="979.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="42.5" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (20 samples, 0.28%)</title><rect x="40.7" y="979.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.7" y="990.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (15 samples, 0.21%)</title><rect x="41.5" y="963.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="44.5" y="974.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (9 samples, 0.12%)</title><rect x="41.6" y="947.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="44.6" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.04%)</title><rect x="41.8" y="931.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="44.8" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.04%)</title><rect x="42.3" y="931.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="45.3" y="942.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.03%)</title><rect x="42.4" y="915.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="45.4" y="926.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="43.1" y="947.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="46.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (747 samples, 10.32%)</title><rect x="43.9" y="979.0" width="121.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="46.9" y="990.0">java/util/concu..</text>
</g>
<g>
<title>itable stub (4 samples, 0.06%)</title><rect x="44.1" y="963.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="47.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (741 samples, 10.24%)</title><rect x="44.7" y="963.0" width="120.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.7" y="974.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (738 samples, 10.20%)</title><rect x="44.7" y="947.0" width="120.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="47.7" y="958.0">java/util/concu..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$153/1249503175.apply (736 samples, 10.17%)</title><rect x="45.1" y="931.0" width="120.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.1" y="942.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (736 samples, 10.17%)</title><rect x="45.1" y="915.0" width="120.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.1" y="926.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (732 samples, 10.11%)</title><rect x="45.7" y="899.0" width="119.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.7" y="910.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="46.2" y="883.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (538 samples, 7.43%)</title><rect x="46.5" y="883.0" width="87.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.5" y="894.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (538 samples, 7.43%)</title><rect x="46.5" y="867.0" width="87.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.5" y="878.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (537 samples, 7.42%)</title><rect x="46.5" y="851.0" width="87.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.5" y="862.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (295 samples, 4.08%)</title><rect x="47.0" y="835.0" width="48.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="50.0" y="846.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (295 samples, 4.08%)</title><rect x="47.0" y="819.0" width="48.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.0" y="830.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (295 samples, 4.08%)</title><rect x="47.0" y="803.0" width="48.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.0" y="814.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.07%)</title><rect x="47.0" y="787.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.07%)</title><rect x="47.0" y="771.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5 samples, 0.07%)</title><rect x="47.0" y="755.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (5 samples, 0.07%)</title><rect x="47.0" y="739.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 0.07%)</title><rect x="47.0" y="723.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="50.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.07%)</title><rect x="47.0" y="707.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$245/351709695.apply (290 samples, 4.01%)</title><rect x="47.8" y="787.0" width="47.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.8" y="798.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (289 samples, 3.99%)</title><rect x="48.0" y="771.0" width="47.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.0" y="782.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (289 samples, 3.99%)</title><rect x="48.0" y="755.0" width="47.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="51.0" y="766.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$170/678742413.apply (289 samples, 3.99%)</title><rect x="48.0" y="739.0" width="47.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.0" y="750.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (289 samples, 3.99%)</title><rect x="48.0" y="723.0" width="47.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.0" y="734.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (289 samples, 3.99%)</title><rect x="48.0" y="707.0" width="47.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.0" y="718.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.06%)</title><rect x="48.2" y="691.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="48.3" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.03%)</title><rect x="48.8" y="691.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="51.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (259 samples, 3.58%)</title><rect x="49.1" y="691.0" width="42.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.1" y="702.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (259 samples, 3.58%)</title><rect x="49.1" y="675.0" width="42.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.1" y="686.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (2 samples, 0.03%)</title><rect x="49.6" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.03%)</title><rect x="49.9" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$281/1002612192.apply (249 samples, 3.44%)</title><rect x="50.3" y="659.0" width="40.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.3" y="670.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (248 samples, 3.43%)</title><rect x="50.4" y="643.0" width="40.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="53.4" y="654.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="50.9" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (6 samples, 0.08%)</title><rect x="51.3" y="627.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="54.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.07%)</title><rect x="51.4" y="611.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.07%)</title><rect x="51.4" y="595.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.07%)</title><rect x="51.4" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.03%)</title><rect x="51.4" y="563.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$101/1041365481.getAsBoolean (2 samples, 0.03%)</title><rect x="51.4" y="547.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isSelectorThread (2 samples, 0.03%)</title><rect x="51.4" y="531.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.03%)</title><rect x="51.7" y="563.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.03%)</title><rect x="51.7" y="547.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (103 samples, 1.42%)</title><rect x="52.2" y="627.0" width="16.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (103 samples, 1.42%)</title><rect x="52.2" y="611.0" width="16.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="55.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (10 samples, 0.14%)</title><rect x="52.4" y="595.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (10 samples, 0.14%)</title><rect x="52.4" y="579.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (9 samples, 0.12%)</title><rect x="52.6" y="563.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.04%)</title><rect x="53.2" y="547.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="56.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.04%)</title><rect x="53.2" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.03%)</title><rect x="53.4" y="515.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.03%)</title><rect x="53.4" y="499.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.4" y="510.0"></text>
</g>
<g>
<title>__write (2 samples, 0.03%)</title><rect x="53.4" y="483.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="56.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (2 samples, 0.03%)</title><rect x="53.7" y="547.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (92 samples, 1.27%)</title><rect x="54.0" y="595.0" width="15.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (92 samples, 1.27%)</title><rect x="54.0" y="579.0" width="15.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.0" y="590.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="54.3" y="563.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="57.3" y="574.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.03%)</title><rect x="54.3" y="547.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="57.3" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="54.3" y="531.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="57.3" y="542.0"></text>
</g>
<g>
<title>system_call_fastpath (2 samples, 0.03%)</title><rect x="54.3" y="515.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="57.3" y="526.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="54.3" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="57.3" y="510.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="54.3" y="483.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="57.3" y="494.0"></text>
</g>
<g>
<title>futex_wake_op (2 samples, 0.03%)</title><rect x="54.3" y="467.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="57.3" y="478.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="54.3" y="451.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="57.3" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="54.3" y="435.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="57.3" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="54.3" y="419.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="57.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (82 samples, 1.13%)</title><rect x="54.7" y="563.0" width="13.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="57.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (81 samples, 1.12%)</title><rect x="54.8" y="547.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (81 samples, 1.12%)</title><rect x="54.8" y="531.0" width="13.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.06%)</title><rect x="55.3" y="515.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (74 samples, 1.02%)</title><rect x="56.0" y="515.0" width="12.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.0" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (73 samples, 1.01%)</title><rect x="56.1" y="499.0" width="11.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.1" y="510.0"></text>
</g>
<g>
<title>__write (69 samples, 0.95%)</title><rect x="56.6" y="483.0" width="11.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="59.6" y="494.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.03%)</title><rect x="57.6" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="60.6" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.03%)</title><rect x="57.6" y="451.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="60.6" y="462.0"></text>
</g>
<g>
<title>system_call_fastpath (58 samples, 0.80%)</title><rect x="58.4" y="467.0" width="9.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="61.4" y="478.0"></text>
</g>
<g>
<title>sys_write (58 samples, 0.80%)</title><rect x="58.4" y="451.0" width="9.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="61.4" y="462.0"></text>
</g>
<g>
<title>fget_light (3 samples, 0.04%)</title><rect x="58.4" y="435.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="61.4" y="446.0"></text>
</g>
<g>
<title>vfs_write (55 samples, 0.76%)</title><rect x="58.9" y="435.0" width="9.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="61.9" y="446.0"></text>
</g>
<g>
<title>do_sync_write (49 samples, 0.68%)</title><rect x="59.1" y="419.0" width="8.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="62.1" y="430.0"></text>
</g>
<g>
<title>pipe_write (49 samples, 0.68%)</title><rect x="59.1" y="403.0" width="8.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="62.1" y="414.0"></text>
</g>
<g>
<title>__wake_up_sync_key (44 samples, 0.61%)</title><rect x="59.6" y="387.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="62.6" y="398.0"></text>
</g>
<g>
<title>__wake_up_common_lock (44 samples, 0.61%)</title><rect x="59.6" y="371.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="62.6" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (44 samples, 0.61%)</title><rect x="59.6" y="355.0" width="7.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="62.6" y="366.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.07%)</title><rect x="67.1" y="419.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="70.1" y="430.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.06%)</title><rect x="67.2" y="403.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="70.2" y="414.0"></text>
</g>
<g>
<title>selinux_file_permission (3 samples, 0.04%)</title><rect x="67.4" y="387.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="70.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (6 samples, 0.08%)</title><rect x="68.0" y="563.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (134 samples, 1.85%)</title><rect x="69.0" y="627.0" width="21.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.0" y="638.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.04%)</title><rect x="69.4" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.4" y="622.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.04%)</title><rect x="69.4" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (101 samples, 1.40%)</title><rect x="70.0" y="611.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.08%)</title><rect x="70.0" y="595.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.0" y="606.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.08%)</title><rect x="70.0" y="579.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.07%)</title><rect x="70.2" y="563.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="73.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (6 samples, 0.08%)</title><rect x="71.1" y="595.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.1" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.06%)</title><rect x="71.1" y="579.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.1" y="590.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.06%)</title><rect x="71.1" y="563.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.06%)</title><rect x="71.1" y="547.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.1" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.06%)</title><rect x="71.1" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.1" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.06%)</title><rect x="71.1" y="515.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="74.1" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.03%)</title><rect x="71.8" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (43 samples, 0.59%)</title><rect x="72.1" y="595.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="74.1" y="579.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.1" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="74.1" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.1" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.03%)</title><rect x="74.1" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="74.1" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.1" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (6 samples, 0.08%)</title><rect x="74.4" y="579.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.4" y="590.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (6 samples, 0.08%)</title><rect x="74.4" y="563.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.4" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (6 samples, 0.08%)</title><rect x="74.4" y="547.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.4" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (6 samples, 0.08%)</title><rect x="74.4" y="531.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.4" y="542.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$307/2143406581.test (17 samples, 0.23%)</title><rect x="75.4" y="579.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.4" y="590.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="75.7" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.7" y="574.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (13 samples, 0.18%)</title><rect x="76.0" y="563.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$78/2089016471.test (13 samples, 0.18%)</title><rect x="76.0" y="547.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (13 samples, 0.18%)</title><rect x="76.0" y="531.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.0" y="542.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$67/2082351774.test (13 samples, 0.18%)</title><rect x="76.0" y="515.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.0" y="526.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (13 samples, 0.18%)</title><rect x="76.0" y="499.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$66/961160488.test (13 samples, 0.18%)</title><rect x="76.0" y="483.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (13 samples, 0.18%)</title><rect x="76.0" y="467.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.0" y="478.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (9 samples, 0.12%)</title><rect x="76.0" y="451.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.0" y="462.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.12%)</title><rect x="76.0" y="435.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.0" y="446.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="76.0" y="419.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.04%)</title><rect x="76.0" y="403.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.0" y="414.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.08%)</title><rect x="76.5" y="419.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.5" y="430.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.06%)</title><rect x="76.7" y="403.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.7" y="414.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.04%)</title><rect x="76.9" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.9" y="398.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (3 samples, 0.04%)</title><rect x="76.9" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.9" y="382.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (3 samples, 0.04%)</title><rect x="76.9" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.9" y="366.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.06%)</title><rect x="77.5" y="451.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.06%)</title><rect x="77.5" y="435.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.5" y="446.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.06%)</title><rect x="77.5" y="419.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.5" y="430.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.04%)</title><rect x="77.7" y="403.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.7" y="414.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (3 samples, 0.04%)</title><rect x="77.7" y="387.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="80.7" y="398.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.08%)</title><rect x="78.2" y="579.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="81.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (45 samples, 0.62%)</title><rect x="79.1" y="595.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.1" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (45 samples, 0.62%)</title><rect x="79.1" y="579.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.1" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (44 samples, 0.61%)</title><rect x="79.3" y="563.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (35 samples, 0.48%)</title><rect x="80.8" y="547.0" width="5.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.8" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (33 samples, 0.46%)</title><rect x="81.1" y="531.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (33 samples, 0.46%)</title><rect x="81.1" y="515.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.1" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (20 samples, 0.28%)</title><rect x="81.6" y="499.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.6" y="510.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.06%)</title><rect x="82.7" y="483.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="85.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (8 samples, 0.11%)</title><rect x="83.4" y="483.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (8 samples, 0.11%)</title><rect x="83.4" y="467.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.4" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.12%)</title><rect x="84.8" y="499.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.8" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.04%)</title><rect x="85.8" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="88.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (4 samples, 0.06%)</title><rect x="86.6" y="611.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="86.8" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.04%)</title><rect x="86.8" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="89.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1667148529.invoke (3 samples, 0.04%)</title><rect x="86.8" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="86.8" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (4 samples, 0.06%)</title><rect x="87.4" y="611.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (3 samples, 0.04%)</title><rect x="87.6" y="595.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (17 samples, 0.23%)</title><rect x="88.1" y="611.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.1" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.06%)</title><rect x="88.3" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.3" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.06%)</title><rect x="88.3" y="579.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.3" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.03%)</title><rect x="88.4" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.4" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (12 samples, 0.17%)</title><rect x="88.9" y="595.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="89.7" y="579.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="89.7" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="92.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.03%)</title><rect x="89.7" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="92.7" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (5 samples, 0.07%)</title><rect x="90.1" y="579.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="91.0" y="659.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="91.0" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (23 samples, 0.32%)</title><rect x="91.4" y="691.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (19 samples, 0.26%)</title><rect x="91.9" y="675.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (19 samples, 0.26%)</title><rect x="91.9" y="659.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.25%)</title><rect x="92.0" y="643.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (2 samples, 0.03%)</title><rect x="92.0" y="627.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (16 samples, 0.22%)</title><rect x="92.3" y="627.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (16 samples, 0.22%)</title><rect x="92.3" y="611.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="95.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (12 samples, 0.17%)</title><rect x="92.3" y="595.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="95.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$236/621309814.run (10 samples, 0.14%)</title><rect x="92.3" y="579.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (10 samples, 0.14%)</title><rect x="92.3" y="563.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="95.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.07%)</title><rect x="92.5" y="547.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (3 samples, 0.04%)</title><rect x="92.8" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="95.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (3 samples, 0.04%)</title><rect x="93.3" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.03%)</title><rect x="93.5" y="531.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.03%)</title><rect x="94.0" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (4 samples, 0.06%)</title><rect x="94.3" y="595.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.03%)</title><rect x="94.6" y="579.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.07%)</title><rect x="95.1" y="835.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="98.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.06%)</title><rect x="95.3" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.3" y="830.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="95.3" y="803.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="98.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (234 samples, 3.23%)</title><rect x="95.9" y="835.0" width="38.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.9" y="846.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (7 samples, 0.10%)</title><rect x="96.3" y="819.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (7 samples, 0.10%)</title><rect x="96.3" y="803.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (2 samples, 0.03%)</title><rect x="96.3" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.03%)</title><rect x="96.6" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$243/1828731342.apply (3 samples, 0.04%)</title><rect x="96.9" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="99.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="97.4" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.04%)</title><rect x="97.4" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.4" y="814.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="97.4" y="787.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="100.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (222 samples, 3.07%)</title><rect x="97.9" y="819.0" width="36.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="100.9" y="830.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (206 samples, 2.85%)</title><rect x="97.9" y="803.0" width="33.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.9" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (206 samples, 2.85%)</title><rect x="97.9" y="787.0" width="33.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.9" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (206 samples, 2.85%)</title><rect x="97.9" y="771.0" width="33.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.9" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="98.0" y="755.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.03%)</title><rect x="98.0" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.03%)</title><rect x="98.0" y="723.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="101.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.03%)</title><rect x="98.0" y="707.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.03%)</title><rect x="98.0" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="98.0" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$176/978711598.apply (203 samples, 2.81%)</title><rect x="98.4" y="755.0" width="33.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.4" y="766.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (203 samples, 2.81%)</title><rect x="98.4" y="739.0" width="33.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.4" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (203 samples, 2.81%)</title><rect x="98.4" y="723.0" width="33.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.4" y="734.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (85 samples, 1.17%)</title><rect x="98.9" y="707.0" width="13.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="101.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (85 samples, 1.17%)</title><rect x="98.9" y="691.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (85 samples, 1.17%)</title><rect x="98.9" y="675.0" width="13.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$239/1587750339.apply (82 samples, 1.13%)</title><rect x="98.9" y="659.0" width="13.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (82 samples, 1.13%)</title><rect x="98.9" y="643.0" width="13.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (82 samples, 1.13%)</title><rect x="98.9" y="627.0" width="13.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (81 samples, 1.12%)</title><rect x="99.0" y="611.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (56 samples, 0.77%)</title><rect x="99.2" y="595.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="102.2" y="606.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (2 samples, 0.03%)</title><rect x="99.2" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (53 samples, 0.73%)</title><rect x="99.5" y="579.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (53 samples, 0.73%)</title><rect x="99.5" y="563.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (52 samples, 0.72%)</title><rect x="99.7" y="547.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/815320891.linkToTargetMethod (2 samples, 0.03%)</title><rect x="99.7" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="99.7" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/1778629809.get$Lambda (2 samples, 0.03%)</title><rect x="99.7" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/1778629809.&lt;init&gt; (2 samples, 0.03%)</title><rect x="99.7" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.7" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (50 samples, 0.69%)</title><rect x="100.0" y="531.0" width="8.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.0" y="542.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (42 samples, 0.58%)</title><rect x="100.2" y="515.0" width="6.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="103.2" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.08%)</title><rect x="100.5" y="499.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="103.5" y="510.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (2 samples, 0.03%)</title><rect x="100.8" y="483.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="103.8" y="494.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.04%)</title><rect x="101.5" y="499.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="104.5" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (2 samples, 0.03%)</title><rect x="102.4" y="499.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="105.4" y="510.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.08%)</title><rect x="102.8" y="499.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="105.8" y="510.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.06%)</title><rect x="103.1" y="483.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="106.1" y="494.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.04%)</title><rect x="103.1" y="467.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="106.1" y="478.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (20 samples, 0.28%)</title><rect x="103.8" y="499.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="106.8" y="510.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.06%)</title><rect x="104.9" y="483.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="107.9" y="494.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (4 samples, 0.06%)</title><rect x="105.5" y="483.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="108.5" y="494.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.06%)</title><rect x="106.4" y="483.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="109.4" y="494.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.04%)</title><rect x="106.5" y="467.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="109.5" y="478.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="106.5" y="451.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="109.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/1778629809.run (7 samples, 0.10%)</title><rect x="107.0" y="515.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (7 samples, 0.10%)</title><rect x="107.0" y="499.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.0" y="510.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (7 samples, 0.10%)</title><rect x="107.0" y="483.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.0" y="494.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (3 samples, 0.04%)</title><rect x="107.0" y="467.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.0" y="478.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.04%)</title><rect x="107.0" y="451.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.0" y="462.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.04%)</title><rect x="107.0" y="435.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.04%)</title><rect x="107.0" y="419.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.0" y="430.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.06%)</title><rect x="107.5" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.06%)</title><rect x="107.5" y="451.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.5" y="462.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="107.8" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="107.8" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (24 samples, 0.33%)</title><rect x="108.3" y="595.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.3" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="108.5" y="579.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="111.5" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="108.5" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.5" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (2 samples, 0.03%)</title><rect x="108.5" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.5" y="558.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="108.5" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.07%)</title><rect x="108.8" y="579.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.8" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.07%)</title><rect x="108.8" y="563.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.8" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.06%)</title><rect x="109.0" y="547.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.06%)</title><rect x="109.0" y="531.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.0" y="542.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (3 samples, 0.04%)</title><rect x="109.1" y="515.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.1" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (16 samples, 0.22%)</title><rect x="109.6" y="579.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="112.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.11%)</title><rect x="110.8" y="563.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (8 samples, 0.11%)</title><rect x="110.8" y="547.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (8 samples, 0.11%)</title><rect x="110.8" y="531.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.04%)</title><rect x="112.2" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.04%)</title><rect x="112.2" y="643.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="115.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$239/1587750339.apply (2 samples, 0.03%)</title><rect x="112.4" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (115 samples, 1.59%)</title><rect x="112.7" y="707.0" width="18.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="115.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (114 samples, 1.58%)</title><rect x="112.9" y="691.0" width="18.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="115.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="113.4" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.4" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="113.4" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (2 samples, 0.03%)</title><rect x="113.7" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (12 samples, 0.17%)</title><rect x="114.0" y="675.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2 samples, 0.03%)</title><rect x="114.5" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2 samples, 0.03%)</title><rect x="114.5" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (7 samples, 0.10%)</title><rect x="114.8" y="659.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (7 samples, 0.10%)</title><rect x="114.8" y="643.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (7 samples, 0.10%)</title><rect x="114.8" y="627.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (7 samples, 0.10%)</title><rect x="114.8" y="611.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="117.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (7 samples, 0.10%)</title><rect x="114.8" y="595.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (3 samples, 0.04%)</title><rect x="116.0" y="675.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (7 samples, 0.10%)</title><rect x="116.5" y="675.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (6 samples, 0.08%)</title><rect x="116.6" y="659.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (5 samples, 0.07%)</title><rect x="116.8" y="643.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.8" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.04%)</title><rect x="117.0" y="627.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.04%)</title><rect x="117.0" y="611.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="120.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (3 samples, 0.04%)</title><rect x="117.0" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.0" y="606.0"></text>
</g>
<g>
<title>java/util/Objects.equals (2 samples, 0.03%)</title><rect x="117.1" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="120.1" y="590.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (2 samples, 0.03%)</title><rect x="117.1" y="563.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="120.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (84 samples, 1.16%)</title><rect x="117.6" y="675.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="120.6" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (84 samples, 1.16%)</title><rect x="117.6" y="659.0" width="13.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.6" y="670.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (54 samples, 0.75%)</title><rect x="118.1" y="643.0" width="8.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="121.1" y="654.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (15 samples, 0.21%)</title><rect x="119.9" y="627.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="122.9" y="638.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.03%)</title><rect x="120.9" y="611.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="123.9" y="622.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (2 samples, 0.03%)</title><rect x="121.2" y="611.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="124.2" y="622.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.03%)</title><rect x="121.5" y="611.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="124.5" y="622.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (3 samples, 0.04%)</title><rect x="121.9" y="611.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="124.9" y="622.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="122.3" y="627.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="125.3" y="638.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.03%)</title><rect x="122.7" y="627.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="125.7" y="638.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (10 samples, 0.14%)</title><rect x="123.8" y="627.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="126.8" y="638.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.04%)</title><rect x="124.5" y="611.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="127.5" y="622.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.04%)</title><rect x="124.5" y="595.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="127.5" y="606.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (3 samples, 0.04%)</title><rect x="125.0" y="611.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="128.0" y="622.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (9 samples, 0.12%)</title><rect x="125.4" y="627.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="128.4" y="638.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.04%)</title><rect x="126.1" y="611.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="129.1" y="622.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (3 samples, 0.04%)</title><rect x="126.1" y="595.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="129.1" y="606.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.03%)</title><rect x="126.6" y="611.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="129.6" y="622.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (4 samples, 0.06%)</title><rect x="127.1" y="643.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="130.1" y="654.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.04%)</title><rect x="127.7" y="643.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="130.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$184/548214908.run (19 samples, 0.26%)</title><rect x="128.2" y="643.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (16 samples, 0.22%)</title><rect x="128.7" y="627.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.7" y="638.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (16 samples, 0.22%)</title><rect x="128.7" y="611.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.7" y="622.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (15 samples, 0.21%)</title><rect x="128.9" y="595.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.9" y="606.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (15 samples, 0.21%)</title><rect x="128.9" y="579.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="131.9" y="590.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (15 samples, 0.21%)</title><rect x="128.9" y="563.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.9" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.04%)</title><rect x="129.0" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="132.0" y="558.0"></text>
</g>
<g>
<title>java/lang/Character.digit (3 samples, 0.04%)</title><rect x="129.0" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.0" y="542.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (3 samples, 0.04%)</title><rect x="129.0" y="515.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.0" y="526.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="129.5" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.5" y="558.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (9 samples, 0.12%)</title><rect x="129.8" y="547.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.8" y="558.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.03%)</title><rect x="130.0" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (5 samples, 0.07%)</title><rect x="130.5" y="531.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.5" y="542.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.03%)</title><rect x="130.7" y="515.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="133.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.06%)</title><rect x="131.5" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.06%)</title><rect x="131.5" y="787.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="134.5" y="798.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$34/1702660825.apply (2 samples, 0.03%)</title><rect x="131.8" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="134.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.version (3 samples, 0.04%)</title><rect x="132.1" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.version (2 samples, 0.03%)</title><rect x="132.3" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.proxy (2 samples, 0.03%)</title><rect x="132.3" y="771.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="135.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="132.3" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (8 samples, 0.11%)</title><rect x="132.6" y="803.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (7 samples, 0.10%)</title><rect x="132.8" y="787.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.06%)</title><rect x="132.8" y="771.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="132.8" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (3 samples, 0.04%)</title><rect x="133.4" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2043317551.linkToTargetMethod (2 samples, 0.03%)</title><rect x="133.6" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/369852026.invoke (2 samples, 0.03%)</title><rect x="133.6" y="739.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (150 samples, 2.07%)</title><rect x="134.2" y="883.0" width="24.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.2" y="894.0">j..</text>
</g>
<g>
<title>java/util/TreeSet.add (12 samples, 0.17%)</title><rect x="135.1" y="867.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.1" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.07%)</title><rect x="135.2" y="851.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="138.2" y="862.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (5 samples, 0.07%)</title><rect x="135.2" y="835.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="138.2" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.04%)</title><rect x="135.4" y="819.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="138.4" y="830.0"></text>
</g>
<g>
<title>system_call_fastpath (2 samples, 0.03%)</title><rect x="135.5" y="803.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="138.5" y="814.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="135.5" y="787.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="138.5" y="798.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="135.5" y="771.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="138.5" y="782.0"></text>
</g>
<g>
<title>futex_wake_op (2 samples, 0.03%)</title><rect x="135.5" y="755.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="138.5" y="766.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="135.5" y="739.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.5" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="135.5" y="723.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="138.5" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="135.5" y="707.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="138.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.06%)</title><rect x="136.0" y="851.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="136.0" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="136.0" y="819.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.03%)</title><rect x="136.0" y="803.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="139.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (2 samples, 0.03%)</title><rect x="136.7" y="851.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="139.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (132 samples, 1.82%)</title><rect x="137.0" y="867.0" width="21.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.0" y="878.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (129 samples, 1.78%)</title><rect x="137.5" y="851.0" width="21.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.5" y="862.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (124 samples, 1.71%)</title><rect x="138.3" y="835.0" width="20.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.3" y="846.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (2 samples, 0.03%)</title><rect x="138.3" y="819.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="141.3" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.06%)</title><rect x="138.6" y="819.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="141.6" y="830.0"></text>
</g>
<g>
<title>system_call_after_swapgs (4 samples, 0.06%)</title><rect x="138.6" y="803.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="141.6" y="814.0"></text>
</g>
<g>
<title>__write (117 samples, 1.62%)</title><rect x="139.5" y="819.0" width="19.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="142.5" y="830.0"></text>
</g>
<g>
<title>auditsys (3 samples, 0.04%)</title><rect x="140.4" y="803.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="143.4" y="814.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.04%)</title><rect x="140.4" y="787.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="143.4" y="798.0"></text>
</g>
<g>
<title>system_call_fastpath (108 samples, 1.49%)</title><rect x="140.9" y="803.0" width="17.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="143.9" y="814.0"></text>
</g>
<g>
<title>sys_write (108 samples, 1.49%)</title><rect x="140.9" y="787.0" width="17.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="143.9" y="798.0"></text>
</g>
<g>
<title>fget_light (7 samples, 0.10%)</title><rect x="141.1" y="771.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="144.1" y="782.0"></text>
</g>
<g>
<title>vfs_write (100 samples, 1.38%)</title><rect x="142.2" y="771.0" width="16.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="145.2" y="782.0"></text>
</g>
<g>
<title>do_sync_write (88 samples, 1.22%)</title><rect x="142.6" y="755.0" width="14.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="145.6" y="766.0"></text>
</g>
<g>
<title>pipe_write (87 samples, 1.20%)</title><rect x="142.7" y="739.0" width="14.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="145.7" y="750.0"></text>
</g>
<g>
<title>__sb_start_write (3 samples, 0.04%)</title><rect x="143.4" y="723.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="146.4" y="734.0"></text>
</g>
<g>
<title>__wake_up_sync_key (68 samples, 0.94%)</title><rect x="143.9" y="723.0" width="11.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="146.9" y="734.0"></text>
</g>
<g>
<title>__wake_up_common_lock (68 samples, 0.94%)</title><rect x="143.9" y="707.0" width="11.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="146.9" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (67 samples, 0.93%)</title><rect x="144.0" y="691.0" width="11.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="147.0" y="702.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.04%)</title><rect x="155.3" y="723.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="158.3" y="734.0"></text>
</g>
<g>
<title>update_time (2 samples, 0.03%)</title><rect x="155.4" y="707.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="158.4" y="718.0"></text>
</g>
<g>
<title>pipe_iov_copy_from_user.constprop.9 (7 samples, 0.10%)</title><rect x="155.8" y="723.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="158.8" y="734.0"></text>
</g>
<g>
<title>__check_object_size (6 samples, 0.08%)</title><rect x="155.8" y="707.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="158.8" y="718.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="156.3" y="691.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="159.3" y="702.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.03%)</title><rect x="156.9" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="159.9" y="766.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.11%)</title><rect x="157.2" y="755.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="160.2" y="766.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.10%)</title><rect x="157.4" y="739.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="160.4" y="750.0"></text>
</g>
<g>
<title>selinux_file_permission (6 samples, 0.08%)</title><rect x="157.6" y="723.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="160.6" y="734.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.03%)</title><rect x="158.1" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="161.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (19 samples, 0.26%)</title><rect x="158.9" y="883.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="161.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (13 samples, 0.18%)</title><rect x="159.5" y="867.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (11 samples, 0.15%)</title><rect x="159.8" y="851.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.8" y="862.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (9 samples, 0.12%)</title><rect x="160.2" y="835.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="163.2" y="846.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (6 samples, 0.08%)</title><rect x="160.7" y="819.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.7" y="830.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (6 samples, 0.08%)</title><rect x="160.7" y="803.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.7" y="814.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.03%)</title><rect x="161.1" y="787.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="164.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (2 samples, 0.03%)</title><rect x="161.6" y="867.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="164.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (19 samples, 0.26%)</title><rect x="162.0" y="883.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="165.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (19 samples, 0.26%)</title><rect x="162.0" y="867.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (7 samples, 0.10%)</title><rect x="162.0" y="851.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="165.0" y="862.0"></text>
</g>
<g>
<title>java/util/Optional.of (7 samples, 0.10%)</title><rect x="162.0" y="835.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="165.0" y="846.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (6 samples, 0.08%)</title><rect x="162.1" y="819.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="165.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (12 samples, 0.17%)</title><rect x="163.1" y="851.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.1" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.now (9 samples, 0.12%)</title><rect x="163.4" y="835.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.4" y="846.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (9 samples, 0.12%)</title><rect x="163.4" y="819.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (8 samples, 0.11%)</title><rect x="163.6" y="803.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.6" y="814.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.06%)</title><rect x="164.2" y="787.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="167.2" y="798.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="164.4" y="771.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="167.4" y="782.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.04%)</title><rect x="165.1" y="947.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="168.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (7 samples, 0.10%)</title><rect x="165.7" y="979.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="168.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.10%)</title><rect x="165.7" y="963.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="168.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (8 samples, 0.11%)</title><rect x="166.9" y="979.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="169.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.10%)</title><rect x="167.0" y="963.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (4 samples, 0.06%)</title><rect x="167.2" y="947.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.2" y="958.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="167.8" y="947.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="170.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (901 samples, 12.45%)</title><rect x="168.3" y="979.0" width="146.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="171.3" y="990.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (608 samples, 8.40%)</title><rect x="170.4" y="963.0" width="99.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="173.4" y="974.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (603 samples, 8.33%)</title><rect x="170.8" y="947.0" width="98.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="173.8" y="958.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (5 samples, 0.07%)</title><rect x="176.3" y="931.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="179.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.07%)</title><rect x="176.3" y="915.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (557 samples, 7.70%)</title><rect x="177.1" y="931.0" width="90.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.1" y="942.0">java/util/..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="180.6" y="915.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="183.6" y="926.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.03%)</title><rect x="180.6" y="899.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="183.6" y="910.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="180.9" y="915.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="183.9" y="926.0"></text>
</g>
<g>
<title>__clock_gettime (45 samples, 0.62%)</title><rect x="181.2" y="915.0" width="7.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="184.2" y="926.0"></text>
</g>
<g>
<title>[vdso] (36 samples, 0.50%)</title><rect x="182.7" y="899.0" width="5.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="185.7" y="910.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.06%)</title><rect x="188.5" y="915.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="188.9" y="899.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="191.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.shouldSpin (7 samples, 0.10%)</title><rect x="189.2" y="915.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (471 samples, 6.51%)</title><rect x="190.3" y="915.0" width="76.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.3" y="926.0">java/uti..</text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="195.2" y="899.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="198.2" y="910.0"></text>
</g>
<g>
<title>__clock_gettime (18 samples, 0.25%)</title><rect x="195.6" y="899.0" width="2.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="198.6" y="910.0"></text>
</g>
<g>
<title>[vdso] (17 samples, 0.23%)</title><rect x="195.7" y="883.0" width="2.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="198.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (2 samples, 0.03%)</title><rect x="198.5" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="201.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (415 samples, 5.73%)</title><rect x="198.8" y="899.0" width="67.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.8" y="910.0">jdk/int..</text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.04%)</title><rect x="199.8" y="883.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="202.8" y="894.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="200.3" y="883.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="203.3" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (5 samples, 0.07%)</title><rect x="200.6" y="883.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="203.6" y="894.0"></text>
</g>
<g>
<title>Unsafe_Park (370 samples, 5.11%)</title><rect x="201.4" y="883.0" width="60.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="204.4" y="894.0">Unsafe..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.03%)</title><rect x="203.1" y="867.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="206.1" y="878.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (6 samples, 0.08%)</title><rect x="203.4" y="867.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="206.4" y="878.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="204.4" y="867.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="207.4" y="878.0"></text>
</g>
<g>
<title>Monitor::unlock() (4 samples, 0.06%)</title><rect x="204.7" y="867.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="207.7" y="878.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (96 samples, 1.33%)</title><rect x="205.3" y="867.0" width="15.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="208.3" y="878.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (38 samples, 0.53%)</title><rect x="208.8" y="851.0" width="6.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="211.8" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (2 samples, 0.03%)</title><rect x="211.0" y="835.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="214.0" y="846.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (8 samples, 0.11%)</title><rect x="211.4" y="835.0" width="1.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="214.4" y="846.0"></text>
</g>
<g>
<title>update_get_addr (14 samples, 0.19%)</title><rect x="212.7" y="835.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="215.7" y="846.0"></text>
</g>
<g>
<title>Monitor::unlock() (3 samples, 0.04%)</title><rect x="215.0" y="851.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="218.0" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr (24 samples, 0.33%)</title><rect x="215.4" y="851.0" width="4.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="218.4" y="862.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (3 samples, 0.04%)</title><rect x="219.5" y="851.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="222.5" y="862.0"></text>
</g>
<g>
<title>update_get_addr (4 samples, 0.06%)</title><rect x="220.3" y="851.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="223.3" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.08%)</title><rect x="221.0" y="867.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="224.0" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (5 samples, 0.07%)</title><rect x="222.0" y="867.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="225.0" y="878.0"></text>
</g>
<g>
<title>_L_unlock_738 (4 samples, 0.06%)</title><rect x="222.8" y="867.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="225.8" y="878.0"></text>
</g>
<g>
<title>__lll_unlock_wake (96 samples, 1.33%)</title><rect x="223.4" y="867.0" width="15.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="226.4" y="878.0"></text>
</g>
<g>
<title>__audit_syscall_entry (5 samples, 0.07%)</title><rect x="227.7" y="851.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="230.7" y="862.0"></text>
</g>
<g>
<title>auditsys (6 samples, 0.08%)</title><rect x="228.7" y="851.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="231.7" y="862.0"></text>
</g>
<g>
<title>__audit_syscall_entry (6 samples, 0.08%)</title><rect x="228.7" y="835.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="231.7" y="846.0"></text>
</g>
<g>
<title>sysret_audit (6 samples, 0.08%)</title><rect x="229.6" y="851.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="232.6" y="862.0"></text>
</g>
<g>
<title>__audit_syscall_exit (6 samples, 0.08%)</title><rect x="229.6" y="835.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="232.6" y="846.0"></text>
</g>
<g>
<title>unroll_tree_refs (2 samples, 0.03%)</title><rect x="230.3" y="819.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="233.3" y="830.0"></text>
</g>
<g>
<title>sysret_signal (2 samples, 0.03%)</title><rect x="230.6" y="851.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="233.6" y="862.0"></text>
</g>
<g>
<title>system_call_fastpath (49 samples, 0.68%)</title><rect x="231.1" y="851.0" width="8.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="234.1" y="862.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="231.1" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="234.1" y="846.0"></text>
</g>
<g>
<title>sys_futex (47 samples, 0.65%)</title><rect x="231.4" y="835.0" width="7.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="234.4" y="846.0"></text>
</g>
<g>
<title>do_futex (45 samples, 0.62%)</title><rect x="231.7" y="819.0" width="7.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="234.7" y="830.0"></text>
</g>
<g>
<title>_raw_qspin_lock (2 samples, 0.03%)</title><rect x="232.6" y="803.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="235.6" y="814.0"></text>
</g>
<g>
<title>futex_wake (31 samples, 0.43%)</title><rect x="233.1" y="803.0" width="5.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="236.1" y="814.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.04%)</title><rect x="237.5" y="787.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="240.5" y="798.0"></text>
</g>
<g>
<title>hash_futex (5 samples, 0.07%)</title><rect x="238.3" y="803.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="241.3" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (109 samples, 1.51%)</title><rect x="239.1" y="867.0" width="17.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="242.1" y="878.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.04%)</title><rect x="240.9" y="851.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="243.9" y="862.0"></text>
</g>
<g>
<title>auditsys (16 samples, 0.22%)</title><rect x="241.4" y="851.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="244.4" y="862.0"></text>
</g>
<g>
<title>__audit_syscall_entry (16 samples, 0.22%)</title><rect x="241.4" y="835.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="244.4" y="846.0"></text>
</g>
<g>
<title>sys_futex (3 samples, 0.04%)</title><rect x="244.0" y="851.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="247.0" y="862.0"></text>
</g>
<g>
<title>system_call_fastpath (75 samples, 1.04%)</title><rect x="244.6" y="851.0" width="12.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="247.6" y="862.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="244.8" y="835.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="247.8" y="846.0"></text>
</g>
<g>
<title>sys_futex (72 samples, 0.99%)</title><rect x="245.1" y="835.0" width="11.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="248.1" y="846.0"></text>
</g>
<g>
<title>__check_object_size (7 samples, 0.10%)</title><rect x="245.3" y="819.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="248.3" y="830.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.04%)</title><rect x="245.9" y="803.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="248.9" y="814.0"></text>
</g>
<g>
<title>do_futex (59 samples, 0.82%)</title><rect x="246.4" y="819.0" width="9.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="249.4" y="830.0"></text>
</g>
<g>
<title>futex_wait (51 samples, 0.70%)</title><rect x="246.9" y="803.0" width="8.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="249.9" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (38 samples, 0.53%)</title><rect x="247.2" y="787.0" width="6.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="250.2" y="798.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (28 samples, 0.39%)</title><rect x="247.7" y="771.0" width="4.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="250.7" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (27 samples, 0.37%)</title><rect x="247.7" y="755.0" width="4.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="250.7" y="766.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.20 (2 samples, 0.03%)</title><rect x="252.3" y="771.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="255.3" y="782.0"></text>
</g>
<g>
<title>plist_add (4 samples, 0.06%)</title><rect x="252.6" y="771.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="255.6" y="782.0"></text>
</g>
<g>
<title>futex_wait_setup (7 samples, 0.10%)</title><rect x="253.4" y="787.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="256.4" y="798.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="254.3" y="771.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="257.3" y="782.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.12 (2 samples, 0.03%)</title><rect x="254.3" y="755.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="257.3" y="766.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (2 samples, 0.03%)</title><rect x="255.4" y="803.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="258.4" y="814.0"></text>
</g>
<g>
<title>ktime_add_safe (2 samples, 0.03%)</title><rect x="255.7" y="803.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="258.7" y="814.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="256.0" y="819.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="259.0" y="830.0"></text>
</g>
<g>
<title>static_key_enabled (3 samples, 0.04%)</title><rect x="256.4" y="819.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="259.4" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (6 samples, 0.08%)</title><rect x="257.0" y="867.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="260.0" y="878.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="258.0" y="867.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="261.0" y="878.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="258.5" y="867.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="261.5" y="878.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (4 samples, 0.06%)</title><rect x="259.0" y="867.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="262.0" y="878.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (9 samples, 0.12%)</title><rect x="259.6" y="867.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="262.6" y="878.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (3 samples, 0.04%)</title><rect x="261.3" y="867.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="264.3" y="878.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.08%)</title><rect x="261.8" y="883.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="264.8" y="894.0"></text>
</g>
<g>
<title>system_call_after_swapgs (6 samples, 0.08%)</title><rect x="261.8" y="867.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="264.8" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.06%)</title><rect x="262.7" y="883.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="265.7" y="894.0"></text>
</g>
<g>
<title>system_call_after_swapgs (4 samples, 0.06%)</title><rect x="262.7" y="867.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="265.7" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (5 samples, 0.07%)</title><rect x="263.4" y="883.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="266.4" y="894.0"></text>
</g>
<g>
<title>system_call_after_swapgs (5 samples, 0.07%)</title><rect x="263.4" y="867.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="266.4" y="878.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.03%)</title><rect x="264.2" y="883.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="267.2" y="894.0"></text>
</g>
<g>
<title>__write (3 samples, 0.04%)</title><rect x="264.5" y="883.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="267.5" y="894.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.04%)</title><rect x="264.5" y="867.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="267.5" y="878.0"></text>
</g>
<g>
<title>__writev (4 samples, 0.06%)</title><rect x="265.0" y="883.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="268.0" y="894.0"></text>
</g>
<g>
<title>system_call_after_swapgs (4 samples, 0.06%)</title><rect x="265.0" y="867.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="268.0" y="878.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (5 samples, 0.07%)</title><rect x="265.7" y="883.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="268.7" y="894.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (4 samples, 0.06%)</title><rect x="266.5" y="899.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="269.5" y="910.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (5 samples, 0.07%)</title><rect x="267.1" y="915.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="270.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (5 samples, 0.07%)</title><rect x="267.9" y="931.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2 samples, 0.03%)</title><rect x="268.8" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.toNanos (3 samples, 0.04%)</title><rect x="269.1" y="947.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="272.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (279 samples, 3.86%)</title><rect x="269.6" y="963.0" width="45.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.6" y="974.0">java..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (7 samples, 0.10%)</title><rect x="269.7" y="947.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="272.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (271 samples, 3.74%)</title><rect x="270.9" y="947.0" width="44.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.9" y="958.0">java..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (2 samples, 0.03%)</title><rect x="272.7" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="275.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="272.7" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="275.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (254 samples, 3.51%)</title><rect x="273.0" y="931.0" width="41.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="276.0" y="942.0">jav..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.06%)</title><rect x="277.2" y="915.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.shouldSpin (45 samples, 0.62%)</title><rect x="277.9" y="915.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="280.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (179 samples, 2.47%)</title><rect x="285.2" y="915.0" width="29.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.2" y="926.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (135 samples, 1.87%)</title><rect x="292.4" y="899.0" width="22.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.4" y="910.0">j..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (3 samples, 0.04%)</title><rect x="292.7" y="883.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="295.7" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (2 samples, 0.03%)</title><rect x="293.2" y="883.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="296.2" y="894.0"></text>
</g>
<g>
<title>Unsafe_Park (120 samples, 1.66%)</title><rect x="293.5" y="883.0" width="19.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="296.5" y="894.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="294.4" y="867.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="297.4" y="878.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (44 samples, 0.61%)</title><rect x="294.9" y="867.0" width="7.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="297.9" y="878.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (16 samples, 0.22%)</title><rect x="297.0" y="851.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="300.0" y="862.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (4 samples, 0.06%)</title><rect x="298.1" y="835.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="301.1" y="846.0"></text>
</g>
<g>
<title>update_get_addr (5 samples, 0.07%)</title><rect x="298.8" y="835.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="301.8" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (13 samples, 0.18%)</title><rect x="299.7" y="851.0" width="2.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="302.7" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.229] (4 samples, 0.06%)</title><rect x="302.0" y="867.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="305.0" y="878.0"></text>
</g>
<g>
<title>__lll_unlock_wake (29 samples, 0.40%)</title><rect x="302.7" y="867.0" width="4.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="305.7" y="878.0"></text>
</g>
<g>
<title>sysret_audit (3 samples, 0.04%)</title><rect x="304.8" y="851.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="307.8" y="862.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.04%)</title><rect x="304.8" y="835.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="307.8" y="846.0"></text>
</g>
<g>
<title>system_call_fastpath (13 samples, 0.18%)</title><rect x="305.3" y="851.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="308.3" y="862.0"></text>
</g>
<g>
<title>sys_futex (12 samples, 0.17%)</title><rect x="305.4" y="835.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="308.4" y="846.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.15%)</title><rect x="305.4" y="819.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="308.4" y="830.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.12%)</title><rect x="305.4" y="803.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="308.4" y="814.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="306.9" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="309.9" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_wait (19 samples, 0.26%)</title><rect x="307.4" y="867.0" width="3.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="310.4" y="878.0"></text>
</g>
<g>
<title>system_call_fastpath (9 samples, 0.12%)</title><rect x="309.0" y="851.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="312.0" y="862.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.12%)</title><rect x="309.0" y="835.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="312.0" y="846.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.12%)</title><rect x="309.0" y="819.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="312.0" y="830.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.10%)</title><rect x="309.4" y="803.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="312.4" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="309.4" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="312.4" y="798.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.06%)</title><rect x="309.7" y="787.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="312.7" y="798.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.03%)</title><rect x="310.5" y="867.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="313.5" y="878.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.04%)</title><rect x="311.0" y="867.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="314.0" y="878.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (8 samples, 0.11%)</title><rect x="311.5" y="867.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="314.5" y="878.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="312.8" y="867.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="315.8" y="878.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.03%)</title><rect x="313.3" y="883.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="316.3" y="894.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.04%)</title><rect x="313.6" y="883.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="316.6" y="894.0"></text>
</g>
<g>
<title>send (2 samples, 0.03%)</title><rect x="314.1" y="883.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="317.1" y="894.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.03%)</title><rect x="314.1" y="867.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="317.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (4 samples, 0.06%)</title><rect x="314.4" y="931.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="317.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (2 samples, 0.03%)</title><rect x="315.4" y="979.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$309/1651102379.run (523 samples, 7.23%)</title><rect x="315.9" y="979.0" width="85.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="318.9" y="990.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (519 samples, 7.17%)</title><rect x="316.5" y="963.0" width="84.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="319.5" y="974.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (519 samples, 7.17%)</title><rect x="316.5" y="947.0" width="84.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="319.5" y="958.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (512 samples, 7.07%)</title><rect x="317.7" y="931.0" width="83.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.7" y="942.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (511 samples, 7.06%)</title><rect x="317.8" y="915.0" width="83.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="320.8" y="926.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (511 samples, 7.06%)</title><rect x="317.8" y="899.0" width="83.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="320.8" y="910.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (509 samples, 7.03%)</title><rect x="318.2" y="883.0" width="83.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="321.2" y="894.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (507 samples, 7.01%)</title><rect x="318.5" y="867.0" width="82.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.5" y="878.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (507 samples, 7.01%)</title><rect x="318.5" y="851.0" width="82.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.5" y="862.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (507 samples, 7.01%)</title><rect x="318.5" y="835.0" width="82.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="321.5" y="846.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (506 samples, 6.99%)</title><rect x="318.7" y="819.0" width="82.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.7" y="830.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (63 samples, 0.87%)</title><rect x="318.8" y="803.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="321.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (51 samples, 0.70%)</title><rect x="319.5" y="787.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="322.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.04%)</title><rect x="319.5" y="771.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="322.5" y="782.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (2 samples, 0.03%)</title><rect x="319.6" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="322.6" y="766.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (2 samples, 0.03%)</title><rect x="319.6" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="322.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (2 samples, 0.03%)</title><rect x="319.6" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="322.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (48 samples, 0.66%)</title><rect x="320.0" y="771.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="323.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (47 samples, 0.65%)</title><rect x="320.0" y="755.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (47 samples, 0.65%)</title><rect x="320.0" y="739.0" width="7.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="323.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (19 samples, 0.26%)</title><rect x="320.3" y="723.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="323.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (11 samples, 0.15%)</title><rect x="320.6" y="707.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="323.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (11 samples, 0.15%)</title><rect x="320.6" y="691.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="323.6" y="702.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.07%)</title><rect x="320.9" y="675.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="323.9" y="686.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$34/1702660825.apply (3 samples, 0.04%)</title><rect x="321.8" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="324.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$313/446652366.apply (6 samples, 0.08%)</title><rect x="322.4" y="707.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (5 samples, 0.07%)</title><rect x="322.4" y="691.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="325.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (5 samples, 0.07%)</title><rect x="322.4" y="675.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="325.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (5 samples, 0.07%)</title><rect x="322.4" y="659.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="322.4" y="643.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="325.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="322.4" y="627.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$324/669883057.get$Lambda (2 samples, 0.03%)</title><rect x="322.4" y="611.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$324/669883057.&lt;init&gt; (2 samples, 0.03%)</title><rect x="322.4" y="595.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3 samples, 0.04%)</title><rect x="322.7" y="643.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="325.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.04%)</title><rect x="322.7" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="325.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (3 samples, 0.04%)</title><rect x="322.7" y="611.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="325.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (19 samples, 0.26%)</title><rect x="323.4" y="723.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (17 samples, 0.23%)</title><rect x="323.7" y="707.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="326.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="323.9" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="326.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.03%)</title><rect x="323.9" y="675.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.03%)</title><rect x="323.9" y="659.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.03%)</title><rect x="323.9" y="643.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.03%)</title><rect x="323.9" y="627.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="326.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="323.9" y="611.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="326.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$288/1871228320.apply (14 samples, 0.19%)</title><rect x="324.2" y="691.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="327.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (14 samples, 0.19%)</title><rect x="324.2" y="675.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="327.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (14 samples, 0.19%)</title><rect x="324.2" y="659.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="327.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$166/1850087782.apply (2 samples, 0.03%)</title><rect x="324.7" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="327.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (2 samples, 0.03%)</title><rect x="324.7" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="327.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="324.7" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="327.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="324.7" y="595.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="327.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$170/678742413.apply (9 samples, 0.12%)</title><rect x="325.0" y="643.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (9 samples, 0.12%)</title><rect x="325.0" y="627.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="328.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (9 samples, 0.12%)</title><rect x="325.0" y="611.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="328.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (8 samples, 0.11%)</title><rect x="325.2" y="595.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.&lt;init&gt; (3 samples, 0.04%)</title><rect x="325.8" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (3 samples, 0.04%)</title><rect x="326.5" y="723.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="329.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$321/369272078.get (2 samples, 0.03%)</title><rect x="327.1" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (7 samples, 0.10%)</title><rect x="327.8" y="787.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="330.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (5 samples, 0.07%)</title><rect x="328.1" y="771.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="331.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (2 samples, 0.03%)</title><rect x="328.6" y="755.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (2 samples, 0.03%)</title><rect x="329.1" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="332.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.03%)</title><rect x="329.1" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.03%)</title><rect x="329.1" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="332.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (439 samples, 6.07%)</title><rect x="329.4" y="803.0" width="71.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="332.4" y="814.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (439 samples, 6.07%)</title><rect x="329.4" y="787.0" width="71.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="332.4" y="798.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (439 samples, 6.07%)</title><rect x="329.4" y="771.0" width="71.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="332.4" y="782.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (437 samples, 6.04%)</title><rect x="329.7" y="755.0" width="71.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="332.7" y="766.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$318/1255253350.run (3 samples, 0.04%)</title><rect x="330.6" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3 samples, 0.04%)</title><rect x="330.6" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="333.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (3 samples, 0.04%)</title><rect x="330.6" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (423 samples, 5.84%)</title><rect x="331.0" y="739.0" width="69.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="334.0" y="750.0">jdk/int..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (417 samples, 5.76%)</title><rect x="331.0" y="723.0" width="68.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.0" y="734.0">java/ni..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (417 samples, 5.76%)</title><rect x="331.0" y="707.0" width="68.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="334.0" y="718.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (415 samples, 5.73%)</title><rect x="331.4" y="691.0" width="67.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="334.4" y="702.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (415 samples, 5.73%)</title><rect x="331.4" y="675.0" width="67.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="334.4" y="686.0">sun/nio..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (8 samples, 0.11%)</title><rect x="332.0" y="659.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="335.0" y="670.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (6 samples, 0.08%)</title><rect x="332.2" y="643.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (5 samples, 0.07%)</title><rect x="332.4" y="627.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (4 samples, 0.06%)</title><rect x="332.5" y="611.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="335.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (4 samples, 0.06%)</title><rect x="332.5" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (4 samples, 0.06%)</title><rect x="332.5" y="579.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="335.5" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (3 samples, 0.04%)</title><rect x="332.7" y="563.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.7" y="574.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (3 samples, 0.04%)</title><rect x="332.7" y="547.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="335.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.putBase (2 samples, 0.03%)</title><rect x="333.7" y="659.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (5 samples, 0.07%)</title><rect x="334.1" y="659.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="337.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (383 samples, 5.29%)</title><rect x="335.0" y="659.0" width="62.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.0" y="670.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (382 samples, 5.28%)</title><rect x="335.1" y="643.0" width="62.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="338.1" y="654.0">sun/ni..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (3 samples, 0.04%)</title><rect x="337.1" y="627.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="340.1" y="638.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 0.07%)</title><rect x="337.7" y="627.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="340.7" y="638.0"></text>
</g>
<g>
<title>system_call_after_swapgs (5 samples, 0.07%)</title><rect x="337.7" y="611.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="340.7" y="622.0"></text>
</g>
<g>
<title>__writev (358 samples, 4.95%)</title><rect x="338.5" y="627.0" width="58.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="341.5" y="638.0">__writev</text>
</g>
<g>
<title>auditsys (3 samples, 0.04%)</title><rect x="339.4" y="611.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="342.4" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.04%)</title><rect x="339.4" y="595.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="342.4" y="606.0"></text>
</g>
<g>
<title>sysret_audit (4 samples, 0.06%)</title><rect x="339.9" y="611.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="342.9" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (4 samples, 0.06%)</title><rect x="339.9" y="595.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="342.9" y="606.0"></text>
</g>
<g>
<title>system_call_fastpath (344 samples, 4.75%)</title><rect x="340.8" y="611.0" width="56.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="343.8" y="622.0">system..</text>
</g>
<g>
<title>sys_writev (344 samples, 4.75%)</title><rect x="340.8" y="595.0" width="56.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="343.8" y="606.0">sys_wr..</text>
</g>
<g>
<title>fget_light (4 samples, 0.06%)</title><rect x="340.8" y="579.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="343.8" y="590.0"></text>
</g>
<g>
<title>vfs_writev (340 samples, 4.70%)</title><rect x="341.5" y="579.0" width="55.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="344.5" y="590.0">vfs_w..</text>
</g>
<g>
<title>do_readv_writev (339 samples, 4.68%)</title><rect x="341.5" y="563.0" width="55.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="344.5" y="574.0">do_re..</text>
</g>
<g>
<title>do_sync_readv_writev (318 samples, 4.39%)</title><rect x="341.8" y="547.0" width="51.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="344.8" y="558.0">do_sy..</text>
</g>
<g>
<title>sock_aio_write (315 samples, 4.35%)</title><rect x="342.3" y="531.0" width="51.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="345.3" y="542.0">sock_..</text>
</g>
<g>
<title>inet_sendmsg (305 samples, 4.21%)</title><rect x="343.0" y="515.0" width="49.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="346.0" y="526.0">inet_..</text>
</g>
<g>
<title>tcp_sendmsg (300 samples, 4.15%)</title><rect x="343.8" y="499.0" width="48.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="346.8" y="510.0">tcp_..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="344.7" y="483.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="347.7" y="494.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.03%)</title><rect x="345.1" y="483.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="348.1" y="494.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.08%)</title><rect x="345.9" y="483.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="348.9" y="494.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.07%)</title><rect x="346.0" y="467.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="349.0" y="478.0"></text>
</g>
<g>
<title>tcp_push (277 samples, 3.83%)</title><rect x="347.0" y="483.0" width="45.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="350.0" y="494.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (277 samples, 3.83%)</title><rect x="347.0" y="467.0" width="45.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="350.0" y="478.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (276 samples, 3.81%)</title><rect x="347.2" y="451.0" width="45.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="350.2" y="462.0">tcp_..</text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.03%)</title><rect x="347.4" y="435.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="350.4" y="446.0"></text>
</g>
<g>
<title>tcp_transmit_skb (272 samples, 3.76%)</title><rect x="347.8" y="435.0" width="44.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="350.8" y="446.0">tcp_..</text>
</g>
<g>
<title>ip_queue_xmit (266 samples, 3.68%)</title><rect x="348.3" y="419.0" width="43.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="351.3" y="430.0">ip_q..</text>
</g>
<g>
<title>ip_local_out_sk (262 samples, 3.62%)</title><rect x="349.0" y="403.0" width="42.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="352.0" y="414.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out_sk (79 samples, 1.09%)</title><rect x="349.0" y="387.0" width="12.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="352.0" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (78 samples, 1.08%)</title><rect x="349.1" y="371.0" width="12.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="352.1" y="382.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (2 samples, 0.03%)</title><rect x="349.5" y="355.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="352.5" y="366.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (3 samples, 0.04%)</title><rect x="350.0" y="355.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="353.0" y="366.0"></text>
</g>
<g>
<title>nf_iterate (69 samples, 0.95%)</title><rect x="350.6" y="355.0" width="11.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="353.6" y="366.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (7 samples, 0.10%)</title><rect x="352.7" y="339.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="355.7" y="350.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (7 samples, 0.10%)</title><rect x="352.7" y="323.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="355.7" y="334.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (13 samples, 0.18%)</title><rect x="353.9" y="339.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="356.9" y="350.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.17%)</title><rect x="354.0" y="323.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="357.0" y="334.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (2 samples, 0.03%)</title><rect x="356.0" y="339.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="359.0" y="350.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="356.0" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="359.0" y="334.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (6 samples, 0.08%)</title><rect x="356.3" y="339.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="359.3" y="350.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.08%)</title><rect x="356.3" y="323.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="359.3" y="334.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (6 samples, 0.08%)</title><rect x="357.3" y="339.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="360.3" y="350.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.07%)</title><rect x="357.5" y="323.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="360.5" y="334.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (18 samples, 0.25%)</title><rect x="358.4" y="339.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="361.4" y="350.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (13 samples, 0.18%)</title><rect x="358.6" y="323.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="361.6" y="334.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (3 samples, 0.04%)</title><rect x="358.9" y="307.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="361.9" y="318.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (4 samples, 0.06%)</title><rect x="359.7" y="307.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="362.7" y="318.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (2 samples, 0.03%)</title><rect x="360.1" y="291.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="363.1" y="302.0"></text>
</g>
<g>
<title>tcp_pkt_to_tuple	[nf_conntrack] (2 samples, 0.03%)</title><rect x="360.4" y="307.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="363.4" y="318.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="361.5" y="339.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="364.5" y="350.0"></text>
</g>
<g>
<title>ip_output (183 samples, 2.53%)</title><rect x="361.9" y="387.0" width="29.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="364.9" y="398.0">ip..</text>
</g>
<g>
<title>ip_finish_output (171 samples, 2.36%)</title><rect x="362.0" y="371.0" width="27.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="365.0" y="382.0">i..</text>
</g>
<g>
<title>dev_queue_xmit (24 samples, 0.33%)</title><rect x="363.0" y="355.0" width="3.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="366.0" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (23 samples, 0.32%)</title><rect x="363.0" y="339.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="366.0" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (12 samples, 0.17%)</title><rect x="363.7" y="323.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="366.7" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (9 samples, 0.12%)</title><rect x="364.1" y="307.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="367.1" y="318.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="364.5" y="291.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="367.5" y="302.0"></text>
</g>
<g>
<title>netif_rx (5 samples, 0.07%)</title><rect x="364.8" y="291.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="367.8" y="302.0"></text>
</g>
<g>
<title>ktime_get_real (2 samples, 0.03%)</title><rect x="365.0" y="275.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="368.0" y="286.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="365.3" y="275.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="368.3" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb.isra.109.part.110 (6 samples, 0.08%)</title><rect x="365.8" y="323.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="368.8" y="334.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.03%)</title><rect x="366.4" y="307.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="369.4" y="318.0"></text>
</g>
<g>
<title>local_bh_enable (141 samples, 1.95%)</title><rect x="366.9" y="355.0" width="23.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="369.9" y="366.0">l..</text>
</g>
<g>
<title>__local_bh_enable_ip (141 samples, 1.95%)</title><rect x="366.9" y="339.0" width="23.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="369.9" y="350.0">_..</text>
</g>
<g>
<title>do_softirq (141 samples, 1.95%)</title><rect x="366.9" y="323.0" width="23.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="369.9" y="334.0">d..</text>
</g>
<g>
<title>call_softirq (139 samples, 1.92%)</title><rect x="367.2" y="307.0" width="22.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="370.2" y="318.0">c..</text>
</g>
<g>
<title>__do_softirq (139 samples, 1.92%)</title><rect x="367.2" y="291.0" width="22.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="370.2" y="302.0">_..</text>
</g>
<g>
<title>net_rx_action (136 samples, 1.88%)</title><rect x="367.7" y="275.0" width="22.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="370.7" y="286.0">n..</text>
</g>
<g>
<title>process_backlog (133 samples, 1.84%)</title><rect x="368.2" y="259.0" width="21.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="371.2" y="270.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (131 samples, 1.81%)</title><rect x="368.5" y="243.0" width="21.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="371.5" y="254.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (131 samples, 1.81%)</title><rect x="368.5" y="227.0" width="21.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="371.5" y="238.0">_..</text>
</g>
<g>
<title>ip_rcv (130 samples, 1.80%)</title><rect x="368.5" y="211.0" width="21.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="371.5" y="222.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (118 samples, 1.63%)</title><rect x="369.2" y="195.0" width="19.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="372.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (118 samples, 1.63%)</title><rect x="369.2" y="179.0" width="19.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="372.2" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (108 samples, 1.49%)</title><rect x="369.2" y="163.0" width="17.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="372.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (106 samples, 1.46%)</title><rect x="369.5" y="147.0" width="17.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="372.5" y="158.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.07%)</title><rect x="369.7" y="131.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="372.7" y="142.0"></text>
</g>
<g>
<title>tcp_filter (3 samples, 0.04%)</title><rect x="370.7" y="131.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="373.7" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.04%)</title><rect x="370.7" y="115.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="373.7" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="370.8" y="99.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="373.8" y="110.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.03%)</title><rect x="370.8" y="83.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="373.8" y="94.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (96 samples, 1.33%)</title><rect x="371.2" y="131.0" width="15.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="374.2" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (95 samples, 1.31%)</title><rect x="371.3" y="115.0" width="15.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="374.3" y="126.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.06%)</title><rect x="371.5" y="99.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="374.5" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.06%)</title><rect x="371.5" y="83.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="374.5" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.04%)</title><rect x="371.6" y="67.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="374.6" y="78.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.04%)</title><rect x="371.6" y="51.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="374.6" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="371.6" y="35.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="374.6" y="46.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.11%)</title><rect x="372.5" y="99.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="375.5" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.06%)</title><rect x="372.8" y="83.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="375.8" y="94.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.04%)</title><rect x="373.0" y="67.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="376.0" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="373.0" y="51.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="376.0" y="62.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.04%)</title><rect x="373.8" y="99.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="376.8" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (76 samples, 1.05%)</title><rect x="374.3" y="99.0" width="12.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="377.3" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (73 samples, 1.01%)</title><rect x="374.4" y="83.0" width="11.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="377.4" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (73 samples, 1.01%)</title><rect x="374.4" y="67.0" width="11.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="377.4" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (73 samples, 1.01%)</title><rect x="374.4" y="51.0" width="11.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="377.4" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (71 samples, 0.98%)</title><rect x="374.7" y="35.0" width="11.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="377.7" y="46.0"></text>
</g>
<g>
<title>nf_hook_slow (9 samples, 0.12%)</title><rect x="386.8" y="163.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="389.8" y="174.0"></text>
</g>
<g>
<title>nf_iterate (7 samples, 0.10%)</title><rect x="387.1" y="147.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="390.1" y="158.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (5 samples, 0.07%)</title><rect x="387.3" y="131.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="390.3" y="142.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.07%)</title><rect x="387.3" y="115.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="390.3" y="126.0"></text>
</g>
<g>
<title>nf_hook_slow (8 samples, 0.11%)</title><rect x="388.4" y="195.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="391.4" y="206.0"></text>
</g>
<g>
<title>nf_iterate (7 samples, 0.10%)</title><rect x="388.6" y="179.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="391.6" y="190.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (3 samples, 0.04%)</title><rect x="388.8" y="163.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="391.8" y="174.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (3 samples, 0.04%)</title><rect x="388.8" y="147.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="391.8" y="158.0"></text>
</g>
<g>
<title>ipv4_conntrack_in	[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="389.3" y="163.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="392.3" y="174.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (2 samples, 0.03%)</title><rect x="389.3" y="147.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="392.3" y="158.0"></text>
</g>
<g>
<title>nf_hook_slow (11 samples, 0.15%)</title><rect x="389.9" y="371.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="392.9" y="382.0"></text>
</g>
<g>
<title>nf_iterate (9 samples, 0.12%)</title><rect x="390.1" y="355.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="393.1" y="366.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out	[iptable_nat] (2 samples, 0.03%)</title><rect x="390.6" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="393.6" y="350.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat_ipv4] (2 samples, 0.03%)</title><rect x="390.6" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="393.6" y="334.0"></text>
</g>
<g>
<title>ipv4_confirm	[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="390.9" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="393.9" y="350.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.04%)</title><rect x="392.2" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="395.2" y="494.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.03%)</title><rect x="392.4" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="395.4" y="478.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.03%)</title><rect x="392.7" y="515.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="395.7" y="526.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (2 samples, 0.03%)</title><rect x="393.0" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="396.0" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.03%)</title><rect x="393.3" y="515.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="396.3" y="526.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.03%)</title><rect x="393.7" y="547.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="396.7" y="558.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (3 samples, 0.04%)</title><rect x="394.0" y="547.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="397.0" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (14 samples, 0.19%)</title><rect x="394.5" y="547.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="397.5" y="558.0"></text>
</g>
<g>
<title>security_file_permission (11 samples, 0.15%)</title><rect x="395.0" y="531.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="398.0" y="542.0"></text>
</g>
<g>
<title>selinux_file_permission (10 samples, 0.14%)</title><rect x="395.1" y="515.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="398.1" y="526.0"></text>
</g>
<g>
<title>__inode_security_revalidate (2 samples, 0.03%)</title><rect x="395.6" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="398.6" y="510.0"></text>
</g>
<g>
<title>file_has_perm (4 samples, 0.06%)</title><rect x="396.1" y="499.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="399.1" y="510.0"></text>
</g>
<g>
<title>inode_has_perm.isra.34.constprop.71 (4 samples, 0.06%)</title><rect x="396.1" y="483.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="399.1" y="494.0"></text>
</g>
<g>
<title>avc_has_perm_flags (4 samples, 0.06%)</title><rect x="396.1" y="467.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="399.1" y="478.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.03%)</title><rect x="397.1" y="627.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="400.1" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.04%)</title><rect x="397.4" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="400.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.03%)</title><rect x="397.6" y="643.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="400.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerLastTemporaryDirectBuffer (7 samples, 0.10%)</title><rect x="397.9" y="659.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.9" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.06%)</title><rect x="398.4" y="643.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="401.4" y="654.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.04%)</title><rect x="398.6" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.6" y="638.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (3 samples, 0.04%)</title><rect x="398.6" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="401.6" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (4 samples, 0.06%)</title><rect x="399.0" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (2 samples, 0.03%)</title><rect x="399.4" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="402.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.03%)</title><rect x="399.7" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="402.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (6 samples, 0.08%)</title><rect x="400.0" y="739.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="403.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (781 samples, 10.79%)</title><rect x="401.2" y="979.0" width="127.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="404.2" y="990.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (777 samples, 10.74%)</title><rect x="401.8" y="963.0" width="126.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="404.8" y="974.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.03%)</title><rect x="401.8" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="404.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (387 samples, 5.35%)</title><rect x="402.1" y="947.0" width="63.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.1" y="958.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$236/621309814.run (384 samples, 5.31%)</title><rect x="402.6" y="931.0" width="62.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="405.6" y="942.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (383 samples, 5.29%)</title><rect x="402.8" y="915.0" width="62.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="405.8" y="926.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (106 samples, 1.46%)</title><rect x="403.6" y="899.0" width="17.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (106 samples, 1.46%)</title><rect x="403.6" y="883.0" width="17.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (103 samples, 1.42%)</title><rect x="404.1" y="867.0" width="16.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="407.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (103 samples, 1.42%)</title><rect x="404.1" y="851.0" width="16.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (96 samples, 1.33%)</title><rect x="404.6" y="835.0" width="15.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (96 samples, 1.33%)</title><rect x="404.6" y="819.0" width="15.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (92 samples, 1.27%)</title><rect x="404.9" y="803.0" width="15.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (92 samples, 1.27%)</title><rect x="404.9" y="787.0" width="15.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (9 samples, 0.12%)</title><rect x="404.9" y="771.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="407.9" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.07%)</title><rect x="405.6" y="755.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="408.6" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (5 samples, 0.07%)</title><rect x="405.6" y="739.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="408.6" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.07%)</title><rect x="405.6" y="723.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="408.6" y="734.0"></text>
</g>
<g>
<title>system_call_fastpath (5 samples, 0.07%)</title><rect x="405.6" y="707.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="408.6" y="718.0"></text>
</g>
<g>
<title>sys_futex (5 samples, 0.07%)</title><rect x="405.6" y="691.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="408.6" y="702.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.07%)</title><rect x="405.6" y="675.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="408.6" y="686.0"></text>
</g>
<g>
<title>futex_wake_op (5 samples, 0.07%)</title><rect x="405.6" y="659.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="408.6" y="670.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.07%)</title><rect x="405.6" y="643.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="408.6" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.07%)</title><rect x="405.6" y="627.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="408.6" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.07%)</title><rect x="405.6" y="611.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="408.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (83 samples, 1.15%)</title><rect x="406.4" y="771.0" width="13.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="409.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (79 samples, 1.09%)</title><rect x="407.0" y="755.0" width="12.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="410.0" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (74 samples, 1.02%)</title><rect x="407.8" y="739.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="410.8" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.04%)</title><rect x="408.2" y="723.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="411.2" y="734.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.04%)</title><rect x="408.2" y="707.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="411.2" y="718.0"></text>
</g>
<g>
<title>__write (68 samples, 0.94%)</title><rect x="408.8" y="723.0" width="11.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="411.8" y="734.0"></text>
</g>
<g>
<title>system_call_fastpath (63 samples, 0.87%)</title><rect x="409.6" y="707.0" width="10.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="412.6" y="718.0"></text>
</g>
<g>
<title>sys_write (62 samples, 0.86%)</title><rect x="409.8" y="691.0" width="10.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="412.8" y="702.0"></text>
</g>
<g>
<title>fget_light (3 samples, 0.04%)</title><rect x="409.8" y="675.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="412.8" y="686.0"></text>
</g>
<g>
<title>vfs_write (59 samples, 0.82%)</title><rect x="410.3" y="675.0" width="9.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="413.3" y="686.0"></text>
</g>
<g>
<title>do_sync_write (48 samples, 0.66%)</title><rect x="410.3" y="659.0" width="7.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="413.3" y="670.0"></text>
</g>
<g>
<title>pipe_write (45 samples, 0.62%)</title><rect x="410.8" y="643.0" width="7.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="413.8" y="654.0"></text>
</g>
<g>
<title>__wake_up_sync_key (37 samples, 0.51%)</title><rect x="411.1" y="627.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="414.1" y="638.0"></text>
</g>
<g>
<title>__wake_up_common_lock (37 samples, 0.51%)</title><rect x="411.1" y="611.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="414.1" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (37 samples, 0.51%)</title><rect x="411.1" y="595.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="414.1" y="606.0"></text>
</g>
<g>
<title>pipe_iov_copy_from_user.constprop.9 (2 samples, 0.03%)</title><rect x="417.8" y="627.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="420.8" y="638.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="417.8" y="611.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="420.8" y="622.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="417.8" y="595.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="420.8" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (9 samples, 0.12%)</title><rect x="418.3" y="659.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="421.3" y="670.0"></text>
</g>
<g>
<title>security_file_permission (9 samples, 0.12%)</title><rect x="418.3" y="643.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="421.3" y="654.0"></text>
</g>
<g>
<title>selinux_file_permission (7 samples, 0.10%)</title><rect x="418.6" y="627.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="421.6" y="638.0"></text>
</g>
<g>
<title>file_has_perm (2 samples, 0.03%)</title><rect x="419.4" y="611.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="422.4" y="622.0"></text>
</g>
<g>
<title>inode_has_perm.isra.34.constprop.71 (2 samples, 0.03%)</title><rect x="419.4" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="422.4" y="606.0"></text>
</g>
<g>
<title>avc_has_perm_flags (2 samples, 0.03%)</title><rect x="419.4" y="579.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="422.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.03%)</title><rect x="419.9" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.03%)</title><rect x="419.9" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (4 samples, 0.06%)</title><rect x="420.2" y="835.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="423.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (5 samples, 0.07%)</title><rect x="421.1" y="899.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="424.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.03%)</title><rect x="421.5" y="883.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="424.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (266 samples, 3.68%)</title><rect x="421.9" y="899.0" width="43.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.9" y="910.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (260 samples, 3.59%)</title><rect x="421.9" y="883.0" width="42.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.9" y="894.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (258 samples, 3.57%)</title><rect x="422.2" y="867.0" width="42.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.2" y="878.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (257 samples, 3.55%)</title><rect x="422.4" y="851.0" width="41.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.4" y="862.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (133 samples, 1.84%)</title><rect x="422.4" y="835.0" width="21.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="425.4" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (133 samples, 1.84%)</title><rect x="422.4" y="819.0" width="21.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="425.4" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (132 samples, 1.82%)</title><rect x="422.5" y="803.0" width="21.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="425.5" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (132 samples, 1.82%)</title><rect x="422.5" y="787.0" width="21.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.5" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (125 samples, 1.73%)</title><rect x="423.7" y="771.0" width="20.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="426.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (118 samples, 1.63%)</title><rect x="423.8" y="755.0" width="19.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="426.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (118 samples, 1.63%)</title><rect x="423.8" y="739.0" width="19.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (115 samples, 1.59%)</title><rect x="423.8" y="723.0" width="18.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="426.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (112 samples, 1.55%)</title><rect x="424.3" y="707.0" width="18.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="427.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (98 samples, 1.35%)</title><rect x="424.5" y="691.0" width="16.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="427.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (13 samples, 0.18%)</title><rect x="424.8" y="675.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="427.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (13 samples, 0.18%)</title><rect x="424.8" y="659.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.8" y="670.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.08%)</title><rect x="425.1" y="643.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="428.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$315/1008916601.apply (2 samples, 0.03%)</title><rect x="426.3" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$158/1961341944.apply (65 samples, 0.90%)</title><rect x="427.1" y="675.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (64 samples, 0.88%)</title><rect x="427.2" y="659.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.03%)</title><rect x="427.2" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="430.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.03%)</title><rect x="427.2" y="627.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.03%)</title><rect x="427.2" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (62 samples, 0.86%)</title><rect x="427.6" y="643.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (61 samples, 0.84%)</title><rect x="427.7" y="627.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.7" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$142/34186423.apply (2 samples, 0.03%)</title><rect x="427.7" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="430.7" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (2 samples, 0.03%)</title><rect x="427.7" y="595.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="430.7" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (2 samples, 0.03%)</title><rect x="427.7" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="430.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (2 samples, 0.03%)</title><rect x="427.7" y="563.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (57 samples, 0.79%)</title><rect x="428.2" y="611.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="431.2" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (22 samples, 0.30%)</title><rect x="428.2" y="595.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.2" y="606.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.04%)</title><rect x="428.2" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="431.2" y="590.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.03%)</title><rect x="428.2" y="563.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="431.2" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="428.2" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="431.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.03%)</title><rect x="428.2" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="431.2" y="542.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (19 samples, 0.26%)</title><rect x="428.7" y="579.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.7" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (19 samples, 0.26%)</title><rect x="428.7" y="563.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="431.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (16 samples, 0.22%)</title><rect x="429.2" y="547.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="432.2" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (10 samples, 0.14%)</title><rect x="429.5" y="531.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="432.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.10%)</title><rect x="429.9" y="515.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.9" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (2 samples, 0.03%)</title><rect x="429.9" y="499.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="432.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (2 samples, 0.03%)</title><rect x="429.9" y="483.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.06%)</title><rect x="430.3" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="433.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (3 samples, 0.04%)</title><rect x="430.3" y="483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.3" y="494.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (3 samples, 0.04%)</title><rect x="430.3" y="467.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="433.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (3 samples, 0.04%)</title><rect x="430.3" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="433.3" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$342/453415994.applyAsLong (2 samples, 0.03%)</title><rect x="430.3" y="435.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="433.3" y="446.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (2 samples, 0.03%)</title><rect x="431.3" y="531.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="434.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (31 samples, 0.43%)</title><rect x="432.5" y="595.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$349/798535403.run (31 samples, 0.43%)</title><rect x="432.5" y="579.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (31 samples, 0.43%)</title><rect x="432.5" y="563.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="435.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.isCompletedExceptionally (2 samples, 0.03%)</title><rect x="433.0" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="436.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (9 samples, 0.12%)</title><rect x="433.4" y="547.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="436.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (9 samples, 0.12%)</title><rect x="433.4" y="531.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.4" y="542.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (9 samples, 0.12%)</title><rect x="433.4" y="515.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="436.4" y="526.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (8 samples, 0.11%)</title><rect x="433.6" y="499.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="436.6" y="510.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (8 samples, 0.11%)</title><rect x="433.6" y="483.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="436.6" y="494.0"></text>
</g>
<g>
<title>JVM_IHashCode (6 samples, 0.08%)</title><rect x="433.9" y="467.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="436.9" y="478.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (2 samples, 0.03%)</title><rect x="434.3" y="451.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="437.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (3 samples, 0.04%)</title><rect x="434.9" y="547.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="437.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="434.9" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="437.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1327536153.invoke (3 samples, 0.04%)</title><rect x="434.9" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="437.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="434.9" y="499.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="437.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (13 samples, 0.18%)</title><rect x="435.4" y="547.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="438.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (11 samples, 0.15%)</title><rect x="435.7" y="531.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="438.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.12%)</title><rect x="435.9" y="515.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="435.9" y="499.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser$$Lambda$354/1049820653.get$Lambda (5 samples, 0.07%)</title><rect x="435.9" y="483.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser$$Lambda$354/1049820653.&lt;init&gt; (4 samples, 0.06%)</title><rect x="436.1" y="467.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="439.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1327536153.invoke (4 samples, 0.06%)</title><rect x="436.7" y="499.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="439.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="436.7" y="483.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="439.7" y="494.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.03%)</title><rect x="436.7" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/473581465.invoke (2 samples, 0.03%)</title><rect x="437.0" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="440.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="437.0" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="440.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.03%)</title><rect x="437.0" y="451.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="440.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$289/1016523658.apply (17 samples, 0.23%)</title><rect x="437.7" y="675.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (17 samples, 0.23%)</title><rect x="437.7" y="659.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (16 samples, 0.22%)</title><rect x="437.7" y="643.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (10 samples, 0.14%)</title><rect x="438.0" y="627.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="441.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (10 samples, 0.14%)</title><rect x="438.0" y="611.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.0" y="622.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (9 samples, 0.12%)</title><rect x="438.2" y="595.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="441.2" y="606.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (2 samples, 0.03%)</title><rect x="438.3" y="579.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="441.3" y="590.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (2 samples, 0.03%)</title><rect x="438.3" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.3" y="574.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (6 samples, 0.08%)</title><rect x="438.7" y="579.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.7" y="590.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (5 samples, 0.07%)</title><rect x="438.8" y="563.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.8" y="574.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.04%)</title><rect x="439.2" y="547.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="442.2" y="558.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.03%)</title><rect x="439.2" y="531.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="442.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.response (2 samples, 0.03%)</title><rect x="439.6" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.logTrace (2 samples, 0.03%)</title><rect x="440.0" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="443.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (11 samples, 0.15%)</title><rect x="440.5" y="691.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="443.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (11 samples, 0.15%)</title><rect x="440.5" y="675.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="440.6" y="659.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="443.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.03%)</title><rect x="440.6" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="443.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.03%)</title><rect x="440.6" y="627.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.03%)</title><rect x="440.6" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="443.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.03%)</title><rect x="440.6" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="443.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="440.6" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="443.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$290/877098177.apply (2 samples, 0.03%)</title><rect x="440.6" y="563.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$290/877098177.apply (8 samples, 0.11%)</title><rect x="440.9" y="659.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="443.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (8 samples, 0.11%)</title><rect x="440.9" y="643.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="443.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (8 samples, 0.11%)</title><rect x="440.9" y="627.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (8 samples, 0.11%)</title><rect x="440.9" y="611.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.9" y="622.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (7 samples, 0.10%)</title><rect x="440.9" y="595.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.9" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (4 samples, 0.06%)</title><rect x="441.4" y="579.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.4" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.04%)</title><rect x="441.6" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="444.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.03%)</title><rect x="442.2" y="691.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="445.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$324/669883057.apply (3 samples, 0.04%)</title><rect x="442.6" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="445.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (3 samples, 0.04%)</title><rect x="442.6" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.04%)</title><rect x="442.6" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.04%)</title><rect x="442.6" y="675.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="445.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.08%)</title><rect x="443.1" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="446.1" y="766.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (6 samples, 0.08%)</title><rect x="443.1" y="739.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="446.1" y="750.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (6 samples, 0.08%)</title><rect x="443.1" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="446.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.03%)</title><rect x="443.1" y="707.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="446.1" y="718.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.06%)</title><rect x="443.4" y="707.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="446.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (118 samples, 1.63%)</title><rect x="444.0" y="835.0" width="19.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="447.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (2 samples, 0.03%)</title><rect x="445.8" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (11 samples, 0.15%)</title><rect x="446.2" y="819.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="449.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (9 samples, 0.12%)</title><rect x="446.5" y="803.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.5" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (9 samples, 0.12%)</title><rect x="446.5" y="787.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="449.5" y="798.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (8 samples, 0.11%)</title><rect x="446.7" y="771.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.7" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.03%)</title><rect x="446.8" y="755.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (4 samples, 0.06%)</title><rect x="447.3" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="450.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (9 samples, 0.12%)</title><rect x="448.0" y="819.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="451.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.07%)</title><rect x="448.4" y="803.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.4" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.07%)</title><rect x="448.4" y="787.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="451.4" y="798.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.04%)</title><rect x="448.8" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.8" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="448.9" y="755.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="451.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (5 samples, 0.07%)</title><rect x="449.4" y="819.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.4" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.06%)</title><rect x="449.6" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.06%)</title><rect x="449.6" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="452.6" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.03%)</title><rect x="449.6" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="449.9" y="771.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="452.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="449.9" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (39 samples, 0.54%)</title><rect x="450.2" y="819.0" width="6.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.2" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (37 samples, 0.51%)</title><rect x="450.6" y="803.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.6" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (37 samples, 0.51%)</title><rect x="450.6" y="787.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.6" y="798.0"></text>
</g>
<g>
<title>itable stub (7 samples, 0.10%)</title><rect x="450.6" y="771.0" width="1.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="453.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (30 samples, 0.41%)</title><rect x="451.7" y="771.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.7" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (26 samples, 0.36%)</title><rect x="452.4" y="755.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.4" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (23 samples, 0.32%)</title><rect x="452.8" y="739.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.8" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (2 samples, 0.03%)</title><rect x="453.0" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="456.0" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="453.0" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.0" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (11 samples, 0.15%)</title><rect x="453.3" y="723.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="456.3" y="734.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.07%)</title><rect x="453.5" y="707.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="456.5" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (3 samples, 0.04%)</title><rect x="454.3" y="707.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="457.3" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.04%)</title><rect x="454.3" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/396883763.test (2 samples, 0.03%)</title><rect x="454.8" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.8" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.12%)</title><rect x="455.1" y="723.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="458.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.07%)</title><rect x="455.8" y="707.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (5 samples, 0.07%)</title><rect x="455.8" y="691.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="458.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.07%)</title><rect x="455.8" y="675.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="458.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrLF (2 samples, 0.03%)</title><rect x="456.6" y="819.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="459.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (39 samples, 0.54%)</title><rect x="456.9" y="819.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="459.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (5 samples, 0.07%)</title><rect x="458.1" y="803.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="461.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="458.4" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="458.4" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="461.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (24 samples, 0.33%)</title><rect x="459.0" y="803.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="459.5" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="459.5" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="459.5" y="755.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="459.9" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="462.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.04%)</title><rect x="460.3" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="463.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="460.5" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="463.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.06%)</title><rect x="460.8" y="787.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (4 samples, 0.06%)</title><rect x="460.8" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="463.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.03%)</title><rect x="461.5" y="787.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.03%)</title><rect x="461.5" y="771.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="464.5" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="461.8" y="787.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="464.8" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="461.8" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="464.8" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="461.8" y="755.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.8" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="461.8" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="464.8" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (4 samples, 0.06%)</title><rect x="462.3" y="787.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$337/1009992811.apply (3 samples, 0.04%)</title><rect x="462.5" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="465.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (3 samples, 0.04%)</title><rect x="462.5" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.5" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="462.6" y="739.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="465.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="462.6" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.6" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="463.0" y="803.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="466.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$253/110061556.accept (6 samples, 0.08%)</title><rect x="463.3" y="835.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (6 samples, 0.08%)</title><rect x="463.3" y="819.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="466.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (2 samples, 0.03%)</title><rect x="463.9" y="803.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (6 samples, 0.08%)</title><rect x="464.3" y="883.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (6 samples, 0.08%)</title><rect x="464.3" y="867.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.3" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="464.7" y="851.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="467.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (388 samples, 5.36%)</title><rect x="465.2" y="947.0" width="63.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.2" y="958.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (386 samples, 5.33%)</title><rect x="465.6" y="931.0" width="62.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.6" y="942.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (385 samples, 5.32%)</title><rect x="465.6" y="915.0" width="62.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.6" y="926.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$236/621309814.run (384 samples, 5.31%)</title><rect x="465.7" y="899.0" width="62.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.7" y="910.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (384 samples, 5.31%)</title><rect x="465.7" y="883.0" width="62.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.7" y="894.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (377 samples, 5.21%)</title><rect x="465.7" y="867.0" width="61.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.7" y="878.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (376 samples, 5.20%)</title><rect x="465.7" y="851.0" width="61.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.7" y="862.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (375 samples, 5.18%)</title><rect x="465.9" y="835.0" width="61.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.9" y="846.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$351/569771841.run (185 samples, 2.56%)</title><rect x="466.1" y="819.0" width="30.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.1" y="830.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (185 samples, 2.56%)</title><rect x="466.1" y="803.0" width="30.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.1" y="814.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.clear (2 samples, 0.03%)</title><rect x="466.2" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.set (2 samples, 0.03%)</title><rect x="466.2" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (182 samples, 2.51%)</title><rect x="466.5" y="787.0" width="29.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.5" y="798.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (9 samples, 0.12%)</title><rect x="466.5" y="771.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="469.5" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.06%)</title><rect x="466.5" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.5" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.04%)</title><rect x="466.7" y="739.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.7" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.04%)</title><rect x="466.7" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="469.7" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.04%)</title><rect x="466.7" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.7" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.04%)</title><rect x="466.7" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="466.9" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="469.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="466.9" y="659.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="469.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.03%)</title><rect x="466.9" y="643.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.9" y="654.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.04%)</title><rect x="467.2" y="755.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.2" y="766.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.03%)</title><rect x="467.4" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="470.4" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.03%)</title><rect x="467.4" y="723.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.4" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.03%)</title><rect x="467.4" y="707.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.03%)</title><rect x="467.4" y="691.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.4" y="702.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.03%)</title><rect x="467.7" y="755.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.03%)</title><rect x="467.7" y="739.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.03%)</title><rect x="467.7" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (2 samples, 0.03%)</title><rect x="467.7" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (2 samples, 0.03%)</title><rect x="467.7" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="470.7" y="702.0"></text>
</g>
<g>
<title>java/util/Optional.map (4 samples, 0.06%)</title><rect x="468.0" y="771.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="471.0" y="782.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (2 samples, 0.03%)</title><rect x="468.2" y="755.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.2" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.03%)</title><rect x="468.2" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (168 samples, 2.32%)</title><rect x="468.7" y="771.0" width="27.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="471.7" y="782.0">j..</text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.07%)</title><rect x="468.7" y="755.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.7" y="766.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.07%)</title><rect x="468.7" y="739.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.07%)</title><rect x="468.7" y="723.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="471.7" y="734.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.06%)</title><rect x="468.8" y="707.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="471.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (163 samples, 2.25%)</title><rect x="469.5" y="755.0" width="26.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.5" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (13 samples, 0.18%)</title><rect x="469.5" y="739.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.5" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.plus (6 samples, 0.08%)</title><rect x="469.8" y="723.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.8" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (2 samples, 0.03%)</title><rect x="469.8" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.8" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.03%)</title><rect x="469.8" y="691.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.8" y="702.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (4 samples, 0.06%)</title><rect x="470.1" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="473.1" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.plus (4 samples, 0.06%)</title><rect x="470.1" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="473.1" y="702.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (2 samples, 0.03%)</title><rect x="470.8" y="723.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.8" y="734.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (2 samples, 0.03%)</title><rect x="470.8" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="473.8" y="718.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.03%)</title><rect x="470.8" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.8" y="702.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.03%)</title><rect x="470.8" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="473.8" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (2 samples, 0.03%)</title><rect x="471.3" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="474.3" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.checkForComodification (2 samples, 0.03%)</title><rect x="471.3" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (5 samples, 0.07%)</title><rect x="471.6" y="739.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.6" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.07%)</title><rect x="471.6" y="723.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.6" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.04%)</title><rect x="471.6" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (2 samples, 0.03%)</title><rect x="471.8" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="474.8" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="472.1" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.03%)</title><rect x="472.1" y="691.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.1" y="702.0"></text>
</g>
<g>
<title>java/util/Objects.hash (2 samples, 0.03%)</title><rect x="472.1" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.1" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (2 samples, 0.03%)</title><rect x="472.1" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="475.1" y="670.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (2 samples, 0.03%)</title><rect x="472.1" y="643.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.1" y="654.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.hashCode (2 samples, 0.03%)</title><rect x="472.1" y="627.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (145 samples, 2.00%)</title><rect x="472.4" y="739.0" width="23.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.4" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (145 samples, 2.00%)</title><rect x="472.4" y="723.0" width="23.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.4" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (5 samples, 0.07%)</title><rect x="472.4" y="707.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="475.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.07%)</title><rect x="472.4" y="691.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5 samples, 0.07%)</title><rect x="472.4" y="675.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.03%)</title><rect x="472.9" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.03%)</title><rect x="472.9" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (140 samples, 1.93%)</title><rect x="473.2" y="707.0" width="22.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.2" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (140 samples, 1.93%)</title><rect x="473.2" y="691.0" width="22.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.2" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (130 samples, 1.80%)</title><rect x="473.6" y="675.0" width="21.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.6" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (129 samples, 1.78%)</title><rect x="473.6" y="659.0" width="21.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.6" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (129 samples, 1.78%)</title><rect x="473.6" y="643.0" width="21.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="476.6" y="654.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (123 samples, 1.70%)</title><rect x="474.5" y="627.0" width="20.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.5" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (122 samples, 1.69%)</title><rect x="474.7" y="611.0" width="19.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.7" y="622.0"></text>
</g>
<g>
<title>__lll_unlock_wake (6 samples, 0.08%)</title><rect x="475.3" y="595.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="478.3" y="606.0"></text>
</g>
<g>
<title>system_call_after_swapgs (6 samples, 0.08%)</title><rect x="475.3" y="579.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="478.3" y="590.0"></text>
</g>
<g>
<title>__write (109 samples, 1.51%)</title><rect x="476.7" y="595.0" width="17.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="479.7" y="606.0"></text>
</g>
<g>
<title>system_call_fastpath (103 samples, 1.42%)</title><rect x="477.6" y="579.0" width="16.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="480.6" y="590.0"></text>
</g>
<g>
<title>sys_write (102 samples, 1.41%)</title><rect x="477.8" y="563.0" width="16.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="480.8" y="574.0"></text>
</g>
<g>
<title>vfs_write (100 samples, 1.38%)</title><rect x="478.1" y="547.0" width="16.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="481.1" y="558.0"></text>
</g>
<g>
<title>do_sync_write (89 samples, 1.23%)</title><rect x="478.3" y="531.0" width="14.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="481.3" y="542.0"></text>
</g>
<g>
<title>pipe_write (87 samples, 1.20%)</title><rect x="478.6" y="515.0" width="14.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="481.6" y="526.0"></text>
</g>
<g>
<title>__wake_up_sync_key (71 samples, 0.98%)</title><rect x="479.7" y="499.0" width="11.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="482.7" y="510.0"></text>
</g>
<g>
<title>__wake_up_common_lock (71 samples, 0.98%)</title><rect x="479.7" y="483.0" width="11.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="482.7" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (71 samples, 0.98%)</title><rect x="479.7" y="467.0" width="11.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="482.7" y="478.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.04%)</title><rect x="491.5" y="499.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="494.5" y="510.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.03%)</title><rect x="492.1" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="495.1" y="510.0"></text>
</g>
<g>
<title>pipe_iov_copy_from_user.constprop.9 (2 samples, 0.03%)</title><rect x="492.5" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="495.5" y="510.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="492.5" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="495.5" y="494.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="492.5" y="467.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="495.5" y="478.0"></text>
</g>
<g>
<title>rw_verify_area (7 samples, 0.10%)</title><rect x="493.1" y="531.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="496.1" y="542.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.10%)</title><rect x="493.1" y="515.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="496.1" y="526.0"></text>
</g>
<g>
<title>selinux_file_permission (6 samples, 0.08%)</title><rect x="493.3" y="499.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="496.3" y="510.0"></text>
</g>
<g>
<title>file_has_perm (5 samples, 0.07%)</title><rect x="493.4" y="483.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="496.4" y="494.0"></text>
</g>
<g>
<title>inode_has_perm.isra.34.constprop.71 (5 samples, 0.07%)</title><rect x="493.4" y="467.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="496.4" y="478.0"></text>
</g>
<g>
<title>avc_has_perm_flags (5 samples, 0.07%)</title><rect x="493.4" y="451.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="496.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (6 samples, 0.08%)</title><rect x="494.8" y="675.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$352/1607757290.accept (14 samples, 0.19%)</title><rect x="496.2" y="819.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (14 samples, 0.19%)</title><rect x="496.2" y="803.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="499.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (14 samples, 0.19%)</title><rect x="496.2" y="787.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="499.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9 samples, 0.12%)</title><rect x="496.2" y="771.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.11%)</title><rect x="496.4" y="755.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="499.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (8 samples, 0.11%)</title><rect x="496.4" y="739.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="499.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.03%)</title><rect x="496.4" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="499.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="496.4" y="707.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.08%)</title><rect x="496.7" y="723.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="499.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$357/1715244547.accept (5 samples, 0.07%)</title><rect x="496.9" y="707.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="499.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (4 samples, 0.06%)</title><rect x="497.0" y="691.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="500.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (4 samples, 0.06%)</title><rect x="497.0" y="675.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="500.0" y="686.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (2 samples, 0.03%)</title><rect x="497.4" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="500.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$254/1261770073.accept (4 samples, 0.06%)</title><rect x="497.8" y="771.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (4 samples, 0.06%)</title><rect x="497.8" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="500.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (3 samples, 0.04%)</title><rect x="498.0" y="739.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (171 samples, 2.36%)</title><rect x="498.5" y="819.0" width="27.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.5" y="830.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (171 samples, 2.36%)</title><rect x="498.5" y="803.0" width="27.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="501.5" y="814.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (171 samples, 2.36%)</title><rect x="498.5" y="787.0" width="27.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="501.5" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (170 samples, 2.35%)</title><rect x="498.5" y="771.0" width="27.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.5" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (169 samples, 2.34%)</title><rect x="498.7" y="755.0" width="27.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.7" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (168 samples, 2.32%)</title><rect x="498.8" y="739.0" width="27.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="501.8" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (5 samples, 0.07%)</title><rect x="499.3" y="723.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="502.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.07%)</title><rect x="499.3" y="707.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.3" y="718.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="499.3" y="691.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="502.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$361/609138659.accept (3 samples, 0.04%)</title><rect x="499.6" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (160 samples, 2.21%)</title><rect x="500.1" y="723.0" width="26.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="503.1" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$361/609138659.accept (159 samples, 2.20%)</title><rect x="500.3" y="707.0" width="25.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="503.3" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (159 samples, 2.20%)</title><rect x="500.3" y="691.0" width="25.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="503.3" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (159 samples, 2.20%)</title><rect x="500.3" y="675.0" width="25.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="503.3" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (159 samples, 2.20%)</title><rect x="500.3" y="659.0" width="25.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="503.3" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (11 samples, 0.15%)</title><rect x="500.3" y="643.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="503.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.06%)</title><rect x="500.6" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="503.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.04%)</title><rect x="500.8" y="611.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="503.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3 samples, 0.04%)</title><rect x="500.8" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.04%)</title><rect x="500.8" y="579.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.8" y="590.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="500.8" y="563.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="503.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$369/256809203.apply (5 samples, 0.07%)</title><rect x="501.3" y="627.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (5 samples, 0.07%)</title><rect x="501.3" y="611.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (4 samples, 0.06%)</title><rect x="501.4" y="595.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="504.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (146 samples, 2.02%)</title><rect x="502.1" y="643.0" width="23.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="505.1" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (6 samples, 0.08%)</title><rect x="502.3" y="627.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.08%)</title><rect x="502.3" y="611.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$162/1256959182.accept (3 samples, 0.04%)</title><rect x="502.7" y="595.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (139 samples, 1.92%)</title><rect x="503.2" y="627.0" width="22.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.2" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (137 samples, 1.89%)</title><rect x="503.4" y="611.0" width="22.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.4" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (136 samples, 1.88%)</title><rect x="503.4" y="595.0" width="22.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.4" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (136 samples, 1.88%)</title><rect x="503.4" y="579.0" width="22.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="506.4" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (133 samples, 1.84%)</title><rect x="503.9" y="563.0" width="21.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.9" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (132 samples, 1.82%)</title><rect x="504.0" y="547.0" width="21.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.0" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (128 samples, 1.77%)</title><rect x="504.7" y="531.0" width="20.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (128 samples, 1.77%)</title><rect x="504.7" y="515.0" width="20.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="507.7" y="526.0"></text>
</g>
<g>
<title>Unsafe_Unpark (24 samples, 0.33%)</title><rect x="505.0" y="499.0" width="3.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="508.0" y="510.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="505.7" y="483.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="508.7" y="494.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.06%)</title><rect x="506.0" y="483.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="509.0" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.06%)</title><rect x="507.0" y="483.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="510.0" y="494.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.03%)</title><rect x="508.0" y="483.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="511.0" y="494.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="508.4" y="483.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="511.4" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_signal (93 samples, 1.29%)</title><rect x="508.9" y="499.0" width="15.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="511.9" y="510.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.03%)</title><rect x="509.6" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="512.6" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.03%)</title><rect x="509.6" y="467.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="512.6" y="478.0"></text>
</g>
<g>
<title>system_call_fastpath (87 samples, 1.20%)</title><rect x="509.9" y="483.0" width="14.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="512.9" y="494.0"></text>
</g>
<g>
<title>sys_futex (86 samples, 1.19%)</title><rect x="510.1" y="467.0" width="14.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="513.1" y="478.0"></text>
</g>
<g>
<title>do_futex (85 samples, 1.17%)</title><rect x="510.2" y="451.0" width="13.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="513.2" y="462.0"></text>
</g>
<g>
<title>_raw_qspin_lock (4 samples, 0.06%)</title><rect x="510.7" y="435.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="513.7" y="446.0"></text>
</g>
<g>
<title>futex_wake_op (77 samples, 1.06%)</title><rect x="511.5" y="435.0" width="12.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="514.5" y="446.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="512.2" y="419.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="515.2" y="430.0"></text>
</g>
<g>
<title>wake_up_q (70 samples, 0.97%)</title><rect x="512.7" y="419.0" width="11.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="515.7" y="430.0"></text>
</g>
<g>
<title>try_to_wake_up (70 samples, 0.97%)</title><rect x="512.7" y="403.0" width="11.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="515.7" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (70 samples, 0.97%)</title><rect x="512.7" y="387.0" width="11.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="515.7" y="398.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="524.1" y="499.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="527.1" y="510.0"></text>
</g>
<g>
<title>__write (6 samples, 0.08%)</title><rect x="524.6" y="499.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="527.6" y="510.0"></text>
</g>
<g>
<title>system_call_after_swapgs (6 samples, 0.08%)</title><rect x="524.6" y="483.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="527.6" y="494.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="525.9" y="643.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="528.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (4 samples, 0.06%)</title><rect x="526.4" y="819.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (4 samples, 0.06%)</title><rect x="526.4" y="803.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="529.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (4 samples, 0.06%)</title><rect x="526.4" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (3 samples, 0.04%)</title><rect x="527.2" y="867.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="530.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (4 samples, 0.06%)</title><rect x="527.7" y="867.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="530.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4 samples, 0.06%)</title><rect x="527.7" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="530.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4 samples, 0.06%)</title><rect x="527.7" y="835.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (4 samples, 0.06%)</title><rect x="527.7" y="819.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (4 samples, 0.06%)</title><rect x="527.7" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="530.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrLF (2 samples, 0.03%)</title><rect x="528.0" y="787.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="531.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$113/1746272309.run (1,152 samples, 15.92%)</title><rect x="528.5" y="979.0" width="187.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.5" y="990.0">ru/mail/polis/service/ht..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$asyncExecute$4 (1,143 samples, 15.79%)</title><rect x="530.0" y="963.0" width="186.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.0" y="974.0">ru/mail/polis/service/ht..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$112/1725035167.submit (614 samples, 8.48%)</title><rect x="530.0" y="947.0" width="100.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="533.0" y="958.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$entity$0 (614 samples, 8.48%)</title><rect x="530.0" y="931.0" width="100.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.0" y="942.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpController.get (613 samples, 8.47%)</title><rect x="530.1" y="915.0" width="100.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.1" y="926.0">ru/mail/poli..</text>
</g>
<g>
<title>java/net/URI.create (39 samples, 0.54%)</title><rect x="534.4" y="899.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="537.4" y="910.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (36 samples, 0.50%)</title><rect x="534.9" y="883.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.9" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (35 samples, 0.48%)</title><rect x="535.0" y="867.0" width="5.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="538.0" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (4 samples, 0.06%)</title><rect x="535.2" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="538.2" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (24 samples, 0.33%)</title><rect x="536.0" y="851.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="539.0" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (7 samples, 0.10%)</title><rect x="536.0" y="835.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="539.0" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.10%)</title><rect x="536.0" y="819.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="539.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="536.3" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="539.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.04%)</title><rect x="536.3" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="539.3" y="798.0"></text>
</g>
<g>
<title>java/net/URI.match (2 samples, 0.03%)</title><rect x="536.8" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="539.8" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (11 samples, 0.15%)</title><rect x="537.1" y="835.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="540.1" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (6 samples, 0.08%)</title><rect x="537.5" y="819.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.5" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2 samples, 0.03%)</title><rect x="537.6" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="540.6" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.03%)</title><rect x="538.1" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="541.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="538.1" y="787.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="538.1" y="771.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="541.1" y="782.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.04%)</title><rect x="538.4" y="819.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="541.4" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (6 samples, 0.08%)</title><rect x="538.9" y="835.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="541.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.04%)</title><rect x="539.4" y="819.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="542.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (3 samples, 0.04%)</title><rect x="539.4" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="542.4" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.07%)</title><rect x="539.9" y="851.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="542.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.07%)</title><rect x="539.9" y="835.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="542.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.07%)</title><rect x="539.9" y="819.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="542.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.07%)</title><rect x="539.9" y="803.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="542.9" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (23 samples, 0.32%)</title><rect x="540.7" y="899.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.7" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.08%)</title><rect x="541.1" y="883.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.1" y="894.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (6 samples, 0.08%)</title><rect x="541.1" y="867.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.1" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (6 samples, 0.08%)</title><rect x="541.1" y="851.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="544.1" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.08%)</title><rect x="541.1" y="835.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.1" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (5 samples, 0.07%)</title><rect x="541.2" y="819.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="541.7" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="541.7" y="787.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="544.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.03%)</title><rect x="541.7" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="544.7" y="782.0"></text>
</g>
<g>
<title>java/util/Collection.stream (10 samples, 0.14%)</title><rect x="542.0" y="883.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.0" y="894.0"></text>
</g>
<g>
<title>java/util/List.spliterator (4 samples, 0.06%)</title><rect x="542.0" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.0" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (6 samples, 0.08%)</title><rect x="542.7" y="867.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.7" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (3 samples, 0.04%)</title><rect x="543.0" y="851.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (3 samples, 0.04%)</title><rect x="543.0" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="546.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (3 samples, 0.04%)</title><rect x="543.0" y="819.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.0" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (5 samples, 0.07%)</title><rect x="543.7" y="883.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.7" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.06%)</title><rect x="543.8" y="867.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="546.8" y="878.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.06%)</title><rect x="543.8" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.8" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.03%)</title><rect x="544.2" y="835.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.2" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.06%)</title><rect x="544.5" y="899.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.5" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="544.6" y="883.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="547.6" y="894.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.04%)</title><rect x="545.3" y="899.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="548.3" y="910.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.04%)</title><rect x="545.3" y="883.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.3" y="894.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.03%)</title><rect x="545.5" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="548.5" y="878.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="545.5" y="851.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="548.5" y="862.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (2 samples, 0.03%)</title><rect x="545.8" y="899.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="548.8" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="545.8" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.8" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="545.8" y="867.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="548.8" y="878.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$384/1834450823.get$Lambda (2 samples, 0.03%)</title><rect x="545.8" y="851.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="548.8" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.04%)</title><rect x="546.1" y="899.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="549.1" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="546.3" y="883.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.get (87 samples, 1.20%)</title><rect x="546.8" y="899.0" width="14.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="549.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.waitingGet (85 samples, 1.17%)</title><rect x="547.1" y="883.0" width="13.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.&lt;init&gt; (5 samples, 0.07%)</title><rect x="547.7" y="867.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="548.2" y="851.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="551.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.managedBlock (76 samples, 1.05%)</title><rect x="548.6" y="867.0" width="12.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.block (76 samples, 1.05%)</title><rect x="548.6" y="851.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="551.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (75 samples, 1.04%)</title><rect x="548.7" y="835.0" width="12.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="551.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (75 samples, 1.04%)</title><rect x="548.7" y="819.0" width="12.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="551.7" y="830.0"></text>
</g>
<g>
<title>Unsafe_Park (62 samples, 0.86%)</title><rect x="549.9" y="803.0" width="10.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="552.9" y="814.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.03%)</title><rect x="550.7" y="787.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="553.7" y="798.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (19 samples, 0.26%)</title><rect x="551.0" y="787.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="554.0" y="798.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.07%)</title><rect x="552.6" y="771.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="555.6" y="782.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.03%)</title><rect x="553.0" y="755.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="556.0" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="553.4" y="771.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="556.4" y="782.0"></text>
</g>
<g>
<title>__lll_unlock_wake (12 samples, 0.17%)</title><rect x="554.4" y="787.0" width="2.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="557.4" y="798.0"></text>
</g>
<g>
<title>sysret_audit (2 samples, 0.03%)</title><rect x="555.4" y="771.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="558.4" y="782.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.03%)</title><rect x="555.4" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="558.4" y="766.0"></text>
</g>
<g>
<title>system_call_fastpath (4 samples, 0.06%)</title><rect x="555.7" y="771.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="558.7" y="782.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.06%)</title><rect x="555.7" y="755.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="558.7" y="766.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.06%)</title><rect x="555.7" y="739.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="558.7" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.10%)</title><rect x="556.5" y="787.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="559.5" y="798.0"></text>
</g>
<g>
<title>system_call_fastpath (4 samples, 0.06%)</title><rect x="556.9" y="771.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="559.9" y="782.0"></text>
</g>
<g>
<title>sys_futex (4 samples, 0.06%)</title><rect x="556.9" y="755.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="559.9" y="766.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.04%)</title><rect x="557.0" y="739.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="560.0" y="750.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.03%)</title><rect x="557.0" y="723.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="560.0" y="734.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.03%)</title><rect x="557.0" y="707.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="560.0" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="558.0" y="787.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="561.0" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.03%)</title><rect x="558.5" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="561.5" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (7 samples, 0.10%)</title><rect x="558.8" y="787.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="561.8" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.06%)</title><rect x="560.0" y="803.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="563.0" y="814.0"></text>
</g>
<g>
<title>system_call_after_swapgs (4 samples, 0.06%)</title><rect x="560.0" y="787.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="563.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (17 samples, 0.23%)</title><rect x="560.9" y="899.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (15 samples, 0.21%)</title><rect x="561.3" y="883.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (14 samples, 0.19%)</title><rect x="561.3" y="867.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.11%)</title><rect x="561.6" y="851.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="564.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.11%)</title><rect x="561.6" y="835.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="564.6" y="846.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.07%)</title><rect x="561.6" y="819.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="564.6" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpController$$Lambda$375/1612898000.apply (2 samples, 0.03%)</title><rect x="562.4" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpController$$Lambda$379/1199486187.apply (3 samples, 0.04%)</title><rect x="563.1" y="851.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="566.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.03%)</title><rect x="563.2" y="835.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="566.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (14 samples, 0.19%)</title><rect x="563.9" y="899.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="566.9" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (14 samples, 0.19%)</title><rect x="563.9" y="883.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="566.9" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (13 samples, 0.18%)</title><rect x="563.9" y="867.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="566.9" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (12 samples, 0.17%)</title><rect x="564.0" y="851.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.0" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (10 samples, 0.14%)</title><rect x="564.0" y="835.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="567.0" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (10 samples, 0.14%)</title><rect x="564.0" y="819.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.0" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.03%)</title><rect x="564.0" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (7 samples, 0.10%)</title><rect x="564.4" y="803.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.4" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (7 samples, 0.10%)</title><rect x="564.4" y="787.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$294/1857314804.test (6 samples, 0.08%)</title><rect x="564.5" y="771.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.lambda$events$0 (6 samples, 0.08%)</title><rect x="564.5" y="755.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="567.5" y="766.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="564.5" y="739.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="567.5" y="750.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (4 samples, 0.06%)</title><rect x="564.9" y="739.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.9" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="566.3" y="899.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="569.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (275 samples, 3.80%)</title><rect x="566.8" y="899.0" width="44.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="569.8" y="910.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (273 samples, 3.77%)</title><rect x="567.1" y="883.0" width="44.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="570.1" y="894.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (273 samples, 3.77%)</title><rect x="567.1" y="867.0" width="44.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.1" y="878.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (272 samples, 3.76%)</title><rect x="567.3" y="851.0" width="44.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.3" y="862.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="567.6" y="835.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.6" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="567.6" y="819.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$162/1256959182.get$Lambda (5 samples, 0.07%)</title><rect x="567.6" y="803.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$162/1256959182.&lt;init&gt; (3 samples, 0.04%)</title><rect x="568.0" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.03%)</title><rect x="568.4" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="571.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="568.8" y="835.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="571.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (107 samples, 1.48%)</title><rect x="569.4" y="835.0" width="17.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.4" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (12 samples, 0.17%)</title><rect x="569.9" y="819.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.9" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.04%)</title><rect x="570.2" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="573.2" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.04%)</title><rect x="570.2" y="787.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="573.2" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.04%)</title><rect x="570.2" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.2" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.04%)</title><rect x="570.2" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.2" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.04%)</title><rect x="570.2" y="739.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="573.2" y="750.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.06%)</title><rect x="570.7" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.7" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (4 samples, 0.06%)</title><rect x="570.7" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.7" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.03%)</title><rect x="571.5" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.5" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.03%)</title><rect x="571.5" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.5" y="798.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.03%)</title><rect x="571.5" y="771.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.5" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.03%)</title><rect x="571.5" y="755.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.5" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12 samples, 0.17%)</title><rect x="571.9" y="819.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.9" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (12 samples, 0.17%)</title><rect x="571.9" y="803.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="574.9" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (11 samples, 0.15%)</title><rect x="572.0" y="787.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.0" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (10 samples, 0.14%)</title><rect x="572.2" y="771.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.2" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (10 samples, 0.14%)</title><rect x="572.2" y="755.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.2" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10 samples, 0.14%)</title><rect x="572.2" y="739.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (10 samples, 0.14%)</title><rect x="572.2" y="723.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.2" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (8 samples, 0.11%)</title><rect x="572.5" y="707.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="575.5" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (8 samples, 0.11%)</title><rect x="572.5" y="691.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.trim (6 samples, 0.08%)</title><rect x="572.5" y="675.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (6 samples, 0.08%)</title><rect x="572.5" y="659.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="572.5" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.5" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="572.5" y="627.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="575.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/1995250556.test (3 samples, 0.04%)</title><rect x="573.0" y="643.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="576.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/1995250556.test (2 samples, 0.03%)</title><rect x="573.5" y="675.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (2 samples, 0.03%)</title><rect x="573.5" y="659.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="576.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.03%)</title><rect x="573.8" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (77 samples, 1.06%)</title><rect x="574.2" y="819.0" width="12.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="577.2" y="830.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (76 samples, 1.05%)</title><rect x="574.3" y="803.0" width="12.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="577.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.04%)</title><rect x="574.8" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="577.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="574.8" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="577.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="574.8" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="577.8" y="766.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (70 samples, 0.97%)</title><rect x="575.3" y="787.0" width="11.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.3" y="798.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (48 samples, 0.66%)</title><rect x="575.6" y="771.0" width="7.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="578.6" y="782.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (2 samples, 0.03%)</title><rect x="576.4" y="755.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="579.4" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (5 samples, 0.07%)</title><rect x="577.1" y="755.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="580.1" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (5 samples, 0.07%)</title><rect x="577.1" y="739.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="580.1" y="750.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (7 samples, 0.10%)</title><rect x="577.9" y="755.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="580.9" y="766.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.03%)</title><rect x="578.6" y="739.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="581.6" y="750.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.03%)</title><rect x="579.0" y="755.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="582.0" y="766.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.03%)</title><rect x="579.4" y="755.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="582.4" y="766.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.04%)</title><rect x="579.7" y="755.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="582.7" y="766.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (9 samples, 0.12%)</title><rect x="580.2" y="755.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="583.2" y="766.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="580.2" y="739.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="583.2" y="750.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.07%)</title><rect x="580.5" y="739.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="583.5" y="750.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.06%)</title><rect x="580.5" y="723.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="583.5" y="734.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.03%)</title><rect x="581.3" y="739.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="584.3" y="750.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (11 samples, 0.15%)</title><rect x="581.7" y="755.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="584.7" y="766.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.04%)</title><rect x="582.3" y="739.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="585.3" y="750.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.06%)</title><rect x="582.8" y="739.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="585.8" y="750.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.03%)</title><rect x="583.1" y="723.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="586.1" y="734.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="583.1" y="707.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="586.1" y="718.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="583.1" y="691.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="586.1" y="702.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (2 samples, 0.03%)</title><rect x="583.5" y="771.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="586.5" y="782.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.03%)</title><rect x="583.9" y="771.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="586.9" y="782.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (14 samples, 0.19%)</title><rect x="584.3" y="771.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.3" y="782.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (11 samples, 0.15%)</title><rect x="584.8" y="755.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="587.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.06%)</title><rect x="584.9" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.06%)</title><rect x="584.9" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="585.1" y="707.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.1" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="585.2" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="588.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="585.2" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.2" y="686.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.03%)</title><rect x="585.2" y="659.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.2" y="670.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (5 samples, 0.07%)</title><rect x="585.7" y="739.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.7" y="750.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.06%)</title><rect x="585.9" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="588.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.06%)</title><rect x="585.9" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="588.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.method (2 samples, 0.03%)</title><rect x="586.9" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="589.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (20 samples, 0.28%)</title><rect x="587.2" y="835.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (2 samples, 0.03%)</title><rect x="588.0" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="591.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.03%)</title><rect x="588.0" y="803.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.03%)</title><rect x="588.0" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="591.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (12 samples, 0.17%)</title><rect x="588.5" y="819.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="591.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (12 samples, 0.17%)</title><rect x="588.5" y="803.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.5" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (7 samples, 0.10%)</title><rect x="588.7" y="787.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.7" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (5 samples, 0.07%)</title><rect x="588.8" y="771.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.8" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (5 samples, 0.07%)</title><rect x="588.8" y="755.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.8" y="766.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (4 samples, 0.06%)</title><rect x="589.0" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="592.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (4 samples, 0.06%)</title><rect x="589.0" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (4 samples, 0.06%)</title><rect x="589.0" y="707.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.0" y="718.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (4 samples, 0.06%)</title><rect x="589.0" y="691.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="589.3" y="675.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.3" y="686.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (2 samples, 0.03%)</title><rect x="589.3" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.3" y="670.0"></text>
</g>
<g>
<title>java/util/LinkedList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="590.0" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.0" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="590.0" y="771.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.0" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="590.0" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.0" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (2 samples, 0.03%)</title><rect x="590.0" y="739.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="593.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (129 samples, 1.78%)</title><rect x="590.5" y="835.0" width="21.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.5" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (125 samples, 1.73%)</title><rect x="590.6" y="819.0" width="20.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="593.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (125 samples, 1.73%)</title><rect x="590.6" y="803.0" width="20.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (121 samples, 1.67%)</title><rect x="591.0" y="787.0" width="19.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="594.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (121 samples, 1.67%)</title><rect x="591.0" y="771.0" width="19.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="594.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (117 samples, 1.62%)</title><rect x="591.1" y="755.0" width="19.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (117 samples, 1.62%)</title><rect x="591.1" y="739.0" width="19.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="594.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (117 samples, 1.62%)</title><rect x="591.1" y="723.0" width="19.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="594.1" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (18 samples, 0.25%)</title><rect x="591.9" y="707.0" width="3.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="594.9" y="718.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="592.6" y="691.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="595.6" y="702.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.07%)</title><rect x="594.0" y="691.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="597.0" y="702.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.11%)</title><rect x="594.9" y="707.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="597.9" y="718.0"></text>
</g>
<g>
<title>system_call_after_swapgs (8 samples, 0.11%)</title><rect x="594.9" y="691.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="597.9" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (86 samples, 1.19%)</title><rect x="596.2" y="707.0" width="14.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="599.2" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.03%)</title><rect x="597.1" y="691.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="600.1" y="702.0"></text>
</g>
<g>
<title>auditsys (3 samples, 0.04%)</title><rect x="597.5" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="600.5" y="702.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.03%)</title><rect x="597.6" y="675.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="600.6" y="686.0"></text>
</g>
<g>
<title>system_call_fastpath (75 samples, 1.04%)</title><rect x="598.0" y="691.0" width="12.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="601.0" y="702.0"></text>
</g>
<g>
<title>sys_futex (74 samples, 1.02%)</title><rect x="598.1" y="675.0" width="12.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="601.1" y="686.0"></text>
</g>
<g>
<title>do_futex (74 samples, 1.02%)</title><rect x="598.1" y="659.0" width="12.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="601.1" y="670.0"></text>
</g>
<g>
<title>_raw_qspin_lock (2 samples, 0.03%)</title><rect x="598.1" y="643.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="601.1" y="654.0"></text>
</g>
<g>
<title>futex_wake_op (70 samples, 0.97%)</title><rect x="598.6" y="643.0" width="11.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="601.6" y="654.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="598.8" y="627.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="601.8" y="638.0"></text>
</g>
<g>
<title>wake_up_q (67 samples, 0.93%)</title><rect x="599.1" y="627.0" width="10.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="602.1" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (67 samples, 0.93%)</title><rect x="599.1" y="611.0" width="10.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="602.1" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (67 samples, 0.93%)</title><rect x="599.1" y="595.0" width="10.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="602.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2 samples, 0.03%)</title><rect x="610.4" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (2 samples, 0.03%)</title><rect x="610.4" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.4" y="750.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (2 samples, 0.03%)</title><rect x="610.7" y="787.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.7" y="798.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (2 samples, 0.03%)</title><rect x="610.7" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="613.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (2 samples, 0.03%)</title><rect x="610.7" y="755.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (3 samples, 0.04%)</title><rect x="611.0" y="819.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="614.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.03%)</title><rect x="611.2" y="803.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="611.2" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="614.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="611.2" y="771.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="611.2" y="755.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (22 samples, 0.30%)</title><rect x="611.7" y="899.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="614.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (21 samples, 0.29%)</title><rect x="611.8" y="883.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.8" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (20 samples, 0.28%)</title><rect x="611.8" y="867.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.8" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (19 samples, 0.26%)</title><rect x="612.0" y="851.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.0" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (15 samples, 0.21%)</title><rect x="612.6" y="835.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.6" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$134/1835286193.accept (13 samples, 0.18%)</title><rect x="613.0" y="819.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="616.0" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (13 samples, 0.18%)</title><rect x="613.0" y="803.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="616.0" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (9 samples, 0.12%)</title><rect x="613.3" y="787.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="616.3" y="798.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.06%)</title><rect x="613.3" y="771.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="616.3" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$136/1302580884.accept (2 samples, 0.03%)</title><rect x="613.9" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.9" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.03%)</title><rect x="613.9" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$64/1750498848.test (2 samples, 0.03%)</title><rect x="613.9" y="739.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.03%)</title><rect x="613.9" y="723.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="616.9" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.03%)</title><rect x="613.9" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.9" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.03%)</title><rect x="613.9" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="616.9" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.03%)</title><rect x="613.9" y="675.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="616.9" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.03%)</title><rect x="613.9" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.03%)</title><rect x="613.9" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="616.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="613.9" y="627.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="616.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="613.9" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="616.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.03%)</title><rect x="613.9" y="595.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$64/1750498848.test (3 samples, 0.04%)</title><rect x="614.3" y="771.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="617.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (22 samples, 0.30%)</title><rect x="615.2" y="899.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (21 samples, 0.29%)</title><rect x="615.4" y="883.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (18 samples, 0.25%)</title><rect x="615.4" y="867.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$64/1750498848.test (8 samples, 0.11%)</title><rect x="615.6" y="851.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (8 samples, 0.11%)</title><rect x="615.6" y="835.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.6" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (8 samples, 0.11%)</title><rect x="615.6" y="819.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="618.6" y="830.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (7 samples, 0.10%)</title><rect x="615.7" y="803.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="618.7" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (7 samples, 0.10%)</title><rect x="615.7" y="787.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.7" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (7 samples, 0.10%)</title><rect x="615.7" y="771.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.7" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (7 samples, 0.10%)</title><rect x="615.7" y="755.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.08%)</title><rect x="615.9" y="739.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.08%)</title><rect x="615.9" y="723.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.08%)</title><rect x="615.9" y="707.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (4 samples, 0.06%)</title><rect x="616.9" y="851.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (3 samples, 0.04%)</title><rect x="617.5" y="851.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="617.7" y="835.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="620.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.03%)</title><rect x="617.7" y="819.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="620.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.newIAE (2 samples, 0.03%)</title><rect x="618.0" y="851.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.03%)</title><rect x="618.0" y="835.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.0" y="846.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.03%)</title><rect x="618.0" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.04%)</title><rect x="618.3" y="867.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="621.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.timeout (2 samples, 0.03%)</title><rect x="618.8" y="899.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.8" y="910.0"></text>
</g>
<g>
<title>java/time/Duration.equals (2 samples, 0.03%)</title><rect x="618.8" y="883.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.03%)</title><rect x="619.2" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="622.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.03%)</title><rect x="619.2" y="883.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.03%)</title><rect x="619.2" y="867.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.2" y="878.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.03%)</title><rect x="619.2" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="622.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.03%)</title><rect x="619.2" y="835.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="622.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.17%)</title><rect x="619.6" y="899.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.07%)</title><rect x="620.8" y="883.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.07%)</title><rect x="620.8" y="867.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.8" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/LSMDao.lastIterator (34 samples, 0.47%)</title><rect x="621.6" y="899.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/IteratorsTool.lastIterator (34 samples, 0.47%)</title><rect x="621.6" y="883.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="624.6" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.03%)</title><rect x="622.4" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="625.4" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (2 samples, 0.03%)</title><rect x="622.4" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="625.4" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTablesPool.iterator (27 samples, 0.37%)</title><rect x="622.7" y="867.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.7" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.06%)</title><rect x="623.1" y="851.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.1" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 0.06%)</title><rect x="623.1" y="835.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.1" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (6 samples, 0.08%)</title><rect x="623.7" y="851.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="626.7" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (6 samples, 0.08%)</title><rect x="623.7" y="835.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.7" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (6 samples, 0.08%)</title><rect x="623.7" y="819.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.7" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absHighest (5 samples, 0.07%)</title><rect x="623.9" y="803.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.9" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getLastEntry (5 samples, 0.07%)</title><rect x="623.9" y="787.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.04%)</title><rect x="624.9" y="851.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.04%)</title><rect x="624.9" y="835.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.04%)</title><rect x="624.9" y="819.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.9" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTable.iterator (11 samples, 0.15%)</title><rect x="625.4" y="851.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.4" y="862.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (3 samples, 0.04%)</title><rect x="625.7" y="835.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.7" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSortedMap.tailMap (6 samples, 0.08%)</title><rect x="626.2" y="835.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="629.2" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSortedMap.&lt;init&gt; (4 samples, 0.06%)</title><rect x="626.2" y="819.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="629.2" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.&lt;init&gt; (4 samples, 0.06%)</title><rect x="626.2" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.03%)</title><rect x="626.8" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="629.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.03%)</title><rect x="626.8" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.03%)</title><rect x="626.8" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (2 samples, 0.03%)</title><rect x="626.8" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="629.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/Balancer.poolsNodes (7 samples, 0.10%)</title><rect x="627.1" y="899.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.1" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/Balancer.hashCreate (7 samples, 0.10%)</title><rect x="627.1" y="883.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="630.1" y="894.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (7 samples, 0.10%)</title><rect x="627.1" y="867.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="630.1" y="878.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (6 samples, 0.08%)</title><rect x="627.3" y="851.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="630.3" y="862.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (6 samples, 0.08%)</title><rect x="627.3" y="835.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.3" y="846.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (6 samples, 0.08%)</title><rect x="627.3" y="819.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.3" y="830.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (6 samples, 0.08%)</title><rect x="627.3" y="803.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.3" y="814.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (6 samples, 0.08%)</title><rect x="627.3" y="787.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.3" y="798.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implDigest (6 samples, 0.08%)</title><rect x="627.3" y="771.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.3" y="782.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (6 samples, 0.08%)</title><rect x="627.3" y="755.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="630.3" y="766.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress0 (4 samples, 0.06%)</title><rect x="627.3" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.3" y="750.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompressCheck (2 samples, 0.03%)</title><rect x="628.0" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/ResponseTools.createResponse (9 samples, 0.12%)</title><rect x="628.3" y="899.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.3" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.08%)</title><rect x="628.8" y="883.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.8" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="629.4" y="867.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="632.4" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/ResponseTools.getDataFromResponseAsync (2 samples, 0.03%)</title><rect x="629.8" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="632.8" y="910.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.03%)</title><rect x="629.8" y="883.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.8" y="894.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.03%)</title><rect x="629.8" y="867.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="632.8" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$ResponseUtils.sendResponse (529 samples, 7.31%)</title><rect x="630.1" y="947.0" width="86.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.1" y="958.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (529 samples, 7.31%)</title><rect x="630.1" y="931.0" width="86.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="633.1" y="942.0">one/nio/ht..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.03%)</title><rect x="630.6" y="915.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="630.6" y="899.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="633.6" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="630.6" y="883.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="633.6" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="630.6" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.6" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (516 samples, 7.13%)</title><rect x="630.9" y="915.0" width="84.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.9" y="926.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.11%)</title><rect x="630.9" y="899.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.9" y="910.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.10%)</title><rect x="631.1" y="883.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="634.1" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.06%)</title><rect x="631.1" y="867.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="634.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="631.7" y="867.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="634.7" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="631.7" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (508 samples, 7.02%)</title><rect x="632.2" y="899.0" width="82.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="635.2" y="910.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (508 samples, 7.02%)</title><rect x="632.2" y="883.0" width="82.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.2" y="894.0">one/nio/n..</text>
</g>
<g>
<title>[vdso] (9 samples, 0.12%)</title><rect x="632.4" y="867.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="635.4" y="878.0"></text>
</g>
<g>
<title>_init (3 samples, 0.04%)</title><rect x="633.8" y="867.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="636.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (495 samples, 6.84%)</title><rect x="634.3" y="867.0" width="80.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="637.3" y="878.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (489 samples, 6.76%)</title><rect x="635.3" y="851.0" width="79.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.3" y="862.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.03%)</title><rect x="637.1" y="835.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="640.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.39%)</title><rect x="637.4" y="835.0" width="4.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="640.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.39%)</title><rect x="637.4" y="819.0" width="4.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="640.4" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (22 samples, 0.30%)</title><rect x="637.4" y="803.0" width="3.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="640.4" y="814.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="638.6" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="641.6" y="798.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (4 samples, 0.06%)</title><rect x="638.9" y="787.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="641.9" y="798.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (6 samples, 0.08%)</title><rect x="640.0" y="787.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="643.0" y="798.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="641.0" y="803.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="644.0" y="814.0"></text>
</g>
<g>
<title>send (3 samples, 0.04%)</title><rect x="641.5" y="803.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="644.5" y="814.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.11%)</title><rect x="642.0" y="835.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="645.0" y="846.0"></text>
</g>
<g>
<title>system_call_after_swapgs (8 samples, 0.11%)</title><rect x="642.0" y="819.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="645.0" y="830.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.06%)</title><rect x="643.3" y="835.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="646.3" y="846.0"></text>
</g>
<g>
<title>send (436 samples, 6.02%)</title><rect x="643.9" y="835.0" width="71.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="646.9" y="846.0">send</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="644.9" y="819.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="647.9" y="830.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.03%)</title><rect x="645.2" y="819.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="648.2" y="830.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.03%)</title><rect x="645.2" y="803.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="648.2" y="814.0"></text>
</g>
<g>
<title>sysret_audit (2 samples, 0.03%)</title><rect x="645.6" y="819.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="648.6" y="830.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.03%)</title><rect x="645.6" y="803.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="648.6" y="814.0"></text>
</g>
<g>
<title>system_call_fastpath (423 samples, 5.84%)</title><rect x="646.1" y="819.0" width="68.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="649.1" y="830.0">system_..</text>
</g>
<g>
<title>sys_sendto (422 samples, 5.83%)</title><rect x="646.2" y="803.0" width="68.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="649.2" y="814.0">sys_sen..</text>
</g>
<g>
<title>SYSC_sendto (422 samples, 5.83%)</title><rect x="646.2" y="787.0" width="68.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="649.2" y="798.0">SYSC_se..</text>
</g>
<g>
<title>fget_light (3 samples, 0.04%)</title><rect x="646.7" y="771.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="649.7" y="782.0"></text>
</g>
<g>
<title>sock_sendmsg (409 samples, 5.65%)</title><rect x="647.4" y="771.0" width="66.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="650.4" y="782.0">sock_se..</text>
</g>
<g>
<title>inet_sendmsg (400 samples, 5.53%)</title><rect x="647.5" y="755.0" width="65.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="650.5" y="766.0">inet_se..</text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.04%)</title><rect x="648.0" y="739.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="651.0" y="750.0"></text>
</g>
<g>
<title>tcp_sendmsg (394 samples, 5.44%)</title><rect x="648.5" y="739.0" width="64.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="651.5" y="750.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (6 samples, 0.08%)</title><rect x="649.6" y="723.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="652.6" y="734.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.06%)</title><rect x="650.0" y="707.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="653.0" y="718.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.03%)</title><rect x="650.8" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="653.8" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="651.1" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="654.1" y="734.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.03%)</title><rect x="651.6" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="654.6" y="734.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.15%)</title><rect x="652.3" y="723.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="655.3" y="734.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.14%)</title><rect x="652.4" y="707.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="655.4" y="718.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.06%)</title><rect x="652.9" y="691.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="655.9" y="702.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.04%)</title><rect x="653.6" y="691.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="656.6" y="702.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="654.1" y="723.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="657.1" y="734.0"></text>
</g>
<g>
<title>tcp_push (351 samples, 4.85%)</title><rect x="654.4" y="723.0" width="57.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="657.4" y="734.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (351 samples, 4.85%)</title><rect x="654.4" y="707.0" width="57.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="657.4" y="718.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (350 samples, 4.84%)</title><rect x="654.5" y="691.0" width="57.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="657.5" y="702.0">tcp_wr..</text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.04%)</title><rect x="655.2" y="675.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="658.2" y="686.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.04%)</title><rect x="655.2" y="659.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="658.2" y="670.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="655.4" y="643.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="658.4" y="654.0"></text>
</g>
<g>
<title>tcp_transmit_skb (338 samples, 4.67%)</title><rect x="656.2" y="675.0" width="55.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="659.2" y="686.0">tcp_t..</text>
</g>
<g>
<title>ip_queue_xmit (328 samples, 4.53%)</title><rect x="657.3" y="659.0" width="53.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="660.3" y="670.0">ip_qu..</text>
</g>
<g>
<title>ip_local_out_sk (323 samples, 4.46%)</title><rect x="657.8" y="643.0" width="52.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="660.8" y="654.0">ip_lo..</text>
</g>
<g>
<title>__ip_local_out_sk (77 samples, 1.06%)</title><rect x="658.0" y="627.0" width="12.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="661.0" y="638.0"></text>
</g>
<g>
<title>nf_hook_slow (75 samples, 1.04%)</title><rect x="658.3" y="611.0" width="12.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="661.3" y="622.0"></text>
</g>
<g>
<title>ipv4_conntrack_defrag	[nf_defrag_ipv4] (2 samples, 0.03%)</title><rect x="658.8" y="595.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="661.8" y="606.0"></text>
</g>
<g>
<title>nf_iterate (69 samples, 0.95%)</title><rect x="659.3" y="595.0" width="11.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="662.3" y="606.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (5 samples, 0.07%)</title><rect x="661.1" y="579.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="664.1" y="590.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (5 samples, 0.07%)</title><rect x="661.1" y="563.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="664.1" y="574.0"></text>
</g>
<g>
<title>iptable_mangle_hook	[iptable_mangle] (7 samples, 0.10%)</title><rect x="661.9" y="579.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="664.9" y="590.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (6 samples, 0.08%)</title><rect x="662.0" y="563.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="665.0" y="574.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_local_fn	[iptable_nat] (3 samples, 0.04%)</title><rect x="663.0" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="666.0" y="590.0"></text>
</g>
<g>
<title>nf_nat_ipv4_local_fn	[nf_nat_ipv4] (3 samples, 0.04%)</title><rect x="663.0" y="563.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="666.0" y="574.0"></text>
</g>
<g>
<title>nf_ct_nat_ext_add	[nf_nat] (2 samples, 0.03%)</title><rect x="663.2" y="547.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="666.2" y="558.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (15 samples, 0.21%)</title><rect x="663.5" y="579.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="666.5" y="590.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (12 samples, 0.17%)</title><rect x="663.8" y="563.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="666.8" y="574.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (2 samples, 0.03%)</title><rect x="666.0" y="579.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="669.0" y="590.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.03%)</title><rect x="666.0" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="669.0" y="574.0"></text>
</g>
<g>
<title>ipv4_conntrack_local	[nf_conntrack_ipv4] (26 samples, 0.36%)</title><rect x="666.3" y="579.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="669.3" y="590.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (2 samples, 0.03%)</title><rect x="666.3" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="669.3" y="574.0"></text>
</g>
<g>
<title>__nf_ct_l4proto_find	[nf_conntrack] (2 samples, 0.03%)</title><rect x="666.6" y="563.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="669.6" y="574.0"></text>
</g>
<g>
<title>nf_conntrack_in	[nf_conntrack] (19 samples, 0.26%)</title><rect x="666.9" y="563.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="669.9" y="574.0"></text>
</g>
<g>
<title>__nf_conntrack_find_get	[nf_conntrack] (6 samples, 0.08%)</title><rect x="667.3" y="547.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="670.3" y="558.0"></text>
</g>
<g>
<title>__nf_ct_refresh_acct	[nf_conntrack] (2 samples, 0.03%)</title><rect x="668.2" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="671.2" y="558.0"></text>
</g>
<g>
<title>nf_ct_get_tuple	[nf_conntrack] (2 samples, 0.03%)</title><rect x="668.7" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="671.7" y="558.0"></text>
</g>
<g>
<title>ipv4_pkt_to_tuple	[nf_conntrack_ipv4] (2 samples, 0.03%)</title><rect x="668.7" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="671.7" y="542.0"></text>
</g>
<g>
<title>tcp_packet	[nf_conntrack] (5 samples, 0.07%)</title><rect x="669.2" y="547.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="672.2" y="558.0"></text>
</g>
<g>
<title>tcp_in_window	[nf_conntrack] (2 samples, 0.03%)</title><rect x="669.7" y="531.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="672.7" y="542.0"></text>
</g>
<g>
<title>ip_output (245 samples, 3.39%)</title><rect x="670.5" y="627.0" width="40.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="673.5" y="638.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (231 samples, 3.19%)</title><rect x="670.7" y="611.0" width="37.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="673.7" y="622.0">ip_..</text>
</g>
<g>
<title>dev_queue_xmit (15 samples, 0.21%)</title><rect x="672.6" y="595.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="675.6" y="606.0"></text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.21%)</title><rect x="672.6" y="579.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="675.6" y="590.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.12%)</title><rect x="672.8" y="563.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="675.8" y="574.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.08%)</title><rect x="673.3" y="547.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="676.3" y="558.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.06%)</title><rect x="673.5" y="531.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.5" y="542.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.06%)</title><rect x="673.5" y="515.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="676.5" y="526.0"></text>
</g>
<g>
<title>ktime_get_real (2 samples, 0.03%)</title><rect x="673.8" y="499.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="676.8" y="510.0"></text>
</g>
<g>
<title>getnstimeofday64 (2 samples, 0.03%)</title><rect x="673.8" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.8" y="494.0"></text>
</g>
<g>
<title>__getnstimeofday64 (2 samples, 0.03%)</title><rect x="673.8" y="467.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="676.8" y="478.0"></text>
</g>
<g>
<title>validate_xmit_skb.isra.109.part.110 (3 samples, 0.04%)</title><rect x="674.6" y="563.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="677.6" y="574.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.04%)</title><rect x="674.6" y="547.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="677.6" y="558.0"></text>
</g>
<g>
<title>local_bh_enable (204 samples, 2.82%)</title><rect x="675.1" y="595.0" width="33.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="678.1" y="606.0">lo..</text>
</g>
<g>
<title>__local_bh_enable_ip (204 samples, 2.82%)</title><rect x="675.1" y="579.0" width="33.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="678.1" y="590.0">__..</text>
</g>
<g>
<title>do_softirq (202 samples, 2.79%)</title><rect x="675.4" y="563.0" width="32.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="678.4" y="574.0">do..</text>
</g>
<g>
<title>call_softirq (200 samples, 2.76%)</title><rect x="675.7" y="547.0" width="32.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="678.7" y="558.0">ca..</text>
</g>
<g>
<title>__do_softirq (199 samples, 2.75%)</title><rect x="675.7" y="531.0" width="32.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="678.7" y="542.0">__..</text>
</g>
<g>
<title>net_rx_action (192 samples, 2.65%)</title><rect x="676.7" y="515.0" width="31.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="679.7" y="526.0">ne..</text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.03%)</title><rect x="677.5" y="499.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="680.5" y="510.0"></text>
</g>
<g>
<title>process_backlog (185 samples, 2.56%)</title><rect x="677.9" y="499.0" width="30.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="680.9" y="510.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (183 samples, 2.53%)</title><rect x="678.0" y="483.0" width="29.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="681.0" y="494.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (182 samples, 2.51%)</title><rect x="678.0" y="467.0" width="29.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="681.0" y="478.0">__..</text>
</g>
<g>
<title>ip_rcv (178 samples, 2.46%)</title><rect x="678.7" y="451.0" width="29.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="681.7" y="462.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (164 samples, 2.27%)</title><rect x="678.8" y="435.0" width="26.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="681.8" y="446.0">i..</text>
</g>
<g>
<title>ip_local_deliver (162 samples, 2.24%)</title><rect x="679.2" y="419.0" width="26.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="682.2" y="430.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (140 samples, 1.93%)</title><rect x="679.2" y="403.0" width="22.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="682.2" y="414.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (138 samples, 1.91%)</title><rect x="679.5" y="387.0" width="22.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="682.5" y="398.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.07%)</title><rect x="680.3" y="371.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="683.3" y="382.0"></text>
</g>
<g>
<title>inet_ehashfn (2 samples, 0.03%)</title><rect x="680.8" y="355.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="683.8" y="366.0"></text>
</g>
<g>
<title>tcp_filter (5 samples, 0.07%)</title><rect x="681.1" y="371.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="684.1" y="382.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (5 samples, 0.07%)</title><rect x="681.1" y="355.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="684.1" y="366.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.03%)</title><rect x="681.4" y="339.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="684.4" y="350.0"></text>
</g>
<g>
<title>selinux_socket_sock_rcv_skb (2 samples, 0.03%)</title><rect x="681.4" y="323.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="684.4" y="334.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (123 samples, 1.70%)</title><rect x="681.9" y="371.0" width="20.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="684.9" y="382.0"></text>
</g>
<g>
<title>tcp_rcv_established (118 samples, 1.63%)</title><rect x="682.6" y="355.0" width="19.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="685.6" y="366.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (8 samples, 0.11%)</title><rect x="683.2" y="339.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="686.2" y="350.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (8 samples, 0.11%)</title><rect x="683.2" y="323.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="686.2" y="334.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.11%)</title><rect x="683.2" y="307.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="686.2" y="318.0"></text>
</g>
<g>
<title>mod_timer (8 samples, 0.11%)</title><rect x="683.2" y="291.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="686.2" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.11%)</title><rect x="683.2" y="275.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="686.2" y="286.0"></text>
</g>
<g>
<title>tcp_ack (20 samples, 0.28%)</title><rect x="685.0" y="339.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="688.0" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.14%)</title><rect x="686.3" y="323.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="689.3" y="334.0"></text>
</g>
<g>
<title>skb_release_all (9 samples, 0.12%)</title><rect x="686.3" y="307.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="689.3" y="318.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.12%)</title><rect x="686.3" y="291.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="689.3" y="302.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.11%)</title><rect x="686.5" y="275.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="689.5" y="286.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="687.5" y="259.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="690.5" y="270.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.06%)</title><rect x="688.3" y="339.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="691.3" y="350.0"></text>
</g>
<g>
<title>tcp_data_queue (78 samples, 1.08%)</title><rect x="688.9" y="339.0" width="12.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="691.9" y="350.0"></text>
</g>
<g>
<title>sock_def_readable (72 samples, 0.99%)</title><rect x="689.4" y="323.0" width="11.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="692.4" y="334.0"></text>
</g>
<g>
<title>__wake_up_sync_key (72 samples, 0.99%)</title><rect x="689.4" y="307.0" width="11.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="692.4" y="318.0"></text>
</g>
<g>
<title>__wake_up_common_lock (72 samples, 0.99%)</title><rect x="689.4" y="291.0" width="11.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="692.4" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (70 samples, 0.97%)</title><rect x="689.8" y="275.0" width="11.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="692.8" y="286.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="701.2" y="323.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="704.2" y="334.0"></text>
</g>
<g>
<title>nf_hook_slow (20 samples, 0.28%)</title><rect x="702.0" y="403.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="705.0" y="414.0"></text>
</g>
<g>
<title>nf_iterate (18 samples, 0.25%)</title><rect x="702.3" y="387.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="705.3" y="398.0"></text>
</g>
<g>
<title>iptable_filter_hook	[iptable_filter] (11 samples, 0.15%)</title><rect x="702.8" y="371.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="705.8" y="382.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (8 samples, 0.11%)</title><rect x="703.0" y="355.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="706.0" y="366.0"></text>
</g>
<g>
<title>conntrack_mt_v3	[xt_conntrack] (3 samples, 0.04%)</title><rect x="703.6" y="339.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="706.6" y="350.0"></text>
</g>
<g>
<title>conntrack_mt	[xt_conntrack] (3 samples, 0.04%)</title><rect x="703.6" y="323.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="706.6" y="334.0"></text>
</g>
<g>
<title>tcp_mt (2 samples, 0.03%)</title><rect x="704.3" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="707.3" y="366.0"></text>
</g>
<g>
<title>iptable_security_hook	[iptable_security] (2 samples, 0.03%)</title><rect x="704.9" y="371.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="707.9" y="382.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (2 samples, 0.03%)</title><rect x="704.9" y="355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="707.9" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.03%)</title><rect x="705.2" y="403.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="708.2" y="414.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.18%)</title><rect x="705.6" y="435.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="708.6" y="446.0"></text>
</g>
<g>
<title>nf_iterate (10 samples, 0.14%)</title><rect x="706.1" y="419.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="709.1" y="430.0"></text>
</g>
<g>
<title>iptable_raw_hook	[iptable_raw] (10 samples, 0.14%)</title><rect x="706.1" y="403.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="709.1" y="414.0"></text>
</g>
<g>
<title>ipt_do_table	[ip_tables] (10 samples, 0.14%)</title><rect x="706.1" y="387.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="709.1" y="398.0"></text>
</g>
<g>
<title>nf_hook_slow (13 samples, 0.18%)</title><rect x="708.3" y="611.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="711.3" y="622.0"></text>
</g>
<g>
<title>nf_iterate (11 samples, 0.15%)</title><rect x="708.5" y="595.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="711.5" y="606.0"></text>
</g>
<g>
<title>iptable_nat_ipv4_out	[iptable_nat] (4 samples, 0.06%)</title><rect x="709.0" y="579.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="712.0" y="590.0"></text>
</g>
<g>
<title>nf_nat_ipv4_out	[nf_nat_ipv4] (4 samples, 0.06%)</title><rect x="709.0" y="563.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="712.0" y="574.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.03%)</title><rect x="709.7" y="579.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="712.7" y="590.0"></text>
</g>
<g>
<title>selinux_ipv4_postroute (2 samples, 0.03%)</title><rect x="710.0" y="579.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="713.0" y="590.0"></text>
</g>
<g>
<title>selinux_ip_postroute (2 samples, 0.03%)</title><rect x="710.0" y="563.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="713.0" y="574.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.03%)</title><rect x="710.8" y="659.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="713.8" y="670.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.03%)</title><rect x="710.8" y="643.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="713.8" y="654.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.03%)</title><rect x="710.8" y="627.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="713.8" y="638.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.03%)</title><rect x="711.3" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="714.3" y="686.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.08%)</title><rect x="711.6" y="723.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="714.6" y="734.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="711.6" y="707.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="714.6" y="718.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.06%)</title><rect x="711.9" y="707.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="714.9" y="718.0"></text>
</g>
<g>
<title>tcp_established_options (2 samples, 0.03%)</title><rect x="712.3" y="691.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="715.3" y="702.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.08%)</title><rect x="712.7" y="755.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="715.7" y="766.0"></text>
</g>
<g>
<title>selinux_socket_sendmsg (5 samples, 0.07%)</title><rect x="712.9" y="739.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="715.9" y="750.0"></text>
</g>
<g>
<title>sock_has_perm (5 samples, 0.07%)</title><rect x="712.9" y="723.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="715.9" y="734.0"></text>
</g>
<g>
<title>avc_has_perm_flags (2 samples, 0.03%)</title><rect x="713.4" y="707.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="716.4" y="718.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.08%)</title><rect x="714.1" y="771.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="717.1" y="782.0"></text>
</g>
<g>
<title>fget_light (6 samples, 0.08%)</title><rect x="714.1" y="755.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="717.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.07%)</title><rect x="715.0" y="915.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.0" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.06%)</title><rect x="715.2" y="899.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.2" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.06%)</title><rect x="715.2" y="883.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="718.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (2 samples, 0.03%)</title><rect x="715.8" y="915.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.8" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="715.8" y="899.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="718.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (252 samples, 3.48%)</title><rect x="716.3" y="1027.0" width="41.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="719.3" y="1038.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (252 samples, 3.48%)</title><rect x="716.3" y="1011.0" width="41.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.3" y="1022.0">jav..</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.03%)</title><rect x="719.3" y="995.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (6 samples, 0.08%)</title><rect x="719.8" y="995.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 0.07%)</title><rect x="719.9" y="979.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.9" y="990.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (3 samples, 0.04%)</title><rect x="719.9" y="963.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="722.9" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.209] (2 samples, 0.03%)</title><rect x="720.4" y="963.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="723.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (123 samples, 1.70%)</title><rect x="720.9" y="995.0" width="20.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="723.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (118 samples, 1.63%)</title><rect x="721.4" y="979.0" width="19.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (110 samples, 1.52%)</title><rect x="722.7" y="963.0" width="17.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (108 samples, 1.49%)</title><rect x="723.0" y="947.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (108 samples, 1.49%)</title><rect x="723.0" y="931.0" width="17.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="726.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (102 samples, 1.41%)</title><rect x="723.0" y="915.0" width="16.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (102 samples, 1.41%)</title><rect x="723.0" y="899.0" width="16.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="726.0" y="910.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.08%)</title><rect x="723.3" y="883.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="726.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Signaller.tryFire (87 samples, 1.20%)</title><rect x="724.3" y="883.0" width="14.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="727.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (84 samples, 1.16%)</title><rect x="724.8" y="867.0" width="13.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (84 samples, 1.16%)</title><rect x="724.8" y="851.0" width="13.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="727.8" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.19%)</title><rect x="725.3" y="835.0" width="2.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="728.3" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.04%)</title><rect x="726.0" y="819.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="729.0" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="726.4" y="819.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="729.4" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="727.3" y="819.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="730.3" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 0.10%)</title><rect x="727.6" y="835.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="730.6" y="846.0"></text>
</g>
<g>
<title>system_call_after_swapgs (7 samples, 0.10%)</title><rect x="727.6" y="819.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="730.6" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (60 samples, 0.83%)</title><rect x="728.7" y="835.0" width="9.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="731.7" y="846.0"></text>
</g>
<g>
<title>system_call_fastpath (58 samples, 0.80%)</title><rect x="729.1" y="819.0" width="9.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="732.1" y="830.0"></text>
</g>
<g>
<title>sys_futex (58 samples, 0.80%)</title><rect x="729.1" y="803.0" width="9.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="732.1" y="814.0"></text>
</g>
<g>
<title>do_futex (57 samples, 0.79%)</title><rect x="729.1" y="787.0" width="9.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="732.1" y="798.0"></text>
</g>
<g>
<title>_raw_qspin_lock (2 samples, 0.03%)</title><rect x="729.1" y="771.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="732.1" y="782.0"></text>
</g>
<g>
<title>futex_wake_op (54 samples, 0.75%)</title><rect x="729.4" y="771.0" width="8.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="732.4" y="782.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="729.9" y="755.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="732.9" y="766.0"></text>
</g>
<g>
<title>wake_up_q (49 samples, 0.68%)</title><rect x="730.2" y="755.0" width="8.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="733.2" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (48 samples, 0.66%)</title><rect x="730.4" y="739.0" width="7.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="733.4" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (48 samples, 0.66%)</title><rect x="730.4" y="723.0" width="7.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="733.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.06%)</title><rect x="738.5" y="883.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="741.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.06%)</title><rect x="738.5" y="867.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="741.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.06%)</title><rect x="738.5" y="851.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="741.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (4 samples, 0.06%)</title><rect x="738.5" y="835.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="741.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.06%)</title><rect x="738.5" y="819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="741.5" y="830.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="738.5" y="803.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="741.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$164/1009333918.accept (3 samples, 0.04%)</title><rect x="739.2" y="883.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.08%)</title><rect x="739.7" y="915.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="740.3" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="743.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="740.3" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="740.6" y="979.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="743.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="740.6" y="963.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="740.6" y="947.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="743.6" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="740.6" y="931.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="743.6" y="942.0"></text>
</g>
<g>
<title>system_call_fastpath (2 samples, 0.03%)</title><rect x="740.6" y="915.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="743.6" y="926.0"></text>
</g>
<g>
<title>sys_futex (2 samples, 0.03%)</title><rect x="740.6" y="899.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="743.6" y="910.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="740.6" y="883.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="743.6" y="894.0"></text>
</g>
<g>
<title>futex_wake_op (2 samples, 0.03%)</title><rect x="740.6" y="867.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="743.6" y="878.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="740.6" y="851.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="743.6" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="740.6" y="835.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="743.6" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="740.6" y="819.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="743.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.12%)</title><rect x="741.0" y="995.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="744.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.12%)</title><rect x="741.0" y="979.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.0" y="990.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.10%)</title><rect x="741.0" y="963.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="744.0" y="974.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.03%)</title><rect x="741.0" y="947.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="744.0" y="958.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="741.0" y="931.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="744.0" y="942.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.03%)</title><rect x="741.4" y="947.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="744.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (91 samples, 1.26%)</title><rect x="742.4" y="995.0" width="14.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (90 samples, 1.24%)</title><rect x="742.6" y="979.0" width="14.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.6" y="990.0"></text>
</g>
<g>
<title>Unsafe_Park (79 samples, 1.09%)</title><rect x="743.4" y="963.0" width="12.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="746.4" y="974.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="744.1" y="947.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="747.1" y="958.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (24 samples, 0.33%)</title><rect x="744.7" y="947.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="747.7" y="958.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (10 samples, 0.14%)</title><rect x="745.7" y="931.0" width="1.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="748.7" y="942.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (3 samples, 0.04%)</title><rect x="746.5" y="915.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="749.5" y="926.0"></text>
</g>
<g>
<title>update_get_addr (2 samples, 0.03%)</title><rect x="747.0" y="915.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="750.0" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.07%)</title><rect x="747.5" y="931.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="750.5" y="942.0"></text>
</g>
<g>
<title>_L_unlock_738 (2 samples, 0.03%)</title><rect x="748.9" y="947.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="751.9" y="958.0"></text>
</g>
<g>
<title>__lll_unlock_wake (19 samples, 0.26%)</title><rect x="749.3" y="947.0" width="3.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="752.3" y="958.0"></text>
</g>
<g>
<title>system_call_fastpath (10 samples, 0.14%)</title><rect x="750.7" y="931.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="753.7" y="942.0"></text>
</g>
<g>
<title>sys_futex (9 samples, 0.12%)</title><rect x="750.9" y="915.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="753.9" y="926.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.11%)</title><rect x="751.1" y="899.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="754.1" y="910.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.11%)</title><rect x="751.1" y="883.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="754.1" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (21 samples, 0.29%)</title><rect x="752.4" y="947.0" width="3.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="755.4" y="958.0"></text>
</g>
<g>
<title>system_call_fastpath (18 samples, 0.25%)</title><rect x="752.9" y="931.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="755.9" y="942.0"></text>
</g>
<g>
<title>sys_futex (17 samples, 0.23%)</title><rect x="753.0" y="915.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="756.0" y="926.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.18%)</title><rect x="753.3" y="899.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="756.3" y="910.0"></text>
</g>
<g>
<title>futex_wait (13 samples, 0.18%)</title><rect x="753.3" y="883.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="756.3" y="894.0"></text>
</g>
<g>
<title>futex_wait_queue_me (8 samples, 0.11%)</title><rect x="753.5" y="867.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="756.5" y="878.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.06%)</title><rect x="753.7" y="851.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="756.7" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="753.7" y="835.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="756.7" y="846.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="754.3" y="851.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="757.3" y="862.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.04%)</title><rect x="754.3" y="835.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="757.3" y="846.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="754.5" y="819.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="757.5" y="830.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.06%)</title><rect x="754.8" y="867.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="757.8" y="878.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.04%)</title><rect x="755.8" y="947.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="758.8" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.06%)</title><rect x="756.3" y="963.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="759.3" y="974.0"></text>
</g>
<g>
<title>system_call_after_swapgs (4 samples, 0.06%)</title><rect x="756.3" y="947.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="759.3" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.03%)</title><rect x="756.9" y="963.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="759.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,335 samples, 18.45%)</title><rect x="757.4" y="1027.0" width="217.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.4" y="1038.0">jdk/internal/net/http/HttpCli..</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.03%)</title><rect x="763.3" y="1011.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="766.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.06%)</title><rect x="764.3" y="1011.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="767.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.06%)</title><rect x="764.3" y="995.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="767.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.internalMemberName (3 samples, 0.04%)</title><rect x="764.3" y="979.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="767.3" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.03%)</title><rect x="764.9" y="1011.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="767.9" y="1022.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (2 samples, 0.03%)</title><rect x="764.9" y="995.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.9" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (4 samples, 0.06%)</title><rect x="765.3" y="1011.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="768.3" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="766.1" y="1011.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="769.1" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="766.2" y="995.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.2" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (10 samples, 0.14%)</title><rect x="766.6" y="1011.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.6" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (260 samples, 3.59%)</title><rect x="768.2" y="1011.0" width="42.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="771.2" y="1022.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$298/737367661.accept (253 samples, 3.50%)</title><rect x="768.8" y="995.0" width="41.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="771.8" y="1006.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (253 samples, 3.50%)</title><rect x="768.8" y="979.0" width="41.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.8" y="990.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (253 samples, 3.50%)</title><rect x="768.8" y="963.0" width="41.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.8" y="974.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (253 samples, 3.50%)</title><rect x="768.8" y="947.0" width="41.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="771.8" y="958.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (252 samples, 3.48%)</title><rect x="768.8" y="931.0" width="41.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="771.8" y="942.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.07%)</title><rect x="768.8" y="915.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="771.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.04%)</title><rect x="769.2" y="899.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="772.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.04%)</title><rect x="769.2" y="883.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="772.2" y="894.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.04%)</title><rect x="769.2" y="867.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.2" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.04%)</title><rect x="769.2" y="851.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.2" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.04%)</title><rect x="769.2" y="835.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="772.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (247 samples, 3.41%)</title><rect x="769.7" y="915.0" width="40.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="772.7" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (247 samples, 3.41%)</title><rect x="769.7" y="899.0" width="40.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.7" y="910.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (247 samples, 3.41%)</title><rect x="769.7" y="883.0" width="40.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="772.7" y="894.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (245 samples, 3.39%)</title><rect x="770.0" y="867.0" width="39.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="773.0" y="878.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (244 samples, 3.37%)</title><rect x="770.0" y="851.0" width="39.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.0" y="862.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200/49147543.run (243 samples, 3.36%)</title><rect x="770.0" y="835.0" width="39.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.0" y="846.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (243 samples, 3.36%)</title><rect x="770.0" y="819.0" width="39.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.0" y="830.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (126 samples, 1.74%)</title><rect x="770.1" y="803.0" width="20.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (126 samples, 1.74%)</title><rect x="770.1" y="787.0" width="20.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="773.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (126 samples, 1.74%)</title><rect x="770.1" y="771.0" width="20.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="773.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (2 samples, 0.03%)</title><rect x="770.3" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.03%)</title><rect x="770.3" y="739.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="773.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.03%)</title><rect x="770.3" y="723.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="773.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (123 samples, 1.70%)</title><rect x="770.6" y="755.0" width="20.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (123 samples, 1.70%)</title><rect x="770.6" y="739.0" width="20.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="773.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (2 samples, 0.03%)</title><rect x="770.6" y="723.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (121 samples, 1.67%)</title><rect x="771.0" y="723.0" width="19.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (120 samples, 1.66%)</title><rect x="771.0" y="707.0" width="19.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2 samples, 0.03%)</title><rect x="771.0" y="691.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (118 samples, 1.63%)</title><rect x="771.3" y="691.0" width="19.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="774.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (118 samples, 1.63%)</title><rect x="771.3" y="675.0" width="19.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (115 samples, 1.59%)</title><rect x="771.4" y="659.0" width="18.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (115 samples, 1.59%)</title><rect x="771.4" y="643.0" width="18.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="774.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (114 samples, 1.58%)</title><rect x="771.6" y="627.0" width="18.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="774.6" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (21 samples, 0.29%)</title><rect x="772.4" y="611.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="775.4" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="773.2" y="595.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="776.2" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.04%)</title><rect x="773.6" y="595.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="776.6" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.04%)</title><rect x="774.1" y="595.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="777.1" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.04%)</title><rect x="774.9" y="595.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="777.9" y="606.0"></text>
</g>
<g>
<title>update_get_addr (3 samples, 0.04%)</title><rect x="775.4" y="595.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="778.4" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (78 samples, 1.08%)</title><rect x="775.9" y="611.0" width="12.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="778.9" y="622.0"></text>
</g>
<g>
<title>system_call_fastpath (67 samples, 0.93%)</title><rect x="777.6" y="595.0" width="11.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="780.6" y="606.0"></text>
</g>
<g>
<title>sys_futex (67 samples, 0.93%)</title><rect x="777.6" y="579.0" width="11.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="780.6" y="590.0"></text>
</g>
<g>
<title>do_futex (67 samples, 0.93%)</title><rect x="777.6" y="563.0" width="11.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="780.6" y="574.0"></text>
</g>
<g>
<title>futex_wake_op (63 samples, 0.87%)</title><rect x="778.1" y="547.0" width="10.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="781.1" y="558.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.06%)</title><rect x="778.6" y="531.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="781.6" y="542.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.03%)</title><rect x="778.8" y="515.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="781.8" y="526.0"></text>
</g>
<g>
<title>wake_up_q (56 samples, 0.77%)</title><rect x="779.3" y="531.0" width="9.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="782.3" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (54 samples, 0.75%)</title><rect x="779.6" y="515.0" width="8.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="782.6" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (54 samples, 0.75%)</title><rect x="779.6" y="499.0" width="8.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="782.6" y="510.0"></text>
</g>
<g>
<title>__read (7 samples, 0.10%)</title><rect x="788.6" y="611.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="791.6" y="622.0"></text>
</g>
<g>
<title>system_call_after_swapgs (7 samples, 0.10%)</title><rect x="788.6" y="595.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="791.6" y="606.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="789.9" y="611.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="792.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2 samples, 0.03%)</title><rect x="790.2" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (2 samples, 0.03%)</title><rect x="790.2" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="793.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (8 samples, 0.11%)</title><rect x="790.9" y="803.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (6 samples, 0.08%)</title><rect x="791.2" y="787.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="794.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.07%)</title><rect x="791.2" y="771.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="794.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (5 samples, 0.07%)</title><rect x="791.2" y="755.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (5 samples, 0.07%)</title><rect x="791.2" y="739.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.2" y="750.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.04%)</title><rect x="791.5" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.5" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.03%)</title><rect x="791.7" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="794.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.03%)</title><rect x="791.7" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="794.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (106 samples, 1.46%)</title><rect x="792.2" y="803.0" width="17.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="795.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (6 samples, 0.08%)</title><rect x="792.2" y="787.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="795.2" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.slice (3 samples, 0.04%)</title><rect x="792.5" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="795.5" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="792.6" y="755.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="795.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (99 samples, 1.37%)</title><rect x="793.3" y="787.0" width="16.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="796.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (9 samples, 0.12%)</title><rect x="793.5" y="771.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="796.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (8 samples, 0.11%)</title><rect x="793.6" y="755.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (7 samples, 0.10%)</title><rect x="793.8" y="739.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="796.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (6 samples, 0.08%)</title><rect x="793.9" y="723.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (4 samples, 0.06%)</title><rect x="794.1" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="797.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (88 samples, 1.22%)</title><rect x="795.1" y="771.0" width="14.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (88 samples, 1.22%)</title><rect x="795.1" y="755.0" width="14.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (80 samples, 1.11%)</title><rect x="795.4" y="739.0" width="13.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.4" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (78 samples, 1.08%)</title><rect x="795.7" y="723.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (78 samples, 1.08%)</title><rect x="795.7" y="707.0" width="12.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.7" y="718.0"></text>
</g>
<g>
<title>__read (64 samples, 0.88%)</title><rect x="796.9" y="691.0" width="10.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="799.9" y="702.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.03%)</title><rect x="798.4" y="675.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="801.4" y="686.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.03%)</title><rect x="798.4" y="659.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="801.4" y="670.0"></text>
</g>
<g>
<title>sysret_audit (2 samples, 0.03%)</title><rect x="798.8" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="801.8" y="686.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.03%)</title><rect x="798.8" y="659.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="801.8" y="670.0"></text>
</g>
<g>
<title>system_call_after_swapgs (6 samples, 0.08%)</title><rect x="799.3" y="675.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="802.3" y="686.0"></text>
</g>
<g>
<title>system_call_fastpath (43 samples, 0.59%)</title><rect x="800.3" y="675.0" width="7.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="803.3" y="686.0"></text>
</g>
<g>
<title>sys_read (43 samples, 0.59%)</title><rect x="800.3" y="659.0" width="7.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="803.3" y="670.0"></text>
</g>
<g>
<title>fget_light (5 samples, 0.07%)</title><rect x="800.3" y="643.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="803.3" y="654.0"></text>
</g>
<g>
<title>vfs_read (38 samples, 0.53%)</title><rect x="801.1" y="643.0" width="6.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="804.1" y="654.0"></text>
</g>
<g>
<title>do_sync_read (21 samples, 0.29%)</title><rect x="801.3" y="627.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="804.3" y="638.0"></text>
</g>
<g>
<title>sock_aio_read (20 samples, 0.28%)</title><rect x="801.4" y="611.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="804.4" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.03%)</title><rect x="801.6" y="595.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="804.6" y="606.0"></text>
</g>
<g>
<title>sock_aio_read.part.9 (17 samples, 0.23%)</title><rect x="801.9" y="595.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="804.9" y="606.0"></text>
</g>
<g>
<title>inet_recvmsg (13 samples, 0.18%)</title><rect x="802.4" y="579.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="805.4" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.17%)</title><rect x="802.6" y="563.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="805.6" y="574.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="803.4" y="547.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="806.4" y="558.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="803.4" y="531.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="806.4" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.03%)</title><rect x="803.4" y="515.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="806.4" y="526.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="803.4" y="499.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="806.4" y="510.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (3 samples, 0.04%)</title><rect x="803.9" y="547.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="806.9" y="558.0"></text>
</g>
<g>
<title>memcpy_toiovec (3 samples, 0.04%)</title><rect x="803.9" y="531.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="806.9" y="542.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.04%)</title><rect x="803.9" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="806.9" y="526.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.04%)</title><rect x="803.9" y="499.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="806.9" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (13 samples, 0.18%)</title><rect x="804.9" y="627.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="807.9" y="638.0"></text>
</g>
<g>
<title>security_file_permission (13 samples, 0.18%)</title><rect x="804.9" y="611.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="807.9" y="622.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.04%)</title><rect x="805.2" y="595.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="808.2" y="606.0"></text>
</g>
<g>
<title>selinux_file_permission (8 samples, 0.11%)</title><rect x="805.7" y="595.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="808.7" y="606.0"></text>
</g>
<g>
<title>file_has_perm (3 samples, 0.04%)</title><rect x="806.5" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="809.5" y="590.0"></text>
</g>
<g>
<title>inode_has_perm.isra.34.constprop.71 (3 samples, 0.04%)</title><rect x="806.5" y="563.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="809.5" y="574.0"></text>
</g>
<g>
<title>avc_has_perm_flags (3 samples, 0.04%)</title><rect x="806.5" y="547.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="809.5" y="558.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="807.0" y="627.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="810.0" y="638.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="807.3" y="691.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="810.3" y="702.0"></text>
</g>
<g>
<title>convertReturnVal (2 samples, 0.03%)</title><rect x="807.6" y="691.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="810.6" y="702.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.04%)</title><rect x="808.0" y="691.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="811.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.08%)</title><rect x="808.5" y="739.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.5" y="750.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="808.6" y="723.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.04%)</title><rect x="808.9" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$305/1347119101.accept (3 samples, 0.04%)</title><rect x="810.1" y="995.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (3 samples, 0.04%)</title><rect x="810.1" y="979.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$297/469379447.run (3 samples, 0.04%)</title><rect x="810.1" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (3 samples, 0.04%)</title><rect x="810.1" y="947.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (3 samples, 0.04%)</title><rect x="810.1" y="931.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.1" y="942.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.03%)</title><rect x="810.1" y="915.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.1" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.03%)</title><rect x="810.1" y="899.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.1" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="810.1" y="883.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.1" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="810.1" y="867.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.1" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (12 samples, 0.17%)</title><rect x="810.7" y="1011.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.7" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.15%)</title><rect x="810.7" y="995.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.7" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (10 samples, 0.14%)</title><rect x="810.9" y="979.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="813.9" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (10 samples, 0.14%)</title><rect x="810.9" y="963.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.9" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (10 samples, 0.14%)</title><rect x="810.9" y="947.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.9" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (8 samples, 0.11%)</title><rect x="811.1" y="931.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="814.1" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (6 samples, 0.08%)</title><rect x="811.2" y="915.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="814.2" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (6 samples, 0.08%)</title><rect x="811.2" y="899.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="814.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$294/1857314804.test (5 samples, 0.07%)</title><rect x="811.4" y="883.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="814.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.lambda$events$0 (5 samples, 0.07%)</title><rect x="811.4" y="867.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="814.4" y="878.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="811.4" y="851.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="814.4" y="862.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (2 samples, 0.03%)</title><rect x="811.9" y="851.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (302 samples, 4.17%)</title><rect x="812.7" y="1011.0" width="49.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="815.7" y="1022.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$210/1218021122.run (131 samples, 1.81%)</title><rect x="812.7" y="995.0" width="21.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.7" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (131 samples, 1.81%)</title><rect x="812.7" y="979.0" width="21.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="815.7" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/Logger.log (3 samples, 0.04%)</title><rect x="812.7" y="963.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="815.7" y="974.0"></text>
</g>
<g>
<title>java/lang/System$Logger.log (3 samples, 0.04%)</title><rect x="812.7" y="947.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (128 samples, 1.77%)</title><rect x="813.2" y="963.0" width="20.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (128 samples, 1.77%)</title><rect x="813.2" y="947.0" width="20.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="816.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (125 samples, 1.73%)</title><rect x="813.7" y="931.0" width="20.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (122 samples, 1.69%)</title><rect x="813.7" y="915.0" width="19.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="816.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$200/49147543.run (117 samples, 1.62%)</title><rect x="813.8" y="899.0" width="19.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="816.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (114 samples, 1.58%)</title><rect x="814.3" y="883.0" width="18.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="817.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (111 samples, 1.53%)</title><rect x="814.3" y="867.0" width="18.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="817.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (107 samples, 1.48%)</title><rect x="815.0" y="851.0" width="17.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="818.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (12 samples, 0.17%)</title><rect x="815.0" y="835.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="818.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (12 samples, 0.17%)</title><rect x="815.0" y="819.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="818.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (12 samples, 0.17%)</title><rect x="815.0" y="803.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="818.0" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/20094719.linkToTargetMethod (5 samples, 0.07%)</title><rect x="815.0" y="787.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="818.0" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/324457684.invoke (5 samples, 0.07%)</title><rect x="815.0" y="771.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="818.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="815.0" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="818.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.04%)</title><rect x="815.0" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="818.0" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="815.1" y="723.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="818.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (7 samples, 0.10%)</title><rect x="815.8" y="787.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="818.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4 samples, 0.06%)</title><rect x="816.3" y="771.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="819.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.06%)</title><rect x="816.3" y="755.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="819.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.06%)</title><rect x="816.3" y="739.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (4 samples, 0.06%)</title><rect x="816.3" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (95 samples, 1.31%)</title><rect x="816.9" y="835.0" width="15.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.03%)</title><rect x="818.1" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="821.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (86 samples, 1.19%)</title><rect x="818.4" y="819.0" width="14.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="821.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (85 samples, 1.17%)</title><rect x="818.6" y="803.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (85 samples, 1.17%)</title><rect x="818.6" y="787.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="821.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (85 samples, 1.17%)</title><rect x="818.6" y="771.0" width="13.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (83 samples, 1.15%)</title><rect x="818.9" y="755.0" width="13.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (83 samples, 1.15%)</title><rect x="818.9" y="739.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (80 samples, 1.11%)</title><rect x="819.1" y="723.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="822.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (80 samples, 1.11%)</title><rect x="819.1" y="707.0" width="13.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (79 samples, 1.09%)</title><rect x="819.2" y="691.0" width="12.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="822.2" y="702.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.17%)</title><rect x="819.9" y="675.0" width="1.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="822.9" y="686.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="820.7" y="659.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="823.7" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.04%)</title><rect x="821.0" y="659.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="824.0" y="670.0"></text>
</g>
<g>
<title>update_get_addr (2 samples, 0.03%)</title><rect x="821.5" y="659.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="824.5" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (58 samples, 0.80%)</title><rect x="822.0" y="675.0" width="9.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="825.0" y="686.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.04%)</title><rect x="822.6" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="825.6" y="670.0"></text>
</g>
<g>
<title>system_call_fastpath (51 samples, 0.70%)</title><rect x="823.1" y="659.0" width="8.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="826.1" y="670.0"></text>
</g>
<g>
<title>sys_futex (51 samples, 0.70%)</title><rect x="823.1" y="643.0" width="8.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="826.1" y="654.0"></text>
</g>
<g>
<title>do_futex (51 samples, 0.70%)</title><rect x="823.1" y="627.0" width="8.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="826.1" y="638.0"></text>
</g>
<g>
<title>_raw_qspin_lock (4 samples, 0.06%)</title><rect x="823.3" y="611.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="826.3" y="622.0"></text>
</g>
<g>
<title>futex_wake_op (45 samples, 0.62%)</title><rect x="824.0" y="611.0" width="7.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="827.0" y="622.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.06%)</title><rect x="824.6" y="595.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="827.6" y="606.0"></text>
</g>
<g>
<title>wake_up_q (37 samples, 0.51%)</title><rect x="825.3" y="595.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="828.3" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (37 samples, 0.51%)</title><rect x="825.3" y="579.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="828.3" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (37 samples, 0.51%)</title><rect x="825.3" y="563.0" width="6.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="828.3" y="574.0"></text>
</g>
<g>
<title>__read (4 samples, 0.06%)</title><rect x="831.5" y="675.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="834.5" y="686.0"></text>
</g>
<g>
<title>system_call_after_swapgs (4 samples, 0.06%)</title><rect x="831.5" y="659.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="834.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (2 samples, 0.03%)</title><rect x="832.4" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (3 samples, 0.04%)</title><rect x="832.9" y="899.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.04%)</title><rect x="833.6" y="915.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="836.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.04%)</title><rect x="833.6" y="899.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (3 samples, 0.04%)</title><rect x="833.6" y="883.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$222/223200854.run (171 samples, 2.36%)</title><rect x="834.1" y="995.0" width="27.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.1" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (171 samples, 2.36%)</title><rect x="834.1" y="979.0" width="27.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="837.1" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (170 samples, 2.35%)</title><rect x="834.2" y="963.0" width="27.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="837.2" y="974.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (170 samples, 2.35%)</title><rect x="834.2" y="947.0" width="27.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="837.2" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2 samples, 0.03%)</title><rect x="834.9" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="837.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (163 samples, 2.25%)</title><rect x="835.2" y="931.0" width="26.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="838.2" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (163 samples, 2.25%)</title><rect x="835.2" y="915.0" width="26.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="838.2" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (163 samples, 2.25%)</title><rect x="835.2" y="899.0" width="26.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="838.2" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (162 samples, 2.24%)</title><rect x="835.4" y="883.0" width="26.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="838.4" y="894.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (161 samples, 2.22%)</title><rect x="835.5" y="867.0" width="26.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="838.5" y="878.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (39 samples, 0.54%)</title><rect x="836.5" y="851.0" width="6.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="839.5" y="862.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.04%)</title><rect x="837.5" y="835.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="840.5" y="846.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="838.0" y="835.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="841.0" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.08%)</title><rect x="838.6" y="835.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="841.6" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.04%)</title><rect x="839.6" y="835.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="842.6" y="846.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.03%)</title><rect x="840.3" y="835.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="843.3" y="846.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.04%)</title><rect x="840.7" y="835.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="843.7" y="846.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.04%)</title><rect x="841.2" y="835.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="844.2" y="846.0"></text>
</g>
<g>
<title>pthread_mutex_lock (6 samples, 0.08%)</title><rect x="841.7" y="835.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="844.7" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.03%)</title><rect x="842.9" y="851.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="845.9" y="862.0"></text>
</g>
<g>
<title>system_call_after_swapgs (2 samples, 0.03%)</title><rect x="842.9" y="835.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="845.9" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (103 samples, 1.42%)</title><rect x="843.2" y="851.0" width="16.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="846.2" y="862.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.03%)</title><rect x="844.5" y="835.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="847.5" y="846.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.03%)</title><rect x="844.5" y="819.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="847.5" y="830.0"></text>
</g>
<g>
<title>sysret_audit (2 samples, 0.03%)</title><rect x="844.8" y="835.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="847.8" y="846.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.03%)</title><rect x="844.8" y="819.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="847.8" y="830.0"></text>
</g>
<g>
<title>system_call_fastpath (89 samples, 1.23%)</title><rect x="845.3" y="835.0" width="14.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="848.3" y="846.0"></text>
</g>
<g>
<title>sys_futex (89 samples, 1.23%)</title><rect x="845.3" y="819.0" width="14.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="848.3" y="830.0"></text>
</g>
<g>
<title>do_futex (89 samples, 1.23%)</title><rect x="845.3" y="803.0" width="14.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="848.3" y="814.0"></text>
</g>
<g>
<title>_raw_qspin_lock (2 samples, 0.03%)</title><rect x="845.6" y="787.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="848.6" y="798.0"></text>
</g>
<g>
<title>futex_wake_op (84 samples, 1.16%)</title><rect x="846.0" y="787.0" width="13.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="849.0" y="798.0"></text>
</g>
<g>
<title>mark_wake_futex (5 samples, 0.07%)</title><rect x="846.8" y="771.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="849.8" y="782.0"></text>
</g>
<g>
<title>__unqueue_futex (2 samples, 0.03%)</title><rect x="847.3" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="850.3" y="766.0"></text>
</g>
<g>
<title>wake_up_q (74 samples, 1.02%)</title><rect x="847.6" y="771.0" width="12.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="850.6" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (74 samples, 1.02%)</title><rect x="847.6" y="755.0" width="12.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="850.6" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (74 samples, 1.02%)</title><rect x="847.6" y="739.0" width="12.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="850.6" y="750.0"></text>
</g>
<g>
<title>__read (7 samples, 0.10%)</title><rect x="860.0" y="851.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="863.0" y="862.0"></text>
</g>
<g>
<title>system_call_after_swapgs (7 samples, 0.10%)</title><rect x="860.0" y="835.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="863.0" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="861.1" y="851.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="864.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (23 samples, 0.32%)</title><rect x="861.9" y="1011.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="864.9" y="1022.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.06%)</title><rect x="861.9" y="995.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="864.9" y="1006.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.06%)</title><rect x="861.9" y="979.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="864.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.04%)</title><rect x="862.1" y="963.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="865.1" y="974.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.04%)</title><rect x="862.1" y="947.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="865.1" y="958.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.03%)</title><rect x="862.3" y="931.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="865.3" y="942.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="862.3" y="915.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="865.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (19 samples, 0.26%)</title><rect x="862.6" y="995.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="865.6" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (10 samples, 0.14%)</title><rect x="863.6" y="979.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="866.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (3 samples, 0.04%)</title><rect x="865.2" y="979.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="868.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (10 samples, 0.14%)</title><rect x="865.7" y="1011.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="868.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (16 samples, 0.22%)</title><rect x="867.3" y="1011.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="870.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (15 samples, 0.21%)</title><rect x="867.5" y="995.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="870.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (84 samples, 1.16%)</title><rect x="869.9" y="1011.0" width="13.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="872.9" y="1022.0"></text>
</g>
<g>
<title>java/time/Instant.now (50 samples, 0.69%)</title><rect x="873.0" y="995.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="876.0" y="1006.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (50 samples, 0.69%)</title><rect x="873.0" y="979.0" width="8.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="876.0" y="990.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (11 samples, 0.15%)</title><rect x="873.8" y="963.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.8" y="974.0"></text>
</g>
<g>
<title>java/time/Instant.create (11 samples, 0.15%)</title><rect x="873.8" y="947.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.04%)</title><rect x="875.1" y="931.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (34 samples, 0.47%)</title><rect x="875.6" y="963.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="878.6" y="974.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (27 samples, 0.37%)</title><rect x="876.3" y="947.0" width="4.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="879.3" y="958.0"></text>
</g>
<g>
<title>[vdso] (12 samples, 0.17%)</title><rect x="878.1" y="931.0" width="1.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="881.1" y="942.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.04%)</title><rect x="880.2" y="931.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="883.2" y="942.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="880.4" y="915.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="883.4" y="926.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.04%)</title><rect x="880.7" y="947.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="883.7" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.until (5 samples, 0.07%)</title><rect x="881.2" y="995.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="884.2" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (8 samples, 0.11%)</title><rect x="882.3" y="995.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="885.3" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (8 samples, 0.11%)</title><rect x="882.3" y="979.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="885.3" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (8 samples, 0.11%)</title><rect x="882.3" y="963.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="885.3" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (8 samples, 0.11%)</title><rect x="882.3" y="947.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="885.3" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (509 samples, 7.03%)</title><rect x="883.8" y="1011.0" width="83.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="886.8" y="1022.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (509 samples, 7.03%)</title><rect x="883.8" y="995.0" width="83.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="886.8" y="1006.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (507 samples, 7.01%)</title><rect x="884.0" y="979.0" width="82.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="887.0" y="990.0">sun/nio/c..</text>
</g>
<g>
<title>__clock_gettime (14 samples, 0.19%)</title><rect x="886.2" y="963.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="889.2" y="974.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.06%)</title><rect x="887.9" y="947.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="890.9" y="958.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (3 samples, 0.04%)</title><rect x="888.5" y="963.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="891.5" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (147 samples, 2.03%)</title><rect x="889.0" y="963.0" width="24.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="892.0" y="974.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (6 samples, 0.08%)</title><rect x="891.6" y="947.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="894.6" y="958.0"></text>
</g>
<g>
<title>__GI_epoll_wait (106 samples, 1.46%)</title><rect x="892.6" y="947.0" width="17.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="895.6" y="958.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (3 samples, 0.04%)</title><rect x="894.6" y="931.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="897.6" y="942.0"></text>
</g>
<g>
<title>auditsys (6 samples, 0.08%)</title><rect x="895.0" y="931.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="898.0" y="942.0"></text>
</g>
<g>
<title>__audit_syscall_entry (6 samples, 0.08%)</title><rect x="895.0" y="915.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="898.0" y="926.0"></text>
</g>
<g>
<title>sys_epoll_wait (3 samples, 0.04%)</title><rect x="896.0" y="931.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="899.0" y="942.0"></text>
</g>
<g>
<title>system_call_fastpath (82 samples, 1.13%)</title><rect x="896.5" y="931.0" width="13.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="899.5" y="942.0"></text>
</g>
<g>
<title>sys_epoll_wait (79 samples, 1.09%)</title><rect x="897.0" y="915.0" width="12.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="900.0" y="926.0"></text>
</g>
<g>
<title>ep_poll (65 samples, 0.90%)</title><rect x="897.3" y="899.0" width="10.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="900.3" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.18%)</title><rect x="897.5" y="883.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="900.5" y="894.0"></text>
</g>
<g>
<title>ep_scan_ready_list.isra.7 (13 samples, 0.18%)</title><rect x="899.6" y="883.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="902.6" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.06%)</title><rect x="899.6" y="867.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="902.6" y="878.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 0.08%)</title><rect x="900.3" y="867.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="903.3" y="878.0"></text>
</g>
<g>
<title>pipe_poll (2 samples, 0.03%)</title><rect x="900.7" y="851.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="903.7" y="862.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.03%)</title><rect x="901.7" y="883.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="904.7" y="894.0"></text>
</g>
<g>
<title>ktime_get_ts64 (5 samples, 0.07%)</title><rect x="902.1" y="883.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="905.1" y="894.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.04%)</title><rect x="902.4" y="867.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="905.4" y="878.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (24 samples, 0.33%)</title><rect x="903.2" y="883.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="906.2" y="894.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (24 samples, 0.33%)</title><rect x="903.2" y="867.0" width="3.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="906.2" y="878.0"></text>
</g>
<g>
<title>hrtimer_init (3 samples, 0.04%)</title><rect x="903.4" y="851.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="906.4" y="862.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (18 samples, 0.25%)</title><rect x="903.8" y="851.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="906.8" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (17 samples, 0.23%)</title><rect x="903.8" y="835.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="906.8" y="846.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="906.8" y="851.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="909.8" y="862.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="906.8" y="835.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="909.8" y="846.0"></text>
</g>
<g>
<title>select_estimate_accuracy (5 samples, 0.07%)</title><rect x="907.1" y="883.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="910.1" y="894.0"></text>
</g>
<g>
<title>fget_light (11 samples, 0.15%)</title><rect x="907.9" y="899.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="910.9" y="910.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="910.0" y="947.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="913.0" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.12%)</title><rect x="910.4" y="947.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="913.4" y="958.0"></text>
</g>
<g>
<title>system_call_after_swapgs (9 samples, 0.12%)</title><rect x="910.4" y="931.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="913.4" y="942.0"></text>
</g>
<g>
<title>__read (6 samples, 0.08%)</title><rect x="911.8" y="947.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="914.8" y="958.0"></text>
</g>
<g>
<title>system_call_after_swapgs (6 samples, 0.08%)</title><rect x="911.8" y="931.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="914.8" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (256 samples, 3.54%)</title><rect x="913.0" y="963.0" width="41.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.0" y="974.0">sun..</text>
</g>
<g>
<title>java/util/HashMap.get (18 samples, 0.25%)</title><rect x="913.0" y="947.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (18 samples, 0.25%)</title><rect x="913.0" y="931.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="916.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (2 samples, 0.03%)</title><rect x="915.6" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.6" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (206 samples, 2.85%)</title><rect x="915.9" y="947.0" width="33.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.9" y="958.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (198 samples, 2.74%)</title><rect x="917.2" y="931.0" width="32.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="920.2" y="942.0">su..</text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_drain (3 samples, 0.04%)</title><rect x="918.4" y="915.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="921.4" y="926.0"></text>
</g>
<g>
<title>__GI_epoll_wait (21 samples, 0.29%)</title><rect x="918.8" y="915.0" width="3.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="921.8" y="926.0"></text>
</g>
<g>
<title>system_call_after_swapgs (21 samples, 0.29%)</title><rect x="918.8" y="899.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="921.8" y="910.0"></text>
</g>
<g>
<title>__read (165 samples, 2.28%)</title><rect x="922.4" y="915.0" width="26.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="925.4" y="926.0">_..</text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.03%)</title><rect x="926.3" y="899.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="929.3" y="910.0"></text>
</g>
<g>
<title>auditsys (9 samples, 0.12%)</title><rect x="926.8" y="899.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="929.8" y="910.0"></text>
</g>
<g>
<title>__audit_syscall_entry (9 samples, 0.12%)</title><rect x="926.8" y="883.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="929.8" y="894.0"></text>
</g>
<g>
<title>sysret_audit (2 samples, 0.03%)</title><rect x="928.5" y="899.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="931.5" y="910.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.03%)</title><rect x="928.5" y="883.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="931.5" y="894.0"></text>
</g>
<g>
<title>system_call_fastpath (125 samples, 1.73%)</title><rect x="928.8" y="899.0" width="20.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="931.8" y="910.0"></text>
</g>
<g>
<title>sys_read (125 samples, 1.73%)</title><rect x="928.8" y="883.0" width="20.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="931.8" y="894.0"></text>
</g>
<g>
<title>do_sync_read (3 samples, 0.04%)</title><rect x="929.0" y="867.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="932.0" y="878.0"></text>
</g>
<g>
<title>fget_light (18 samples, 0.25%)</title><rect x="929.4" y="867.0" width="3.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="932.4" y="878.0"></text>
</g>
<g>
<title>vfs_read (101 samples, 1.40%)</title><rect x="932.7" y="867.0" width="16.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="935.7" y="878.0"></text>
</g>
<g>
<title>do_sync_read (59 samples, 0.82%)</title><rect x="933.0" y="851.0" width="9.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="936.0" y="862.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.08%)</title><rect x="933.5" y="835.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="936.5" y="846.0"></text>
</g>
<g>
<title>generic_pipe_buf_map (4 samples, 0.06%)</title><rect x="934.5" y="835.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="937.5" y="846.0"></text>
</g>
<g>
<title>pipe_read (44 samples, 0.61%)</title><rect x="935.3" y="835.0" width="7.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="938.3" y="846.0"></text>
</g>
<g>
<title>__check_object_size (11 samples, 0.15%)</title><rect x="936.1" y="819.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="939.1" y="830.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.07%)</title><rect x="937.1" y="803.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="940.1" y="814.0"></text>
</g>
<g>
<title>__wake_up_sync_key (12 samples, 0.17%)</title><rect x="938.1" y="819.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="941.1" y="830.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.17%)</title><rect x="938.1" y="803.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="941.1" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.17%)</title><rect x="938.1" y="787.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="941.1" y="798.0"></text>
</g>
<g>
<title>mutex_lock (5 samples, 0.07%)</title><rect x="940.2" y="819.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="943.2" y="830.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="941.0" y="819.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="944.0" y="830.0"></text>
</g>
<g>
<title>touch_atime (6 samples, 0.08%)</title><rect x="941.5" y="819.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="944.5" y="830.0"></text>
</g>
<g>
<title>current_fs_time (2 samples, 0.03%)</title><rect x="942.2" y="803.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="945.2" y="814.0"></text>
</g>
<g>
<title>rw_verify_area (39 samples, 0.54%)</title><rect x="942.7" y="851.0" width="6.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="945.7" y="862.0"></text>
</g>
<g>
<title>security_file_permission (31 samples, 0.43%)</title><rect x="943.5" y="835.0" width="5.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="946.5" y="846.0"></text>
</g>
<g>
<title>selinux_file_permission (25 samples, 0.35%)</title><rect x="944.4" y="819.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="947.4" y="830.0"></text>
</g>
<g>
<title>file_has_perm (13 samples, 0.18%)</title><rect x="946.4" y="803.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="949.4" y="814.0"></text>
</g>
<g>
<title>inode_has_perm.isra.34.constprop.71 (11 samples, 0.15%)</title><rect x="946.7" y="787.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="949.7" y="798.0"></text>
</g>
<g>
<title>avc_has_perm_flags (11 samples, 0.15%)</title><rect x="946.7" y="771.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="949.7" y="782.0"></text>
</g>
<g>
<title>selinux_file_permission (3 samples, 0.04%)</title><rect x="948.5" y="835.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="951.5" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (32 samples, 0.44%)</title><rect x="949.5" y="947.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="952.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashSet.add (8 samples, 0.11%)</title><rect x="949.8" y="931.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="952.8" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.11%)</title><rect x="949.8" y="915.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="952.8" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (8 samples, 0.11%)</title><rect x="949.8" y="899.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="952.8" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (21 samples, 0.29%)</title><rect x="951.1" y="931.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.1" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.08%)</title><rect x="953.6" y="915.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="956.6" y="926.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (5 samples, 0.07%)</title><rect x="953.6" y="899.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="956.6" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.83] (2 samples, 0.03%)</title><rect x="953.7" y="883.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="956.7" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="954.1" y="883.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="957.1" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (34 samples, 0.47%)</title><rect x="954.7" y="963.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="957.7" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (27 samples, 0.37%)</title><rect x="955.9" y="947.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="958.9" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.03%)</title><rect x="960.3" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.3" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.03%)</title><rect x="960.3" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="963.3" y="958.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="960.3" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.3" y="942.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.03%)</title><rect x="960.3" y="915.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="963.3" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.03%)</title><rect x="960.3" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="963.3" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (11 samples, 0.15%)</title><rect x="960.6" y="963.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.6" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (11 samples, 0.15%)</title><rect x="960.6" y="947.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="963.6" y="958.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (11 samples, 0.15%)</title><rect x="960.6" y="931.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="963.6" y="942.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (11 samples, 0.15%)</title><rect x="960.6" y="915.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="963.6" y="926.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (10 samples, 0.14%)</title><rect x="960.8" y="899.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="963.8" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (26 samples, 0.36%)</title><rect x="962.4" y="963.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.4" y="974.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (19 samples, 0.26%)</title><rect x="963.5" y="947.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="966.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (19 samples, 0.26%)</title><rect x="963.5" y="931.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="966.5" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (19 samples, 0.26%)</title><rect x="963.5" y="915.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="966.5" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (19 samples, 0.26%)</title><rect x="963.5" y="899.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="966.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (37 samples, 0.51%)</title><rect x="966.8" y="1011.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.8" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (37 samples, 0.51%)</title><rect x="966.8" y="995.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="969.8" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (37 samples, 0.51%)</title><rect x="966.8" y="979.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.8" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (25 samples, 0.35%)</title><rect x="966.9" y="963.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="969.9" y="974.0"></text>
</g>
<g>
<title>__GI_epoll_wait (23 samples, 0.32%)</title><rect x="967.3" y="947.0" width="3.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="970.3" y="958.0"></text>
</g>
<g>
<title>auditsys (4 samples, 0.06%)</title><rect x="968.3" y="931.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="971.3" y="942.0"></text>
</g>
<g>
<title>__audit_syscall_entry (4 samples, 0.06%)</title><rect x="968.3" y="915.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="971.3" y="926.0"></text>
</g>
<g>
<title>system_call_after_swapgs (5 samples, 0.07%)</title><rect x="968.9" y="931.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="971.9" y="942.0"></text>
</g>
<g>
<title>system_call_fastpath (8 samples, 0.11%)</title><rect x="969.7" y="931.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="972.7" y="942.0"></text>
</g>
<g>
<title>sys_epoll_wait (8 samples, 0.11%)</title><rect x="969.7" y="915.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="972.7" y="926.0"></text>
</g>
<g>
<title>ep_poll (7 samples, 0.10%)</title><rect x="969.7" y="899.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="972.7" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="969.7" y="883.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="972.7" y="894.0"></text>
</g>
<g>
<title>ep_scan_ready_list.isra.7 (5 samples, 0.07%)</title><rect x="970.0" y="883.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="973.0" y="894.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (2 samples, 0.03%)</title><rect x="970.0" y="867.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="973.0" y="878.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.04%)</title><rect x="970.4" y="867.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="973.4" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (4 samples, 0.06%)</title><rect x="971.0" y="963.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="974.0" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.03%)</title><rect x="971.0" y="947.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="974.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.03%)</title><rect x="971.0" y="931.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (2 samples, 0.03%)</title><rect x="971.7" y="963.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="974.7" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (2 samples, 0.03%)</title><rect x="971.7" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.7" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (5 samples, 0.07%)</title><rect x="972.0" y="963.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="975.0" y="974.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (4 samples, 0.06%)</title><rect x="972.2" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.2" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (4 samples, 0.06%)</title><rect x="972.2" y="931.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.2" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (4 samples, 0.06%)</title><rect x="972.2" y="915.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="975.2" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (4 samples, 0.06%)</title><rect x="972.2" y="899.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.2" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectedKeys (6 samples, 0.08%)</title><rect x="972.8" y="1011.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="975.8" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.ensureOpen (5 samples, 0.07%)</title><rect x="973.0" y="995.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="976.0" y="1006.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.isOpen (5 samples, 0.07%)</title><rect x="973.0" y="979.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="976.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (4 samples, 0.06%)</title><rect x="973.1" y="963.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="976.1" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (6 samples, 0.08%)</title><rect x="973.8" y="1011.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="976.8" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (4 samples, 0.06%)</title><rect x="974.1" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="977.1" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (4 samples, 0.06%)</title><rect x="974.1" y="979.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="977.1" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.03%)</title><rect x="974.8" y="1011.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="977.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (531 samples, 7.34%)</title><rect x="975.3" y="1027.0" width="86.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="978.3" y="1038.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (2 samples, 0.03%)</title><rect x="979.0" y="1011.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="982.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.08%)</title><rect x="979.3" y="1011.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="982.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.07%)</title><rect x="979.5" y="995.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="982.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (116 samples, 1.60%)</title><rect x="980.5" y="1011.0" width="18.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="983.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.08%)</title><rect x="983.1" y="995.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (6 samples, 0.08%)</title><rect x="983.1" y="979.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="986.1" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (94 samples, 1.30%)</title><rect x="984.1" y="995.0" width="15.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="987.1" y="1006.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (6 samples, 0.08%)</title><rect x="987.5" y="979.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="990.5" y="990.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="988.5" y="979.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="991.5" y="990.0"></text>
</g>
<g>
<title>__GI_epoll_wait (48 samples, 0.66%)</title><rect x="989.0" y="979.0" width="7.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="992.0" y="990.0"></text>
</g>
<g>
<title>auditsys (3 samples, 0.04%)</title><rect x="991.7" y="963.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.7" y="974.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.04%)</title><rect x="991.7" y="947.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="994.7" y="958.0"></text>
</g>
<g>
<title>sysret_audit (5 samples, 0.07%)</title><rect x="992.2" y="963.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="995.2" y="974.0"></text>
</g>
<g>
<title>__audit_syscall_exit (5 samples, 0.07%)</title><rect x="992.2" y="947.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="995.2" y="958.0"></text>
</g>
<g>
<title>system_call_fastpath (23 samples, 0.32%)</title><rect x="993.0" y="963.0" width="3.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="996.0" y="974.0"></text>
</g>
<g>
<title>sys_epoll_wait (22 samples, 0.30%)</title><rect x="993.2" y="947.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="996.2" y="958.0"></text>
</g>
<g>
<title>ep_poll (13 samples, 0.18%)</title><rect x="993.7" y="931.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="996.7" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.04%)</title><rect x="993.7" y="915.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="996.7" y="926.0"></text>
</g>
<g>
<title>ep_scan_ready_list.isra.7 (5 samples, 0.07%)</title><rect x="994.2" y="915.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="997.2" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="994.2" y="899.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="997.2" y="910.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.04%)</title><rect x="994.5" y="899.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="997.5" y="910.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="994.7" y="883.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="997.7" y="894.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 0.07%)</title><rect x="995.0" y="915.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="998.0" y="926.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.04%)</title><rect x="995.0" y="899.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="998.0" y="910.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.03%)</title><rect x="995.5" y="899.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="998.5" y="910.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="995.5" y="883.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="998.5" y="894.0"></text>
</g>
<g>
<title>fget_light (6 samples, 0.08%)</title><rect x="995.8" y="931.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="998.8" y="942.0"></text>
</g>
<g>
<title>__clock_gettime (9 samples, 0.12%)</title><rect x="996.8" y="979.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="999.8" y="990.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.06%)</title><rect x="997.6" y="963.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1000.6" y="974.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="998.3" y="979.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1001.3" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.04%)</title><rect x="998.7" y="979.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1001.7" y="990.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.04%)</title><rect x="998.7" y="963.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1001.7" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (383 samples, 5.29%)</title><rect x="999.4" y="1011.0" width="62.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1002.4" y="1022.0">one/ni..</text>
</g>
<g>
<title>[vdso] (5 samples, 0.07%)</title><rect x="1000.0" y="995.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1003.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (372 samples, 5.14%)</title><rect x="1000.9" y="995.0" width="60.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1003.9" y="1006.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (246 samples, 3.40%)</title><rect x="1001.2" y="979.0" width="40.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1004.2" y="990.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (195 samples, 2.69%)</title><rect x="1001.7" y="963.0" width="31.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1004.7" y="974.0">on..</text>
</g>
<g>
<title>java/util/LinkedList.addLast (3 samples, 0.04%)</title><rect x="1001.7" y="947.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1004.7" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.04%)</title><rect x="1001.7" y="931.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1004.7" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (192 samples, 2.65%)</title><rect x="1002.2" y="947.0" width="31.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.2" y="958.0">on..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (168 samples, 2.32%)</title><rect x="1002.2" y="931.0" width="27.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1005.2" y="942.0">R..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.14%)</title><rect x="1003.5" y="915.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.5" y="926.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="1003.5" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1006.5" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="1003.5" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1006.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (6 samples, 0.08%)</title><rect x="1003.8" y="899.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1006.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.07%)</title><rect x="1004.0" y="883.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1007.0" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.entity (150 samples, 2.07%)</title><rect x="1005.1" y="915.0" width="24.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1008.1" y="926.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.asyncExecute (149 samples, 2.06%)</title><rect x="1005.3" y="899.0" width="24.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1008.3" y="910.0">r..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (149 samples, 2.06%)</title><rect x="1005.3" y="883.0" width="24.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.3" y="894.0">o..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (148 samples, 2.05%)</title><rect x="1005.4" y="867.0" width="24.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1008.4" y="878.0">j..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (146 samples, 2.02%)</title><rect x="1005.8" y="851.0" width="23.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.8" y="862.0">o..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (146 samples, 2.02%)</title><rect x="1005.8" y="835.0" width="23.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1008.8" y="846.0">o..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (146 samples, 2.02%)</title><rect x="1005.8" y="819.0" width="23.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1008.8" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (146 samples, 2.02%)</title><rect x="1005.8" y="803.0" width="23.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1008.8" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (138 samples, 1.91%)</title><rect x="1006.6" y="787.0" width="22.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1009.6" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (137 samples, 1.89%)</title><rect x="1006.7" y="771.0" width="22.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1009.7" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (136 samples, 1.88%)</title><rect x="1006.9" y="755.0" width="22.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1009.9" y="766.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (21 samples, 0.29%)</title><rect x="1007.4" y="739.0" width="3.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1010.4" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="1008.4" y="723.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1011.4" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.06%)</title><rect x="1008.7" y="723.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1011.7" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.04%)</title><rect x="1009.7" y="723.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1012.7" y="734.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.04%)</title><rect x="1010.2" y="723.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1013.2" y="734.0"></text>
</g>
<g>
<title>__libc_recv (3 samples, 0.04%)</title><rect x="1010.8" y="739.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1013.8" y="750.0"></text>
</g>
<g>
<title>system_call_after_swapgs (3 samples, 0.04%)</title><rect x="1010.8" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1013.8" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (106 samples, 1.46%)</title><rect x="1011.3" y="739.0" width="17.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1014.3" y="750.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.03%)</title><rect x="1011.9" y="723.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1014.9" y="734.0"></text>
</g>
<g>
<title>auditsys (2 samples, 0.03%)</title><rect x="1012.3" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1015.3" y="734.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.03%)</title><rect x="1012.3" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1015.3" y="718.0"></text>
</g>
<g>
<title>system_call_fastpath (98 samples, 1.35%)</title><rect x="1012.6" y="723.0" width="16.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1015.6" y="734.0"></text>
</g>
<g>
<title>sys_futex (98 samples, 1.35%)</title><rect x="1012.6" y="707.0" width="16.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1015.6" y="718.0"></text>
</g>
<g>
<title>do_futex (98 samples, 1.35%)</title><rect x="1012.6" y="691.0" width="16.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1015.6" y="702.0"></text>
</g>
<g>
<title>futex_wake_op (95 samples, 1.31%)</title><rect x="1012.8" y="675.0" width="15.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1015.8" y="686.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="1013.9" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1016.9" y="670.0"></text>
</g>
<g>
<title>wake_up_q (86 samples, 1.19%)</title><rect x="1014.2" y="659.0" width="14.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1017.2" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (84 samples, 1.16%)</title><rect x="1014.6" y="643.0" width="13.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1017.6" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (84 samples, 1.16%)</title><rect x="1014.6" y="627.0" width="13.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1017.6" y="638.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="1028.3" y="675.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1031.3" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.04%)</title><rect x="1028.6" y="739.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1031.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (3 samples, 0.04%)</title><rect x="1029.1" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1032.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1029.2" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1032.2" y="782.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.08%)</title><rect x="1029.6" y="931.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1032.6" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (3 samples, 0.04%)</title><rect x="1030.7" y="931.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1033.7" y="942.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.07%)</title><rect x="1031.2" y="931.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1034.2" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.07%)</title><rect x="1031.2" y="915.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1034.2" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.07%)</title><rect x="1031.2" y="899.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1034.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.04%)</title><rect x="1031.5" y="883.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1034.5" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (9 samples, 0.12%)</title><rect x="1032.0" y="931.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1035.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.10%)</title><rect x="1032.0" y="915.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1035.0" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.10%)</title><rect x="1032.0" y="899.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1035.0" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.07%)</title><rect x="1032.3" y="883.0" width="0.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1035.3" y="894.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.03%)</title><rect x="1033.1" y="915.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1036.1" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.12%)</title><rect x="1033.5" y="963.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1036.5" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.10%)</title><rect x="1033.6" y="947.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1036.6" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.08%)</title><rect x="1033.8" y="931.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1036.8" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.03%)</title><rect x="1034.9" y="963.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1037.9" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.11%)</title><rect x="1035.3" y="963.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1038.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.07%)</title><rect x="1035.8" y="947.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1038.8" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.07%)</title><rect x="1035.8" y="931.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1038.8" y="942.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (29 samples, 0.40%)</title><rect x="1036.6" y="963.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1039.6" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.17%)</title><rect x="1039.3" y="947.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1042.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (124 samples, 1.71%)</title><rect x="1041.3" y="979.0" width="20.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1044.3" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (120 samples, 1.66%)</title><rect x="1041.6" y="963.0" width="19.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1044.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.50%)</title><rect x="1043.3" y="947.0" width="5.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1046.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.50%)</title><rect x="1043.3" y="931.0" width="5.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1046.3" y="942.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (34 samples, 0.47%)</title><rect x="1043.3" y="915.0" width="5.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1046.3" y="926.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="1043.7" y="899.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1046.7" y="910.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (10 samples, 0.14%)</title><rect x="1044.2" y="899.0" width="1.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1047.2" y="910.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (15 samples, 0.21%)</title><rect x="1046.0" y="899.0" width="2.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1049.0" y="910.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="1047.2" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1050.2" y="894.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.08%)</title><rect x="1047.5" y="883.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1050.5" y="894.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.04%)</title><rect x="1048.0" y="867.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1051.0" y="878.0"></text>
</g>
<g>
<title>__GI_epoll_wait (7 samples, 0.10%)</title><rect x="1049.1" y="947.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1052.1" y="958.0"></text>
</g>
<g>
<title>system_call_after_swapgs (7 samples, 0.10%)</title><rect x="1049.1" y="931.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1052.1" y="942.0"></text>
</g>
<g>
<title>__libc_recv (66 samples, 0.91%)</title><rect x="1050.3" y="947.0" width="10.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1053.3" y="958.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.03%)</title><rect x="1050.9" y="931.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1053.9" y="942.0"></text>
</g>
<g>
<title>auditsys (3 samples, 0.04%)</title><rect x="1051.2" y="931.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1054.2" y="942.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.03%)</title><rect x="1051.4" y="915.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1054.4" y="926.0"></text>
</g>
<g>
<title>sys_recvfrom (3 samples, 0.04%)</title><rect x="1051.7" y="931.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1054.7" y="942.0"></text>
</g>
<g>
<title>sysret_audit (2 samples, 0.03%)</title><rect x="1052.2" y="931.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1055.2" y="942.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.03%)</title><rect x="1052.2" y="915.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1055.2" y="926.0"></text>
</g>
<g>
<title>system_call_fastpath (52 samples, 0.72%)</title><rect x="1052.5" y="931.0" width="8.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1055.5" y="942.0"></text>
</g>
<g>
<title>sys_recvfrom (51 samples, 0.70%)</title><rect x="1052.7" y="915.0" width="8.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1055.7" y="926.0"></text>
</g>
<g>
<title>SYSC_recvfrom (51 samples, 0.70%)</title><rect x="1052.7" y="899.0" width="8.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1055.7" y="910.0"></text>
</g>
<g>
<title>fget_light (3 samples, 0.04%)</title><rect x="1052.7" y="883.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1055.7" y="894.0"></text>
</g>
<g>
<title>sock_recvmsg (43 samples, 0.59%)</title><rect x="1053.4" y="883.0" width="7.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1056.4" y="894.0"></text>
</g>
<g>
<title>inet_recvmsg (29 samples, 0.40%)</title><rect x="1053.4" y="867.0" width="4.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1056.4" y="878.0"></text>
</g>
<g>
<title>tcp_recvmsg (24 samples, 0.33%)</title><rect x="1054.2" y="851.0" width="3.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1057.2" y="862.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.04%)</title><rect x="1054.8" y="835.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1057.8" y="846.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="1055.0" y="819.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1058.0" y="830.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.06%)</title><rect x="1055.5" y="835.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1058.5" y="846.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.03%)</title><rect x="1056.3" y="835.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1059.3" y="846.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.03%)</title><rect x="1056.3" y="819.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1059.3" y="830.0"></text>
</g>
<g>
<title>skb_copy_datagram_iovec (8 samples, 0.11%)</title><rect x="1056.6" y="835.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1059.6" y="846.0"></text>
</g>
<g>
<title>memcpy_toiovec (6 samples, 0.08%)</title><rect x="1057.0" y="819.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1060.0" y="830.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.07%)</title><rect x="1057.1" y="803.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1060.1" y="814.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.03%)</title><rect x="1057.3" y="787.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1060.3" y="798.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="1057.6" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1060.6" y="798.0"></text>
</g>
<g>
<title>security_socket_recvmsg (10 samples, 0.14%)</title><rect x="1058.1" y="867.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1061.1" y="878.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (8 samples, 0.11%)</title><rect x="1058.3" y="851.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1061.3" y="862.0"></text>
</g>
<g>
<title>sock_has_perm (8 samples, 0.11%)</title><rect x="1058.3" y="835.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1061.3" y="846.0"></text>
</g>
<g>
<title>avc_has_perm_flags (3 samples, 0.04%)</title><rect x="1059.1" y="819.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1062.1" y="830.0"></text>
</g>
<g>
<title>selinux_socket_recvmsg (3 samples, 0.04%)</title><rect x="1059.7" y="867.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1062.7" y="878.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.06%)</title><rect x="1060.4" y="883.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1063.4" y="894.0"></text>
</g>
<g>
<title>fget_light (4 samples, 0.06%)</title><rect x="1060.4" y="867.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1063.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.03%)</title><rect x="1061.2" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.2" y="974.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="1061.5" y="995.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1064.5" y="1006.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="1061.5" y="979.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1064.5" y="990.0"></text>
</g>
<g>
<title>start_thread (786 samples, 10.86%)</title><rect x="1061.8" y="1027.0" width="128.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1064.8" y="1038.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (786 samples, 10.86%)</title><rect x="1061.8" y="1011.0" width="128.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1064.8" y="1022.0">thread_native_en..</text>
</g>
<g>
<title>Thread::call_run() (786 samples, 10.86%)</title><rect x="1061.8" y="995.0" width="128.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1064.8" y="1006.0">Thread::call_run()</text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.03%)</title><rect x="1061.8" y="979.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1064.8" y="990.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.03%)</title><rect x="1061.8" y="963.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1064.8" y="974.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.03%)</title><rect x="1061.8" y="947.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1064.8" y="958.0"></text>
</g>
<g>
<title>GangWorker::loop() (35 samples, 0.48%)</title><rect x="1062.2" y="979.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1065.2" y="990.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1062.2" y="963.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1065.2" y="974.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (30 samples, 0.41%)</title><rect x="1062.5" y="963.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1065.5" y="974.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (14 samples, 0.19%)</title><rect x="1062.5" y="947.0" width="2.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1065.5" y="958.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.03%)</title><rect x="1062.5" y="931.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1065.5" y="942.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.03%)</title><rect x="1062.5" y="915.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1065.5" y="926.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (6 samples, 0.08%)</title><rect x="1062.8" y="931.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1065.8" y="942.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.08%)</title><rect x="1063.8" y="931.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1066.8" y="942.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (5 samples, 0.07%)</title><rect x="1064.8" y="947.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1067.8" y="958.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.07%)</title><rect x="1064.8" y="931.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1067.8" y="942.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (5 samples, 0.07%)</title><rect x="1064.8" y="915.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1067.8" y="926.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (5 samples, 0.07%)</title><rect x="1064.8" y="899.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1067.8" y="910.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (5 samples, 0.07%)</title><rect x="1064.8" y="883.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1067.8" y="894.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.03%)</title><rect x="1064.8" y="867.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1067.8" y="878.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (3 samples, 0.04%)</title><rect x="1065.1" y="867.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1068.1" y="878.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (3 samples, 0.04%)</title><rect x="1065.1" y="851.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1068.1" y="862.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.07%)</title><rect x="1065.6" y="947.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1068.6" y="958.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (5 samples, 0.07%)</title><rect x="1065.6" y="931.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1068.6" y="942.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (5 samples, 0.07%)</title><rect x="1065.6" y="915.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1068.6" y="926.0"></text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (5 samples, 0.07%)</title><rect x="1065.6" y="899.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1068.6" y="910.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (2 samples, 0.03%)</title><rect x="1065.6" y="883.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1068.6" y="894.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (2 samples, 0.03%)</title><rect x="1065.6" y="867.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1068.6" y="878.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (3 samples, 0.04%)</title><rect x="1065.9" y="883.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1068.9" y="894.0"></text>
</g>
<g>
<title>oop_Relocation::unpack_data() (2 samples, 0.03%)</title><rect x="1066.1" y="867.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1069.1" y="878.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (6 samples, 0.08%)</title><rect x="1066.4" y="947.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1069.4" y="958.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (6 samples, 0.08%)</title><rect x="1066.4" y="931.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1069.4" y="942.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (2 samples, 0.03%)</title><rect x="1066.4" y="915.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1069.4" y="926.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (4 samples, 0.06%)</title><rect x="1066.7" y="915.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1069.7" y="926.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (3 samples, 0.04%)</title><rect x="1066.9" y="899.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1069.9" y="910.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (2 samples, 0.03%)</title><rect x="1067.1" y="883.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1070.1" y="894.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (2 samples, 0.03%)</title><rect x="1067.1" y="867.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1070.1" y="878.0"></text>
</g>
<g>
<title>JavaThread::run() (744 samples, 10.28%)</title><rect x="1067.9" y="979.0" width="121.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1070.9" y="990.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (744 samples, 10.28%)</title><rect x="1067.9" y="963.0" width="121.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1070.9" y="974.0">JavaThread::thr..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (731 samples, 10.10%)</title><rect x="1067.9" y="947.0" width="119.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1070.9" y="958.0">CompileBroker::..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (729 samples, 10.07%)</title><rect x="1067.9" y="931.0" width="118.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1070.9" y="942.0">CompileBroker:..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (710 samples, 9.81%)</title><rect x="1067.9" y="915.0" width="115.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1070.9" y="926.0">C2Compiler::co..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (710 samples, 9.81%)</title><rect x="1067.9" y="899.0" width="115.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1070.9" y="910.0">Compile::Compi..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (3 samples, 0.04%)</title><rect x="1067.9" y="883.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1070.9" y="894.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (3 samples, 0.04%)</title><rect x="1067.9" y="867.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1070.9" y="878.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.04%)</title><rect x="1067.9" y="851.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1070.9" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.04%)</title><rect x="1067.9" y="835.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1070.9" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.04%)</title><rect x="1067.9" y="819.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1070.9" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="1067.9" y="803.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1070.9" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="1067.9" y="787.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1070.9" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.03%)</title><rect x="1068.0" y="771.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1071.0" y="782.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (404 samples, 5.58%)</title><rect x="1068.4" y="883.0" width="65.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1071.4" y="894.0">Compile..</text>
</g>
<g>
<title>Compile::Output() (20 samples, 0.28%)</title><rect x="1068.4" y="867.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1071.4" y="878.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (9 samples, 0.12%)</title><rect x="1068.4" y="851.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1071.4" y="862.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (2 samples, 0.03%)</title><rect x="1069.3" y="835.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1072.3" y="846.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (8 samples, 0.11%)</title><rect x="1069.8" y="851.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1072.8" y="862.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (5 samples, 0.07%)</title><rect x="1070.0" y="835.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1073.0" y="846.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (3 samples, 0.04%)</title><rect x="1070.3" y="819.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1073.3" y="830.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (3 samples, 0.04%)</title><rect x="1071.1" y="851.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1074.1" y="862.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (8 samples, 0.11%)</title><rect x="1071.6" y="867.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1074.6" y="878.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (3 samples, 0.04%)</title><rect x="1071.8" y="851.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1074.8" y="862.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.03%)</title><rect x="1072.0" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1075.0" y="846.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (2 samples, 0.03%)</title><rect x="1072.3" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1075.3" y="862.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (2 samples, 0.03%)</title><rect x="1072.6" y="851.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1075.6" y="862.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.03%)</title><rect x="1072.6" y="835.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1075.6" y="846.0"></text>
</g>
<g>
<title>Matcher::match() (43 samples, 0.59%)</title><rect x="1073.3" y="867.0" width="7.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1076.3" y="878.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (6 samples, 0.08%)</title><rect x="1073.9" y="851.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1076.9" y="862.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.03%)</title><rect x="1074.9" y="851.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1077.9" y="862.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (31 samples, 0.43%)</title><rect x="1075.2" y="851.0" width="5.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1078.2" y="862.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (8 samples, 0.11%)</title><rect x="1075.7" y="835.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1078.7" y="846.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (2 samples, 0.03%)</title><rect x="1077.2" y="835.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1080.2" y="846.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (15 samples, 0.21%)</title><rect x="1077.5" y="835.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1080.5" y="846.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (6 samples, 0.08%)</title><rect x="1077.8" y="819.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1080.8" y="830.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (3 samples, 0.04%)</title><rect x="1078.0" y="803.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1081.0" y="814.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.03%)</title><rect x="1078.0" y="787.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1081.0" y="798.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.03%)</title><rect x="1078.0" y="771.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1081.0" y="782.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (6 samples, 0.08%)</title><rect x="1078.8" y="819.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1081.8" y="830.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (4 samples, 0.06%)</title><rect x="1078.8" y="803.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1081.8" y="814.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (3 samples, 0.04%)</title><rect x="1078.8" y="787.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1081.8" y="798.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (2 samples, 0.03%)</title><rect x="1079.5" y="803.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1082.5" y="814.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (29 samples, 0.40%)</title><rect x="1080.4" y="867.0" width="4.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1083.4" y="878.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (2 samples, 0.03%)</title><rect x="1080.4" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1083.4" y="862.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (27 samples, 0.37%)</title><rect x="1080.8" y="851.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1083.8" y="862.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.03%)</title><rect x="1081.1" y="835.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1084.1" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (4 samples, 0.06%)</title><rect x="1081.4" y="835.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1084.4" y="846.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (5 samples, 0.07%)</title><rect x="1082.1" y="835.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1085.1" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (3 samples, 0.04%)</title><rect x="1083.0" y="835.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1086.0" y="846.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (4 samples, 0.06%)</title><rect x="1083.7" y="835.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1086.7" y="846.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (3 samples, 0.04%)</title><rect x="1083.9" y="819.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1086.9" y="830.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (5 samples, 0.07%)</title><rect x="1084.3" y="835.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1087.3" y="846.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.03%)</title><rect x="1084.7" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1087.7" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (300 samples, 4.15%)</title><rect x="1085.3" y="867.0" width="48.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1088.3" y="878.0">Phas..</text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (2 samples, 0.03%)</title><rect x="1085.8" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1088.8" y="862.0"></text>
</g>
<g>
<title>Node::jvms() const (2 samples, 0.03%)</title><rect x="1086.6" y="851.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1089.6" y="862.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (7 samples, 0.10%)</title><rect x="1087.1" y="851.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1090.1" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (19 samples, 0.26%)</title><rect x="1088.3" y="851.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1091.3" y="862.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.04%)</title><rect x="1089.2" y="835.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1092.2" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (3 samples, 0.04%)</title><rect x="1089.7" y="835.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1092.7" y="846.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (5 samples, 0.07%)</title><rect x="1090.2" y="835.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1093.2" y="846.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.06%)</title><rect x="1090.4" y="819.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1093.4" y="830.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (2 samples, 0.03%)</title><rect x="1091.0" y="835.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1094.0" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (15 samples, 0.21%)</title><rect x="1091.4" y="851.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1094.4" y="862.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.06%)</title><rect x="1092.2" y="835.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1095.2" y="846.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (6 samples, 0.08%)</title><rect x="1092.8" y="835.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1095.8" y="846.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.04%)</title><rect x="1093.3" y="819.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1096.3" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (28 samples, 0.39%)</title><rect x="1093.8" y="851.0" width="4.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1096.8" y="862.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (2 samples, 0.03%)</title><rect x="1097.1" y="835.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1100.1" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (4 samples, 0.06%)</title><rect x="1097.7" y="835.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1100.7" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (74 samples, 1.02%)</title><rect x="1098.4" y="851.0" width="12.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1101.4" y="862.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (3 samples, 0.04%)</title><rect x="1100.6" y="835.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1103.6" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (11 samples, 0.15%)</title><rect x="1101.3" y="835.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1104.3" y="846.0"></text>
</g>
<g>
<title>JVMState::debug_start() const (2 samples, 0.03%)</title><rect x="1102.0" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1105.0" y="830.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (2 samples, 0.03%)</title><rect x="1102.3" y="819.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1105.3" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::check_for_high_pressure_transition_at_fatproj(unsigned int&amp;, unsigned int, LRG&amp;, PhaseChaitin::Pressure&amp;, int) (2 samples, 0.03%)</title><rect x="1103.1" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1106.1" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (21 samples, 0.29%)</title><rect x="1103.4" y="835.0" width="3.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1106.4" y="846.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.04%)</title><rect x="1106.4" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1109.4" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (20 samples, 0.28%)</title><rect x="1106.8" y="835.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1109.8" y="846.0"></text>
</g>
<g>
<title>RegMask::Size() const (6 samples, 0.08%)</title><rect x="1107.7" y="819.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1110.7" y="830.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (9 samples, 0.12%)</title><rect x="1108.6" y="819.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1111.6" y="830.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (2 samples, 0.03%)</title><rect x="1110.4" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1113.4" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (20 samples, 0.28%)</title><rect x="1110.9" y="851.0" width="3.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1113.9" y="862.0"></text>
</g>
<g>
<title>RegMask::Size() const (5 samples, 0.07%)</title><rect x="1113.0" y="835.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1116.0" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (13 samples, 0.18%)</title><rect x="1114.2" y="851.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1117.2" y="862.0"></text>
</g>
<g>
<title>RegMask::Size() const (6 samples, 0.08%)</title><rect x="1115.0" y="835.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1118.0" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (2 samples, 0.03%)</title><rect x="1116.3" y="851.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1119.3" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (38 samples, 0.53%)</title><rect x="1116.6" y="851.0" width="6.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1119.6" y="862.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (14 samples, 0.19%)</title><rect x="1119.6" y="835.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1122.6" y="846.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (5 samples, 0.07%)</title><rect x="1121.8" y="835.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1124.8" y="846.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (2 samples, 0.03%)</title><rect x="1122.8" y="851.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1125.8" y="862.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (11 samples, 0.15%)</title><rect x="1123.1" y="851.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1126.1" y="862.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (9 samples, 0.12%)</title><rect x="1123.3" y="835.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1126.3" y="846.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (4 samples, 0.06%)</title><rect x="1123.5" y="819.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1126.5" y="830.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (2 samples, 0.03%)</title><rect x="1124.3" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1127.3" y="830.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (3 samples, 0.04%)</title><rect x="1124.9" y="851.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1127.9" y="862.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="1125.1" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1128.1" y="846.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (12 samples, 0.17%)</title><rect x="1125.4" y="851.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1128.4" y="862.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.08%)</title><rect x="1126.4" y="835.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1129.4" y="846.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (35 samples, 0.48%)</title><rect x="1127.6" y="851.0" width="5.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1130.6" y="862.0"></text>
</g>
<g>
<title>IndexSet::free_block(unsigned int) (2 samples, 0.03%)</title><rect x="1130.5" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1133.5" y="846.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (13 samples, 0.18%)</title><rect x="1131.0" y="835.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.0" y="846.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int, Arena*) (2 samples, 0.03%)</title><rect x="1131.8" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1134.8" y="830.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.08%)</title><rect x="1132.1" y="819.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1135.1" y="830.0"></text>
</g>
<g>
<title>Compile::Optimize() (232 samples, 3.21%)</title><rect x="1134.2" y="883.0" width="37.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1137.2" y="894.0">Com..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (2 samples, 0.03%)</title><rect x="1134.2" y="867.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1137.2" y="878.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (2 samples, 0.03%)</title><rect x="1134.2" y="851.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1137.2" y="862.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (5 samples, 0.07%)</title><rect x="1134.6" y="867.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1137.6" y="878.0"></text>
</g>
<g>
<title>Compile::inline_incrementally_one(PhaseIterGVN&amp;) (4 samples, 0.06%)</title><rect x="1134.6" y="851.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1137.6" y="862.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (4 samples, 0.06%)</title><rect x="1134.6" y="835.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1137.6" y="846.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (2 samples, 0.03%)</title><rect x="1134.7" y="819.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1137.7" y="830.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (5 samples, 0.07%)</title><rect x="1135.5" y="867.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1138.5" y="878.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (5 samples, 0.07%)</title><rect x="1135.5" y="851.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1138.5" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (3 samples, 0.04%)</title><rect x="1135.9" y="835.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1138.9" y="846.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="1135.9" y="819.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1138.9" y="830.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="1135.9" y="803.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1138.9" y="814.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (6 samples, 0.08%)</title><rect x="1136.5" y="867.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1139.5" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (161 samples, 2.22%)</title><rect x="1137.5" y="867.0" width="26.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1140.5" y="878.0">P..</text>
</g>
<g>
<title>Node::pinned() const (3 samples, 0.04%)</title><rect x="1138.5" y="851.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.5" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (7 samples, 0.10%)</title><rect x="1139.1" y="851.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1142.1" y="862.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (3 samples, 0.04%)</title><rect x="1139.8" y="835.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1142.8" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (12 samples, 0.17%)</title><rect x="1140.3" y="851.0" width="1.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1143.3" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (103 samples, 1.42%)</title><rect x="1142.2" y="851.0" width="16.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1145.2" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (93 samples, 1.29%)</title><rect x="1143.7" y="835.0" width="15.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1146.7" y="846.0"></text>
</g>
<g>
<title>MergeMemNode::Opcode() const (2 samples, 0.03%)</title><rect x="1145.2" y="819.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1148.2" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (80 samples, 1.11%)</title><rect x="1145.5" y="819.0" width="13.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.5" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (7 samples, 0.10%)</title><rect x="1146.5" y="803.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1149.5" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (7 samples, 0.10%)</title><rect x="1146.5" y="787.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1149.5" y="798.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (65 samples, 0.90%)</title><rect x="1147.8" y="803.0" width="10.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1150.8" y="814.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (2 samples, 0.03%)</title><rect x="1158.5" y="819.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.5" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (5 samples, 0.07%)</title><rect x="1159.0" y="851.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.0" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (11 samples, 0.15%)</title><rect x="1159.8" y="851.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.8" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (3 samples, 0.04%)</title><rect x="1160.2" y="835.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.2" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (3 samples, 0.04%)</title><rect x="1160.7" y="835.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.7" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (2 samples, 0.03%)</title><rect x="1160.8" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.8" y="830.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (3 samples, 0.04%)</title><rect x="1161.1" y="835.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.1" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (9 samples, 0.12%)</title><rect x="1161.6" y="851.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.6" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (8 samples, 0.11%)</title><rect x="1161.8" y="835.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1164.8" y="846.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (4 samples, 0.06%)</title><rect x="1162.3" y="819.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1165.3" y="830.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.138] (4 samples, 0.06%)</title><rect x="1162.3" y="803.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.3" y="814.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.06%)</title><rect x="1162.3" y="787.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.3" y="798.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.06%)</title><rect x="1162.3" y="771.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.3" y="782.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.06%)</title><rect x="1162.3" y="755.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.3" y="766.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1162.3" y="739.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.3" y="750.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1162.3" y="723.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1165.3" y="734.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1162.3" y="707.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.3" y="718.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1162.3" y="691.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.3" y="702.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1162.3" y="675.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1165.3" y="686.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1162.3" y="659.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.3" y="670.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1162.3" y="643.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.3" y="654.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.131] (2 samples, 0.03%)</title><rect x="1162.6" y="739.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.6" y="750.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1162.6" y="723.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.6" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (39 samples, 0.54%)</title><rect x="1163.9" y="867.0" width="6.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.9" y="878.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (36 samples, 0.50%)</title><rect x="1164.2" y="851.0" width="5.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1167.2" y="862.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (3 samples, 0.04%)</title><rect x="1165.2" y="835.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1168.2" y="846.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (4 samples, 0.06%)</title><rect x="1165.7" y="835.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.7" y="846.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (3 samples, 0.04%)</title><rect x="1165.9" y="819.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1168.9" y="830.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.131] (3 samples, 0.04%)</title><rect x="1165.9" y="803.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.9" y="814.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (3 samples, 0.04%)</title><rect x="1165.9" y="787.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1168.9" y="798.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.03%)</title><rect x="1167.0" y="835.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1170.0" y="846.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.03%)</title><rect x="1167.0" y="819.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1170.0" y="830.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (2 samples, 0.03%)</title><rect x="1167.3" y="835.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.3" y="846.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (4 samples, 0.06%)</title><rect x="1167.8" y="835.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1170.8" y="846.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (2 samples, 0.03%)</title><rect x="1168.2" y="819.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.2" y="830.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (9 samples, 0.12%)</title><rect x="1168.5" y="835.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1171.5" y="846.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.138] (9 samples, 0.12%)</title><rect x="1168.5" y="819.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.5" y="830.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (9 samples, 0.12%)</title><rect x="1168.5" y="803.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.5" y="814.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (9 samples, 0.12%)</title><rect x="1168.5" y="787.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.5" y="798.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (8 samples, 0.11%)</title><rect x="1168.5" y="771.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1171.5" y="782.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.10%)</title><rect x="1168.5" y="755.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.5" y="766.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.10%)</title><rect x="1168.5" y="739.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.5" y="750.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.10%)</title><rect x="1168.5" y="723.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.5" y="734.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (6 samples, 0.08%)</title><rect x="1168.5" y="707.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.5" y="718.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1168.5" y="691.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.5" y="702.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1168.5" y="675.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.5" y="686.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1168.5" y="659.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.5" y="670.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1168.5" y="643.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1171.5" y="654.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1168.5" y="627.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.5" y="638.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1168.5" y="611.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.5" y="622.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1168.5" y="595.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.5" y="606.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1168.5" y="579.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.5" y="590.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1168.5" y="563.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.5" y="574.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.131] (2 samples, 0.03%)</title><rect x="1168.5" y="547.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.5" y="558.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1168.5" y="531.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.5" y="542.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.131] (2 samples, 0.03%)</title><rect x="1169.0" y="659.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.0" y="670.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1169.0" y="643.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.0" y="654.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (7 samples, 0.10%)</title><rect x="1170.3" y="867.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1173.3" y="878.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (7 samples, 0.10%)</title><rect x="1170.3" y="851.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.3" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (6 samples, 0.08%)</title><rect x="1170.3" y="835.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.3" y="846.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.03%)</title><rect x="1171.4" y="867.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.4" y="878.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.03%)</title><rect x="1171.4" y="851.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.4" y="862.0"></text>
</g>
<g>
<title>__memset_sse2 (2 samples, 0.03%)</title><rect x="1171.7" y="867.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1174.7" y="878.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (3 samples, 0.04%)</title><rect x="1172.2" y="883.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.2" y="894.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (2 samples, 0.03%)</title><rect x="1172.4" y="867.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.4" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (60 samples, 0.83%)</title><rect x="1172.9" y="883.0" width="9.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.9" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (60 samples, 0.83%)</title><rect x="1172.9" y="867.0" width="9.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.9" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (59 samples, 0.82%)</title><rect x="1173.0" y="851.0" width="9.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (58 samples, 0.80%)</title><rect x="1173.0" y="835.0" width="9.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.0" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (58 samples, 0.80%)</title><rect x="1173.0" y="819.0" width="9.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.0" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (56 samples, 0.77%)</title><rect x="1173.0" y="803.0" width="9.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.0" y="814.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (5 samples, 0.07%)</title><rect x="1173.0" y="787.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.0" y="798.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (5 samples, 0.07%)</title><rect x="1173.0" y="771.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.0" y="782.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.03%)</title><rect x="1173.0" y="755.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.0" y="766.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (2 samples, 0.03%)</title><rect x="1173.0" y="739.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.0" y="750.0"></text>
</g>
<g>
<title>Method::has_unloaded_classes_in_signature(methodHandle const&amp;, Thread*) (2 samples, 0.03%)</title><rect x="1173.0" y="723.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.0" y="734.0"></text>
</g>
<g>
<title>SystemDictionary::find(Symbol*, Handle, Handle, Thread*) (2 samples, 0.03%)</title><rect x="1173.0" y="707.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1176.0" y="718.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.04%)</title><rect x="1173.4" y="755.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.4" y="766.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.04%)</title><rect x="1173.4" y="739.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.4" y="750.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.04%)</title><rect x="1173.4" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.4" y="734.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="1173.4" y="707.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.4" y="718.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="1173.4" y="691.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.4" y="702.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.03%)</title><rect x="1173.4" y="675.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.4" y="686.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (2 samples, 0.03%)</title><rect x="1173.4" y="659.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.4" y="670.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.03%)</title><rect x="1173.4" y="643.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.4" y="654.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1173.4" y="627.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.4" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (37 samples, 0.51%)</title><rect x="1174.0" y="787.0" width="6.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.0" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (37 samples, 0.51%)</title><rect x="1174.0" y="771.0" width="6.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1177.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (36 samples, 0.50%)</title><rect x="1174.0" y="755.0" width="5.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (35 samples, 0.48%)</title><rect x="1174.0" y="739.0" width="5.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1177.0" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (35 samples, 0.48%)</title><rect x="1174.0" y="723.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1177.0" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (34 samples, 0.47%)</title><rect x="1174.0" y="707.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.0" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (31 samples, 0.43%)</title><rect x="1174.3" y="691.0" width="5.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1177.3" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (31 samples, 0.43%)</title><rect x="1174.3" y="675.0" width="5.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (31 samples, 0.43%)</title><rect x="1174.3" y="659.0" width="5.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (31 samples, 0.43%)</title><rect x="1174.3" y="643.0" width="5.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.3" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (31 samples, 0.43%)</title><rect x="1174.3" y="627.0" width="5.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.3" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (28 samples, 0.39%)</title><rect x="1174.5" y="611.0" width="4.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1177.5" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (24 samples, 0.33%)</title><rect x="1174.7" y="595.0" width="3.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.7" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (24 samples, 0.33%)</title><rect x="1174.7" y="579.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.7" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (24 samples, 0.33%)</title><rect x="1174.7" y="563.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1177.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (24 samples, 0.33%)</title><rect x="1174.7" y="547.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (24 samples, 0.33%)</title><rect x="1174.7" y="531.0" width="3.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1177.7" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (23 samples, 0.32%)</title><rect x="1174.7" y="515.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.7" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (21 samples, 0.29%)</title><rect x="1174.8" y="499.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1177.8" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (21 samples, 0.29%)</title><rect x="1174.8" y="483.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.8" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (19 samples, 0.26%)</title><rect x="1175.0" y="467.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.0" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (19 samples, 0.26%)</title><rect x="1175.0" y="451.0" width="3.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.0" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (19 samples, 0.26%)</title><rect x="1175.0" y="435.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.0" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (17 samples, 0.23%)</title><rect x="1175.0" y="419.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.0" y="430.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.04%)</title><rect x="1175.0" y="403.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.0" y="414.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (3 samples, 0.04%)</title><rect x="1175.0" y="387.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.0" y="398.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.03%)</title><rect x="1175.2" y="371.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.2" y="382.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.03%)</title><rect x="1175.2" y="355.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.2" y="366.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.03%)</title><rect x="1175.2" y="339.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.2" y="350.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.03%)</title><rect x="1175.2" y="323.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.2" y="334.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.03%)</title><rect x="1175.2" y="307.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.2" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.14%)</title><rect x="1175.5" y="403.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.5" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.14%)</title><rect x="1175.5" y="387.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.12%)</title><rect x="1175.7" y="371.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.7" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.12%)</title><rect x="1175.7" y="355.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.7" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.12%)</title><rect x="1175.7" y="339.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.7" y="350.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.06%)</title><rect x="1175.7" y="323.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.7" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1175.8" y="307.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.8" y="318.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1175.8" y="291.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.8" y="302.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1175.8" y="275.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.8" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1175.8" y="259.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.8" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1175.8" y="243.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1178.8" y="254.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1175.8" y="227.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.8" y="238.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1175.8" y="211.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.8" y="222.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1175.8" y="195.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.8" y="206.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1175.8" y="179.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.8" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1175.8" y="163.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.8" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1175.8" y="147.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.8" y="158.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1175.8" y="131.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.8" y="142.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1175.8" y="115.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.8" y="126.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1175.8" y="99.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.8" y="110.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1175.8" y="83.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1178.8" y="94.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1175.8" y="67.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.8" y="78.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1175.8" y="51.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.8" y="62.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1175.8" y="35.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.8" y="46.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.03%)</title><rect x="1176.3" y="323.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.3" y="334.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (2 samples, 0.03%)</title><rect x="1176.6" y="323.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.6" y="334.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.06%)</title><rect x="1177.1" y="403.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.1" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.06%)</title><rect x="1177.1" y="387.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.1" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.06%)</title><rect x="1177.1" y="371.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.1" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1177.3" y="355.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.3" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1177.3" y="339.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.3" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1177.3" y="323.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.3" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1177.3" y="307.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.3" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1177.3" y="291.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.3" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1177.3" y="275.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.3" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1177.3" y="259.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.3" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1177.3" y="243.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.3" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1177.3" y="227.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.3" y="238.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1177.3" y="211.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.3" y="222.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.03%)</title><rect x="1177.8" y="419.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.8" y="430.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1178.6" y="595.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.6" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1178.6" y="579.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.6" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1178.6" y="563.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.6" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1178.6" y="547.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.6" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1178.6" y="531.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.6" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1178.6" y="515.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.6" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1178.6" y="499.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.6" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1178.6" y="483.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.6" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1178.6" y="467.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.6" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1178.6" y="451.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.6" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1178.6" y="435.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.6" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1178.6" y="419.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.6" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1178.6" y="403.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.6" y="414.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1178.7" y="387.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.7" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1178.7" y="371.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.7" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1178.7" y="355.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.7" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1178.7" y="339.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.7" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1178.7" y="323.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.7" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1178.7" y="307.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.7" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1178.7" y="291.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.7" y="302.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1178.7" y="275.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.7" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1178.7" y="259.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.7" y="270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1178.7" y="243.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.7" y="254.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1178.7" y="227.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.7" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1178.7" y="211.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.7" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1178.7" y="195.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.7" y="206.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1178.7" y="179.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.7" y="190.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1178.7" y="163.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.7" y="174.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1178.7" y="147.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.7" y="158.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1178.7" y="131.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.7" y="142.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1178.7" y="115.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.7" y="126.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1178.7" y="99.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.7" y="110.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1178.7" y="83.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1181.7" y="94.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1178.7" y="67.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.7" y="78.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1178.7" y="51.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.7" y="62.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (10 samples, 0.14%)</title><rect x="1180.1" y="787.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.1" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.10%)</title><rect x="1180.1" y="771.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.1" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.10%)</title><rect x="1180.1" y="755.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.1" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.10%)</title><rect x="1180.1" y="739.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.08%)</title><rect x="1180.1" y="723.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.08%)</title><rect x="1180.1" y="707.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.08%)</title><rect x="1180.1" y="691.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.1" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.08%)</title><rect x="1180.1" y="675.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.1" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.08%)</title><rect x="1180.1" y="659.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.1" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.08%)</title><rect x="1180.1" y="643.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.1" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.08%)</title><rect x="1180.1" y="627.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.1" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.08%)</title><rect x="1180.1" y="611.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.08%)</title><rect x="1180.1" y="595.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.1" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.06%)</title><rect x="1180.2" y="579.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.2" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.06%)</title><rect x="1180.2" y="563.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.06%)</title><rect x="1180.2" y="547.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.06%)</title><rect x="1180.2" y="531.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.2" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.06%)</title><rect x="1180.2" y="515.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.06%)</title><rect x="1180.2" y="499.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.2" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.06%)</title><rect x="1180.2" y="483.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.2" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.06%)</title><rect x="1180.2" y="467.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.2" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1180.4" y="451.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1180.4" y="435.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.4" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1180.4" y="419.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.4" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1180.4" y="403.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.4" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1180.4" y="387.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.4" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1180.4" y="371.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.4" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1180.4" y="355.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.4" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1180.4" y="339.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.4" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1180.4" y="323.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.4" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1180.4" y="307.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.4" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1180.5" y="291.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.5" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1180.5" y="275.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.5" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1180.5" y="259.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.5" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1180.5" y="243.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.5" y="254.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1181.2" y="771.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.2" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1181.2" y="755.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.2" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1181.2" y="739.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1181.2" y="723.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.2" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1181.2" y="707.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1181.2" y="691.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1181.2" y="675.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.2" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1181.2" y="659.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.2" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1181.2" y="643.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1181.2" y="627.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.2" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1181.2" y="611.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.2" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1181.2" y="595.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1181.2" y="579.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.2" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1181.2" y="563.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.2" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1181.2" y="547.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1181.2" y="531.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.2" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1181.2" y="515.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1181.2" y="499.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.2" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1181.2" y="483.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.2" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1181.2" y="467.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.2" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1181.2" y="451.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.2" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1181.2" y="435.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.2" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1181.2" y="419.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.2" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1181.2" y="403.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.2" y="414.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (2 samples, 0.03%)</title><rect x="1181.8" y="787.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.8" y="798.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (2 samples, 0.03%)</title><rect x="1181.8" y="771.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.8" y="782.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call_or_null(Klass*, LinkInfo const&amp;) (2 samples, 0.03%)</title><rect x="1181.8" y="755.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (2 samples, 0.03%)</title><rect x="1182.2" y="803.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.2" y="814.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (2 samples, 0.03%)</title><rect x="1182.2" y="787.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.2" y="798.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (3 samples, 0.04%)</title><rect x="1183.0" y="883.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.0" y="894.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.03%)</title><rect x="1183.2" y="867.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.2" y="878.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (16 samples, 0.22%)</title><rect x="1183.8" y="915.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.8" y="926.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (16 samples, 0.22%)</title><rect x="1183.8" y="899.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.8" y="910.0"></text>
</g>
<g>
<title>Compilation::compile_method() (16 samples, 0.22%)</title><rect x="1183.8" y="883.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.8" y="894.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (16 samples, 0.22%)</title><rect x="1183.8" y="867.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.8" y="878.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (6 samples, 0.08%)</title><rect x="1183.8" y="851.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.8" y="862.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (4 samples, 0.06%)</title><rect x="1183.8" y="835.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.8" y="846.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (4 samples, 0.06%)</title><rect x="1183.8" y="819.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.8" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (3 samples, 0.04%)</title><rect x="1183.8" y="803.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.8" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 0.04%)</title><rect x="1183.8" y="787.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.8" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (3 samples, 0.04%)</title><rect x="1183.8" y="771.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.8" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.04%)</title><rect x="1183.8" y="755.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.8" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1183.8" y="739.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.8" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1183.8" y="723.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.8" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.03%)</title><rect x="1183.8" y="707.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.8" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.03%)</title><rect x="1183.8" y="691.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.8" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.03%)</title><rect x="1183.8" y="675.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.8" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1183.8" y="659.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.8" y="670.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (2 samples, 0.03%)</title><rect x="1184.8" y="851.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.8" y="862.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (2 samples, 0.03%)</title><rect x="1184.8" y="835.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.8" y="846.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (8 samples, 0.11%)</title><rect x="1185.1" y="851.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.1" y="862.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (7 samples, 0.10%)</title><rect x="1185.3" y="835.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.3" y="846.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (3 samples, 0.04%)</title><rect x="1185.3" y="819.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.3" y="830.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (3 samples, 0.04%)</title><rect x="1185.3" y="803.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.3" y="814.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (3 samples, 0.04%)</title><rect x="1185.3" y="787.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.3" y="798.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (2 samples, 0.03%)</title><rect x="1185.9" y="819.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.9" y="830.0"></text>
</g>
<g>
<title>CompileQueue::get() (2 samples, 0.03%)</title><rect x="1186.7" y="931.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.7" y="942.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.03%)</title><rect x="1186.7" y="915.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.7" y="926.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (4 samples, 0.06%)</title><rect x="1187.1" y="947.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.1" y="958.0"></text>
</g>
<g>
<title>CodeCache::reverse_free_ratio(int) (2 samples, 0.03%)</title><rect x="1187.1" y="931.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.1" y="942.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (2 samples, 0.03%)</title><rect x="1187.4" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.4" y="942.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (2 samples, 0.03%)</title><rect x="1187.4" y="915.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.4" y="926.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (2 samples, 0.03%)</title><rect x="1187.4" y="899.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.4" y="910.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (9 samples, 0.12%)</title><rect x="1187.7" y="947.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.7" y="958.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (9 samples, 0.12%)</title><rect x="1187.7" y="931.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.7" y="942.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (8 samples, 0.11%)</title><rect x="1187.9" y="915.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.9" y="926.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (7 samples, 0.10%)</title><rect x="1188.0" y="899.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1191.0" y="910.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (5 samples, 0.07%)</title><rect x="1188.2" y="883.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.2" y="894.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (3 samples, 0.04%)</title><rect x="1188.2" y="867.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.2" y="878.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.03%)</title><rect x="1188.4" y="851.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.4" y="862.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.03%)</title><rect x="1188.4" y="835.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1191.4" y="846.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.03%)</title><rect x="1188.7" y="867.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.7" y="878.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.03%)</title><rect x="1189.2" y="979.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.2" y="990.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.03%)</title><rect x="1189.2" y="963.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.2" y="974.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.04%)</title><rect x="1189.5" y="979.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.5" y="990.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (3 samples, 0.04%)</title><rect x="1189.5" y="963.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.5" y="974.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 0.04%)</title><rect x="1189.5" y="947.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.5" y="958.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 0.04%)</title><rect x="1189.5" y="931.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.5" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.03%)</title><rect x="1189.7" y="915.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1192.7" y="926.0"></text>
</g>
<g>
<title>system_call_fastpath (2 samples, 0.03%)</title><rect x="1189.7" y="899.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1192.7" y="910.0"></text>
</g>
</g>
</svg>
