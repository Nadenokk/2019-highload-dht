<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="373"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="373"> </text>
<g id="frames">
<g>
<title>all (9,272 samples, 100.00%)</title><rect x="10.0" y="339.0" width="1180.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.0" y="350.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (2,592 samples, 27.96%)</title><rect x="10.0" y="323.0" width="329.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,592 samples, 27.96%)</title><rect x="10.0" y="307.0" width="329.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor$Worke..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,592 samples, 27.96%)</title><rect x="10.0" y="291.0" width="329.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="302.0">java/util/concurrent/ThreadPoolExecutor.runWo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (86 samples, 0.93%)</title><rect x="10.0" y="275.0" width="10.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (86 samples, 0.93%)</title><rect x="10.0" y="259.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (86 samples, 0.93%)</title><rect x="10.0" y="243.0" width="10.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (86 samples, 0.93%)</title><rect x="10.0" y="227.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (86 samples, 0.93%)</title><rect x="10.0" y="211.0" width="10.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$65/593464534.run (2,506 samples, 27.03%)</title><rect x="20.9" y="275.0" width="319.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.9" y="286.0">ru/mail/polis/service/httprest/HttpRestDemo..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$asyncExecute$4 (2,506 samples, 27.03%)</title><rect x="20.9" y="259.0" width="319.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.9" y="270.0">ru/mail/polis/service/httprest/HttpRestDemo..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendError (732 samples, 7.89%)</title><rect x="20.9" y="243.0" width="93.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.9" y="254.0">one/nio/htt..</text>
</g>
<g>
<title>one.nio.http.Response (58 samples, 0.63%)</title><rect x="20.9" y="227.0" width="7.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="23.9" y="238.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (338 samples, 3.65%)</title><rect x="28.3" y="227.0" width="43.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.3" y="238.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (253 samples, 2.73%)</title><rect x="28.3" y="211.0" width="32.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="31.3" y="222.0">on..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (253 samples, 2.73%)</title><rect x="28.3" y="195.0" width="32.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.3" y="206.0">on..</text>
</g>
<g>
<title>byte[] (253 samples, 2.73%)</title><rect x="28.3" y="179.0" width="32.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="31.3" y="190.0">by..</text>
</g>
<g>
<title>one/nio/net/Session.write (85 samples, 0.92%)</title><rect x="60.5" y="211.0" width="10.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.5" y="222.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (85 samples, 0.92%)</title><rect x="60.5" y="195.0" width="10.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="63.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (243 samples, 2.62%)</title><rect x="71.3" y="227.0" width="31.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.3" y="238.0">on..</text>
</g>
<g>
<title>byte[] (118 samples, 1.27%)</title><rect x="71.3" y="211.0" width="15.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="74.3" y="222.0"></text>
</g>
<g>
<title>java.lang.String[] (71 samples, 0.77%)</title><rect x="86.4" y="211.0" width="9.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="89.4" y="222.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.58%)</title><rect x="95.4" y="211.0" width="6.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="98.4" y="222.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.toBytes (93 samples, 1.00%)</title><rect x="102.3" y="227.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="105.3" y="238.0"></text>
</g>
<g>
<title>byte[] (93 samples, 1.00%)</title><rect x="102.3" y="211.0" width="11.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="105.3" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$61/923611897.submit (1,774 samples, 19.13%)</title><rect x="114.1" y="243.0" width="225.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.1" y="254.0">ru/mail/polis/service/httprest..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.lambda$createResponse$0 (1,774 samples, 19.13%)</title><rect x="114.1" y="227.0" width="225.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.1" y="238.0">ru/mail/polis/service/httprest..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.get (1,774 samples, 19.13%)</title><rect x="114.1" y="211.0" width="225.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.1" y="222.0">ru/mail/polis/service/httprest..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (1,774 samples, 19.13%)</title><rect x="114.1" y="195.0" width="225.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="117.1" y="206.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>ru.mail.polis.dao.nadenokk.NoSuchElementExceptionCustom (96 samples, 1.04%)</title><rect x="114.1" y="179.0" width="12.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="117.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/LSMDao.iterator (1,678 samples, 18.10%)</title><rect x="126.3" y="179.0" width="213.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.3" y="190.0">ru/mail/polis/dao/nadenokk/L..</text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/LSMDao.cellIterator (1,678 samples, 18.10%)</title><rect x="126.3" y="163.0" width="213.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.3" y="174.0">ru/mail/polis/dao/nadenokk/L..</text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/IteratorsTool.data (1,678 samples, 18.10%)</title><rect x="126.3" y="147.0" width="213.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.3" y="158.0">ru/mail/polis/dao/nadenokk/I..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.filter (99 samples, 1.07%)</title><rect x="126.3" y="131.0" width="12.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.3" y="142.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$5 (99 samples, 1.07%)</title><rect x="126.3" y="115.0" width="12.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="129.3" y="126.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (235 samples, 2.53%)</title><rect x="138.9" y="131.0" width="29.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="141.9" y="142.0">co..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (44 samples, 0.47%)</title><rect x="138.9" y="115.0" width="5.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="141.9" y="126.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (191 samples, 2.06%)</title><rect x="144.5" y="115.0" width="24.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.5" y="126.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (59 samples, 0.64%)</title><rect x="144.5" y="99.0" width="7.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="147.5" y="110.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (77 samples, 0.83%)</title><rect x="152.0" y="99.0" width="9.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="155.0" y="110.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (55 samples, 0.59%)</title><rect x="161.8" y="99.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.8" y="110.0"></text>
</g>
<g>
<title>java.lang.Object[] (55 samples, 0.59%)</title><rect x="161.8" y="83.0" width="7.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="164.8" y="94.0"></text>
</g>
<g>
<title>java.util.ArrayList (95 samples, 1.02%)</title><rect x="168.8" y="131.0" width="12.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="171.8" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (123 samples, 1.33%)</title><rect x="180.9" y="131.0" width="15.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.9" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (123 samples, 1.33%)</title><rect x="180.9" y="115.0" width="15.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.9" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (123 samples, 1.33%)</title><rect x="180.9" y="99.0" width="15.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="183.9" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (123 samples, 1.33%)</title><rect x="180.9" y="83.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.9" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (123 samples, 1.33%)</title><rect x="180.9" y="67.0" width="15.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="183.9" y="78.0"></text>
</g>
<g>
<title>java.lang.Object[] (123 samples, 1.33%)</title><rect x="180.9" y="51.0" width="15.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="183.9" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (51 samples, 0.55%)</title><rect x="196.6" y="131.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="199.6" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (51 samples, 0.55%)</title><rect x="196.6" y="115.0" width="6.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="199.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTablesPool.iterator (1,075 samples, 11.59%)</title><rect x="203.1" y="131.0" width="136.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="206.1" y="142.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (238 samples, 2.57%)</title><rect x="203.1" y="115.0" width="30.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.1" y="126.0">co..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (57 samples, 0.61%)</title><rect x="203.1" y="99.0" width="7.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="206.1" y="110.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (181 samples, 1.95%)</title><rect x="210.3" y="99.0" width="23.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.3" y="110.0">c..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (47 samples, 0.51%)</title><rect x="210.3" y="83.0" width="6.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="213.3" y="94.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (73 samples, 0.79%)</title><rect x="216.3" y="83.0" width="9.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="219.3" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (61 samples, 0.66%)</title><rect x="225.6" y="83.0" width="7.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="228.6" y="94.0"></text>
</g>
<g>
<title>java.lang.Object[] (61 samples, 0.66%)</title><rect x="225.6" y="67.0" width="7.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="228.6" y="78.0"></text>
</g>
<g>
<title>java.util.ArrayList (67 samples, 0.72%)</title><rect x="233.3" y="115.0" width="8.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="236.3" y="126.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (147 samples, 1.59%)</title><rect x="241.9" y="115.0" width="18.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="244.9" y="126.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (48 samples, 0.52%)</title><rect x="241.9" y="99.0" width="6.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="244.9" y="110.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (99 samples, 1.07%)</title><rect x="248.0" y="99.0" width="12.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.0" y="110.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (99 samples, 1.07%)</title><rect x="248.0" y="83.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="251.0" y="94.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (99 samples, 1.07%)</title><rect x="248.0" y="67.0" width="12.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="251.0" y="78.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (57 samples, 0.61%)</title><rect x="260.6" y="115.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.6" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (57 samples, 0.61%)</title><rect x="260.6" y="99.0" width="7.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="263.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (71 samples, 0.77%)</title><rect x="267.8" y="115.0" width="9.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="270.8" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (71 samples, 0.77%)</title><rect x="267.8" y="99.0" width="9.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="270.8" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTable.iterator (495 samples, 5.34%)</title><rect x="276.9" y="115.0" width="63.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.9" y="126.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (54 samples, 0.58%)</title><rect x="276.9" y="99.0" width="6.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.9" y="110.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (54 samples, 0.58%)</title><rect x="276.9" y="83.0" width="6.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="279.9" y="94.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (28 samples, 0.30%)</title><rect x="283.7" y="99.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.7" y="110.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (28 samples, 0.30%)</title><rect x="283.7" y="83.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.7" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/nadenokk/MemTable$$Lambda$70/397310145.get$Lambda (28 samples, 0.30%)</title><rect x="283.7" y="67.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.nadenokk.MemTable$$Lambda$70 (28 samples, 0.30%)</title><rect x="283.7" y="51.0" width="3.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="286.7" y="62.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (144 samples, 1.55%)</title><rect x="287.3" y="99.0" width="18.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.3" y="110.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 (79 samples, 0.85%)</title><rect x="287.3" y="83.0" width="10.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="290.3" y="94.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (65 samples, 0.70%)</title><rect x="297.4" y="83.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="300.4" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (65 samples, 0.70%)</title><rect x="297.4" y="67.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.4" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (65 samples, 0.70%)</title><rect x="297.4" y="51.0" width="8.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="300.4" y="62.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (80 samples, 0.86%)</title><rect x="305.6" y="99.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.6" y="110.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (42 samples, 0.45%)</title><rect x="305.6" y="83.0" width="5.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="308.6" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (38 samples, 0.41%)</title><rect x="311.0" y="83.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="314.0" y="94.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (38 samples, 0.41%)</title><rect x="311.0" y="67.0" width="4.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="314.0" y="78.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableSortedMap.tailMap (189 samples, 2.04%)</title><rect x="315.8" y="99.0" width="24.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.8" y="110.0">j..</text>
</g>
<g>
<title>java.util.Collections$UnmodifiableSortedMap (84 samples, 0.91%)</title><rect x="315.8" y="83.0" width="10.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="318.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (105 samples, 1.13%)</title><rect x="326.5" y="83.0" width="13.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="329.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (105 samples, 1.13%)</title><rect x="326.5" y="67.0" width="13.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (105 samples, 1.13%)</title><rect x="326.5" y="51.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (105 samples, 1.13%)</title><rect x="326.5" y="35.0" width="13.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="329.5" y="46.0"></text>
</g>
<g>
<title>one/nio/server/AcceptorThread.run (1,666 samples, 17.97%)</title><rect x="339.9" y="323.0" width="212.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.9" y="334.0">one/nio/server/AcceptorThrea..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.acceptNonBlocking (306 samples, 3.30%)</title><rect x="339.9" y="307.0" width="38.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="342.9" y="318.0">one..</text>
</g>
<g>
<title>one.nio.net.NativeSocket (306 samples, 3.30%)</title><rect x="339.9" y="291.0" width="38.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="342.9" y="302.0">one..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.createSession (1,360 samples, 14.67%)</title><rect x="378.8" y="307.0" width="173.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.8" y="318.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.createSession (1,360 samples, 14.67%)</title><rect x="378.8" y="291.0" width="173.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="381.8" y="302.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru.mail.polis.service.httprest.StorageSession (20 samples, 0.22%)</title><rect x="378.8" y="275.0" width="2.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="381.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/StorageSession.&lt;init&gt; (1,340 samples, 14.45%)</title><rect x="381.4" y="275.0" width="170.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="384.4" y="286.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.&lt;init&gt; (1,340 samples, 14.45%)</title><rect x="381.4" y="259.0" width="170.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.4" y="270.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>byte[] (1,039 samples, 11.21%)</title><rect x="381.4" y="243.0" width="132.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="384.4" y="254.0">byte[]</text>
</g>
<g>
<title>byte[] (297 samples, 3.20%)</title><rect x="513.6" y="243.0" width="37.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="516.6" y="254.0">byt..</text>
</g>
<g>
<title>java.util.LinkedList (4 samples, 0.04%)</title><rect x="551.4" y="243.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="554.4" y="254.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,014 samples, 54.08%)</title><rect x="551.9" y="323.0" width="638.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="554.9" y="334.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (214 samples, 2.31%)</title><rect x="551.9" y="307.0" width="27.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.9" y="318.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (214 samples, 2.31%)</title><rect x="551.9" y="291.0" width="27.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="554.9" y="302.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (4,800 samples, 51.77%)</title><rect x="579.1" y="307.0" width="610.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="582.1" y="318.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (4,800 samples, 51.77%)</title><rect x="579.1" y="291.0" width="610.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.1" y="302.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4,797 samples, 51.74%)</title><rect x="579.1" y="275.0" width="610.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="582.1" y="286.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,006 samples, 21.64%)</title><rect x="579.1" y="259.0" width="255.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="582.1" y="270.0">one/nio/http/HttpSession.handlePar..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,006 samples, 21.64%)</title><rect x="579.1" y="243.0" width="255.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.1" y="254.0">one/nio/http/HttpServer.handleRequ..</text>
</g>
<g>
<title>RequestHandler2_entity.handleRequest (1,528 samples, 16.48%)</title><rect x="579.1" y="227.0" width="194.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="582.1" y="238.0">RequestHandler2_entity.ha..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (329 samples, 3.55%)</title><rect x="579.1" y="211.0" width="41.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="582.1" y="222.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (329 samples, 3.55%)</title><rect x="579.1" y="195.0" width="41.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.1" y="206.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (329 samples, 3.55%)</title><rect x="579.1" y="179.0" width="41.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="582.1" y="190.0">jav..</text>
</g>
<g>
<title>java.lang.String (151 samples, 1.63%)</title><rect x="579.1" y="163.0" width="19.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="582.1" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (178 samples, 1.92%)</title><rect x="598.3" y="163.0" width="22.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.3" y="174.0">j..</text>
</g>
<g>
<title>byte[] (178 samples, 1.92%)</title><rect x="598.3" y="147.0" width="22.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="601.3" y="158.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.entity (1,199 samples, 12.93%)</title><rect x="621.0" y="211.0" width="152.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="624.0" y="222.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/lang/String.getBytes (205 samples, 2.21%)</title><rect x="621.0" y="195.0" width="26.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.0" y="206.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (205 samples, 2.21%)</title><rect x="621.0" y="179.0" width="26.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.0" y="190.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (205 samples, 2.21%)</title><rect x="621.0" y="163.0" width="26.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.0" y="174.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (205 samples, 2.21%)</title><rect x="621.0" y="147.0" width="26.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.0" y="158.0">j..</text>
</g>
<g>
<title>byte[] (205 samples, 2.21%)</title><rect x="621.0" y="131.0" width="26.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="624.0" y="142.0">b..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (370 samples, 3.99%)</title><rect x="647.1" y="195.0" width="47.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="650.1" y="206.0">java..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (370 samples, 3.99%)</title><rect x="647.1" y="179.0" width="47.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.1" y="190.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (370 samples, 3.99%)</title><rect x="647.1" y="163.0" width="47.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="650.1" y="174.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.createResponse (624 samples, 6.73%)</title><rect x="694.2" y="195.0" width="79.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.2" y="206.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (153 samples, 1.65%)</title><rect x="694.2" y="179.0" width="19.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (153 samples, 1.65%)</title><rect x="694.2" y="163.0" width="19.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$61/923611897.get$Lambda (153 samples, 1.65%)</title><rect x="694.2" y="147.0" width="19.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.2" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.httprest.HttpRestDemon$$Lambda$61 (153 samples, 1.65%)</title><rect x="694.2" y="131.0" width="19.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="697.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon.asyncExecute (471 samples, 5.08%)</title><rect x="713.6" y="179.0" width="60.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="716.6" y="190.0">ru/mai..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (203 samples, 2.19%)</title><rect x="713.6" y="163.0" width="25.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="716.6" y="174.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (203 samples, 2.19%)</title><rect x="713.6" y="147.0" width="25.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="716.6" y="158.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/httprest/HttpRestDemon$$Lambda$65/593464534.get$Lambda (203 samples, 2.19%)</title><rect x="713.6" y="131.0" width="25.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.6" y="142.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.httprest.HttpRestDemon$$Lambda$65 (203 samples, 2.19%)</title><rect x="713.6" y="115.0" width="25.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="716.6" y="126.0">r..</text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (268 samples, 2.89%)</title><rect x="739.5" y="163.0" width="34.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.5" y="174.0">on..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (268 samples, 2.89%)</title><rect x="739.5" y="147.0" width="34.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.5" y="158.0">ja..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (268 samples, 2.89%)</title><rect x="739.5" y="131.0" width="34.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="742.5" y="142.0">on..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (268 samples, 2.89%)</title><rect x="739.5" y="115.0" width="34.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.5" y="126.0">on..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (268 samples, 2.89%)</title><rect x="739.5" y="99.0" width="34.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="742.5" y="110.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (268 samples, 2.89%)</title><rect x="739.5" y="83.0" width="34.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.5" y="94.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (268 samples, 2.89%)</title><rect x="739.5" y="67.0" width="34.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.5" y="78.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode (268 samples, 2.89%)</title><rect x="739.5" y="51.0" width="34.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="742.5" y="62.0">ja..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (478 samples, 5.16%)</title><rect x="773.6" y="227.0" width="60.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.6" y="238.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.substring (478 samples, 5.16%)</title><rect x="773.6" y="211.0" width="60.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="776.6" y="222.0">java/l..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (478 samples, 5.16%)</title><rect x="773.6" y="195.0" width="60.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.6" y="206.0">java/l..</text>
</g>
<g>
<title>java.lang.String (191 samples, 2.06%)</title><rect x="773.6" y="179.0" width="24.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="776.6" y="190.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (287 samples, 3.10%)</title><rect x="797.9" y="179.0" width="36.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.9" y="190.0">jav..</text>
</g>
<g>
<title>byte[] (287 samples, 3.10%)</title><rect x="797.9" y="163.0" width="36.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="800.9" y="174.0">byt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1,834 samples, 19.78%)</title><rect x="834.4" y="259.0" width="233.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="837.4" y="270.0">one/nio/http/HttpSession.parseR..</text>
</g>
<g>
<title>one.nio.http.Request (296 samples, 3.19%)</title><rect x="834.4" y="243.0" width="37.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="837.4" y="254.0">one..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (627 samples, 6.76%)</title><rect x="872.1" y="243.0" width="79.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.1" y="254.0">one/nio/h..</text>
</g>
<g>
<title>java.lang.String[] (627 samples, 6.76%)</title><rect x="872.1" y="227.0" width="79.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="875.1" y="238.0">java.lang..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (911 samples, 9.83%)</title><rect x="951.9" y="243.0" width="115.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="954.9" y="254.0">one/nio/util/U..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (911 samples, 9.83%)</title><rect x="951.9" y="227.0" width="115.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="954.9" y="238.0">one/nio/util/U..</text>
</g>
<g>
<title>char[] (448 samples, 4.83%)</title><rect x="951.9" y="211.0" width="57.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="954.9" y="222.0">char[]</text>
</g>
<g>
<title>java.lang.String (166 samples, 1.79%)</title><rect x="1008.9" y="211.0" width="21.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="1011.9" y="222.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (297 samples, 3.20%)</title><rect x="1030.0" y="211.0" width="37.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1033.0" y="222.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (297 samples, 3.20%)</title><rect x="1030.0" y="195.0" width="37.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1033.0" y="206.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (297 samples, 3.20%)</title><rect x="1030.0" y="179.0" width="37.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1033.0" y="190.0">jav..</text>
</g>
<g>
<title>byte[] (297 samples, 3.20%)</title><rect x="1030.0" y="163.0" width="37.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1033.0" y="174.0">byt..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (957 samples, 10.32%)</title><rect x="1067.8" y="259.0" width="121.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1070.8" y="270.0">one/nio/util/Ut..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (957 samples, 10.32%)</title><rect x="1067.8" y="243.0" width="121.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1070.8" y="254.0">one/nio/util/Ut..</text>
</g>
<g>
<title>char[] (442 samples, 4.77%)</title><rect x="1067.8" y="227.0" width="56.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1070.8" y="238.0">char[]</text>
</g>
<g>
<title>java.lang.String (193 samples, 2.08%)</title><rect x="1124.1" y="227.0" width="24.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1127.1" y="238.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (322 samples, 3.47%)</title><rect x="1148.6" y="227.0" width="41.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1151.6" y="238.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (322 samples, 3.47%)</title><rect x="1148.6" y="211.0" width="41.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1151.6" y="222.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (322 samples, 3.47%)</title><rect x="1148.6" y="195.0" width="41.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1151.6" y="206.0">jav..</text>
</g>
<g>
<title>byte[] (322 samples, 3.47%)</title><rect x="1148.6" y="179.0" width="41.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1151.6" y="190.0">byt..</text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.03%)</title><rect x="1189.6" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.6" y="286.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.03%)</title><rect x="1189.6" y="259.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1192.6" y="270.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.02%)</title><rect x="1189.6" y="243.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1192.6" y="254.0"></text>
</g>
</g>
</svg>
